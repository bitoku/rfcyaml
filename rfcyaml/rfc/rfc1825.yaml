- title: __initial_text__
  contents:
  - '            Security Architecture for the Internet Protocol

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: 1. INTRODUCTION
  contents:
  - "1. INTRODUCTION\n   This memo describes the security mechanisms for IP version\
    \ 4 (IPv4)\n   and IP version 6 (IPv6) and the services that they provide.  Each\n\
    \   security mechanism is specified in a separate document.  This\n   document\
    \ also describes key management requirements for systems\n   implementing those\
    \ security mechanisms.  This document is not an\n   overall Security Architecture\
    \ for the Internet and is instead focused\n   on IP-layer security.\n"
- title: 1.1 Technical Definitions
  contents:
  - "1.1 Technical Definitions\n   This section provides a few basic definitions that\
    \ are applicable to\n   this document.  Other documents provide more definitions\
    \ and\n   background information [VK83, HA94].\n   Authentication\n          \
    \ The property of knowing that the data received is the same as\n           the\
    \ data that was sent and that the claimed sender is in fact\n           the actual\
    \ sender.\n   Integrity\n           The property of ensuring that data is transmitted\
    \ from source\n           to destination without undetected alteration.\n   Confidentiality\n\
    \           The property of communicating such that the intended\n           recipients\
    \ know what was being sent but unintended\n           parties cannot determine\
    \ what was sent.\n   Encryption\n           A mechanism commonly used to provide\
    \ confidentiality.\n   Non-repudiation\n           The property of a receiver\
    \ being able to prove that the sender\n           of some data did in fact send\
    \ the data even though the sender\n           might later desire to deny ever\
    \ having sent that data.\n   SPI\n           Acronym for \"Security Parameters\
    \ Index\".  An unstructured\n           opaque index which is used in conjunction\
    \ with the\n           Destination Address to identify a particular Security\n\
    \           Association.\n   Security Association\n           The set of security\
    \ information relating to a given network\n           connection or set of connections.\
    \  This is described in\n           detail below.\n   Traffic Analysis\n     \
    \      The analysis of network traffic flow for the purpose of\n           deducing\
    \ information that is useful to an adversary.\n           Examples of such information\
    \ are frequency of transmission,\n           the identities of the conversing\
    \ parties, sizes of packets,\n           Flow Identifiers used, etc. [Sch94].\n"
- title: 1.2 Requirements Terminology
  contents:
  - "1.2 Requirements Terminology\n   In this document, the words that are used to\
    \ define the significance\n   of each particular requirement are usually capitalised.\
    \  These words\n   are:\n   - MUST\n      This word or the adjective \"REQUIRED\"\
    \ means that the item is an\n      absolute requirement of the specification.\n\
    \   - SHOULD\n      This word or the adjective \"RECOMMENDED\" means that there\
    \ might\n      exist valid reasons in particular circumstances to ignore this\n\
    \      item, but the full implications should be understood and the case\n   \
    \   carefully weighed before taking a different course.\n   - MAY\n      This\
    \ word or the adjective \"OPTIONAL\" means that this item is\n      truly optional.\
    \  One vendor might choose to include the item\n      because a particular marketplace\
    \ requires it or because it\n      enhances the product, for example; another\
    \ vendor may omit the\n      same item.\n"
- title: 1.3 Typical Use
  contents:
  - "1.3 Typical Use\n   There are two specific headers that are used to provide security\n\
    \   services in IPv4 and IPv6.  These headers are the \"IP Authentication\n  \
    \ Header (AH)\" [Atk95a] and the \"IP Encapsulating Security Payload\n   (ESP)\"\
    \ [Atk95b] header.  There are a number of ways in which these IP\n   security\
    \ mechanisms might be used.  This section describes some of\n   the more likely\
    \ uses.  These descriptions are not complete or\n   exhaustive.  Other uses can\
    \ also be envisioned.\n   The IP Authentication Header is designed to provide\
    \ integrity and\n   authentication without confidentiality to IP datagrams.  The\
    \ lack of\n   confidentiality ensures that implementations of the Authentication\n\
    \   Header will be widely available on the Internet, even in locations\n   where\
    \ the export, import, or use of encryption to provide\n   confidentiality is regulated.\
    \  The Authentication Header supports\n   security between two or more hosts implementing\
    \ AH, between two or\n   more gateways implementing AH, and between a host or\
    \ gateway\n   implementing AH and a set of hosts or gateways.  A security gateway\n\
    \   is a system which acts as the communications gateway between external\n  \
    \ untrusted systems and trusted hosts on their own subnetwork.  It also\n   provides\
    \ security services for the trusted hosts when they\n   communicate with the external\
    \ untrusted systems.  A trusted\n   subnetwork contains hosts and routers that\
    \ trust each other not to\n   engage in active or passive attacks and trust that\
    \ the underlying\n   communications channel (e.g., an Ethernet) isn't being attacked.\n\
    \   In the case where a security gateway is providing services on behalf\n   of\
    \ one or more hosts on a trusted subnet, the security gateway is\n   responsible\
    \ for establishing the security association on behalf of\n   its trusted host\
    \ and for providing security services between the\n   security gateway and the\
    \ external system(s).  In this case, only the\n   gateway need implement AH, while\
    \ all of the systems behind the\n   gateway on the trusted subnet may take advantage\
    \ of AH services\n   between the gateway and external systems.\n   A security\
    \ gateway which receives a datagram containing a recognised\n   sensitivity label,\
    \ for example IPSO [Ken91], from a trusted host\n   should take that label's value\
    \ into consideration when\n   creating/selecting an Security Association for use\
    \ with AH between\n   the gateway and the external destination.  In such an environment,\
    \ a\n   gateway which receives a IP packet containing the IP Encapsulating\n \
    \  Security Payload (ESP) should add appropriate authentication,\n   including\
    \ implicit (i.e., contained in the Security Association used)\n   or explicit\
    \ label information (e.g., IPSO), for the decrypted packet\n   that it forwards\
    \ to the trusted host that is the ultimate\n   destination.  The IP Authentication\
    \ Header should always be used on\n   packets containing explicit sensitivity\
    \ labels to ensure end-to-end\n   label integrity.  In environments using security\
    \ gateways, those\n   gateways MUST perform address-based IP packet filtering\
    \ on\n   unauthenticated packets purporting to be from a system known to be\n\
    \   using IP security.\n   The IP Encapsulating Security Payload (ESP) is designed\
    \ to provide\n   integrity, authentication, and confidentiality to IP datagrams\n\
    \   [Atk95b]. The ESP supports security between two or more hosts\n   implementing\
    \ ESP, between two or more gateways implementing ESP, and\n   between a host or\
    \ gateway implementing ESP and a set of hosts and/or\n   gateways.  A security\
    \ gateway is a system which acts as the\n   communications gateway between external\
    \ untrusted systems and trusted\n   hosts on their own subnetwork and provides\
    \ security services for the\n   trusted hosts when they communicate with external\
    \ untrusted systems.\n   A trusted subnetwork contains hosts and routers that\
    \ trust each other\n   not to engage in active or passive attacks and trust that\
    \ the\n   underlying communications channel (e.g., an Ethernet) isn't being\n\
    \   attacked.  Trusted systems always should be trustworthy, but in\n   practice\
    \ they often are not trustworthy.\n   Gateway-to-gateway encryption is most valuable\
    \ for building private\n   virtual networks across an untrusted backbone such\
    \ as the Internet.\n   It does this by excluding outsiders.  As such, it is often\
    \ not a\n   substitute for host-to-host encryption, and indeed the two can be\
    \ and\n   often should be used together.\n   In the case where a security gateway\
    \ is providing services on behalf\n   of one or more hosts on a trusted subnet,\
    \ the security gateway is\n   responsible for establishing the security association\
    \ on behalf of\n   its trusted host and for providing security services between\
    \ the\n   security gateway and the external system(s).  In this case, only the\n\
    \   gateway need implement ESP, while all of the systems behind the\n   gateway\
    \ on the trusted subnet may take advantage of ESP services\n   between the gateway\
    \ and external systems.\n   A gateway which receives a datagram containing a recognised\n\
    \   sensitivity label from a trusted host should take that label's value\n   into\
    \ consideration when creating/selecting a Security Association for\n   use with\
    \ ESP between the gateway and the external destination.  In\n   such an environment,\
    \ a gateway which receives a IP packet containing\n   the ESP should appropriately\
    \ label the decrypted packet that it\n   forwards to the trusted host that is\
    \ the ultimate destination.  The\n   IP Authentication Header should always be\
    \ used on packets containing\n   explicit sensitivity labels to ensure end-to-end\
    \ label integrity.\n   If there are no security gateways present in the connection,\
    \ then two\n   end systems that implement ESP may also use it to encrypt only\
    \ the\n   user data (e.g., TCP or UDP) being carried between the two systems.\n\
    \   ESP is designed to provide maximum flexibility so that users may\n   select\
    \ and use only the security that they desire and need.\n   Routing headers for\
    \ which integrity has not been cryptographically\n   protected SHOULD be ignored\
    \ by the receiver.  If this rule is not\n   strictly adhered to, then the system\
    \ will be vulnerable to various\n   kinds of attacks, including source routing\
    \ attacks [Bel89] [CB94]\n   [CERT95].\n   While these documents do not specifically\
    \ discuss IPv4 broadcast,\n   these IP security mechanisms MAY be used with such\
    \ packets.  Key\n   distribution and Security Association management are not trivial\
    \ for\n   broadcast applications.  Also, if symmetric key algorithms are used\n\
    \   the value of using cryptography with a broadcast packet is limited\n   because\
    \ the receiver can only know that the received packet came from\n   one of many\
    \ systems knowing the correct key to use.\n"
- title: 1.4 Security Associations
  contents:
  - "1.4 Security Associations\n   The concept of a \"Security Association\" is fundamental\
    \ to both the IP\n   Encapsulating Security Payload and the IP Authentication\
    \ Header.  The\n   combination of a given Security Parameter Index (SPI) and Destination\n\
    \   Address uniquely identifies a particular \"Security Association\".  An\n \
    \  implementation of the Authentication Header or the Encapsulating\n   Security\
    \ Payload MUST support this concept of a Security Association.\n   An implementation\
    \ MAY also support other parameters as part of a\n   Security Association.  A\
    \ Security Association normally includes the\n   parameters listed below, but\
    \ might include additional parameters as\n   well:\n   - Authentication algorithm\
    \ and algorithm mode being used with\n     the IP Authentication Header [REQUIRED\
    \ for AH implementations].\n   - Key(s) used with the authentication algorithm\
    \ in use with\n     the Authentication Header [REQUIRED for AH implementations].\n\
    \   - Encryption algorithm, algorithm mode, and transform being\n     used with\
    \ the IP Encapsulating Security Payload [REQUIRED for\n     ESP implementations].\n\
    \   - Key(s) used with the encryption algorithm in use with the\n     Encapsulating\
    \ Security Payload [REQUIRED for ESP implementations].\n   - Presence/absence\
    \ and size of a cryptographic synchronisation or\n     initialisation vector field\
    \ for the encryption algorithm [REQUIRED\n     for ESP implementations].\n   -\
    \ Authentication algorithm and mode used with the ESP transform\n     (if any\
    \ is in use) [RECOMMENDED for ESP implementations].\n   - Authentication key(s)\
    \ used with the authentication algorithm\n     that is part of the ESP transform\
    \ (if any) [RECOMMENDED for\n     ESP implementations].\n   - Lifetime of the\
    \ key or time when key change should occur\n     [RECOMMENDED for all implementations].\n\
    \   - Lifetime of this Security Association [RECOMMENDED for all\n     implementations].\n\
    \   - Source Address(es) of the Security Association, might be a\n     wildcard\
    \ address if more than one sending system shares the\n     same Security Association\
    \ with the destination [RECOMMENDED\n     for all implementations].\n   - Sensitivity\
    \ level (for example, Secret or Unclassified)\n     of the protected data [REQUIRED\
    \ for all systems claiming\n     to provide multi-level security, RECOMMENDED\
    \ for all other systems].\n   The sending host uses the sending userid and Destination\
    \ Address to\n   select an appropriate Security Association (and hence SPI value).\n\
    \   The receiving host uses the combination of SPI value and Destination\n   Address\
    \ to distinguish the correct association.  Hence, an AH\n   implementation will\
    \ always be able to use the SPI in combination with\n   the Destination Address\
    \ to determine the security association and\n   related security configuration\
    \ data for all valid incoming packets.\n   When a formerly valid Security Association\
    \ becomes invalid, the\n   destination system(s) SHOULD NOT immediately reuse\
    \ that SPI value and\n   instead SHOULD let that SPI value become stale before\
    \ reusing it for\n   some other Security Association.\n   A security association\
    \ is normally one-way.  An authenticated\n   communications session between two\
    \ hosts will normally have two\n   Security Parameter Indexes in use (one in each\
    \ direction).  The\n   combination of a particular Security Parameter Index and\
    \ a particular\n   Destination Address uniquely identifies the Security Association.\n\
    \   The Destination Address may be a unicast address or a multicast group\n  \
    \ address.\n   The receiver-orientation of the Security Association implies that,\
    \ in\n   the case of unicast traffic, the destination system will normally\n \
    \  select the SPI value.  By having the destination select the SPI\n   value,\
    \ there is no potential for manually configured Security\n   Associations that\
    \ conflict with automatically configured (e.g., via a\n   key management protocol)\
    \ Security Associations.  For multicast\n   traffic, there are multiple destination\
    \ systems but a single\n   destination multicast group, so some system or person\
    \ will need to\n   select SPIs on behalf of that multicast group and then communicate\n\
    \   the information to all of the legitimate members of that multicast\n   group\
    \ via mechanisms not defined here.\n   Multiple senders to a multicast group MAY\
    \ use a single Security\n   Association (and hence Security Parameter Index) for\
    \ all traffic to\n   that group.  In that case, the receiver only knows that the\
    \ message\n   came from a system knowing the security association data for that\n\
    \   multicast group.  A receiver cannot generally authenticate which\n   system\
    \ sent the multicast traffic when symmetric algorithms (e.g.,\n   DES, IDEA) are\
    \ in use.  Multicast traffic MAY also use a separate\n   Security Association\
    \ (and hence SPI) for each sender to the multicast\n   group .  If each sender\
    \ has its own Security Association and\n   asymmetric algorithms are used, then\
    \ data origin authentication is\n   also a provided service.\n"
- title: 2. DESIGN OBJECTIVES
  contents:
  - "2. DESIGN OBJECTIVES\n   This section describes some of the design objectives\
    \ of this security\n   architecture and its component mechanisms.  The primary\
    \ objective of\n   this work is to ensure that IPv4 and IPv6 will have solid\n\
    \   cryptographic security mechanisms available to users who desire\n   security.\n\
    \   These mechanisms are designed to avoid adverse impacts on Internet\n   users\
    \ who do not employ these security mechanisms for their traffic.\n   These mechanisms\
    \ are intended to be algorithm-independent so that the\n   cryptographic algorithms\
    \ can be altered without affecting the other\n   parts of the implementation.\
    \  These security mechanisms should be\n   useful in enforcing a variety of security\
    \ policies.\n   Standard default algorithms (keyed MD5, DES CBC) are specified\
    \ to\n   ensure interoperability in the global Internet.  The selected default\n\
    \   algorithms are the same as the standard default algorithms used in\n   SNMPv2\
    \ [GM93].\n"
- title: 3. IP-LAYER SECURITY MECHANISMS
  contents:
  - "3. IP-LAYER SECURITY MECHANISMS\n   There are two cryptographic security mechanisms\
    \ for IP.  The first is\n   the Authentication Header which provides integrity\
    \ and authentication\n   without confidentiality [Atk95a].  The second is the\
    \ Encapsulating\n   Security Payload which always provides confidentiality, and\n\
    \   (depending on algorithm and mode) might also provide integrity and\n   authentication\
    \ [Atk95b].  The two IP security mechanisms may be used\n   together or separately.\n\
    \   These IP-layer mechanisms do not provide security against a number of\n  \
    \ traffic analysis attacks.  However, there are several techniques\n   outside\
    \ the scope of this specification (e.g., bulk link encryption)\n   that might\
    \ be used to provide protection against traffic analysis\n   [VK83].\n"
- title: 3.1 AUTHENTICATION HEADER
  contents:
  - "3.1 AUTHENTICATION HEADER\n   The IP Authentication Header holds authentication\
    \ information for its\n   IP datagram [Atk95a].  It does this by computing a cryptographic\n\
    \   authentication function over the IP datagram and using a secret\n   authentication\
    \ key in the computation.  The sender computes the\n   authentication data prior\
    \ to sending the authenticated IP packet.\n   Fragmentation occurs after the Authentication\
    \ Header processing for\n   outbound packets and prior to Authentication Header\
    \ processing for\n   inbound packets.  The receiver verifies the correctness of\
    \ the\n   authentication data upon reception.  Certain fields which must change\n\
    \   in transit, such as the \"TTL\" (IPv4) or \"Hop Limit\" (IPv6) field,\n  \
    \ which is decremented on each hop, are omitted from the authentication\n   calculation.\
    \  However the omission of the Hop Limit field does not\n   adversely impact the\
    \ security provided.  Non-repudiation might be\n   provided by some authentication\
    \ algorithms (e.g., asymmetric\n   algorithms when both sender and receiver keys\
    \ are used in the\n   authentication calculation) used with the Authentication\
    \ Header, but\n   it is not necessarily provided by all authentication algorithms\
    \ that\n   might be used with the Authentication Header.  The default\n   authentication\
    \ algorithm is keyed MD5, which, like all symmetric\n   algorithms, cannot provide\
    \ non-repudiation by itself.\n   Confidentiality and traffic analysis protection\
    \ are not provided by\n   the Authentication Header.\n   Use of the Authentication\
    \ Header will increase the IP protocol\n   processing costs in participating systems\
    \ and will also increase the\n   communications latency.  The increased latency\
    \ is primarily due to\n   the calculation of the authentication data by the sender\
    \ and the\n   calculation and comparison of the authentication data by each\n\
    \   receiver for each IP datagram containing an Authentication Header\n   (AH).\n\
    \   The Authentication Header provides much stronger security than exists\n  \
    \ in most of the current Internet and should not affect exportability\n   or significantly\
    \ increase implementation cost.  While the\n   Authentication Header might be\
    \ implemented by a security gateway on\n   behalf of hosts on a trusted network\
    \ behind that security gateway,\n   this mode of operation is not encouraged.\
    \  Instead, the\n   Authentication Header should be used from origin to final\n\
    \   destination.\n   All IPv6-capable hosts MUST implement the IP Authentication\
    \ Header\n   with at least the MD5 algorithm using a 128-bit key.  IPv4-systems\n\
    \   claiming to implement the Authentication Header MUST implement the IP\n  \
    \ Authentication Header with at least the MD5 algorithm using a 128-bit\n   key\
    \ [MS95].  An implementation MAY support other authentication\n   algorithms in\
    \ addition to keyed MD5.\n"
- title: 3.2 ENCAPSULATING SECURITY PAYLOAD
  contents:
  - "3.2 ENCAPSULATING SECURITY PAYLOAD\n   The IP Encapsulating Security Payload\
    \ (ESP) is designed to provide\n   integrity, authentication, and confidentiality\
    \ to IP datagrams\n   [Atk95b].  It does this by encapsulating either an entire\
    \ IP datagram\n   or only the upper-layer protocol (e.g., TCP, UDP, ICMP) data\
    \ inside\n   the ESP, encrypting most of the ESP contents, and then appending\
    \ a\n   new cleartext IP header to the now encrypted Encapsulating Security\n\
    \   Payload.  This cleartext IP header is used to carry the protected\n   data\
    \ through the internetwork.\n"
- title: 3.2.1 Description of the ESP Modes
  contents:
  - "3.2.1 Description of the ESP Modes\n   There are two modes within ESP.  The first\
    \ mode, which is known as\n   Tunnel-mode, encapsulates an entire IP datagram\
    \ within the ESP\n   header.  The second mode, which is known as Transport-mode,\n\
    \   encapsulates an upper-layer protocol (for example UDP or TCP) inside\n   ESP\
    \ and then prepends a cleartext IP header.\n"
- title: 3.2.2 Usage of ESP
  contents:
  - "3.2.2 Usage of ESP\n   ESP works between hosts, between a host and a security\
    \ gateway, or\n   between security gateways. This support for security gateways\
    \ permits\n   trustworthy networks behind a security gateway to omit encryption\
    \ and\n   thereby avoid the performance and monetary costs of encryption, while\n\
    \   still providing confidentiality for traffic transiting untrustworthy\n   network\
    \ segments.  When both hosts directly implement ESP and there\n   is no intervening\
    \ security gateway, then they may use the Transport-\n   mode (where only the\
    \ upper layer protocol data (e.g., TCP or UDP) is\n   encrypted and there is no\
    \ encrypted IP header).  This mode reduces\n   both the bandwidth consumed and\
    \ the protocol processing costs for\n   users that don't need to keep the entire\
    \ IP datagram confidential.\n   ESP works with both unicast and multicast traffic.\n"
- title: 3.2.3 Performance Impacts of ESP
  contents:
  - "3.2.3 Performance Impacts of ESP\n   The encapsulating security approach used\
    \ by ESP can noticeably impact\n   network performance in participating systems,\
    \ but use of ESP should\n   not adversely impact routers or other intermediate\
    \ systems that are\n   not participating in the particular ESP association.  Protocol\n\
    \   processing in participating systems will be more complex when\n   encapsulating\
    \ security is used, requiring both more time and more\n   processing power.  Use\
    \ of encryption will also increase the\n   communications latency.  The increased\
    \ latency is primarily due to\n   the encryption and decryption required for each\
    \ IP datagram\n   containing an Encapsulating Security Payload.  The precise cost\
    \ of\n   ESP will vary with the specifics of the implementation, including the\n\
    \   encryption algorithm, key size, and other factors.  Hardware\n   implementations\
    \ of the encryption algorithm are recommended when high\n   throughput is desired.\n\
    \   For interoperability throughout the worldwide Internet, all\n   conforming\
    \ implementations of the IP Encapsulating Security Payload\n   MUST support the\
    \ use of the Data Encryption Standard (DES) in\n   Cipher-Block Chaining (CBC)\
    \ Mode as detailed in the ESP\n   specification.  Other confidentiality algorithms\
    \ and modes may also\n   be implemented in addition to this mandatory algorithm\
    \ and mode.\n   Export and use of encryption are regulated in some countries [OTA94].\n"
- title: 3.3 COMBINING SECURITY MECHANISMS
  contents:
  - "3.3 COMBINING SECURITY MECHANISMS\n   In some cases the IP Authentication Header\
    \ might be combined with the\n   IP Encapsulating Security Protocol to obtain\
    \ the desired security\n   properties.  The Authentication Header always provides\
    \ integrity and\n   authentication and can provide non-repudiation if used with\
    \ certain\n   authentication algorithms (e.g., RSA).  The Encapsulating Security\n\
    \   Payload always provides integrity and confidentiality and can also\n   provide\
    \ authentication if used with certain authenticating encryption\n   algorithms.\
    \  Adding the Authentication Header to a IP datagram prior\n   to encapsulating\
    \ that datagram using the Encapsulating Security\n   Protocol might be desirable\
    \ for users wishing to have strong\n   integrity, authentication, confidentiality,\
    \ and perhaps also for\n   users who require strong non-repudiation.  When the\
    \ two mechanisms\n   are combined, the placement of the IP Authentication Header\
    \ makes\n   clear which part of the data is being authenticated.  Details on\n\
    \   combining the two mechanisms are provided in the IP Encapsulating\n   Security\
    \ Payload specification [At94b].\n"
- title: 3.4 OTHER SECURITY MECHANISMS
  contents:
  - "3.4 OTHER SECURITY MECHANISMS\n   Protection from traffic analysis is not provided\
    \ by any of the\n   security mechanisms described above.  It is unclear whether\n\
    \   meaningful protection from traffic analysis can be provided\n   economically\
    \ at the Internet Layer and it appears that few Internet\n   users are concerned\
    \ about traffic analysis.  One traditional method\n   for protection against traffic\
    \ analysis is the use of bulk link\n   encryption.  Another technique is to send\
    \ false traffic in order to\n   increase the noise in the data provided by traffic\
    \ analysis.\n   Reference [VK83] discusses traffic analysis issues in more detail.\n"
- title: 4. KEY MANAGEMENT
  contents:
  - "4. KEY MANAGEMENT\n   The Key Management protocol that will be used with IP layer\
    \ security\n   is not specified in this document.  However, because the key\n\
    \   management protocol is coupled to AH and ESP only via the Security\n   Parameters\
    \ Index (SPI), we can meaningfully define AH and ESP without\n   having to fully\
    \ specify how key management is performed.  We envision\n   that several key management\
    \ systems will be usable with these\n   specifications, including manual key configuration.\
    \  Work is ongoing\n   within the IETF to specify an Internet Standard key management\n\
    \   protocol.\n   Support for key management methods where the key management\
    \ data is\n   carried within the IP layer is not a design objective for these\
    \ IP-\n   layer security mechanisms.  Instead these IP-layer security\n   mechanisms\
    \ will primarily use key management methods where the key\n   management data\
    \ will be carried by an upper layer protocol, such as\n   UDP or TCP, on some\
    \ specific port number or where the key management\n   data will be distributed\
    \ manually.\n   This design permits clear decoupling of the key management mechanism\n\
    \   from the other security mechanisms, and thereby permits one to\n   substitute\
    \ new and improved key management methods without having to\n   modify the implementations\
    \ of the other security mechanisms.  This\n   separation of mechanism is clearly\
    \ wise given the long history of\n   subtle flaws in published key management\
    \ protocols [NS78, NS81].\n   What follows in this section is a brief discussion\
    \ of a few\n   alternative approaches to key management.  Mutually consenting\n\
    \   systems may additionally use other key management approaches by\n   private\
    \ prior agreement.\n"
- title: 4.1 Manual Key Distribution
  contents:
  - "4.1 Manual Key Distribution\n   The simplest form of key management is manual\
    \ key management, where a\n   person manually configures each system with its\
    \ own key and also with\n   the keys of other communicating systems.  This is\
    \ quite practical in\n   small, static environments but does not scale.  It is\
    \ not a viable\n   medium-term or long-term approach, but might be appropriate\
    \ and\n   useful in many environments in the near-term.  For example, within a\n\
    \   small LAN it is entirely practical to manually configure keys for\n   each\
    \ system.  Within a single administrative domain it is practical\n   to configure\
    \ keys for each router so that the routing data can be\n   protected and to reduce\
    \ the risk of an intruder breaking into a\n   router.  Another case is where an\
    \ organisation has an encrypting\n   firewall between the internal network and\
    \ the Internet at each of its\n   sites and it connects two or more sites via\
    \ the Internet.  In this\n   case, the encrypting firewall might selectively encrypt\
    \ traffic for\n   other sites within the organisation using a manually configured\
    \ key,\n   while not encrypting traffic for other destinations.  It also might\n\
    \   be appropriate when only selected communications need to be secured.\n"
- title: 4.2 Some Existing Key Management Techniques
  contents:
  - "4.2 Some Existing Key Management Techniques\n   There are a number of key management\
    \ algorithms that have been\n   described in the public literature.  Needham &\
    \ Schroeder have\n   proposed a key management algorithm which relies on a centralised\
    \ key\n   distribution system [NS78, NS81].  This algorithm is used in the\n \
    \  Kerberos Authentication System developed at MIT under Project Athena\n   [KB93].\
    \  Diffie and Hellman have devised an algorithm which does not\n   require a centralised\
    \ key distribution system [DH76].  Unfortunately,\n   the original Diffie-Hellman\
    \ technique is vulnerable to an active \"man\n   in the middle\" attack [Sch93,\
    \ p. 43-44].  However, this vulnerability\n   can be mitigated by using signed\
    \ keys to authentically bootstrap into\n   the Diffie-Hellman exchange [Sch93,\
    \ p. 45].\n"
- title: 4.3 Automated Key Distribution
  contents:
  - "4.3 Automated Key Distribution\n   Widespread deployment and use of IP security\
    \ will require an\n   Internet-standard scalable key management protocol.  Ideally\
    \ such a\n   protocol would support a number of protocols in the Internet protocol\n\
    \   suite, not just IP security.  There is work underway within the IETF\n   to\
    \ add signed host keys to the Domain Name System [EK94] The DNS keys\n   enable\
    \ the originating party to authenticate key management messages\n   with the other\
    \ key management party using an asymmetric algorithm.\n   The two parties would\
    \ then have an authenticatible communications\n   channel that could be used to\
    \ create a shared session key using\n   Diffie-Hellman or other means [DH76] [Sch93].\n"
- title: 4.4 Keying Approaches for IP
  contents:
  - "4.4 Keying Approaches for IP\n   There are two keying approaches for IP.  The\
    \ first approach, called\n   host-oriented keying, has all users on host 1 share\
    \ the same key for\n   use on traffic destined for all users on host 2.  The second\n\
    \   approach, called user-oriented keying, lets user A on host 1 have one\n  \
    \ or more unique session keys for its traffic destined for host 2; such\n   session\
    \ keys are not shared with other users on host1.  For example,\n   user A's ftp\
    \ session might use a different key than user A's telnet\n   session.  In systems\
    \ claiming to provide multi-level security, user A\n   will typically have at\
    \ least one key per sensitivity level in use\n   (e.g., one key for UNCLASSIFIED\
    \ traffic, a second key for SECRET\n   traffic, and a third key for TOP SECRET\
    \ traffic).  Similarly, with\n   user-oriented keying one might use separate keys\
    \ for information sent\n   to a multicast group and control messages sent to the\
    \ same multicast\n   group.\n   In many cases, a single computer system will have\
    \ at least two\n   mutually suspicious users A and B that do not trust each other.\
    \  When\n   host-oriented keying is used and mutually suspicious users exist,\
    \ it\n   is sometimes possible for user A to determine the host-oriented key\n\
    \   via well known methods, such as a Chosen Plaintext attack.  Once user\n  \
    \ A has improperly obtained the key in use, user A can then either read\n   user\
    \ B's encrypted traffic or forge traffic from user B.  When user-\n   oriented\
    \ keying is used, certain kinds of attack from one user onto\n   another user's\
    \ traffic are not possible.\n   IP Security is intended to be able to provide\
    \ Authentication,\n   Integrity, and Confidentiality for applications operating\
    \ on\n   connected end systems when appropriate algorithms are in use.\n   Integrity\
    \ and Confidentiality can be provided by host-oriented keying\n   when appropriate\
    \ dynamic key management techniques and appropriate\n   algorithms are in use.\
    \  However, authentication of principals using\n   applications on end-systems\
    \ requires that processes running\n   applications be able to request and use\
    \ their own Security\n   Associations.  In this manner, applications can make\
    \ use of key\n   distribution facilities that provide authentication.\n   Hence,\
    \ support for user-oriented keying SHOULD be present in all IP\n   implementations,\
    \ as is described in the \"IP Key Management\n   Requirements\" section below.\n"
- title: 4.5 Multicast Key Distribution
  contents:
  - "4.5 Multicast Key Distribution\n   Multicast key distribution is an active research\
    \ area in the\n   published literature as of this writing.  For multicast groups\
    \ having\n   relatively few members, manual key distribution or multiple use of\n\
    \   existing unicast key distribution algorithms such as modified\n   Diffie-Hellman\
    \ appears feasible.  For very large groups, new scalable\n   techniques will be\
    \ needed.  The use of Core-Based Trees (CBT) to\n   provide session key management\
    \ as well as multicast routing might be\n   an approach used in the future [BFC93].\n"
- title: 4.6 IP Key Management Requirements
  contents:
  - "4.6 IP Key Management Requirements\n   This section defines key management requirements\
    \ for all IPv6\n   implementations and for those IPv4 implementations that implement\
    \ the\n   IP Authentication Header, the IP Encapsulating Security Payload, or\n\
    \   both.  It applies equally to the IP Authentication Header and the IP\n   Encapsulating\
    \ Security Payload.\n   All such implementations MUST support manual configuration\
    \ of\n   Security Associations.\n   All such implementations SHOULD support an\
    \ Internet standard Security\n   Association establishment protocol (e.g., IKMP,\
    \ Photuris) once such a\n   protocol is published as an Internet standards-track\
    \ RFC.\n   Implementations MAY also support other methods of configuring\n   Security\
    \ Associations.\n   Given two endpoints, it MUST be possible to have more than\
    \ one\n   concurrent Security Association for communications between them.\n \
    \  Implementations on multi-user hosts SHOULD support user granularity\n   (i.e.,\
    \ \"user-oriented\") Security Associations.\n   All such implementations MUST\
    \ permit the configuration of host-\n   oriented keying.\n   A device that encrypts\
    \ or authenticates IP packets originated other\n   systems, for example a dedicated\
    \ IP encryptor or an encrypting\n   gateway, cannot generally provide user-oriented\
    \ keying for traffic\n   originating on other systems.  Such systems MAY additionally\n\
    \   implement support for user-oriented keying for traffic originating on\n  \
    \ other systems.\n   The method by which keys are configured on a particular system\
    \ is\n   implementation-defined.  A flat file containing security association\n\
    \   identifiers and the security parameters, including the key(s), is an\n   example\
    \ of one possible method for manual key distribution.  An IP\n   system MUST take\
    \ reasonable steps to protect the keys and other\n   security association information\
    \ from unauthorised examination or\n   modification because all of the security\
    \ lies in the keys.\n"
- title: 5. USAGE
  contents:
  - "5. USAGE\n   This section describes the possible use of the security mechanisms\n\
    \   provided by IP in several different environments and applications in\n   order\
    \ to give the implementer and user a better idea of how these\n   mechanisms can\
    \ be used to reduce security risks.\n"
- title: 5.1 USE WITH FIREWALLS
  contents:
  - "5.1 USE WITH FIREWALLS\n   Firewalls are not uncommon in the current Internet\
    \ [CB94].  While\n   many dislike their presence because they restrict connectivity,\
    \ they\n   are unlikely to disappear in the near future.  Both of these IP\n \
    \  mechanisms can be used to increase the security provided by\n   firewalls.\n\
    \   Firewalls used with IP often need to be able to parse the headers and\n  \
    \ options to determine the transport protocol (e.g., UDP or TCP) in use\n   and\
    \ the port number for that protocol.  Firewalls can be used with\n   the Authentication\
    \ Header regardless of whether that firewall is\n   party to the appropriate Security\
    \ Assocation, but a firewall that is\n   not party to the applicable Security\
    \ Association will not normally be\n   able to decrypt an encrypted upper-layer\
    \ protocol to view the\n   protocol or port number needed to perform per-packet\
    \ filtering OR to\n   verify that the data (e.g., source, destination, transport\
    \ protocol,\n   port number) being used for access control decisions is correct\
    \ and\n   authentic.  Hence, authentication might be performed not only within\n\
    \   an organisation or campus but also end to end with remote systems\n   across\
    \ the Internet.  This use of the Authentication Header with IP\n   provides much\
    \ more assurance that the data being used for access\n   control decisions is\
    \ authentic.\n   Organisations with two or more sites that are interconnected\
    \ using\n   commercial IP service might wish to use a selectively encrypting\n\
    \   firewall.  If an encrypting firewall were placed between each site of\n  \
    \ a company and the commercial IP service provider, the firewall could\n   provide\
    \ an encrypted IP tunnel among all the company's sites.  It\n   could also encrypt\
    \ traffic between the company and its suppliers,\n   customers, and other affiliates.\
    \  Traffic with the Network\n   Information Center, with public Internet archives,\
    \ or some other\n   organisations might not be encrypted because of the unavailability\
    \ of\n   a standard key management protocol or as a deliberate choice to\n   facilitate\
    \ better communications, improved network performance, and\n   increased connectivity.\
    \  Such a practice could easily protect the\n   company's sensitive traffic from\
    \ eavesdropping and modification.\n   Some organisations (e.g., governments) might\
    \ wish to use a fully\n   encrypting firewall to provide a protected virtual network\
    \ over\n   commercial IP service.  The difference between that and a bulk IP\n\
    \   encryption device is that a fully encrypting firewall would provide\n   filtering\
    \ of the decrypted traffic as well as providing encryption of\n   IP packets.\n"
- title: 5.2 USE WITH IP MULTICAST
  contents:
  - "5.2 USE WITH IP MULTICAST\n   In the past several years, the Multicast Backbone\
    \ (MBONE) has grown\n   rapidly.  IETF meetings and other conferences are now\
    \ regularly\n   multicast with real-time audio, video, and whiteboards.  Many\
    \ people\n   are now using teleconferencing applications based on IP Multicast\
    \ in\n   the Internet or in private internal networks.  Others are using IP\n\
    \   multicasting to support distributed simulation or other applications.\n  \
    \ Hence it is important that the security mechanisms in IP be suitable\n   for\
    \ use in an environment where multicast is the general case.\n   The Security\
    \ Parameters Indexes (SPIs) used in the IP security\n   mechanisms are receiver-oriented,\
    \ making them well suited for use in\n   IP multicast [Atk95a, Atk95b].  Unfortunately,\
    \ most currently\n   published multicast key distribution protocols do not scale\
    \ well.\n   However, there is active research in this area.  As an interim step,\n\
    \   a multicast group could repeatedly use a secure unicast key\n   distribution\
    \ protocol to distribute the key to all members or the\n   group could pre-arrange\
    \ keys using manual key distribution.\n"
- title: 5.3 USE TO PROVIDE QOS PROTECTION
  contents:
  - "5.3 USE TO PROVIDE QOS PROTECTION\n   The recent IAB Security Workshop identified\
    \ Quality of Service\n   protection as an area of significant interest [BCCH].\
    \  The two IP\n   security mechanisms are intended to provide good support for\
    \ real-\n   time services as well as multicasting.  This section describes one\n\
    \   possible approach to providing such protection.\n   The Authentication Header\
    \ might be used, with appropriate key\n   management, to provide authentication\
    \ of packets.  This\n   authentication is potentially important in packet classification\n\
    \   within routers.  The IPv6 Flow Identifier might act as a Low-Level\n   Identifier\
    \ (LLID).  Used together, packet classification within\n   routers becomes straightforward\
    \ if the router is provided with the\n   appropriate keying material.  For performance\
    \ reasons the routers\n   might authenticate only every Nth packet rather than\
    \ every packet,\n   but this is still a significant improvement over capabilities\
    \ in the\n   current Internet.  Quality of service provisioning is likely to also\n\
    \   use the Flow ID in conjunction with a resource reservation protocol,\n   such\
    \ as RSVP [ZDESZ93].  Thus, the authenticated packet\n   classification can be\
    \ used to help ensure that each packet receives\n   appropriate handling inside\
    \ routers.\n"
- title: 5.4 USE IN COMPARTMENTED OR MULTI-LEVEL NETWORKS
  contents:
  - "5.4 USE IN COMPARTMENTED OR MULTI-LEVEL NETWORKS\n   A multi-level secure (MLS)\
    \ network is one where a single network is\n   used to communicate data at different\
    \ sensitivity levels (e.g.,\n   Unclassified and Secret) [DoD85] [DoD87].  Many\
    \ governments have\n   significant interest in MLS networking [DIA].  The IP security\n\
    \   mechanisms have been designed to support MLS networking.  MLS\n   networking\
    \ requires the use of strong Mandatory Access Controls\n   (MAC), which ordinary\
    \ users are incapable of controlling or violating\n   [BL73].  This section pertains\
    \ only to the use of these IP security\n   mechanisms in MLS environments.\n \
    \  The Authentication Header can be used to provide strong\n   authentication\
    \ among hosts in a single-level network.  The\n   Authentication Header can also\
    \ be used to provide strong assurance\n   for both mandatory access control decisions\
    \ in multi-level networks\n   and discretionary access control decisions in all\
    \ kinds of networks.\n   If explicit IP sensitivity labels (e.g., IPSO) [Ken91]\
    \ are used and\n   confidentiality is not considered necessary within the particular\n\
    \   operational environment, the Authentication Header is used to provide\n  \
    \ authentication for the entire packet, including cryptographic binding\n   of\
    \ the sensitivity level to the IP header and user data.  This is a\n   significant\
    \ improvement over labeled IPv4 networks where the label is\n   trusted even though\
    \ it is not trustworthy because there is no\n   authentication or cryptographic\
    \ binding of the label to the IP header\n   and user data.  IPv6 will normally\
    \ use implicit sensitivity labels\n   that are part of the Security Association\
    \ but not transmitted with\n   each packet instead of using explicit sensitivity\
    \ labels.  All\n   explicit IP sensitivity labels MUST be authenticated using\
    \ either\n   ESP, AH, or both.\n   The Encapsulating Security Payload can be combined\
    \ with appropriate\n   key policies to provide full multi-level secure networking.\
    \  In this\n   case each key must be used only at a single sensitivity level and\n\
    \   compartment.  For example, Key \"A\" might be used only for sensitive\n  \
    \ Unclassified packets, while Key \"B\" is used only for Secret/No-\n   compartments\
    \ traffic, and Key \"C\" is used only for Secret/No-Foreign\n   traffic.  The\
    \ sensitivity level of the protected traffic MUST NOT\n   dominate the sensitivity\
    \ level of the Security Association used with\n   that traffic.  The sensitivity\
    \ level of the Security Association MUST\n   NOT dominate the sensitivity level\
    \ of the key that belongs to that\n   Security Association.  The sensitivity level\
    \ of the key SHOULD be the\n   same as the sensitivity level of the Security Association.\
    \  The\n   Authentication Header can also have different keys for the same\n \
    \  reasons, with the choice of key depending in part on the sensitivity\n   level\
    \ of the packet.\n   Encryption is very useful and desirable even when all of\
    \ the hosts\n   are within a protected environment.  The Internet-standard encryption\n\
    \   algorithm could be used, in conjunction with appropriate key\n   management,\
    \ to provide strong Discretionary Access Controls (DAC) in\n   conjunction with\
    \ either implicit sensitivity labels or explicit\n   sensitivity labels (such\
    \ as IPSO provides for IPv4 [Ken91]). Some\n   environments might consider the\
    \ Internet-standard encryption\n   algorithm sufficiently strong to provide Mandatory\
    \ Access Controls\n   (MAC).  Full encryption SHOULD be used for all communications\
    \ between\n   multi-level computers or compartmented mode workstations even when\n\
    \   the computing environment is considered to be protected.\n"
- title: 6. SECURITY CONSIDERATIONS
  contents:
  - "6. SECURITY CONSIDERATIONS\n   This entire memo discusses the Security Architecture\
    \ for the Internet\n   Protocol.  It is not a general security architecture for\
    \ the\n   Internet, but is instead focused on the IP layer.\n   Cryptographic\
    \ transforms for ESP which use a block-chaining algorithm\n   and lack a strong\
    \ integrity mechanism are vulnerable to a cut-and-\n   paste attack described\
    \ by Bellovin and should not be used unless the\n   Authentication Header is always\
    \ present with packets using that ESP\n   transform [Bel95].\n   If more than\
    \ one sender uses shares a Security Association with a\n   destination, then the\
    \ receiving system can only authenticate that the\n   packet was sent from one\
    \ of those systems and cannot authenticate\n   which of those systems sent it.\
    \  Similarly, if the receiving system\n   does not check that the Security Association\
    \ used for a packet is\n   valid for the claimed Source Address of the packet,\
    \ then the\n   receiving system cannot authenticate whether the packet's claimed\n\
    \   Source Address is valid.  For example, if senders \"A\" and \"B\" each\n \
    \  have their own unique Security Association with destination \"D\" and\n   \"\
    B\" uses its valid Security Association with D but forges a Source\n   Address\
    \ of \"A\", then \"D\" will be fooled into believing the packet\n   came from\
    \ \"A\" unless \"D\" verifies that the claimed Source Address is\n   party to\
    \ the Security Association that was used.\n   Users need to understand that the\
    \ quality of the security provided by\n   the mechanisms provided by these two\
    \ IP security mechanisms depends\n   completely on the strength of the implemented\
    \ cryptographic\n   algorithms, the strength of the key being used, the correct\n\
    \   implementation of the cryptographic algorithms, the security of the\n   key\
    \ management protocol, and the correct implementation of IP and the\n   several\
    \ security mechanisms in all of the participating systems.  The\n   security of\
    \ the implementation is in part related to the security of\n   the operating system\
    \ which embodies the security implementations.\n   For example, if the operating\
    \ system does not keep the private\n   cryptologic keys (that is, all symmetric\
    \ keys and the private\n   asymmetric keys) confidential, then traffic using those\
    \ keys will not\n   be secure.  If any of these is incorrect or insufficiently\
    \ secure,\n   little or no real security will be provided to the user.  Because\n\
    \   different users on the same system might not trust each other, each\n   user\
    \ or each session should usually be keyed separately.  This will\n   also tend\
    \ to increase the work required to cryptanalyse the traffic\n   since not all\
    \ traffic will use the same key.\n   Certain security properties (e.g., traffic\
    \ analysis protection) are\n   not provided by any of these mechanisms.  One possible\
    \ approach to\n   traffic analysis protection is appropriate use of link encryption\n\
    \   [VK83].  Users must carefully consider which security properties they\n  \
    \ require and take active steps to ensure that their needs are met by\n   these\
    \ or other mechanisms.\n   Certain applications (e.g., electronic mail) probably\
    \ need to have\n   application-specific security mechanisms.  Application-specific\n\
    \   security mechanisms are out of the scope of this document.  Users\n   interested\
    \ in electronic mail security should consult the RFCs\n   describing the Internet's\
    \ Privacy-Enhanced Mail system.  Users\n   concerned about other application-specific\
    \ mechanisms should consult\n   the online RFCs to see if suitable Internet Standard\
    \ mechanisms\n   exist.\n"
- title: ACKNOWLEDGEMENTS
  contents:
  - "ACKNOWLEDGEMENTS\n   Many of the concepts here are derived from or were influenced\
    \ by the\n   US Government's SDNS security protocol specifications, the ISO/IEC's\n\
    \   NLSP specification, or from the proposed swIPe security protocol\n   [SDNS,\
    \ ISO, IB93, IBK93].  The work done for SNMP Security and SNMPv2\n   Security\
    \ influenced the choice of default cryptological algorithms\n   and modes [GM93].\
    \  Steve Bellovin, Steve Deering, Richard Hale,\n   George Kamis, Phil Karn, Frank\
    \ Kastenholz, Perry Metzger, Dave\n   Mihelcic, Hilarie Orman and Bill Simpson\
    \ provided careful critiques\n   of early versions of this document.\n"
- title: REFERENCES
  contents:
  - "REFERENCES\n   [Atk95a] Atkinson, R., \"IP Authentication Header\", RFC 1826,\
    \ NRL,\n            August 1995.\n   [Atk95b] Atkinson, R., \"IP Encapsulating\
    \ Security Payload\", RFC 1827,\n            NRL, August 1995.\n   [BCCH94] Braden,\
    \ R., Clark, D., Crocker, S., and C. Huitema, \"Report\n            of IAB Workshop\
    \ on Security in the Internet Architecture\",\n            RFC 1636, USC/Information\
    \ Sciences Institute, MIT, Trusted\n            Information Systems, INRIA, June\
    \ 1994.\n   [Bel89]  Steven M. Bellovin, \"Security Problems in the TCP/IP\n \
    \           Protocol Suite\", ACM Computer Communications Review, Vol. 19,\n \
    \           No. 2, March 1989.\n   [Bel95]  Steven M. Bellovin, Presentation at\
    \ IP Security Working\n            Group Meeting, Proceedings of the 32nd Internet\
    \ Engineering\n            Task Force, March 1995, Internet Engineering Task Force,\n\
    \            Danvers, MA.\n   [BFC93]  A. Ballardie, P. Francis, & J. Crocroft,\
    \ \"Core Based Trees:\n            An Architecture for Scalable Inter-Domain Multicast\
    \ Routing\",\n            Proceedings of ACM SIGCOMM 93, ACM Computer Communications\n\
    \            Review, Volume. 23, Number 4, October 1993, pp. 85-95.\n   [BL73]\
    \   Bell, D.E. & LaPadula, L.J., \"Secure Computer Systems:\n            Mathematical\
    \ Foundations and Model\", Technical Report\n            M74-244, The MITRE Corporation,\
    \ Bedford, MA, May 1973.\n   [CB94]   William R. Cheswick & Steven M. Bellovin,\
    \ Firewalls &\n            Internet Security, Addison-Wesley, Reading, MA, 1994.\n\
    \   [DIA]    US Defense Intelligence Agency, \"Compartmented Mode\n          \
    \  Workstation Specification\", Technical Report\n            DDS-2600-6243-87.\n\
    \   [DoD85]  US National Computer Security Center, \"Department of Defense\n \
    \           Trusted Computer System Evaluation Criteria\", DoD\n            5200.28-STD,\
    \ US Department of Defense, Ft. Meade, MD.,\n            December 1985.\n   [DoD87]\
    \  US National Computer Security Center, \"Trusted Network\n            Interpretation\
    \ of the Trusted Computer System Evaluation\n            Criteria\", NCSC-TG-005,\
    \ Version 1, US Department of Defense,\n            Ft. Meade, MD., 31 July 1987.\n\
    \   [DH76]   W. Diffie & M. Hellman, \"New Directions in Cryptography\",\n   \
    \         IEEE Transactions on Information Theory, Vol. IT-22, No. 6,\n      \
    \      November 1976, pp. 644-654.\n   [EK94]   D. Eastlake III & C. Kaufman,\
    \ \"Domain Name System Protocol\n            Security Extensions\", Work in Progress.\n\
    \   [GM93]   Galvin J., and K. McCloghrie, \"Security Protocols for\n        \
    \    version 2 of the Simple Network Management Protocol\n            (SNMPv2)\"\
    , RFC 1446, Trusted Information Systems, Hughes LAN\n            Systems, April\
    \ 1993.\n   [HA94]   Haller, N., and R. Atkinson, \"On Internet Authentication\"\
    ,\n            RFC 1704, Bell Communications Research, NRL, October 1994.\n  \
    \ [Hin94]  Bob Hinden (Editor), Internet Protocol version 6 (IPv6)\n         \
    \   Specification, Work in Progress, October 1994.\n   [ISO]   ISO/IEC JTC1/SC6,\
    \ Network Layer Security Protocol, ISO-IEC\n           DIS 11577, International\
    \ Standards Organisation, Geneva,\n           Switzerland, 29 November 1992.\n\
    \   [IB93]  John Ioannidis and Matt Blaze, \"Architecture and\n           Implementation\
    \ of Network-layer Security Under Unix\",\n           Proceedings of USENIX Security\
    \ Symposium, Santa Clara, CA,\n           October 1993.\n   [IBK93] John Ioannidis,\
    \ Matt Blaze, & Phil Karn, \"swIPe: Network-Layer\n           Security for IP\"\
    , presentation at the Spring 1993 IETF Meeting,\n           Columbus, Ohio.\n\
    \   [Ken91] Kent, S., \"US DoD Security Options for the Internet Protocol\",\n\
    \           RFC 1108, BBN Communications, November 1991.\n   [Ken93] Kent, S.,\
    \ \"Privacy Enhancement for Internet Electronic Mail:\n           Part II: Certificate-Based\
    \ Key Management\", RFC 1422,\n           BBN Communications, February 1993.\n\
    \   [KB93]  Kohl, J., and B. Neuman, \"The Kerberos Network Authentication\n \
    \          Service (V5)\", RFC 1510, Digital Equipment Corporation,\n        \
    \   USC/Information Sciences Institute, September 1993.\n   [MS95]  Metzger, P.,\
    \ and W. Simpson, \"IP Authentication with Keyed\n           MD5\", RFC 1828,\
    \ Piermont, Daydreamer, August 1995.\n   [KMS95] Karn, P., Metzger, P., and W.\
    \ Simpson, \"The ESP DES-CBC\n           Transform\", RFC 1829, Qualcomm, Inc.,\
    \ Piermont, Daydreamer,\n           August 1995.\n   [NS78]  R.M. Needham & M.D.\
    \ Schroeder, \"Using Encryption for\n           Authentication in Large Networks\
    \ of Computers\", Communications\n           of the ACM, Vol. 21, No. 12, December\
    \ 1978, pp. 993-999.\n   [NS81]  R.M. Needham & M.D. Schroeder, \"Authentication\
    \ Revisited\",\n           ACM Operating Systems Review, Vol. 21, No. 1., 1981.\n\
    \   [OTA94] US Congress, Office of Technology Assessment, \"Information\n    \
    \       Security & Privacy in Network Environments\", OTA-TCT-606,\n         \
    \  Government Printing Office, Washington, DC, September 1994.\n   [Sch94] Bruce\
    \ Schneier, Applied Cryptography, Section 8.6,\n           John Wiley & Sons,\
    \ New York, NY, 1994.\n   [SDNS]  SDNS Secure Data Network System, Security Protocol\
    \ 3, SP3,\n           Document SDN.301, Revision 1.5, 15 May 1989, published\n\
    \           in NIST Publication NIST-IR-90-4250, February 1990.\n   [VK83]  V.L.\
    \ Voydock & S.T. Kent, \"Security Mechanisms in High-level\n           Networks\"\
    , ACM Computing Surveys, Vol. 15, No. 2, June 1983.\n   [ZDESZ93] Zhang, L., Deering,\
    \ S., Estrin, D., Shenker, S., and\n             D. Zappala, \"RSVP: A New Resource\
    \ ReSerVation Protocol\",\n             IEEE Network magazine, September 1993.\n"
- title: DISCLAIMER
  contents:
  - "DISCLAIMER\n   The views expressed in this note are those of the author and are\
    \ not\n   necessarily those of his employer.  The Naval Research Laboratory has\n\
    \   not passed judgement on the merits, if any, of this work.  The author\n  \
    \ and his employer specifically disclaim responsibility for any problems\n   arising\
    \ from correct or incorrect implementation or use of this\n   design.\n"
- title: AUTHOR'S ADDRESS
  contents:
  - "AUTHOR'S ADDRESS\n   Randall Atkinson\n   Information Technology Division\n \
    \  Naval Research Laboratory\n   Washington, DC 20375-5320\n   USA\n   Phone:\
    \  (202) 767-2389\n   Fax:    (202) 404-8590\n   EMail: atkinson@itd.nrl.navy.mil\n"
