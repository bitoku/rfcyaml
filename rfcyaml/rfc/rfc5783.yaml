- title: __initial_text__
  contents:
  - ''
- title: Internet Research Task Force (IRTF)                             M. Welzl
  contents:
  - "Internet Research Task Force (IRTF)                             M. Welzl\n  \
    \                Congestion Control in the RFC Series\n"
- title: Abstract
  contents:
  - "Abstract\n   This document is an informational snapshot taken by the IRTF's\n\
    \   Internet Congestion Control Research Group (ICCRG) in October 2008.\n   It\
    \ provides a survey of congestion control topics described by\n   documents in\
    \ the RFC series.  This does not modify or update the\n   specifications or status\
    \ of the RFC documents that are discussed.  It\n   may be used as a reference\
    \ or starting point for the future work of\n   the research group, especially\
    \ in noting gaps or open issues in the\n   current IETF standards.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n   published for informational purposes.\n   This document is a product\
    \ of the Internet Research Task Force\n   (IRTF).  The IRTF publishes the results\
    \ of Internet-related research\n   and development activities.  These results\
    \ might not be suitable for\n   deployment.  This RFC represents the consensus\
    \ of the Internet\n   Congestion Control Research Group of the Internet Research\
    \ Task Force\n   (IRTF).  Documents approved for publication by the IRSG are not\
    \ a\n   candidate for any level of Internet Standard; see Section 2 of RFC\n \
    \  5741.\n   Information about the current status of this document, any errata,\n\
    \   and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc5783.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2010 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction . . . . . . . . . . . . . . . . . . .\
    \ . . . . . .  3\n   2.  Architectural Documents  . . . . . . . . . . . . . .\
    \ . . . . .  5\n   3.  TCP Congestion Control . . . . . . . . . . . . . . . .\
    \ . . . .  9\n   4.  Challenging Link and Path Characteristics  . . . . . . .\
    \ . . . 10\n   5.  End-Host and Router Cooperative Signaling  . . . . . . . .\
    \ . . 12\n     5.1.  Explicit Congestion Notification . . . . . . . . . . . .\
    \ . 13\n     5.2.  Quick-Start  . . . . . . . . . . . . . . . . . . . . . . .\
    \ 15\n   6.  Non-TCP Unicast Congestion Control . . . . . . . . . . . . . . 15\n\
    \   7.  Multicast Congestion Control . . . . . . . . . . . . . . . . . 18\n  \
    \ 8.  Guidance for Developing and Analyzing Congestion Control\n       Techniques\
    \ . . . . . . . . . . . . . . . . . . . . . . . . . . 20\n   9.  Historic Interest\
    \  . . . . . . . . . . . . . . . . . . . . . . 21\n   10. Security Considerations\
    \  . . . . . . . . . . . . . . . . . . . 22\n   11. Acknowledgements . . . . .\
    \ . . . . . . . . . . . . . . . . . . 22\n   12. Informative References . . .\
    \ . . . . . . . . . . . . . . . . . 22\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   In this document, we define congestion control as the feedback-based\n\
    \   adjustment of the rate at which data is sent into the network.\n   Congestion\
    \ control is an indispensable set of principles and\n   mechanisms for maintaining\
    \ the stability of the Internet.  Congestion\n   control has been closely associated\
    \ with TCP since 1988 [Jac88], but\n   there has also been a great deal of congestion\
    \ control work outside\n   of TCP (e.g., for real-time multimedia applications,\
    \ multicast, and\n   router-based mechanisms).  Several such proposals have been\
    \ produced\n   within the IETF and published as RFCs, along with RFCs that give\n\
    \   architectural guidance (e.g., by pointing out the importance of\n   performing\
    \ some form of congestion control).  Several of these\n   mechanisms are in use\
    \ within the Internet.\n   When designing a new Internet transport protocol, it\
    \ is therefore\n   important to not only understand how congestion control works\
    \ in TCP\n   but also have a broader understanding of the other congestion control\n\
    \   RFCs -- some give guidance, some of them describe mechanisms that may\n  \
    \ have a direct influence on a newly designed protocol, and some of\n   them may\
    \ only be \"related work\" worth knowing about.  The purpose of\n   this document\
    \ is to facilitate and encourage this search for\n   knowledge by providing an\
    \ overview of RFCs related to congestion\n   control that have been published\
    \ thus far.  This document is a\n   product of the IRTF's Internet Congestion\
    \ Control Research Group\n   (ICCRG).  It was developed because a strong grasp\
    \ of the existing\n   literature should benefit further ICCRG work.  The ICCRG\
    \ developed\n   consensus on the content of this document during a two-year\n\
    \   development period based on review comments and ICCRG mailing list\n   discussions.\
    \  A list of the main review contributors is contained in\n   the Acknowledgements\
    \ section of this document.\n   While the ICCRG agreed to the document's production,\
    \ any opinions\n   expressed are the authors' own, and as this document is not\
    \ an IETF\n   publication, it does not update or modify the status of any published\n\
    \   RFCs.  The format of this document is similar to an annotated\n   bibliography.\
    \  Although host and router requirements for congestion\n   control functions\
    \ are discussed, this is only an informational\n   document and does not contain\
    \ any formal standards bearing of its\n   own.\n   Congestion control is a large\
    \ and active topic, and so the scope of\n   this document is limited to published\
    \ RFCs and a small number of\n   current working group drafts.  This allows the\
    \ document to focus on\n   congestion control principles and mechanisms that are\
    \ among the most\n   well-supported, well-accepted, or widely used.  Significant\n\
    \   contributions to this subject also exist in both the academic\n   literature\
    \ and in the form of Internet-Drafts; however, we exclude\n   these from this\
    \ study.  In many cases the RFC describing some\n   mechanism will contain references\
    \ to relevant academic publications\n   in journals or conference proceedings\
    \ that presented the research and\n   validation of the mechanism.  For instance,\
    \ RFC 2581 cites Jacobson's\n   1988 SIGCOMM paper that has a less standards-oriented\
    \ but more\n   illustrative treatment and explanation of some of the mechanisms\
    \ in\n   RFC 2581.\n   The majority of the documents discussed here pertain to\
    \ end-host-\n   based congestion control.  Many network-based mechanisms, such\
    \ as a\n   number of queue management algorithms, do not require any protocol\n\
    \   exchanges between elements, but merely operate within a single host\n   or\
    \ router.  Thus, network-based congestion control mechanisms have\n   often not\
    \ been described in any RFC, as they generally fall under the\n   domain of implementation\
    \ details that do not influence\n   interoperability.\n   There are many RFCs\
    \ related to Quality of Service (QoS), especially\n   within the Integrated Services\
    \ and Differentiated Services frameworks\n   [RFC1633] [RFC2475] [RFC2998].  These\
    \ QoS RFCs themselves deserve a\n   similar bibliography to the one that this\
    \ document provides for\n   congestion control.  We specifically do not include\
    \ the vast amount\n   of QoS work into the scope of this document, as it is a\
    \ full field in\n   its own right, and deals with issues that are mostly orthogonal\
    \ to\n   end-host congestion control and router queue management.  Although\n\
    \   there can certainly be interactions between QoS and congestion\n   control\
    \ mechanisms, scheduling mechanisms used to implement QoS (on\n   either a per-flow\
    \ or an aggregate basis), for instance, can be used\n   independently of the end-host\
    \ congestion control and queue management\n   functions also in use.  Similar\
    \ arguments can be made for traffic-\n   shaping, admission control, and other\
    \ functions that are intended for\n   QoS and are only side-notes for congestion\
    \ control.\n   A similar argument can be made for excluding consideration of the\n\
    \   media access control (MAC) layer protocols used by the links\n   throughout\
    \ a path.  Although the MAC protocols implement various\n   forms of resolving\
    \ contention for shared links (and sometimes offer\n   QoS services), these are\
    \ also distinct from end-to-end congestion\n   control.  Furthermore, MAC protocols\
    \ are not typically discussed in\n   the RFC series, but they are defined in outside\
    \ documents (e.g., IEEE\n   standards), since the IETF does not generally work\
    \ on link layers\n   themselves.  Few, if any, of the RFCs that describe mappings\
    \ of IP\n   onto various link layers directly discuss congestion control.\n  \
    \ To organize the subject matter in this document, the content is\n   classified\
    \ into several broad categories.  First, we list documents\n   relating to Internet\
    \ architecture and general architectural concepts\n   in Section 2.  Next, the\
    \ congestion control algorithms used in the\n   TCP transport protocol are discussed\
    \ in Section 3.  Interactions\n   between link properties and mechanisms with\
    \ the kinds of algorithms\n   and heuristics used within end-to-end congestion\
    \ control are covered\n   in Section 4.  One method that has been developed by\
    \ the IETF (and\n   deployed to some extent) for allowing network-based and host-based\n\
    \   congestion control to interact without dropping packets is the\n   subject\
    \ of Section 5.1.  The congestion control algorithms used by\n   unicast transport\
    \ protocols other than TCP are described in\n   Section 6.  Work on congestion\
    \ control for multicast transports and\n   applications is listed in Section 7.\
    \  RFCs that give guidance to\n   developers of new algorithms are discussed in\
    \ Section 8.  Finally,\n   documents that have historic significance, but perhaps\
    \ not current\n   direct technical application, have been classified into Section\
    \ 9.\n   Note that the use of the term \"historic\" here has nothing to do with\n\
    \   the IETF's formal classification of documents as having \"Historic\"\n   status.\n"
- title: 2.  Architectural Documents
  contents:
  - "2.  Architectural Documents\n   Some documents in this section contain architectural\
    \ guidance and\n   concerns, while others specify congestion-control-related mechanisms\n\
    \   that are broadly applicable and have impacts on more than a single\n   class\
    \ of congestion control techniques.  Some of these documents are\n   direct products\
    \ of the Internet Architecture Board (IAB), giving\n   their guidance on specific\
    \ aspects of congestion control in the\n   Internet.\n   RFC 1122: \"Requirements\
    \ for Internet Hosts -- Communication Layers\"\n      (October 1989)\n      [RFC1122]\
    \ formally mandates that hosts perform congestion control.\n      For TCP, several\
    \ congestion control features are described and\n      listed as required elements\
    \ of conforming implementations, and for\n      UDP, RFC 1122 leaves congestion\
    \ control as an issue for higher-\n      layered protocols.  Although sending\
    \ and reacting to ICMP Source\n      Quench packets is no longer recommended [RFC1812]\
    \ [Gont10], the\n      rest of the congestion control guidance in this RFC is\
    \ still a\n      basis for several current practices in TCP implementations.\n\
    \   RFC 1812: \"Requirements for IP Version 4 Routers\" (June 1995)\n      Numerous\
    \ issues relevant to router behavior are discussed in\n      [RFC1812], and requirements\
    \ for routers to support are prescribed\n      within the document.  Portions\
    \ of RFC 1812 that are particularly\n      relevant to congestion control include\
    \ the directive that routers\n      SHOULD NOT originate ICMP Source Quench messages,\
    \ discussion of\n      precedence in queueing, and Section 5.3.6 titled \"Congestion\n\
    \      Control\" that recommends sizing buffers as a function of the\n      product\
    \ of the bandwidth of the link times the path delay of the\n      flows using\
    \ the link, and advises on the implementation of active\n      queue management\
    \ techniques.\n   RFC 1958: \"Architectural Principles of the Internet\" (June\
    \ 1996)\n      Several guidelines for network systems design that have proven\n\
    \      useful in the evolution of the Internet are sketched in [RFC1958].\n  \
    \    Congestion control is not specifically mentioned or alluded to,\n      but\
    \ the general principles apply to congestion control.  For\n      instance, performing\
    \ end-to-end functions at end nodes, lack of\n      centralized control, heterogeneity,\
    \ scalability, simplicity,\n      avoiding options and parameters, etc., are all\
    \ valid concerns in\n      the design and assessment of congestion control schemes\
    \ for the\n      Internet.\n   RFC 2140: \"TCP Control Block Interdependence\"\
    \ (April 1997)\n      [RFC2140] suggests that TCP connections between the same\
    \ endpoints\n      might share some information, including their congestion control\n\
    \      state.  To some degree, this is done in practice by a few current\n   \
    \   operating systems; for example, Linux currently has a destination\n      cache\
    \ with this information, but this behavior is not yet formally\n      standardized\
    \ or recognized as a best practice by the IETF.\n   RFC 2309: \"Recommendations\
    \ on Queue Management and Congestion\n      Avoidance in the Internet\" (April\
    \ 1998)\n      [RFC2309] briefly discusses the history of congestion and the\n\
    \      origin of congestion control in the Internet.  The focus is mainly\n  \
    \    on network- or router-based queue management algorithms.  This RFC\n    \
    \  recommends to test, standardize, and deploy Active Queue\n      Management\
    \ (AQM) in routers; it provides an overview of one such\n      mechanism, Random\
    \ Early Detection (RED), and explains how and why\n      AQM mechanisms can improve\
    \ the performance of the Internet.\n      Finally, this document explains the\
    \ danger of a possible\n      \"congestion collapse\" from unresponsive flows\
    \ and makes a strong\n      recommendation to develop and eventually deploy router\
    \ mechanisms\n      to protect the Internet from such traffic.\n      Today, the\
    \ advice in this document has been followed to some\n      extent.  Hardware and\
    \ software vendors have been receptive, and\n      AQM techniques are widely available\
    \ in many popular dedicated\n      commercial router products and even in more\
    \ general operating\n      systems that are sometimes used as routers.  However,\
    \ AQM\n      techniques may not be enabled in default configurations of these\n\
    \      systems, and it is often left to users and network engineers to\n     \
    \ enable and configure AQM mechanisms when desired.  In some cases,\n      enabling\
    \ QoS mechanisms on a device also enables AQM mechanisms by\n      default.  The\
    \ number of production routers that actually have\n      these AQM features enabled\
    \ is an open question.\n   RFC 2914 (BCP 41): \"Congestion Control Principles\"\
    \ (September 2000)\n      [RFC2914] is an explanation of the principles of congestion\n\
    \      control, and the IETF's Best Current Practice for congestion\n      control\
    \ design.  It points out that there are an increasing number\n      of applications\
    \ that do not use TCP, and elaborates on the\n      importance of performing congestion\
    \ control for such traffic in\n      order to prevent congestion collapse.  The\
    \ TCP Reno congestion\n      control mechanisms are described as an example of\
    \ end-to-end\n      congestion control within transport protocols.\n      SCTP\
    \ is one example of a non-TCP transport protocol that\n      implements congestion\
    \ control based on these principles.  The\n      developments of TFRC [RFC3448]\
    \ and DCCP [RFC4340] are attempts to\n      provide useful tools implementing\
    \ those principles for\n      applications with needs similar to streaming media,\
    \ where TCP's\n      reactions are too fast.  It would be beneficial for users\
    \ and the\n      Internet itself if these carefully designed tools become widely\n\
    \      deployed in place of other ad hoc schemes that may not be well-\n     \
    \ grounded in the congestion control principles.  This replacement\n      process\
    \ is ongoing and not yet complete.  Appropriate and usable\n      congestion control\
    \ schemes for non-TCP flows continue to be an\n      open research area.\n   RFC\
    \ 3124: \"The Congestion Manager\" (June 2001)\n      [RFC3124] specifies the\
    \ Congestion Manager, an end-system service\n      that realizes congestion control\
    \ on a per-host-pair rather than a\n      per-connection basis, which may be a\
    \ more appropriate way to carry\n      out congestion control.  Using the Congestion\
    \ Manager, multiple\n      streams between two hosts (which may include TCP flows)\
    \ can adapt\n      to network congestion in a unified fashion.\n      This proposal\
    \ is related to RFC 2140, discussed above, but with a\n      wider scope than\
    \ TCP.  Because some pieces of its supporting\n      architecture have not yet\
    \ been specified, the Congestion Manager's\n      techniques are not commonly\
    \ used today and have not been widely\n      implemented and deployed yet beyond\
    \ experimental stacks.  Sharing\n      of congestion and path information between\
    \ individual connections\n      continues to be an open research area with branches\
    \ in detecting\n      shared bottlenecks when using multiple paths, caching of\
    \ old state\n      for faster startup, and sharing of current state and feedback.\n\
    \   RFC 3426: \"General Architectural and Policy Considerations\" (November\n\
    \      2002)\n      [RFC3426] lists a number of questions that can be answered\
    \ for a\n      particular technical solution to determine its architectural\n\
    \      impact and desirability.  These are valid for congestion control\n    \
    \  mechanisms, and end-point congestion management is used as an\n      example\
    \ case-study several times in RFC 3426.  Two salient\n      questions that RFC\
    \ 3426 advises asking about proposed mechanisms\n      are why they are needed\
    \ in addition to existing protocols, and why\n      they are needed at a certain\
    \ layer rather than at other layers.\n      These are particularly relevant for\
    \ congestion control mechanisms\n      since several already exist and since they\
    \ can span network,\n      transport, and application layers.\n   RFC 3439: \"\
    Some Internet Architectural Guidelines and Philosophy\"\n      (December 2002)\n\
    \      [RFC3439] supplements RFC 1958.  Simplicity is stressed, as the\n     \
    \ unpredictable results of complexity (due to amplification and\n      coupling)\
    \ are described.  Congestion control issues stemming from\n      layering interactions\
    \ between transport and lower protocols are\n      presented, as well as other\
    \ items relevant to congestion control,\n      including asymmetry and the \"\
    myth of over-provisioning\".\n   RFC 3714: \"IAB Concerns Regarding Congestion\
    \ Control for Voice\n      Traffic in the Internet\" (March 2004)\n      [RFC3714]\
    \ can be seen as a follow-up to the concerns that were\n      discussed in RFC\
    \ 2914.  It expresses the IAB's concern over the\n      lack of effective end-to-end\
    \ congestion control for best-effort\n      voice traffic, which is noted as being\
    \ a current service with\n      growing demand.  An example of a VoIP connection\
    \ between Atlanta,\n      Georgia, USA, and Nairobi, Kenya, is given, where a\
    \ single VoIP\n      call consumed more than half of the access link capacity\
    \ (which is\n      normally shared across several different users).  This example\
    \ is\n      used as the basis for further discussion, making it clear that\n \
    \     using some form of congestion control for VoIP traffic is highly\n     \
    \ recommended.\n"
- title: 3.  TCP Congestion Control
  contents:
  - "3.  TCP Congestion Control\n   The TCP specifications found in RFC 793 and its\
    \ predecessors did not\n   contain any discussion of using or managing a congestion\
    \ window.\n   Other than a simple retransmission timeout and flow control through\n\
    \   the advertised receive window, TCP implementations based only on RFC\n   793\
    \ do not contain congestion control.  As several congestion\n   collapse events\
    \ occurred on the Internet, it was later realized that\n   congestion control\
    \ was needed.  The host requirements in RFC 1122\n   require conforming TCP implementations\
    \ to implement Jacobson's slow\n   start and congestion avoidance algorithms (later\
    \ specified in RFC\n   2001 and then RFC 2581).  RFC 1122 also recommends several\
    \ other\n   behaviors that influence congestion control like the Nagle algorithm,\n\
    \   delayed acknowledgements, Jacobson's retransmission timeout (RTO)\n   estimation\
    \ algorithm, and exponential backoff of the retransmission\n   timer.\n   Basic\
    \ TCP congestion control is defined in RFC 2581, with many other\n   RFCs that\
    \ specify ancillary modifications and enhancements.  RFC 2581\n   obsoletes the\
    \ first proposed standard for TCP congestion control in\n   RFC 2001.  These two\
    \ RFCs document the mechanisms that had already\n   been in common use by TCP\
    \ implementations for many years.  The reader\n   may refer to the TCP Roadmap\
    \ [RFC4614] for more information on the\n   RFCs that specifically describe TCP\
    \ congestion control, as this\n   material is not replicated here.\n   Recently,\
    \ significant effort has been put into experimental TCP\n   congestion control\
    \ modifications for obtaining high throughput with\n   reduced startup and recovery\
    \ times.  RFCs have been published on some\n   of these modifications, including\
    \ HighSpeed TCP [RFC3649], and\n   Limited Slow-Start [RFC3742], but high-rate\
    \ congestion control\n   mechanisms are still considered an open issue in congestion\
    \ control\n   research.  Other schemes have been published as Internet-Drafts\
    \ or\n   have been discussed a little by the IETF, but much of the work in\n \
    \  this area has not been adopted within the IETF yet, so the majority\n   of\
    \ this work is outside the RFC series and may be discussed in other\n   products\
    \ of the ICCRG.\n   At the time of writing, the IETF's TCP Maintenance and Minor\n\
    \   Extensions (TCPM) Working Group was developing an update to RFC 2581\n   to\
    \ incorporate small changes from other documents and advance TCP\n   congestion\
    \ control mechanisms on the IETF Standards Track.  The\n   update also clarifies\
    \ and revises some points.  These include the\n   definition of a duplicate ACK,\
    \ initial congestion window and slow\n   start threshold values, behavior in response\
    \ to retransmission\n   timeouts, the use of the limited transmit mechanism, and\
    \ security\n   with regards to misbehaving receivers that practice ACK division.\n"
- title: 4.  Challenging Link and Path Characteristics
  contents:
  - "4.  Challenging Link and Path Characteristics\n   Links with large and/or variable\
    \ bandwidth-delay products have\n   traditionally been problematic for congestion\
    \ control schemes because\n   they can distort the properties of the feedback\
    \ loop.  Links that\n   either expose a high rate of packet losses to the upper\
    \ layers, or\n   use highly-persistent retransmission mechanisms to prevent losses\n\
    \   also cause problems with some of the standard congestion control\n   mechanisms.\
    \  The documents in this section discuss challenging link\n   characteristics;\
    \ many of them were written by the Performance\n   Implications of Link Characteristics\
    \ (PILC) Working Group.\n   While these documents often refer to specific problems\
    \ with TCP, the\n   link characteristics that they describe can be expected to\
    \ affect\n   other congestion control mechanisms too.  In particular, interactions\n\
    \   between link properties and TCP congestion control will be shared by\n   other\
    \ protocols that use the similar congestion control behavior,\n   such as SCTP\
    \ [RFC4960] and DCCP with CCID 2 [RFC4341] (see\n   Section 6), and should be\
    \ taken into consideration by designers of\n   congestion control mechanisms that\
    \ utilize the same kind of feedback\n   as TCP.\n   Some RFCs only make recommendations\
    \ regarding the implementation and\n   configuration of TCP based upon characteristics\
    \ of special links.  As\n   these RFCs are so closely connected to the specification\
    \ of TCP\n   itself, they are not included in this document, but are listed in\
    \ the\n   TCP Roadmap [RFC4614].\n   RFC 2488 (BCP 28): \"Enhancing TCP Over Satellite\
    \ Channels using\n      Standard Mechanisms\" (January 1999)\n      The summary\
    \ of recommendations in [RFC2488] came from the TCP over\n      Satellite (TCPSAT)\
    \ Working Group, whose goal was to identify the\n      performance problems that\
    \ TCP may have over satellite links and\n      suggest mitigations.  The document\
    \ explains several ways that\n      existing standards can be applied to improve\
    \ the performance of\n      basic TCP congestion control over paths with characteristics\n\
    \      similar to those involving satellite links.\n   RFC 3135: \"Performance\
    \ Enhancing Proxies Intended to Mitigate Link-\n      Related Degradations\" (June\
    \ 2001)\n      [RFC3135] is a survey of Performance Enhancing Proxies (PEPs)\n\
    \      often employed to improve degraded TCP performance caused by\n      characteristics\
    \ of specific link environments, for example, in\n      satellite, wireless WAN,\
    \ and wireless LAN environments.  Different\n      types of PEPs are described\
    \ as well as the mechanisms used to\n      improve performance.  While there is\
    \ a specific focus on TCP in\n      this document, PEPs can operate on any protocol,\
    \ and the\n      performance enhancements that PEPs achieve are often closely\n\
    \      related to congestion control.\n      The use of PEPs has architectural\
    \ implications as they sometimes\n      violate end-to-end assumptions and can\
    \ add complexity to the inner\n      portions of a network.  Certain types of\
    \ PEPs are commonly used\n      today in satellite or long-distance networking\
    \ because it is\n      easier to insert a small number of PEPs near problematic\
    \ links\n      than to upgrade the TCP implementations on all the end hosts that\n\
    \      might use those links.  One down-side is that their deployment\n      raises\
    \ some issues when introducing new or updated congestion\n      control (CC) methods\
    \ into these deployed networks, since the PEPs\n      may be operating with undocumented\
    \ algorithms, making assumptions\n      about the end-host CC behavior, and/or\
    \ altering packet fields that\n      will affect the end-host CC behavior.\n \
    \  RFC 3150 (BCP 48): \"End-to-end Performance Implications of Slow\n      Links\"\
    \ (July 2001)\n      [RFC3150] makes performance-related recommendations for users\
    \ of\n      network paths that traverse \"very low bit-rate\" links.  It\n   \
    \   includes a discussion of interactions between such links and TCP\n      congestion\
    \ control.\n   RFC 3155 (BCP 50): \"End-to-end Performance Implications of Links\
    \ with\n      Errors\" (August 2001)\n      Under the premise that several types\
    \ of PEP have undesirable\n      implications, [RFC3155] recommends end-to-end\
    \ alternatives for\n      improving TCP performance over paths with error-prone\
    \ links.\n   RFC 3366 (BCP 62): \"Advice to link designers on link Automatic Repeat\n\
    \      reQuest (ARQ)\" (August 2002)\n      Link-layer ARQ techniques are a popular\
    \ means to increase the\n      robustness of particular links to transmission\
    \ errors via\n      retransmission and acknowledgement mechanisms.  As [RFC3366]\n\
    \      explains, ARQ techniques on a link can interact poorly with TCP's\n   \
    \   end-to-end congestion control if they lead to additional delay\n      variation\
    \ or reordering.  This RFC gives some advice on limiting\n      the extent of\
    \ these types of problematic interactions.  The proper\n      balance between\
    \ end-to-end and link-layer reliability mechanisms\n      is still an open research\
    \ issue that has been explored in many\n      academic papers outside the IETF.\n\
    \   RFC 3449 (BCP 69): \"TCP Performance Implications of Network Path\n      Asymmetry\"\
    \ (December 2002)\n      [RFC3449] describes performance limitations of TCP when\
    \ the\n      capacity of the ACK path is limited.  Several techniques to aid\n\
    \      TCP in these circumstances are recommended as Best Current\n      Practices,\
    \ particularly ACK congestion control and sender pacing\n      are relevant to\
    \ other non-TCP congestion control schemes, outside\n      the scope of this document.\
    \  For instance, in the design of the\n      Reliable Multicast Transport (RMT)\
    \ protocols for multicast,\n      preventing ACK-implosion at multicast sources\
    \ can be seen as a\n      form of ACK congestion control.\n   RFC 3481: \"TCP\
    \ over Second (2.5G) and Third (3G) Generation Wireless\n      Networks\" (February\
    \ 2003)\n      Among other issues, some mobile data systems exhibit delay spikes,\n\
    \      handovers, and bandwidth oscillation.  [RFC3481] describes the\n      problems\
    \ that these conditions cause for TCP congestion control\n      and how some TCP\
    \ extensions can be used to mitigate them.\n   RFC 3819 (BCP 89): \"Advice for\
    \ Internet Subnetwork Designers\" (July\n      2004)\n      Several issues in\
    \ link design and optimization for carrying IP\n      traffic are discussed in\
    \ [RFC3819], which recommends Best Current\n      Practices.  Many of these principles\
    \ are motivated by properties\n      of TCP, but most of them also apply to other\
    \ transport-layer\n      congestion control techniques as well.\n"
- title: 5.  End-Host and Router Cooperative Signaling
  contents:
  - "5.  End-Host and Router Cooperative Signaling\n   Some RFCs define mechanisms\
    \ that allow routers to add signaling\n   information to packets that makes the\
    \ network's congestion state less\n   of a mystery to end-host congestion controllers.\
    \  Routers supporting\n   these can signal information about the current congestion\
    \ state to\n   flows in-band, providing faster and finer-grained information than\n\
    \   inference-based methods.  Two examples of this are discussed in this\n   section;\
    \ the first directs sources to slow down in order to avoid\n   losses, and the\
    \ other assists in determining an appropriate starting\n   rate for new flows.\n"
- title: 5.1.  Explicit Congestion Notification
  contents:
  - "5.1.  Explicit Congestion Notification\n   Traditionally, under congestion, IP\
    \ routers enqueue packets until\n   some limit is reached, at which point packets\
    \ are dropped.  TCP, and\n   other IETF transport protocols, use a stream of acknowledgements\
    \ to\n   infer these losses and take congestion control action.  This section\n\
    \   describes a more advanced way to signal congestion to sources before\n   packet-dropping\
    \ is required.\n   There are two Explicit Congestion Notification (ECN) bits in\
    \ the IP\n   header that enable an AQM mechanism (see [RFC2309] or Section 2)\
    \ to\n   convey congestion information to endpoints without dropping packets.\n\
    \   This can significantly reduce the losses experienced by transport\n   endpoints\
    \ if they are responsive to ECN.  While ECN is most\n   frequently discussed in\
    \ the context of TCP (and therefore included in\n   the TCP Roadmap [RFC4614]),\
    \ its applicability is broader, and ECN use\n   has also been specified for protocols\
    \ such as DCCP and SCTP.\n   RFC 2481: \"A Proposal to add Explicit Congestion\
    \ Notification (ECN)\n      to IP\" (January 1999) - Obsoleted by RFC 3168\n \
    \     [RFC2481] introduced ECN into the RFC series, describing when the\n    \
    \  Congestion Experienced (CE) bit in the IP header should be set in\n      routers,\
    \ and what modifications are needed to TCP to make it ECN-\n      capable.  It\
    \ includes a discussion of issues related to nodes and\n      routers that are\
    \ non-compliant, IPsec tunnels, and dropped or\n      corrupted packets, as well\
    \ as a summary of related work.  Many of\n      these issues will also be faced\
    \ by operators trying to deploy\n      other network-based congestion control\
    \ methods.  RFC 2481 has been\n      obsoleted by RFC 3168.\n   RFC 2884: \"Performance\
    \ Evaluation of Explicit Congestion Notification\n      (ECN) in IP Networks\"\
    \ (July 2000)\n      [RFC2884] presents a performance study of ECN as specified\
    \ in\n      [RFC2481] using an implementation on the Linux operating system.\n\
    \      The experiments focused on ECN for both bulk and transactional\n      transfers,\
    \ showing that there is improvement in throughput over\n      TCP without ECN\
    \ in the case of bulk transfers and substantial\n      improvement for transactional\
    \ transfers.  Studies like this help\n      to build the community's confidence\
    \ that extensions like ECN are\n      both safe and valuable.  Similar RFCs helped\
    \ the community accept\n      larger initial windows for TCP [RFC2414] [RFC2415]\
    \ [RFC2416].\n   RFC 3168: \"The Addition of Explicit Congestion Notification\
    \ (ECN) to\n      IP\" (September 2001)\n      [RFC3168], which obsoletes [RFC2481],\
    \ specifies the incorporation\n      of ECN into TCP and IP.  One notable change\
    \ in this significantly\n      extended specification is the definition of a bit\
    \ combination that\n      was not defined in [RFC2481], which can be used to realize\
    \ a nonce\n      that would prevent a receiver from falsely claiming that there\
    \ was\n      no congestion.  Potential issues related to ECN are discussed at\n\
    \      length, including those already included in [RFC2481] and\n      backwards\
    \ compatibility with implementations that would follow the\n      specification\
    \ in the obsoleted document.\n      ECN, as specified in RFC 3168, is implemented\
    \ in several popular\n      router and end-host platforms.  It is in active use,\
    \ to at least\n      some extent.  Problems with ECN \"blackholes\" (Internet\
    \ routers\n      misconfigured to discard packets with ECN-capable bits set) were\n\
    \      discovered when ECN was enabled by default in some end-host\n      operating\
    \ systems.  Fears about the persisting presence of these\n      blackholes currently\
    \ may be keeping ECN from being used by default\n      in many end-host operating\
    \ systems even though it is implemented\n      as an option within them.  Some\
    \ measurements on ECN support and\n      usability are available [PF01] [MAF04]\
    \ [MAF05].\n   RFC 3540: \"Robust Explicit Congestion Notification (ECN) Signaling\n\
    \      with Nonces\" (June 2003)\n      [RFC3540] specifies a nonce mechanism\
    \ that uses an ECN bit\n      combination that is not used in [RFC2481], but that\
    \ is specified\n      in [RFC3168] to allow a one-bit ECN nonce.  This nonce mechanism\n\
    \      includes a Nonce Sum (NS) field in the TCP header so that senders\n   \
    \   can ensure that ACKs that do not indicate congestion are credible.\n     \
    \ The mechanism improves the robustness of congestion control by\n      preventing\
    \ receivers from exploiting ECN to gain an unfair share\n      of network bandwidth.\n\
    \      This nonce technique is not understood to have been widely\n      implemented\
    \ or deployed, and there has been some discussion as to\n      whether the mechanism\
    \ is really effective or is the best use of\n      these bits (see emails to the\
    \ IETF Transport Area Working Group\n      (TSVWG) mailing list, in the thread\
    \ \"ECN nonce snag in TCP ESTATS\n      MIB\" from December 2006 - January 2007,\
    \ or [MBJ07]).\n"
- title: 5.2.  Quick-Start
  contents:
  - "5.2.  Quick-Start\n   RFC 4782: \"Quick-Start for TCP and IP\" (January 2007)\n\
    \      Quick-Start provides a way for hosts to ask routers to help them\n    \
    \  select an initial sending rate, and use this rate rather than the\n      traditional\
    \ small initial congestion window and slow-start\n      algorithm.  [RFC4782]\
    \ describes the Quick-Start mechanism and its\n      use with TCP.  In addition\
    \ to discussing the benefits of Quick-\n      Start, the document also discusses\
    \ several limitations of the\n      Quick-Start technique with respect to some\
    \ types of tunnels in use\n      over the Internet today and other potential costs\
    \ of Quick-Start\n      including those related to router design.  Analysis of\
    \ the effects\n      of misbehaving entities and appendices containing design\
    \ rationale\n      and related work are also notably present in this RFC.\n  \
    \    Many of the issues discussed in RFC 4782, including router\n      architecture,\
    \ network design / tunnels, and misbehaving agents are\n      all challenges relevant\
    \ to other proposals that try to add router\n      assistance into the network.\
    \  The consideration of these issues\n      can be illustrative for other protocol\
    \ designers, even if they are\n      not interested in Quick-Start itself.\n"
- title: 6.  Non-TCP Unicast Congestion Control
  contents:
  - "6.  Non-TCP Unicast Congestion Control\n   In the past, TCP dominated Internet\
    \ traffic, as it was used for many\n   of the popular applications (email, web\
    \ browsing, file transfer,\n   remote login, etc.).  The majority of early congestion\
    \ control work\n   focused on TCP, and the introduction of congestion control\
    \ into TCP\n   alone is often credited with saving the Internet from additional\n\
    \   congestion collapse events.  Today, TCP has been joined by other\n   transport\
    \ protocols (e.g., custom UDP-based protocols, SCTP, DCCP,\n   RTP over UDP [RFC3550],\
    \ etc.), and so having properly functioning\n   congestion control within these\
    \ other protocols is important for the\n   Internet's health (as explained in\
    \ RFC 3714, for instance, or see the\n   discussion of the \"congestion control\
    \ arms race\" scenario in RFC\n   2914).  Documents that describe unicast congestion\
    \ control methods\n   for non-TCP transport protocols have been grouped into this\
    \ section.\n   RFC 4960: \"Stream Control Transmission Protocol\" (September 2007)\n\
    \      SCTP congestion control is very similar to TCP with Selective\n      Acknowledgements,\
    \ but there are some differences, as described in\n      Section 7.1 of [RFC4960].\
    \  The major difference lies in the fact\n      that SCTP supports multihoming,\
    \ whereas TCP does not.  Thus, SCTP\n      keeps a different set of congestion\
    \ control parameters for each\n      destination address within an association,\
    \ whereas TCP only keeps\n      a single set of congestion control parameters\
    \ per connection.\n   RFC 5348: \"TCP Friendly Rate Control (TFRC): Protocol Specification\"\
    \n      (September 2008)\n      [RFC5348], which obsoletes [RFC3448], specifies\
    \ TCP-Friendly Rate\n      Control (TFRC), a rate-based congestion control mechanism\
    \ for\n      unicast flows operating in a best-effort Internet environment\n \
    \     where flows are competing with standard TCP traffic.  TFRC ensures\n   \
    \   conformance with TCP by continuously calculating the rate that a\n      TCP\
    \ sender would obtain under similar circumstances using a\n      slightly simplified\
    \ version of the TCP Reno throughput equation in\n      [PFTK98].  Its sending\
    \ rate is smoother than the rate of TCP,\n      making it suitable for multimedia\
    \ applications.  TFRC is not a\n      wire protocol but rather a mechanism that\
    \ could, for instance, be\n      used within a UDP-based application, in a transport\
    \ protocol such\n      as RTP, or in the context of endpoint congestion management\n\
    \      [RFC3124].\n   RFC 3550: \"RTP: A Transport Protocol for Real-Time Applications\"\
    \n      (July 2003)\n      [RFC3550] specifies the real-time transport protocol\
    \ RTP along\n      with its control protocol RTCP.  RTP/RTCP does not prescribe\
    \ a\n      specific congestion control behavior, but it is recommended that\n\
    \      such a behavior be specified in each RTP profile (which is due to\n   \
    \   the fact that the potential for reducing the sending rate is often\n     \
    \ content dependent in the case of real-time streams).\n      Specifically, [RFC3550]\
    \ states: \"For some profiles, it may be\n      sufficient to include an applicability\
    \ statement restricting the\n      use of that profile to environments where congestion\
    \ is avoided by\n      engineering.  For other profiles, specific methods such\
    \ as data\n      rate adaptation based on RTCP feedback may be required\".\n \
    \     [RFC4585], which discusses RTCP feedback and adaptation\n      mechanisms,\
    \ points out that RTCP feedback may operate on much\n      slower timescales than\
    \ transport layer feedback mechanisms, and\n      that additional mechanisms are\
    \ therefore required to perform\n      proper congestion control.  One way to\
    \ make use of such additional\n      mechanisms is to run RTP over DCCP.\n   RFC\
    \ 4336: \"Problem Statement for the Datagram Congestion Control\n      Protocol\
    \ (DCCP)\" (March 2006)\n      [RFC4336] provides the motivation leading to the\
    \ design of DCCP.\n      In doing so, other possibilities of implementing similar\n\
    \      functionality are discussed, including unreliable extensions of\n     \
    \ SCTP, RTP-based congestion control, and providing congestion\n      control\
    \ above or below UDP.\n   RFC 4340: \"Datagram Congestion Control Protocol\" (March\
    \ 2006)\n      [RFC4340] specifies DCCP, the Datagram Congestion Control\n   \
    \   Protocol.  This protocol provides bidirectional unicast\n      connections\
    \ of congestion-controlled unreliable datagrams.  It is\n      suitable for applications\
    \ that can benefit from control over the\n      tradeoff between timeliness and\
    \ reliability.  The core DCCP\n      specification does not include a specific\
    \ congestion control\n      behavior; rather, it functions as a framework for\
    \ such mechanisms,\n      which can be selected via the Congestion Control Identifier\n\
    \      (CCID).\n   RFC 4341: \"Profile for Datagram Congestion Control Protocol\
    \ (DCCP)\n      Congestion Control ID 2: TCP-like Congestion Control\" (March\
    \ 2006)\n      [RFC4341] is the specification of TCP-like congestion control\n\
    \      within DCCP.  This should be used by senders who would like to\n      take\
    \ advantage of the available bandwidth in an environment with\n      rapidly changing\
    \ conditions, and who are able to adapt to the\n      abrupt changes in the congestion\
    \ window typical of TCP's Additive\n      Increase Multiplicative Decrease (AIMD)\
    \ congestion control.  ECN\n      is also supported within RFC 4341.\n   RFC 4342:\
    \ \"Profile for Datagram Congestion Control Protocol (DCCP)\n      Congestion\
    \ Control ID 3: TCP-Friendly Rate Control (TFRC)\" (March\n      2006)\n     \
    \ [RFC4342] is the specification of TFRC congestion control as\n      described\
    \ in [RFC3448] for DCCP.  This should be used by senders\n      who want a TCP-friendly\
    \ sending rate, possibly with Explicit\n      Congestion Notification (ECN), while\
    \ minimizing abrupt rate\n      changes.\n"
- title: 7.  Multicast Congestion Control
  contents:
  - "7.  Multicast Congestion Control\n   In the IETF, congestion control for multicast\
    \ (one-to-many)\n   communication has primarily been tackled in the Reliable Multicast\n\
    \   Transport (RMT) Working Group.  Except for [RFC2357] and [RFC3208],\n   all\
    \ the documents in this section were written by this group.  Since\n   a \"one\
    \ size fits all\" protocol cannot meet the requirements of all\n   possible applications\
    \ in this space, the approach taken is a modular\n   one, consisting of \"protocol\
    \ cores\" and \"building blocks\".  Multiple\n   congestion control building blocks\
    \ have been defined, providing both\n   sender-driven and receiver-driven congestion\
    \ control methods that\n   differ widely in their assumptions and behavior.\n\
    \   RFC 2357: \"IETF Criteria for Evaluating Reliable Multicast Transport\n  \
    \    and Application Protocols\" (June 1998)\n      Some early multicast content\
    \ dissemination proposals did not\n      incorporate proper congestion control;\
    \ this is pointed out as\n      being a severe mistake in [RFC2357], as large-scale\
    \ multicast\n      applications have the potential to do vast congestion-related\n\
    \      damage.  This document clearly makes the case that congestion\n      control\
    \ mechanisms should be developed and incorporated into\n      multicast content\
    \ dissemination protocols intended for use over\n      the Internet.\n   RFC 2887:\
    \ \"The Reliable Multicast Design Space for Bulk Data\n      Transfer\" (August\
    \ 2000)\n      Several classes of potential congestion control schemes for\n \
    \     single-sender multicast protocols are briefly sketched as\n      possibilities,\
    \ but no specific protocols are developed or selected\n      in [RFC2887].\n \
    \  RFC 3048: \"Reliable Multicast Transport Building Blocks for One-to-\n    \
    \  Many Bulk-Data Transfer\" (January 2001)\n      [RFC3048] discusses the building\
    \ block approach to RMT protocols\n      and mentions that several different congestion\
    \ control building\n      blocks may be required in order to deal with different\
    \ situations.\n      Some of the possible interactions between building blocks\
    \ for\n      congestion control and those for Forward Error Correction (FEC),\n\
    \      acknowledgement, and group management are also mentioned.\n   RFC 3208:\
    \ \"PGM Reliable Transport Protocol Specification\" (December\n      2001)\n \
    \     Pragmatic General Multicast (PGM) is a reliable multicast\n      transport\
    \ protocol for applications that require ordered or\n      unordered, duplicate-free,\
    \ multicast data delivery from multiple\n      sources to multiple receivers.\
    \  As discussed in [RFC3208]'s\n      Appendix B, a PGM protocol source can request\
    \ congestion control\n      feedback from both network elements (routers) and\
    \ receivers (end\n      hosts).  These reports can indicate the load on the worst\
    \ link in\n      a particular path, or the load on the worst path.  The actual\n\
    \      procedure used in response to this feedback is not part of RFC\n      3208,\
    \ but the notion of using multicast routers to assist in\n      congestion control\
    \ is significant.\n   RFC 3450: \"Asynchronous Layered Coding (ALC) Protocol Instantiation\"\
    \n      (December 2002)\n      [RFC3450] specifies ALC, a rough header format\
    \ using the RMT\n      building blocks, that can be used by multicast content\n\
    \      dissemination protocols.  ALC is intended to use a multi-rate\n      congestion\
    \ control building block, where the sender does not\n      require any feedback,\
    \ but where multiple multicast groups with\n      different transmission rates\
    \ are available within and ALC session,\n      and receivers control their rates\
    \ by joining or leaving groups.\n   RFC 3738: \"Wave and Equation Based Rate Control\
    \ (WEBRC) Building\n      Block\" (April 2004)\n      The WEBRC mechanism defined\
    \ in [RFC3738] is a receiver-driven form\n      of congestion control, where each\
    \ receiver in a multicast group\n      can determine the individual rate at which\
    \ packets are delivered\n      to it.  WEBRC senders create a base channel for\
    \ control\n      information and several multicast channels for data transmission\n\
    \      that each send packets at a varying rate in the form of a wave.\n     \
    \ The receivers dynamically join and leave channels at chosen points\n      within\
    \ the wave of sending rates to obtain the desired overall\n      receive rate\
    \ based on an equation using the estimated loss\n      probability and round-trip\
    \ time within an epoch.  WEBRC is\n      compatible for use within ALC.\n   RFC\
    \ 4654: \"TCP-Friendly Multicast Congestion Control (TFMCC):\n      Protocol Specification\"\
    \ (August 2006)\n      TFMCC, as described in [RFC4654], is a sender-driven congestion\n\
    \      control mechanism, where the received rate for the entire\n      multicast\
    \ group is determined by the worst-connected receiver.\n      TFMCC builds upon\
    \ TFRC, but scales down the feedback to prevent\n      ACK-implosion effects by\
    \ having receivers suppress their feedback\n      unless they perceive it to be\
    \ the worst among the reception group.\n"
- title: 8.  Guidance for Developing and Analyzing Congestion Control Techniques
  contents:
  - "8.  Guidance for Developing and Analyzing Congestion Control Techniques\n   Some\
    \ recently published RFCs discuss the properties of congestion\n   control protocols\
    \ that are \"safe\" for Internet deployment, as well as\n   how to measure the\
    \ properties of congestion control mechanisms and\n   transport protocols.  These\
    \ documents are particularly relevant to\n   the ICCRG as some of the group's\
    \ activities involve reviewing\n   congestion control proposals that have been\
    \ brought to the IETF for\n   publication (see\n   http://www.ietf.org/iesg/statement/congestion-control.html).\n\
    \   RFC 5033 (BCP 133): \"Specifying New Congestion Control Algorithms\"\n   \
    \   (August 2007)\n      The concurrent development of multiple TCP modifications\
    \ for high-\n      rate use and the deployments of these modifications on the\n\
    \      Internet prompted [RFC5033] to be written.  RFC 5033 comes from\n     \
    \ the Transport Area Working Group (TSVWG), and gives guidance on\n      the classes\
    \ of Experimental RFC that can be published to document\n      algorithms that\
    \ are either encouraged for investigation on the\n      Internet, and those that\
    \ are only encouraged for experimentation\n      in less-critical environments.\
    \  It has been described as a list of\n      things for people to think about\
    \ when creating new congestion\n      control techniques that they are planning\
    \ to widely deploy.\n   RFC 5166: \"Metrics for the Evaluation of Congestion Control\n\
    \      Mechanisms\" (March 2008)\n      The IRTF Transport Modeling Research Group\
    \ (TMRG) produced\n      [RFC5166] to describe the set of metrics and related\
    \ tradeoffs\n      between metrics that can be used to compare, contrast, and\n\
    \      evaluate congestion control techniques.  This RFC gives an\n      overview\
    \ of many such metrics, and gives references to their\n      detailed descriptions.\n"
- title: 9.  Historic Interest
  contents:
  - "9.  Historic Interest\n   Early in the RFC series, there are many documents that\
    \ represent an\n   author's thoughts on a subject or brief summaries from measurement\n\
    \   and experimentation, rather than the result of a long formal IETF\n   process.\
    \  Some of the RFCs listed in this section have this\n   distinction.\n   RFC\
    \ 889: \"Internet Delay Experiments\" (December 1983)\n      Based on reported\
    \ measurement experiments, changes to the TCP\n      retransmission timeout (RTO)\
    \ calculation are suggested in\n      [RFC0889].  It is noted that the original\
    \ TCP RTO calculation\n      leads to congestion when a delay spike occurs because\
    \ it takes too\n      long for the RTO to adapt, leading to superfluous retransmissions.\n\
    \   RFC 896: \"Congestion Control in IP/TCP Internetworks\" (January 1984)\n \
    \     [RFC0896] is the first document known to the authors where the\n      term\
    \ \"congestion collapse\" was used.  Here, it refers to the\n      stable state\
    \ that was observed when a sudden load on the net\n      caused the round-trip\
    \ time to rise faster than the sending hosts\n      measured round-trip time could\
    \ be updated.  Two problems are\n      discussed: the \"small-packet problem\"\
    \ (now commonly known by the\n      name \"silly window syndrome\") and the \"\
    source-quench problem\",\n      which is about inappropriately deciding when to\
    \ send and how to\n      react to ICMP Source Quench messages.  Solutions for\
    \ these\n      problems are presented.\n   RFC 970: \"On Packet Switches with\
    \ Infinite Storage\" (December 1985)\n      Using a thought experiment based on\
    \ a router with infinite\n      buffering capacity, [RFC0970] develops a different\
    \ kind of\n      congestion collapse scenario, where few useful packet\n     \
    \ transmissions occur due to the queue being longer than the time-\n      to-live\
    \ of the packets within it.  As described in RFC 970, this\n      scenario was\
    \ also demonstrated using real equipment by the author.\n      The document also\
    \ includes discussion of game-theoretic analysis\n      of congestion control\
    \ and obtaining fairness between behaving and\n      non-behaving flows, by focusing\
    \ on the order of scheduling packets\n      within the buffer rather than the\
    \ actual allocation of buffer\n      space between flows.\n   RFC 1016: \"Something\
    \ a Host Could Do with Source Quench: The Source\n      Quench Introduced Delay\
    \ (SQuID)\" (July 1987)\n      [RFC1016] outlines a rate-based congestion control\
    \ mechanism where\n      end-hosts use Source Quench packets from routers to adjust\
    \ their\n      sending rates.  RFC 1016 also suggests sending congestion\n   \
    \   notifications before queues are actually full, at a rate that\n      increases\
    \ with the current queue occupancy.  This strategy has\n      been used in several\
    \ other AQM mechanisms, notably RED [FJ93].\n   RFC 1254: \"Gateway Congestion\
    \ Control Survey\" (August 1991)\n      [RFC1254] is a survey of congestion control\
    \ approaches in routers\n      that first discusses general congestion control\
    \ performance goals\n      (such as fairness), and then elaborates on the use\
    \ of Source\n      Quench messages (which are now discouraged, as they have been\n\
    \      found ineffective), Random Drop (which would now be called \"Active\n \
    \     Queue Management\"), Congestion Indication (DEC Bit; an early form\n   \
    \   of ECN), \"Selective Feedback Congestion Indication\" (one\n      particular\
    \ method for applying ECN), and Fair Queuing.  Finally,\n      end-system congestion\
    \ control policies are discussed, including\n      Jacobson's well-known algorithms\
    \ [Jac88] and their predecessor --\n      \"CUTE\" [Jain86].\n"
- title: 10.  Security Considerations
  contents:
  - "10.  Security Considerations\n   This document introduces no new security considerations.\
    \  Each RFC\n   listed in this document discusses the security considerations\
    \ of the\n   specification it contains.\n"
- title: 11.  Acknowledgements
  contents:
  - "11.  Acknowledgements\n   Several participants in the ICCRG contributed useful\
    \ comments in the\n   development of this document, including Rex Buddenberg,\
    \ Mitchell\n   Erblichs, Lachlan Andrew, Sally Floyd, Stephen Farrell, Gorry\n\
    \   Fairhurst, Lars Eggert, Mark Allman, and Juergen Schoenwaelder.\n"
- title: 12.  Informative References
  contents:
  - "12.  Informative References\n   [FJ93]     Floyd, S. and V. Jacobson, \"Random\
    \ Early Detection\n              Gateways for Congestion Avoidance\", IEEE/ACM\
    \ Transactions\n              on Networking, volume 1, number 4, August 1993.\n\
    \   [Gont10]   Gont, F., \"ICMP attacks against TCP\", Work in Progress,\n   \
    \           January 2010.\n   [Jac88]    Jacobson, V., \"Congestion Avoidance\
    \ and Control\",\n              Proceedings of ACM SIGCOMM 1988, in ACM Computer\n\
    \              Communication Review, 18 (4), pp. 314-329.\n   [Jain86]   Jain,\
    \ R., \"A Timeout-Based Congestion Control Scheme for\n              Window Flow-Controlled\
    \ Networks\", IEEE Journal on Selected\n              Areas in Communications,\
    \ volume 4, number 7, October 1986.\n   [MAF04]    Medina, A., Allman, M., and\
    \ S. Floyd, \"Measuring\n              Interactions Between Transport Protocols\
    \ and Middleboxes\",\n              Proceedings of the Internet Measurement Conference\
    \ 2004,\n              August 2004.\n   [MAF05]    Medina, A., Allman, M., and\
    \ S. Floyd, \"Measuring the\n              Evolution of Transport Protocols in\
    \ the Internet\", ACM\n              Computer Communications Review, volume 35,\
    \ issue 2,\n              April 2005.\n   [MBJ07]    Moncaster, T., Briscoe, B.,\
    \ and A. Jacquet, \"A TCP Test to\n              Allow Senders to Identify Receiver\
    \ Non-Compliance\", Work\n              in Progress, November 2007.\n   [PF01]\
    \     Padhye, J. and S. Floyd, \"On Inferring TCP Behavior\",\n              Proceedings\
    \ of ACM SIGCOMM 2001, August 2001.\n   [PFTK98]   Padhye, J., Firoiu, V., Towsley,\
    \ D., and J. Kurose,\n              \"Modeling TCP Throughput: A Simple Model\
    \ and its Empirical\n              Validation\", Proceedings of ACM SIGCOMM 1998.\n\
    \   [RFC0889]  Mills, D., \"Internet delay experiments\", RFC 889,\n         \
    \     December 1983.\n   [RFC0896]  Nagle, J., \"Congestion control in IP/TCP\
    \ internetworks\",\n              RFC 896, January 1984.\n   [RFC0970]  Nagle,\
    \ J., \"On packet switches with infinite storage\",\n              RFC 970, December\
    \ 1985.\n   [RFC1016]  Prue, W. and J. Postel, \"Something a host could do with\n\
    \              source quench: The Source Quench Introduced Delay\n           \
    \   (SQuID)\", RFC 1016, July 1987.\n   [RFC1122]  Braden, R., \"Requirements\
    \ for Internet Hosts -\n              Communication Layers\", STD 3, RFC 1122,\
    \ October 1989.\n   [RFC1254]  Mankin, A. and K. Ramakrishnan, \"Gateway Congestion\n\
    \              Control Survey\", RFC 1254, August 1991.\n   [RFC1633]  Braden,\
    \ B., Clark, D., and S. Shenker, \"Integrated\n              Services in the Internet\
    \ Architecture: an Overview\",\n              RFC 1633, June 1994.\n   [RFC1812]\
    \  Baker, F., \"Requirements for IP Version 4 Routers\",\n              RFC 1812,\
    \ June 1995.\n   [RFC1958]  Carpenter, B., \"Architectural Principles of the Internet\"\
    ,\n              RFC 1958, June 1996.\n   [RFC2001]  Stevens, W., \"TCP Slow Start,\
    \ Congestion Avoidance, Fast\n              Retransmit, and Fast Recovery Algorithms\"\
    , RFC 2001,\n              January 1997.\n   [RFC2140]  Touch, J., \"TCP Control\
    \ Block Interdependence\", RFC 2140,\n              April 1997.\n   [RFC2309]\
    \  Braden, B., Clark, D., Crowcroft, J., Davie, B., Deering,\n              S.,\
    \ Estrin, D., Floyd, S., Jacobson, V., Minshall, G.,\n              Partridge,\
    \ C., Peterson, L., Ramakrishnan, K., Shenker,\n              S., Wroclawski,\
    \ J., and L. Zhang, \"Recommendations on\n              Queue Management and Congestion\
    \ Avoidance in the\n              Internet\", RFC 2309, April 1998.\n   [RFC2357]\
    \  Mankin, A., Romanov, A., Bradner, S., and V. Paxson, \"IETF\n             \
    \ Criteria for Evaluating Reliable Multicast Transport and\n              Application\
    \ Protocols\", RFC 2357, June 1998.\n   [RFC2414]  Allman, M., Floyd, S., and\
    \ C. Partridge, \"Increasing TCP's\n              Initial Window\", RFC 2414,\
    \ September 1998.\n   [RFC2415]  Poduri, K., \"Simulation Studies of Increased\
    \ Initial TCP\n              Window Size\", RFC 2415, September 1998.\n   [RFC2416]\
    \  Shepard, T. and C. Partridge, \"When TCP Starts Up With\n              Four\
    \ Packets Into Only Three Buffers\", RFC 2416,\n              September 1998.\n\
    \   [RFC2475]  Blake, S., Black, D., Carlson, M., Davies, E., Wang, Z.,\n    \
    \          and W. Weiss, \"An Architecture for Differentiated\n              Services\"\
    , RFC 2475, December 1998.\n   [RFC2481]  Ramakrishnan, K. and S. Floyd, \"A Proposal\
    \ to add Explicit\n              Congestion Notification (ECN) to IP\", RFC 2481,\n\
    \              January 1999.\n   [RFC2488]  Allman, M., Glover, D., and L. Sanchez,\
    \ \"Enhancing TCP\n              Over Satellite Channels using Standard Mechanisms\"\
    ,\n              BCP 28, RFC 2488, January 1999.\n   [RFC2581]  Allman, M., Paxson,\
    \ V., and W. Stevens, \"TCP Congestion\n              Control\", RFC 2581, April\
    \ 1999.\n   [RFC2884]  Hadi Salim, J. and U. Ahmed, \"Performance Evaluation of\n\
    \              Explicit Congestion Notification (ECN) in IP Networks\",\n    \
    \          RFC 2884, July 2000.\n   [RFC2887]  Handley, M., Floyd, S., Whetten,\
    \ B., Kermode, R.,\n              Vicisano, L., and M. Luby, \"The Reliable Multicast\
    \ Design\n              Space for Bulk Data Transfer\", RFC 2887, August 2000.\n\
    \   [RFC2914]  Floyd, S., \"Congestion Control Principles\", BCP 41,\n       \
    \       RFC 2914, September 2000.\n   [RFC2998]  Bernet, Y., Ford, P., Yavatkar,\
    \ R., Baker, F., Zhang, L.,\n              Speer, M., Braden, R., Davie, B., Wroclawski,\
    \ J., and E.\n              Felstaine, \"A Framework for Integrated Services Operation\n\
    \              over Diffserv Networks\", RFC 2998, November 2000.\n   [RFC3048]\
    \  Whetten, B., Vicisano, L., Kermode, R., Handley, M.,\n              Floyd,\
    \ S., and M. Luby, \"Reliable Multicast Transport\n              Building Blocks\
    \ for One-to-Many Bulk-Data Transfer\",\n              RFC 3048, January 2001.\n\
    \   [RFC3124]  Balakrishnan, H. and S. Seshan, \"The Congestion Manager\",\n \
    \             RFC 3124, June 2001.\n   [RFC3135]  Border, J., Kojo, M., Griner,\
    \ J., Montenegro, G., and Z.\n              Shelby, \"Performance Enhancing Proxies\
    \ Intended to\n              Mitigate Link-Related Degradations\", RFC 3135, June\
    \ 2001.\n   [RFC3150]  Dawkins, S., Montenegro, G., Kojo, M., and V. Magret,\n\
    \              \"End-to-end Performance Implications of Slow Links\",\n      \
    \        BCP 48, RFC 3150, July 2001.\n   [RFC3155]  Dawkins, S., Montenegro,\
    \ G., Kojo, M., Magret, V., and N.\n              Vaidya, \"End-to-end Performance\
    \ Implications of Links with\n              Errors\", BCP 50, RFC 3155, August\
    \ 2001.\n   [RFC3168]  Ramakrishnan, K., Floyd, S., and D. Black, \"The Addition\n\
    \              of Explicit Congestion Notification (ECN) to IP\",\n          \
    \    RFC 3168, September 2001.\n   [RFC3208]  Speakman, T., Crowcroft, J., Gemmell,\
    \ J., Farinacci, D.,\n              Lin, S., Leshchiner, D., Luby, M., Montgomery,\
    \ T., Rizzo,\n              L., Tweedly, A., Bhaskar, N., Edmonstone, R.,\n  \
    \            Sumanasekera, R., and L. Vicisano, \"PGM Reliable Transport\n   \
    \           Protocol Specification\", RFC 3208, December 2001.\n   [RFC3366] \
    \ Fairhurst, G. and L. Wood, \"Advice to link designers on\n              link\
    \ Automatic Repeat reQuest (ARQ)\", BCP 62, RFC 3366,\n              August 2002.\n\
    \   [RFC3426]  Floyd, S., \"General Architectural and Policy\n              Considerations\"\
    , RFC 3426, November 2002.\n   [RFC3439]  Bush, R. and D. Meyer, \"Some Internet\
    \ Architectural\n              Guidelines and Philosophy\", RFC 3439, December\
    \ 2002.\n   [RFC3448]  Handley, M., Floyd, S., Padhye, J., and J. Widmer, \"TCP\n\
    \              Friendly Rate Control (TFRC): Protocol Specification\",\n     \
    \         RFC 3448, January 2003.\n   [RFC3449]  Balakrishnan, H., Padmanabhan,\
    \ V., Fairhurst, G., and M.\n              Sooriyabandara, \"TCP Performance Implications\
    \ of Network\n              Path Asymmetry\", BCP 69, RFC 3449, December 2002.\n\
    \   [RFC3450]  Luby, M., Gemmell, J., Vicisano, L., Rizzo, L., and J.\n      \
    \        Crowcroft, \"Asynchronous Layered Coding (ALC) Protocol\n           \
    \   Instantiation\", RFC 3450, December 2002.\n   [RFC3481]  Inamura, H., Montenegro,\
    \ G., Ludwig, R., Gurtov, A., and\n              F. Khafizov, \"TCP over Second\
    \ (2.5G) and Third (3G)\n              Generation Wireless Networks\", BCP 71,\
    \ RFC 3481,\n              February 2003.\n   [RFC3540]  Spring, N., Wetherall,\
    \ D., and D. Ely, \"Robust Explicit\n              Congestion Notification (ECN)\
    \ Signaling with Nonces\",\n              RFC 3540, June 2003.\n   [RFC3550] \
    \ Schulzrinne, H., Casner, S., Frederick, R., and V.\n              Jacobson,\
    \ \"RTP: A Transport Protocol for Real-Time\n              Applications\", STD\
    \ 64, RFC 3550, July 2003.\n   [RFC3649]  Floyd, S., \"HighSpeed TCP for Large\
    \ Congestion Windows\",\n              RFC 3649, December 2003.\n   [RFC3714]\
    \  Floyd, S. and J. Kempf, \"IAB Concerns Regarding Congestion\n             \
    \ Control for Voice Traffic in the Internet\", RFC 3714,\n              March\
    \ 2004.\n   [RFC3738]  Luby, M. and V. Goyal, \"Wave and Equation Based Rate\n\
    \              Control (WEBRC) Building Block\", RFC 3738, April 2004.\n   [RFC3742]\
    \  Floyd, S., \"Limited Slow-Start for TCP with Large\n              Congestion\
    \ Windows\", RFC 3742, March 2004.\n   [RFC3819]  Karn, P., Bormann, C., Fairhurst,\
    \ G., Grossman, D.,\n              Ludwig, R., Mahdavi, J., Montenegro, G., Touch,\
    \ J., and L.\n              Wood, \"Advice for Internet Subnetwork Designers\"\
    , BCP 89,\n              RFC 3819, July 2004.\n   [RFC4336]  Floyd, S., Handley,\
    \ M., and E. Kohler, \"Problem Statement\n              for the Datagram Congestion\
    \ Control Protocol (DCCP)\",\n              RFC 4336, March 2006.\n   [RFC4340]\
    \  Kohler, E., Handley, M., and S. Floyd, \"Datagram\n              Congestion\
    \ Control Protocol (DCCP)\", RFC 4340, March 2006.\n   [RFC4341]  Floyd, S. and\
    \ E. Kohler, \"Profile for Datagram Congestion\n              Control Protocol\
    \ (DCCP) Congestion Control ID 2: TCP-like\n              Congestion Control\"\
    , RFC 4341, March 2006.\n   [RFC4342]  Floyd, S., Kohler, E., and J. Padhye, \"\
    Profile for\n              Datagram Congestion Control Protocol (DCCP) Congestion\n\
    \              Control ID 3: TCP-Friendly Rate Control (TFRC)\", RFC 4342,\n \
    \             March 2006.\n   [RFC4585]  Ott, J., Wenger, S., Sato, N., Burmeister,\
    \ C., and J. Rey,\n              \"Extended RTP Profile for Real-time Transport\
    \ Control\n              Protocol (RTCP)-Based Feedback (RTP/AVPF)\", RFC 4585,\n\
    \              July 2006.\n   [RFC4614]  Duke, M., Braden, R., Eddy, W., and E.\
    \ Blanton, \"A Roadmap\n              for Transmission Control Protocol (TCP)\
    \ Specification\n              Documents\", RFC 4614, September 2006.\n   [RFC4654]\
    \  Widmer, J. and M. Handley, \"TCP-Friendly Multicast\n              Congestion\
    \ Control (TFMCC): Protocol Specification\",\n              RFC 4654, August 2006.\n\
    \   [RFC4782]  Floyd, S., Allman, M., Jain, A., and P. Sarolahti, \"Quick-\n \
    \             Start for TCP and IP\", RFC 4782, January 2007.\n   [RFC4960] Stewart,\
    \ R., Ed., \"Stream Control Transmission Protocol\",\n              RFC 4960,\
    \ September 2007.\n   [RFC5033]  Floyd, S. and M. Allman, \"Specifying New Congestion\n\
    \              Control Algorithms\", BCP 133, RFC 5033, August 2007.\n   [RFC5166]\
    \  Floyd, S., \"Metrics for the Evaluation of Congestion\n              Control\
    \ Mechanisms\", RFC 5166, March 2008.\n   [RFC5348]  Floyd, S., Handley, M., Padhye,\
    \ J., and J. Widmer, \"TCP\n              Friendly Rate Control (TFRC): Protocol\
    \ Specification\",\n              RFC 5348, September 2008.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Michael Welzl\n   University of Oslo\n   Department of\
    \ Informatics\n   PO Box 1080 Blindern\n   N-0316 Oslo, Norway\n   Phone: +47\
    \ 22 85 24 20\n   EMail: michawe@ifi.uio.no\n   Wesley M. Eddy\n   MTI Systems\n\
    \   NASA Glenn Research Center\n   21000 Brookpark Rd, MS 500-ASRC\n   Cleveland,\
    \ OH  44135\n   Phone: (216) 433-6682\n   EMail: wes@mti-systems.com\n"
