- title: __initial_text__
  contents:
  - '                      Renumbering Still Needs Work

    '
- title: Abstract
  contents:
  - "Abstract\n   This document reviews the existing mechanisms for site renumbering\n\
    \   for both IPv4 and IPv6, and it identifies operational issues with\n   those\
    \ mechanisms.  It also summarises current technical proposals for\n   additional\
    \ mechanisms.  Finally, there is a gap analysis identifying\n   possible areas\
    \ for future work.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n   published for informational purposes.\n   This document is a product\
    \ of the Internet Engineering Task Force\n   (IETF).  It represents the consensus\
    \ of the IETF community.  It has\n   received public review and has been approved\
    \ for publication by the\n   Internet Engineering Steering Group (IESG).  Not\
    \ all documents\n   approved by the IESG are a candidate for any level of Internet\n\
    \   Standard; see Section 2 of RFC 5741.\n   Information about the current status\
    \ of this document, any errata,\n   and how to provide feedback on it may be obtained\
    \ at\n   http://www.rfc-editor.org/info/rfc5887.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2010 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................3\n\
    \   2. Existing Host-Related Mechanisms ................................5\n  \
    \    2.1. DHCP .......................................................5\n    \
    \  2.2. IPv6 Stateless Address Autoconfiguration ...................6\n      2.3.\
    \ IPv6 ND Router/Prefix Advertisements .......................7\n      2.4. PPP\
    \ ........................................................7\n      2.5. DNS Configuration\
    \ ..........................................8\n      2.6. Dynamic Service Discovery\
    \ ..................................9\n   3. Existing Router-Related Mechanisms\
    \ ..............................9\n      3.1. Router Renumbering .........................................9\n\
    \   4. Existing Multi-Addressing Mechanism for IPv6 ...................10\n  \
    \ 5. Operational Issues with Renumbering Today ......................11\n    \
    \  5.1. Host-Related Issues .......................................11\n      \
    \     5.1.1. Network-Layer Issues ...............................11\n        \
    \   5.1.2. Transport-Layer Issues .............................13\n          \
    \ 5.1.3. DNS Issues .........................................14\n           5.1.4.\
    \ Application-Layer Issues ...........................14\n      5.2. Router-Related\
    \ Issues .....................................16\n      5.3. Other Issues ..............................................17\n\
    \           5.3.1. NAT State Issues ...................................17\n  \
    \         5.3.2. Mobility Issues ....................................18\n    \
    \       5.3.3. Multicast Issues ...................................18\n      \
    \     5.3.4. Management Issues ..................................19\n        \
    \   5.3.5. Security Issues ....................................21\n   6. Proposed\
    \ Mechanisms ............................................22\n      6.1. SHIM6\
    \ .....................................................22\n      6.2. MANET Proposals\
    \ ...........................................22\n      6.3. Other IETF Work ...........................................23\n\
    \      6.4. Other Proposals ...........................................23\n  \
    \ 7. Gaps ...........................................................24\n    \
    \  7.1. Host-Related Gaps .........................................24\n      7.2.\
    \ Router-Related Gaps .......................................25\n      7.3. Operational\
    \ Gaps ..........................................25\n      7.4. Other Gaps ................................................26\n\
    \   8. Security Considerations ........................................26\n  \
    \ 9. Acknowledgements ...............................................27\n   10.\
    \ Informative References ........................................27\n   Appendix\
    \ A.  Embedded IP Addresses ................................34\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   In early 1996, the IAB published a short RFC entitled \"\
    Renumbering\n   Needs Work\" [RFC1900], which the reader is urged to review before\n\
    \   continuing.  Almost ten years later, the IETF published \"Procedures\n   for\
    \ Renumbering an IPv6 Network without a Flag Day\" [RFC4192].  A few\n   other\
    \ RFCs have touched on router or host renumbering: [RFC1916],\n   [RFC2071], [RFC2072],\
    \ [RFC2874], [RFC2894], and [RFC4076].\n   In fact, since 1996, a number of individual\
    \ mechanisms have become\n   available to simplify some aspects of renumbering.\
    \  The Dynamic Host\n   Configuration Protocol (DHCP) is available for IPv4 [RFC2131]\
    \ and\n   IPv6 [RFC3315].  IPv6 includes Stateless Address Autoconfiguration\n\
    \   (SLAAC) [RFC4862], and this includes Router Advertisements (RAs) that\n  \
    \ include options listing the set of active prefixes on a link.  The\n   Point-to-Point\
    \ Protocol (PPP) [RFC1661] also allows for automated\n   address assignment for\
    \ both versions of IP.\n   Despite these efforts, renumbering, especially for\
    \ medium to large\n   sites and networks, is widely viewed as an expensive, painful,\
    \ and\n   error-prone process, and is therefore avoided by network managers as\n\
    \   much as possible.  Some would argue that the very design of IP\n   addressing\
    \ and routing makes automatic renumbering intrinsically\n   impossible.  In fact,\
    \ managers have an economic incentive to avoid\n   having to renumber, and many\
    \ have resorted to private addressing and\n   Network Address Translation (NAT)\
    \ as a result.  This has the highly\n   unfortunate consequence that any mechanisms\
    \ for managing the scaling\n   problems of wide-area (BGP4) routing that require\
    \ occasional or\n   frequent site renumbering have been consistently dismissed\
    \ as\n   unacceptable.  But none of this means that we can duck the problem,\n\
    \   because as explained below, renumbering is sometimes unavoidable.\n   This\
    \ document aims to explore the issues behind this problem\n   statement, especially\
    \ with a view to identifying the gaps and known\n   operational issues.\n   It\
    \ is worth noting that for a very large class of users, renumbering\n   is not\
    \ in fact a problem of any significance.  A domestic or small\n   office user\
    \ whose device operates purely as a client or peer-to-peer\n   node is in practice\
    \ renumbered at every restart (even if the address\n   assigned is often the same).\
    \  A user who roams widely with a laptop\n   or pocket device is also renumbered\
    \ frequently.  Such users are not\n   concerned with the survival of very long-term\
    \ application sessions\n   and are in practice indifferent to renumbering.  Thus,\
    \ this document\n   is mainly concerned with issues affecting medium to large\
    \ sites.\n   There are numerous reasons why such sites might need to renumber\
    \ in a\n   planned fashion, including:\n   o  Change of service provider, or addition\
    \ of a new service provider,\n      when provider-independent addressing is not\
    \ an option.\n   o  A service provider itself has to renumber.\n   o  Change of\
    \ site topology (i.e., subnet reorganisation).\n   o  Merger of two site networks\
    \ into one, or split of one network into\n      two or more parts.\n   o  During\
    \ IPv6 deployment, change of IPv6 access method (e.g., from\n      tunneled to\
    \ native).\n   The most demanding case would be unplanned automatic renumbering,\n\
    \   presumably initiated by a site border router, for reasons connected\n   with\
    \ wide-area routing.  There is already a degree of automatic\n   renumbering for\
    \ some hosts, e.g., IPv6 \"privacy\" addresses [RFC4941].\n   It is certainly\
    \ to be expected that as the pressure on IPv4 address\n   space intensifies in\
    \ the next few years, there will be many attempts\n   to consolidate usage of\
    \ addresses so as to avoid wastage, as part of\n   the \"end game\" for IPv4,\
    \ which necessarily requires renumbering of\n   the sites involved.  However,\
    \ strategically, it is more important to\n   implement and deploy techniques for\
    \ IPv6 renumbering, so that as IPv6\n   becomes universally deployed, renumbering\
    \ becomes viewed as a\n   relatively routine event.  In particular, some mechanisms\
    \ being\n   considered to allow indefinite scaling of the wide-area routing\n\
    \   system might assume site renumbering to be a straightforward matter.\n   There\
    \ is work in progress that, if successful, would eliminate some\n   of the motivations\
    \ for renumbering.  In particular, some types of\n   solutions to the problem\
    \ of scalable routing for multihomed sites\n   would likely eliminate both multihoming\
    \ and switching to another ISP\n   as reasons for site renumbering.\n   Several\
    \ proposed identifier/locator split schemes provide good\n   examples, including\
    \ at least Identifier Locator Network Protocol\n   [ILNP], Locator/ID Separation\
    \ Protocol [LISP], and Six/One [SIX-ONE]\n   (in alphabetical order).  The recent\
    \ discussion about IPv6 Network\n   Address Translation (IPv6 NAT) provides a\
    \ separate example [NAT66].\n   While remaining highly contentious, this approach,\
    \ coupled with\n   unique local addresses or a provider-independent address prefix,\n\
    \   would appear to eliminate some reasons for renumbering in IPv6.\n   However,\
    \ even if successful, such solutions will not eliminate all of\n   the reasons\
    \ for renumbering.  This document does not take any\n   position about development\
    \ or deployment of protocols or technologies\n   that would make long-term renumbering\
    \ unnecessary, but rather deals\n   with practical cases where partial or complete\
    \ renumbering is\n   necessary in today's Internet.\n   IP addresses do not have\
    \ a built-in lifetime.  Even when an address\n   is leased for a finite time by\
    \ DHCP or SLAAC, or when it is derived\n   from a DNS record with a finite time\
    \ to live (TTL) value, this\n   information is unavailable to applications once\
    \ the address has been\n   passed to an upper layer by the socket interface. \
    \ Thus, a\n   renumbering event is almost certain to be an unpredictable surprise\n\
    \   from the point of view of any application software using the address.\n  \
    \ Many of the issues listed below derive from this fact.\n"
- title: 2.  Existing Host-Related Mechanisms
  contents:
  - '2.  Existing Host-Related Mechanisms

    '
- title: 2.1.  DHCP
  contents:
  - "2.1.  DHCP\n   At a high level, DHCP [RFC2131] [RFC3315] offers similar support\
    \ for\n   renumbering for both versions of IP.  A host requests an address when\n\
    \   it starts up, the request might be delivered to a local DHCP server\n   or\
    \ via a relay to a central server, and if all local policy\n   requirements are\
    \ met, the server will provide an address with an\n   associated lifetime, and\
    \ various other network-layer parameters (in\n   particular, the subnet mask and\
    \ the default router address).\n   From an operational viewpoint, the interesting\
    \ aspect is the local\n   policy.  Some sites require pre-registration of MAC\
    \ (Media Access\n   Control) addresses as a security measure, while other sites\
    \ permit\n   any MAC address to obtain an IP address.  Similarly, some sites use\n\
    \   DHCP to provide the same IP address to a given MAC address each time\n   (this\
    \ is sometimes called \"Static DHCP\"), while other sites do not\n   (this is\
    \ sometimes called \"Dynamic DHCP\"), and yet other sites use a\n   combination\
    \ of these two modes where some devices (e.g., servers,\n   Voice over IP (VoIP)\
    \ handsets) have a relatively static IP address\n   that is provisioned via DHCP\
    \ while other devices (e.g., portable\n   computers) have a different IP address\
    \ each time they connect to the\n   network.  As an example, many universities\
    \ in the United States and\n   United Kingdom require MAC address registration\
    \ of faculty, staff,\n   and student devices (including handheld computers with\
    \ wireless\n   connections).\n   These policy choices interact strongly with whether\
    \ the site has what\n   might be called \"strong\" or \"weak\" asset management.\
    \  At the strong\n   extreme, a site has a complete database of all equipment\
    \ allowed to\n   be connected, certainly containing the MAC address(es) for each\
    \ host,\n   as well as other administrative information of various kinds.  Such\
    \ a\n   database can be used to generate configuration files for DHCP, DNS,\n\
    \   and any access control mechanisms that might be in use.  For example,\n  \
    \ only certain MAC addresses might be allowed to get an IP address on\n   certain\
    \ subnets.  At the weak extreme, a site has no asset\n   management, any MAC address\
    \ may get a first-come first-served IP\n   address on any subnet, and there is\
    \ no network-layer access control.\n   The IEEE 802.1X standard [IEEE.802-1X]\
    \ [IEEE.802-1X-REV] specifies a\n   connection mechanism for wired/wireless Ethernet\
    \ that is often\n   combined with DHCP and other mechanisms to form, in effect,\
    \ a network\n   login.  Using such a network login, the user of a device newly\n\
    \   connecting to the network must provide both identity and\n   authentication\
    \ before being granted access to the network.  As part\n   of this process, the\
    \ network control point will often configure the\n   point of network connection\
    \ for that specific user with a range of\n   parameters -- such as Virtual LAN\
    \ (VLAN), Access Control Lists\n   (ACLs), and Quality-of-Service (QoS) profiles.\
    \  Other forms of\n   network login also exist, often using an initial web page\
    \ for user\n   identification and authentication.  The latter approach is commonly\n\
    \   used in hotels or cafes.\n   In principle, a site that uses DHCP can renumber\
    \ its hosts by\n   reconfiguring DHCP for the new address range.  The issues with\
    \ this\n   are discussed below.\n"
- title: 2.2.  IPv6 Stateless Address Autoconfiguration
  contents:
  - "2.2.  IPv6 Stateless Address Autoconfiguration\n   SLAAC, although updated recently\
    \ [RFC4862], was designed prior to\n   DHCPv6 and was intended for networks where\
    \ unattended automatic\n   configuration was preferred.  Ignoring the case of\
    \ an isolated\n   network with no router, which will use link-local addresses\n\
    \   indefinitely, SLAAC follows a bootstrap process.  Each host first\n   gives\
    \ itself a link-local address, and then needs to receive a link-\n   local multicast\
    \ Router Advertisement (RA) [RFC4861] that tells it the\n   routeable subnet prefix\
    \ and the address(es) of the default router(s).\n   A node may either wait for\
    \ the next regular RA or solicit one by\n   sending a link-local multicast Router\
    \ Solicitation.  Knowing the link\n   prefix from the RA, the node may now configure\
    \ its own address.\n   There are various methods for this, of which the basic\
    \ one is to\n   construct a unique 64-bit identifier from the interface's MAC\n\
    \   address.\n   We will not describe here the IPv6 processes for Duplicate Address\n\
    \   Detection (DAD), Neighbour Discovery (ND), and Neighbour\n   Unreachability\
    \ Discovery (NUD).  Suffice it to say that they work,\n   once the initial address\
    \ assignment based on the RA has taken place.\n   The contents of the RA message\
    \ are clearly critical to this process\n   and its use during renumbering.  An\
    \ RA can indicate more than one\n   prefix, and more than one router can send\
    \ RAs on the same link.  For\n   each prefix, the RA indicates two lifetimes:\
    \ \"preferred\" and \"valid\".\n   Addresses derived from this prefix must inherit\
    \ its lifetimes.  When\n   the valid lifetime expires, the prefix is dead and\
    \ the derived\n   address must not be used any more.  When the preferred lifetime\
    \ is\n   expired (or set to zero) the prefix is deprecated, and must not be\n\
    \   used for any new sessions.  Thus, setting a preferred lifetime that\n   is\
    \ zero or finite is SLAAC's warning that renumbering will occur.\n   SLAAC assumes\
    \ that the new prefix will be advertised in parallel with\n   the deprecated one,\
    \ so that new sessions will use addresses\n   configured under the new prefix.\n"
- title: 2.3.  IPv6 ND Router/Prefix Advertisements
  contents:
  - "2.3.  IPv6 ND Router/Prefix Advertisements\n   With IPv6, a Router Advertisement\
    \ not only advertises the\n   availability of an upstream router, but also advertises\
    \ routing\n   prefix(es) valid on that link (subnetwork).  Also, the IPv6 RA\n\
    \   message contains a flag indicating whether or not the host should use\n  \
    \ DHCPv6 to configure.  If that flag indicates that the host should use\n   DHCPv6,\
    \ then the host is not supposed to autoconfigure itself as\n   outlined in Section\
    \ 2.2.  However, there are some issues in this\n   area, described in Section\
    \ 5.1.1.\n   In an environment where a site has more than one upstream link to\
    \ the\n   outside world, the site might have more than one valid routing\n   prefix.\
    \  In such cases, typically all valid routing prefixes within a\n   site will\
    \ have the same prefix length.  Also, in such cases, it might\n   be desirable\
    \ for hosts that obtain their addresses using DHCPv6 to\n   learn about the availability\
    \ of upstream links dynamically, by\n   deducing from periodic IPv6 RA messages\
    \ which routing prefixes are\n   currently valid.  This application seems possible\
    \ within the IPv6\n   Neighbour Discovery architecture, but does not appear to\
    \ be clearly\n   specified anywhere.  So, at present, this approach for hosts\
    \ to learn\n   about availability of new upstream links or loss of prior upstream\n\
    \   links is unlikely to work with currently shipping hosts or routers.\n"
- title: 2.4.  PPP
  contents:
  - "2.4.  PPP\n   \"The Point-to-Point Protocol (PPP)\" [RFC1661] includes support\
    \ for a\n   Network Control Protocol (NCP) for both IPv4 and IPv6.\n   For IPv4,\
    \ the NCP is known as IPCP [RFC1332] and allows explicit\n   negotiation of an\
    \ IP address for each end.  PPP endpoints acquire\n   (during IPCP negotiation)\
    \ both their own address and the address of\n   their peer, which may be assumed\
    \ to be the default router if no\n   routing protocol is operating.  Renumbering\
    \ events arise when IPCP\n   negotiation is restarted on an existing link, when\
    \ the PPP connection\n   is terminated and restarted, or when the point-to-point\
    \ medium is\n   reconnected.  Peers may propose either the local or remote address\
    \ or\n   require the other peer to do so.  Negotiation is complete when both\n\
    \   peers are in agreement.  In practice, if no routing protocol is used,\n  \
    \ as in a subscriber/provider environment, then the provider proposes\n   both\
    \ addresses and requires the subscriber either to accept the\n   connection or\
    \ to abort.  Effectively, the subscriber device is\n   renumbered each time it\
    \ connects for a new session.\n   For IPv6, the NCP is IP6CP [RFC5072] and is\
    \ used to configure an\n   interface identifier for each end, after which link-local\
    \ addresses\n   may be created in the normal way.  In practice, each side can\
    \ propose\n   its own identifier and renegotiation is only necessary when there\
    \ is\n   a collision, or when a provider wishes to force a subscriber to use a\n\
    \   specific interface identifier.  Once link-local addresses are\n   assigned\
    \ and IP6CP is complete, automatic assignment of global scope\n   addresses is\
    \ performed by the same methods as with multipoint links,\n   i.e., either SLAAC\
    \ or DHCPv6.  Again, in a subscriber/provider\n   environment, this allows renumbering\
    \ per PPP session.\n"
- title: 2.5.  DNS Configuration
  contents:
  - "2.5.  DNS Configuration\n   A site must provide DNS records for some or all of\
    \ its hosts, and of\n   course these DNS records must be updated when hosts are\
    \ renumbered.\n   Most sites will achieve this by maintaining a DNS zone file\
    \ (or a\n   database from which it can be generated) and loading this file into\n\
    \   the site's DNS server(s) whenever it is updated.  As a renumbering\n   tool,\
    \ this is clumsy but effective.  Clearly perfect synchronisation\n   between the\
    \ renumbering of the host and the updating of its A or AAAA\n   record is impossible.\
    \  An alternative is to use Secure Dynamic DNS\n   Update [RFC3007], in which\
    \ a host informs its own DNS server when it\n   receives a new address.\n   There\
    \ are widespread reports that the freely available BIND DNS\n   software (which\
    \ is what most UNIX hosts use), Microsoft Windows (XP\n   and later), and Mac\
    \ OS X all include support for Secure Dynamic DNS\n   Update.  So do many home\
    \ gateways.  Further, there are credible\n   reports that these implementations\
    \ are interoperable when configured\n   properly ([DNSBOOK] p. 228 and p. 506).\n\
    \   Commonly used commercial DNS and DHCP servers (e.g., Windows Server)\n   often\
    \ are deployed with Secure Dynamic DNS Update also enabled.  In\n   some cases,\
    \ merely enabling both the DNS server and the DHCP server\n   might enable Secure\
    \ Dynamic DNS Update as an automatic side effect\n   ([DNSBOOK] p. 506).  So in\
    \ some cases, sites might have deployed\n   Secure Dynamic DNS Update already,\
    \ without realising it.  An\n   additional enhancement would be for DHCP clients\
    \ to implement support\n   for the \"Client FQDN\" option (Option 81).\n   Since\
    \ address changes are usually communicated to other sites via the\n   DNS, the\
    \ latter's security is essential for secure renumbering.  The\n   Internet security\
    \ community believes that the current DNS Security\n   (DNSsec) and Secure Dynamic\
    \ DNS Update specifications are\n   sufficiently secure and has been encouraging\
    \ DNSsec deployment\n   ([RFC3007] [RFC4033] [RFC4034] [RFC4035]).\n   As of this\
    \ writing, there appears to be significantly more momentum\n   towards rapid deployment\
    \ of DNS Security standards in the global\n   public Internet than previously.\
    \  Several country-code Top-Level\n   Domains (ccTLDs) have already deployed signed\
    \ TLD root zones (e.g.,\n   Sweden's .SE).  Several other TLDs are working to\
    \ deploy signed TLD\n   root zones by published near-term deadlines (e.g., .GOV,\
    \ .MIL).  In\n   fact, it is reported that .GOV has been signed operationally\
    \ since\n   early February 2009.  It appears likely that the DNS-wide root zone\n\
    \   will be signed in the very near future.  See, for example,\n   <http://www.dnssec-deployment.org/>\
    \ and\n   <http://www.ntia.doc.gov/DNS/DNSSEC.html>.\n"
- title: 2.6.  Dynamic Service Discovery
  contents:
  - "2.6.  Dynamic Service Discovery\n   The need for hosts to contain pre-configured\
    \ addresses for servers\n   can be reduced by deploying the Service Location Protocol\
    \ (SLP).  For\n   some common services, such as network printing, SLP can therefore\
    \ be\n   an important tool for facilitating site renumbering.  See [RFC2608],\n\
    \   [RFC2610], [RFC3059], [RFC3224], [RFC3421], and [RFC3832].\n   Multicast DNS\
    \ (mDNS) and DNS Service Discovery are already widely\n   deployed in BSD, Linux,\
    \ Mac OS X, UNIX, and Windows systems, and are\n   also widely used for both link-local\
    \ name resolution and for DNS-\n   based dynamic service discovery [MDNS] [DNSSD].\
    \  In many\n   environments, the combination of mDNS and DNS Service Discovery\n\
    \   (e.g., using SRV records [RFC3958]) can be important tools for\n   reducing\
    \ dependency on configured addresses.\n"
- title: 3.  Existing Router-Related Mechanisms
  contents:
  - '3.  Existing Router-Related Mechanisms

    '
- title: 3.1.  Router Renumbering
  contents:
  - "3.1.  Router Renumbering\n   Although DHCP was originally conceived for host\
    \ configuration, it can\n   also be used for some aspects of router configuration.\
    \  The DHCPv6\n   Prefix Delegation options [RFC3633] are intended for this. \
    \ For\n   example, DHCPv6 can be used by an ISP to delegate or withdraw a\n  \
    \ prefix for a customer's router, and this can be cascaded throughout a\n   site\
    \ to achieve router renumbering.\n   An ICMPv6 extension to allow router renumbering\
    \ for IPv6 is specified\n   in [RFC2894], but there appears to be little experience\
    \ with it.  It\n   is not mentioned as a useful mechanism by [RFC4192].\n   [RFC4191]\
    \ extends IPv6 router advertisements to convey default router\n   preferences\
    \ and more-specific routes from routers to hosts.  This\n   could be used as an\
    \ additional tool to convey information during\n   renumbering, but does not appear\
    \ to be used in practice.\n   [CPE] requires that a customer premises router use\
    \ DHCPv6 to obtain\n   an address prefix from its upstream ISP and use IPv6 RA\
    \ messages to\n   establish a default IPv6 route (when IPv6 is in use).\n"
- title: 4.  Existing Multi-Addressing Mechanism for IPv6
  contents:
  - "4.  Existing Multi-Addressing Mechanism for IPv6\n   IPv6 was designed to support\
    \ multiple addresses per interface and\n   multiple prefixes per subnet.  As described\
    \ in [RFC4192], this allows\n   for a phased approach to renumbering (adding the\
    \ new prefix and\n   addresses before removing the old ones).\n   As an additional\
    \ result of the multi-addressing mechanism, a site\n   might choose to use Unique\
    \ Local Addressing (ULA) [RFC4193] for all\n   on-site communication, or at least\
    \ for all communication with on-site\n   servers, while using globally routeable\
    \ IPv6 addresses for all off-\n   site communications.  It would also be possible\
    \ to use ULAs for all\n   on-site network management purposes, by assigning ULAs\
    \ to all\n   devices.  This would make these on-site activities immune to\n  \
    \ renumbering of the prefix(es) used for off-site communication.\n   Finally,\
    \ ULAs can be safely shared with peer sites with which there\n   is a VPN connection,\
    \ which cannot be done with ambiguous IPv4\n   addresses [RFC1918]; such VPNs\
    \ would not be affected by renumbering.\n   The IPv6 model also includes \"privacy\"\
    \ addresses that are constructed\n   with pseudo-random interface identifiers\
    \ to conceal actual MAC\n   addresses [RFC4941].  This means that IPv6 stacks\
    \ and client\n   applications already need to be agile enough to handle frequent\
    \ IP\n   address changes (e.g., in the privacy address), since in a privacy-\n\
    \   sensitive environment the address lifetime likely will be rather\n   short.\n"
- title: 5.  Operational Issues with Renumbering Today
  contents:
  - "5.  Operational Issues with Renumbering Today\n   For IPv6, a useful description\
    \ of practical aspects was drafted in\n   [THINK], as a complement to [RFC4192].\
    \  As indicated there, a primary\n   requirement is to minimise the disruption\
    \ caused by renumbering.\n   This applies at two levels: disruption to site operations\
    \ in general\n   and disruption to individual application sessions in progress\
    \ at the\n   moment of renumbering.  In the IPv6 case, the intrinsic ability to\n\
    \   overlap use of the old and new prefixes greatly mitigates disruption\n   to\
    \ ongoing sessions, as explained in [RFC4192].  This approach is in\n   practice\
    \ excluded for IPv4, largely because IPv4 lacks a Stateless\n   Address Autoconfiguration\
    \ (SLAAC) mechanism.\n"
- title: 5.1.  Host-Related Issues
  contents:
  - '5.1.  Host-Related Issues

    '
- title: 5.1.1.  Network-Layer Issues
  contents:
  - "5.1.1.  Network-Layer Issues\n   For IPv4, the vast majority of client systems\
    \ (PCs, workstations, and\n   handheld computers) today use DHCP to obtain their\
    \ addresses and\n   other network-layer parameters.  DHCP provides for lifetimes\
    \ after\n   which the address lease expires.  So it should be possible to devise\n\
    \   an operational procedure in which lease expiry coincides with the\n   moment\
    \ of renumbering (within some margin of error).  In the simplest\n   case, the\
    \ network administrator just lowers all DHCP address lease\n   lifetimes to a\
    \ very short value (e.g., a few minutes).  It does this\n   long enough before\
    \ a site-wide change that each node will\n   automatically pick up its new IP\
    \ address within a few minutes of the\n   renumbering event.  In this case, it\
    \ would be the DHCP server itself\n   that automatically accomplishes client renumbering,\
    \ although this\n   would cause a peak of DHCP traffic and therefore would not\
    \ be\n   instantaneous.  DHCPv6 could accomplish a similar result.\n   The FORCERENEW\
    \ extension is defined for DHCP for IPv4 [RFC3203].\n   This is specifically unicast-only;\
    \ a DHCP client must discard a\n   multicast FORCERENEW.  This could nevertheless\
    \ be used to trigger the\n   renumbering process, with the DHCP server cycling\
    \ through all its\n   clients issuing a FORCERENEW to each one.  DHCPv6 has a\
    \ similar\n   feature, i.e., a unicast RECONFIGURE message, that can be sent to\n\
    \   each host to inform it to check its DHCPv6 server for an update.\n   These\
    \ two features do not appear to be widely used for bulk\n   renumbering purposes.\n\
    \   Procedures for using a DHCP approach to site renumbering will be very\n  \
    \ different depending on whether the site uses strong or weak asset\n   management.\
    \  With strong asset management, and careful operational\n   planning, the subnet\
    \ addresses and masks will be updated in the\n   database, and a script will be\
    \ run to regenerate the DHCP MAC-to-IP\n   address tables and the DNS zone file.\
    \  DHCP and DNS timers will be\n   set temporarily to small values.  The DHCP\
    \ and DNS servers will be\n   fed the new files, and as soon as the previous DHCP\
    \ leases and DNS\n   TTLs expire, everything will follow automatically, as far\
    \ as the host\n   IP layer is concerned.  In contrast, with weak asset management,\
    \ and\n   a casual operational approach, the DHCP table will be reconfigured by\n\
    \   hand, the DNS zone file will be edited by hand, and when these\n   configurations\
    \ are installed, there will be a period of confusion\n   until the old leases\
    \ and TTLs expire.  The DHCP FORCERENEW or\n   RECONFIGURE messages could shorten\
    \ this confusion to some extent.\n   DHCP, particularly for IPv4, has acquired\
    \ a very large number of\n   additional capabilities, with approximately 170 options\
    \ defined at\n   the time of this writing.  Although most of these do not carry\
    \ IP\n   address information, some do (for example, options 68 through 76 all\n\
    \   carry various IP addresses).  Thus, renumbering mechanisms involving\n   DHCP\
    \ have to take into account more than the basic DHCP job of\n   leasing an address\
    \ to each host.\n   SLAAC is much less overloaded with options than DHCP; in fact,\
    \ its\n   only extraneous capability is the ability to convey a DNS server\n \
    \  address.  Using SLAAC to force all hosts on a site to renumber is\n   therefore\
    \ less complex than DHCP, and the difference between strong\n   and weak asset\
    \ management is less marked.  The principle of\n   synchronising the SLAAC and\
    \ DNS updates, and of reducing the SLAAC\n   lease time and DNS TTL, does not\
    \ change.\n   We should note a currently unresolved ambiguity in the interaction\n\
    \   between DHCPv6 and SLAAC from the host's point of view.  RA messages\n   include\
    \ a 'Managed Configuration' flag known as the M bit, which is\n   supposed to\
    \ indicate that DHCPv6 is in use.  However, it is\n   unspecified whether hosts\
    \ must interpret this flag rigidly (i.e., may\n   or must only start DHCPv6 if\
    \ it is set, or if no RAs are received) or\n   whether hosts are allowed or are\
    \ recommended to start DHCPv6 by\n   default.  An added complexity is that DHCPv6\
    \ has a 'stateless' mode\n   [RFC3736] in which SLAAC is used to obtain an address,\
    \ but DHCPv6 is\n   used to obtain other parameters.  Another flag in RA messages,\
    \ the\n   'Other configuration' or O bit, indicates this.\n   Until this ambiguous\
    \ behaviour is clearly resolved by the IETF,\n   operational problems are to be\
    \ expected, since different host\n   operating systems have taken different approaches.\
    \  This makes it\n   difficult for a site network manager to configure systems\
    \ in such a\n   way that all hosts boot in a consistent way.  Hosts will start\
    \ SLAAC,\n   if so directed by appropriately configured RA messages.  However,\
    \ if\n   one operating system also starts a DHCPv6 client by default, and\n  \
    \ another one starts it only when it receives the M bit, systematic\n   address\
    \ management is impeded.\n   Also, it should be noted that on an isolated LAN,\
    \ neither RA nor\n   DHCPv6 responses will be received, and the host will remain\
    \ with only\n   its self-assigned link-local address.  One could also have a\n\
    \   situation where a multihomed network uses SLAAC for one address\n   prefix\
    \ and DHCPv6 for another, which would clearly create a risk of\n   inconsistent\
    \ host behaviour and operational confusion.\n   Neither the SLAAC approach nor\
    \ DHCP without pre-registered MAC\n   addresses will work reliably in all cases\
    \ of systems that are\n   assigned fixed IP addresses for practical reasons. \
    \ Of course, even\n   systems with static addressing can be configured to use\
    \ DHCP to\n   obtain their IP address(es).  Such use of \"Static DHCP\" usually\
    \ will\n   ease site renumbering when it does become necessary.  However, in\n\
    \   other cases, manual or script-driven procedures, likely to be site-\n   specific\
    \ and definitely prone to human error, are needed.  If a site\n   has even one\
    \ host with a fixed, manually configured address,\n   completely automatic host\
    \ renumbering is very likely to be\n   impossible.\n   The above assumes the use\
    \ of typical off-the-shelf hardware and\n   software.  There are other environments,\
    \ often referred to as\n   embedded systems, where DHCP or SLAAC might not be\
    \ used and even\n   configuration scripts might not be an option; for example,\
    \ fixed IP\n   addresses might be stored in read-only memory, or even set up using\n\
    \   Dual In-Line Package (DIP) switches.  Such systems create special\n   problems\
    \ that no general-purpose solution is likely to address.\n"
- title: 5.1.2.  Transport-Layer Issues
  contents:
  - "5.1.2.  Transport-Layer Issues\n   TCP connections and UDP flows are rigidly\
    \ bound to a given pair of IP\n   addresses.  These are included in the checksum\
    \ calculation, and there\n   is no provision at present for the endpoint IP addresses\
    \ to change.\n   It is therefore fundamentally impossible for the flows to survive\
    \ a\n   renumbering event at either end.  From an operational viewpoint, this\n\
    \   means that a site that plans to renumber itself is obliged either to\n   follow\
    \ the overlapped procedure described in [RFC4192] or to announce\n   a site-wide\
    \ outage for the renumbering process, during which all user\n   sessions will\
    \ fail.  In the case of IPv4, overlapping of the old and\n   new addresses is\
    \ unlikely to be an option, and in any case is not\n   commonly supported by software.\
    \  Therefore, absent enhancements to\n   TCP and UDP to enable dynamic endpoint\
    \ address changes (for example,\n   [HANDLEY]), interruptions to TCP and UDP sessions\
    \ seem inevitable if\n   renumbering occurs at either session endpoint.  The same\
    \ appears to\n   be true of Datagram Congestion Control Protocol (DCCP) [RFC4340].\n\
    \   In contrast, Stream Control Transmission Protocol (SCTP) already\n   supports\
    \ dynamic multihoming of session endpoints, so SCTP sessions\n   ought not be\
    \ adversely impacted by renumbering the SCTP session\n   endpoints [RFC4960] [RFC5061].\n"
- title: 5.1.3.  DNS Issues
  contents:
  - "5.1.3.  DNS Issues\n   The main issue is whether the site in question has a systematic\n\
    \   procedure for updating its DNS configuration.  If it does, updating\n   the\
    \ DNS for a renumbering event is essentially a clerical issue that\n   must be\
    \ coordinated as part of a complete plan, including both\n   forward and reverse\
    \ mapping.  As mentioned in [RFC4192], the DNS TTL\n   will be manipulated to\
    \ ensure that stale addresses are not cached.\n   However, if the site uses a\
    \ weak asset management model in which DNS\n   updates are made manually on demand,\
    \ there will be a substantial\n   period of confusion and errors will be made.\n\
    \   There are anecdotal reports that many small user sites do not even\n   maintain\
    \ their own DNS configuration, despite running their own web\n   and email servers.\
    \  They point to their ISP's resolver, request the\n   ISP to install DNS entries\
    \ for their servers, but operate internally\n   mainly by IP address.  Thus, renumbering\
    \ for such sites will require\n   administrative coordination between the site\
    \ and its ISP(s), unless\n   the DNS servers in use have Secure Dynamic DNS Update\
    \ enabled.  Some\n   commercial DNS service firms include Secure Dynamic DNS Update\
    \ as\n   part of their DNS service offering.\n   It should be noted that DNS entries\
    \ commonly have matching Reverse\n   DNS entries.  When a site renumbers, these\
    \ reverse entries will also\n   need to be updated.  Depending on a site's operational\
    \ arrangements\n   for DNS support, it might or might not be possible to combine\
    \ forward\n   and reverse DNS updates in a single procedure.\n"
- title: 5.1.4.  Application-Layer Issues
  contents:
  - "5.1.4.  Application-Layer Issues\n   Ideally, we would carry out a renumbering\
    \ analysis for each\n   application protocol.  To some extent, this has been done,\
    \ in\n   [RFC3795].  This found that 34 out of 257 Standards-Track or\n   Experimental\
    \ application-layer RFCs had explicit address\n   dependencies.  Although this\
    \ study was made in the context of IPv4 to\n   IPv6 transition, it is clear that\
    \ all these protocols might be\n   sensitive to renumbering.  However, the situation\
    \ is worse, in that\n   there is no way to discover by analyzing specifications\
    \ whether an\n   actual implementation is sensitive to renumbering.  Indeed, such\n\
    \   analysis might be quite impossible in the case of proprietary\n   applications.\n\
    \   The sensitivity depends on whether the implementation stores IP\n   addresses\
    \ in such a way that it might refer back to them later,\n   without allowing for\
    \ the fact that they might no longer be valid.  In\n   general, we can assert\
    \ that any implementation is at risk from\n   renumbering if it does not check\
    \ that an address is valid each time\n   it opens a new communications session.\
    \  This could be done, for\n   example, by knowing and respecting the relevant\
    \ DNS TTL, or by\n   resolving relevant Fully-Qualified Domain Names (FQDNs) again.\
    \  A\n   common experience is that even when FQDNs are stored in configuration\n\
    \   files, they are resolved only once, when the application starts, and\n   they\
    \ are cached indefinitely thereafter.  This is insufficient.  Of\n   course, this\
    \ does not apply to all application software; for example,\n   several well-known\
    \ web browsers have short default cache lifetimes.\n   There are even more egregious\
    \ breaches of this principle, for\n   example, software license systems that depend\
    \ on the licensed host\n   computer having a particular IP address.  Other examples\
    \ are the use\n   of literal IP addresses in URLs, HTTP cookies, or application\
    \ proxy\n   configurations.  (Also see Appendix A.)\n   In contrast, there are\
    \ also many application suites that actively\n   deal with connectivity failures\
    \ by retrying with alternative\n   addresses or by repeating DNS lookups.  This\
    \ places a considerable\n   burden of complexity on application developers.\n\
    \   It should be noted that applications are in effect encouraged to be\n   aware\
    \ of and to store IP addresses by the very nature of the socket\n   API calls\
    \ gethostbyname() and getaddrinfo().  It is highly\n   unfortunate that many applications\
    \ use APIs that require the\n   application to see and use lower-layer objects,\
    \ such as network-layer\n   addresses.  However, the BSD Sockets API was designed\
    \ and deployed\n   before the Domain Name System (DNS) was created, so there were\
    \ few\n   good options at the time.  This issue is made worse by the fact that\n\
    \   these functions do not return an address lifetime, so that\n   applications\
    \ have no way to know when an address is no longer valid.\n   The extension of\
    \ the same model to cover IPv6 has complicated this\n   problem somewhat.  An\
    \ application using the socket API is obliged to\n   contain explicit logic if\
    \ it wishes to benefit from the availability\n   of multiple addresses for a given\
    \ remote host.  If a programming\n   model were adopted in which only FQDNs were\
    \ exposed to applications,\n   and addresses were cached with appropriate lifetimes\
    \ within the API,\n   most of these problems would disappear.  It should be noted\
    \ that at\n   least the first part of this is already available for some\n   programming\
    \ environments.  A common example is Java, where only FQDNs\n   need to be handled\
    \ by application code in normal circumstances, and\n   no additional application\
    \ logic is needed to deal with multiple\n   addresses, which are handled by the\
    \ run-time system.  This is highly\n   beneficial for programmers who are not\
    \ networking experts, and\n   insulates applications software from many aspects\
    \ of renumbering.  It\n   would be helpful to have similarly abstract, DNS-oriented,\
    \ Networking\n   APIs openly specified and widely available for C and C++.\n \
    \  Some web browsers intentionally violate the DNS TTL with a technique\n   called\
    \ \"DNS Pinning.\"  DNS Pinning limits acceptance of server IP\n   address changes,\
    \ due to a JavaScript issue where repeated address\n   changes can be used to\
    \ induce a browser to scan the inside of a\n   firewalled network and report the\
    \ results to an outside attacker.\n   Pinning can persist as long as the browser\
    \ is running, in extreme\n   cases perhaps months at a time.  Thus, we can see\
    \ that security\n   considerations may directly damage the ability of applications\
    \ to\n   deal with renumbering.\n   Server applications might need to be restarted\
    \ when the host they\n   contain is renumbered, to ensure that they are listening\
    \ on a port\n   and socket bound to the new address.  In an IPv6 multi-addressed\n\
    \   host, server applications need to be able to listen on more than one\n   address\
    \ simultaneously, in order to cover an overlap during\n   renumbering.  Not all\
    \ server applications are written to do this, and\n   a name-based API as just\
    \ mentioned would have to provide for this\n   case invisibly to the server code.\n\
    \   As noted in Section 2.6, the Service Location Protocol (SLP), and\n   multicast\
    \ DNS with SRV records for service discovery, have been\n   available for some\
    \ years.  For example, many printers deployed in\n   recent years automatically\
    \ advertise themselves to potential clients\n   via SLP.  Many modern client operating\
    \ systems automatically\n   participate in SLP without requiring users to enable\
    \ it.  These tools\n   appear not to be widely known, although they can be used\
    \ to reduce\n   the number of places that IP addresses need to be configured.\n"
- title: 5.2.  Router-Related Issues
  contents:
  - "5.2.  Router-Related Issues\n   [RFC2072] gives a detailed review of the operational\
    \ realities in\n   1997.  A number of the issues discussed in that document were\
    \ the\n   result of the relatively recent adoption of classless addressing;\n\
    \   those issues can be assumed to have vanished by now.  Also, DHCP was\n   a\
    \ relative newcomer at that time, and can now be assumed to be\n   generally available.\
    \  Above all, the document underlines that\n   systematic planning and administrative\
    \ preparation are needed, and\n   that all forms of configuration file and script\
    \ must be reviewed and\n   updated.  Clearly this includes filtering and routing\
    \ rules (e.g.,\n   when peering with BGP, but also with intradomain routing as\
    \ well).\n   Two particular issues mentioned in [RFC2072] are:\n   o  Some routers\
    \ cache IP addresses in some situations.  So routers\n      might need to be restarted\
    \ as a result of site renumbering.\n   o  Addresses might be used by configured\
    \ tunnels, including VPN\n      tunnels, although at least the Internet Key Exchange\
    \ (IKE)\n      supports the use of Fully-Qualified Domain Names instead.\n   On\
    \ the latter point, the capability to use FQDNs as endpoint names in\n   IPsec\
    \ VPNs is not new and is standard (see [RFC2407], Section 4.6.2.3\n   and [RFC4306],\
    \ Section 3.5).  This capability is present in most\n   IPsec VPN implementations.\
    \  There does seem to be an \"educational\" or\n   \"awareness\" issue that many\
    \ system/network administrators do not\n   realise that it is there and works\
    \ well as a way to avoid manual\n   modification during renumbering.  (Of course,\
    \ even in this case, a\n   VPN may need to be reconnected after a renumbering\
    \ event, but most\n   products appear to handle this automatically.)\n   In IPv6,\
    \ if a site wanted to be multihomed using multiple provider-\n   aggregated (PA)\
    \ routing prefixes with one prefix per upstream\n   provider, then the interior\
    \ routers would need a mechanism to learn\n   which upstream providers and prefixes\
    \ were currently reachable (and\n   valid).  In this case, their Router Advertisement\
    \ messages could be\n   updated dynamically to only advertise currently valid\
    \ routing\n   prefixes to hosts.  This would be significantly more complicated\
    \ if\n   the various provider prefixes were of different lengths or if the\n \
    \  site had non-uniform subnet prefix lengths.\n"
- title: 5.3.  Other Issues
  contents:
  - '5.3.  Other Issues

    '
- title: 5.3.1.  NAT State Issues
  contents:
  - "5.3.1.  NAT State Issues\n   When a renumbering event takes place, entries in\
    \ the state table of\n   any Network Address Translator that happen to contain\
    \ the affected\n   addresses will become invalid and will eventually time out.\
    \  Since\n   TCP and UDP sessions are unlikely to survive renumbering anyway,\
    \ the\n   hosts involved will not be additionally affected.  The situation is\n\
    \   more complex for multihomed SCTP [SCTPNAT], depending on whether a\n   single\
    \ or multiple NATs are involved.\n   A NAT itself might be renumbered and might\
    \ need a configuration\n   change during a renumbering event.  One of the authors\
    \ has a NAT-\n   enabled home gateway that obtains its exterior address from the\n\
    \   residential Internet service provider by acting as a DHCP client.\n   That\
    \ deployment has not suffered operational problems when the ISP\n   uses DHCP\
    \ to renumber the gateway's exterior IP address.  A critical\n   part of that\
    \ success has been configuring IKE on the home gateway to\n   use a \"mailbox\
    \ name\" for the user's identity type (rather than using\n   the exterior IP address\
    \ of the home gateway) when creating or\n   managing the IP Security Associations.\n"
- title: 5.3.2.  Mobility Issues
  contents:
  - "5.3.2.  Mobility Issues\n   A mobile node using Mobile IP that is not currently\
    \ in its home\n   network will be adversely affected if either its current care-of\n\
    \   address or its home address is renumbered.  For IPv6, if the care-of\n   address\
    \ changes, this will be exactly like moving from one foreign\n   network to another,\
    \ and Mobile IP will re-bind with its home agent in\n   the normal way.  If its\
    \ home address changes unexpectedly, it can be\n   informed of the new global\
    \ routing prefix used at the home site\n   through the Mobile Prefix Solicitation\
    \ and Mobile Prefix\n   Advertisement ICMPv6 messages [RFC3775].  The situation\
    \ is more\n   tricky if the mobile node is detached at the time of the renumbering\n\
    \   event, since it will no longer know a valid subnet anycast address\n   for\
    \ its home agent, leaving it to deduce a valid address on the basis\n   of DNS\
    \ information.\n   In contrast to Mobile IPv6, Mobile IPv4 does not support prefix\n\
    \   solicitation and prefix advertisement messages, limiting its\n   renumbering\
    \ capability to well-scheduled renumbering events when the\n   mobile node is\
    \ connected to its home agent and managed by the home\n   network administration.\
    \  Unexpected home network renumbering events\n   when the mobile node is away\
    \ from its home network and not connected\n   to the home agent are supported\
    \ only if a relevant Authentication,\n   Authorisation, and Accounting (AAA) system\
    \ is able to allocate\n   dynamically a home address and home agent for the mobile\
    \ node.\n"
- title: 5.3.3.  Multicast Issues
  contents:
  - "5.3.3.  Multicast Issues\n   As discussed in [THINK], IPv6 multicast can be used\
    \ to help rather\n   than hinder renumbering, for example, by using multicast\
    \ as a\n   discovery protocol (as in IPv6 Neighbour Discovery).  On the other\n\
    \   hand, the embedding of IPv6 unicast addresses into multicast\n   addresses\
    \ specified in [RFC3306] and the embedded-RP (Rendezvous\n   Point) in [RFC3956]\
    \ will cause issues when renumbering.\n   For both IPv4 and IPv6, changing the\
    \ unicast source address of a\n   multicast sender might also be an issue for\
    \ receivers, especially for\n   Source-Specific Multicast (SSM).  Applications\
    \ need to learn the new\n   source addresses and new multicast trees need to be\
    \ built\n   For IPv4 or IPv6 with Any-Source Multicast (ASM), renumbering can\
    \ be\n   easy.  If sources are renumbered, from the routing perspective,\n   things\
    \ behave just as if there are new sources within the same\n   multicast group.\
    \  There may be application issues though.  Changing\n   the RP address is easy\
    \ when using Bootstrap Router (BSR) [RFC5059]\n   for dynamic RP discovery.  BSR\
    \ is widely used, but it is also common\n   to use static config of RP addresses\
    \ on routers.  In that case,\n   router configurations must be updated too.\n\
    \   If any multicast ACLs are configured, they raise the same issue as\n   unicast\
    \ ACLs mentioned elsewhere.\n"
- title: 5.3.4.  Management Issues
  contents:
  - "5.3.4.  Management Issues\n   Today, static IP addresses are routinely embedded\
    \ in numerous\n   configuration files and network management databases, including\
    \ MIB\n   modules.  Ideally, all of these would be generated from a single\n \
    \  central asset management database for a given site, but this is far\n   from\
    \ being universal practice.  It should be noted that for IPv6,\n   where multiple\
    \ routing prefixes per interface and multiple addresses\n   per interface are\
    \ standard practice, the database and the\n   configuration files will need to\
    \ allow for this (rather than for a\n   single address per host, as is normal\
    \ practice for IPv4).\n   Furthermore, because of routing policies and VPNs, a\
    \ site or network\n   might well embed addresses from other sites or networks\
    \ in its own\n   configuration data.  (It is preferable to embed FQDNs instead,\
    \ of\n   course, whenever possible.)  Thus, renumbering will cause a ripple\n\
    \   effect of updates for a site and for its neighbours.  To the extent\n   that\
    \ these updates are manual, they will be costly and prone to\n   error.  Synchronising\
    \ updates between independent sites can cause\n   unpredictable delays.  Note\
    \ that Section 4 suggests that IPv6 ULAs\n   can mitigate this problem, but of\
    \ course only for VPNs and routes\n   that are suitable for ULAs rather than globally\
    \ routeable addresses.\n   The majority of external addresses to be configured\
    \ will not be ULAs.\n   See Appendix A for an extended list of possible static\
    \ or embedded\n   addresses.\n   Some address configuration data are relatively\
    \ easy to find (for\n   example, site firewall rules, ACLs in site border routers,\
    \ and DNS).\n   Others might be widely dispersed and much harder to find (for\n\
    \   example, configurations for building routers, printer addresses\n   configured\
    \ by individual users, and personal firewall\n   configurations).  Some of these\
    \ will inevitably be found only after\n   the renumbering event, when the users\
    \ concerned encounter a problem.\n   The overlapped model for IPv6 renumbering,\
    \ with old and new addresses\n   valid simultaneously, means that planned database\
    \ and configuration\n   file updates will proceed in two stages -- add the new\
    \ information\n   some time before the renumbering event, and remove the old\n\
    \   information some time after.  All policy rules must be configured to\n   behave\
    \ correctly during this process (e.g., preferring the new\n   address as soon\
    \ as possible).  Similarly, monitoring tools must be\n   set up to monitor both\
    \ old and new during the overlap.\n   However, it should be noted that the notion\
    \ of simultaneously\n   operating multiple prefixes for the same network, although\
    \ natural\n   for IPv6, is generally not supported by operational tools such as\n\
    \   address management software.  It also increases the size of IGP\n   routing\
    \ tables in proportion to the number of prefixes in use.  For\n   these reasons,\
    \ and due to its unfamiliarity to operational staff, the\n   use of multiple prefixes\
    \ remains rare.  Accordingly, the use of ULAs\n   to provide stable on-site addresses\
    \ even if the off-site prefix\n   changes is also rare.\n   If both IPv4 and IPv6\
    \ are renumbered simultaneously in a dual-stack\n   network, additional complications\
    \ could result, especially with\n   configured IP-in-IP tunnels.  This scenario\
    \ should probably be\n   avoided.\n   Use of FQDNs rather than raw IP addresses\
    \ wherever possible in\n   configuration files and databases will reduce/mitigate\
    \ the potential\n   issues arising from such configuration files or management\
    \ databases\n   when renumbering is required or otherwise occurs.  This is advocated\n\
    \   in [RFC1958] (point 4.1).  Just as we noted in Section 5.1.4 for\n   applications,\
    \ this is insufficient in itself; some devices such as\n   routers are known to\
    \ only resolve FQDNs once, at start-up, and to\n   continue using the resulting\
    \ addresses indefinitely.  This may\n   require routers to be rebooted, when they\
    \ should instead be resolving\n   the FQDN again after a given timeout.\n   By\
    \ definition, there is at least one place (i.e., the DNS zone file\n   or the\
    \ database from which it is derived) where address information\n   is nevertheless\
    \ inevitable.\n   It is also possible that some operators may choose to configure\n\
    \   addresses rather than names, precisely to avoid a possible circular\n   dependency\
    \ and the resulting failure modes.  This is arguably even\n   advocated in [RFC1958]\
    \ (point 3.11).\n   It should be noted that the management and administration\
    \ issues\n   (i.e., tracking down, recording, and updating all instances where\n\
    \   addresses are stored rather than looked up dynamically) form the\n   dominant\
    \ concern of managers considering the renumbering problem.\n   This has led many\
    \ sites to continue the pre-CIDR (Classless Inter-\n   Domain Routing) approach\
    \ of using a provider-independent (PI) prefix.\n   Some sites, including very\
    \ large corporate networks, combine PI\n   addressing with NAT.  Others have adopted\
    \ private addressing and NAT\n   as a matter of choice rather than obligation.\
    \  This range of\n   techniques allows for addressing plans that are independent\
    \ of the\n   ISP(s) in use, and allows a straightforward approach to multihoming.\n\
    \   The direct cost of renumbering is perceived to exceed the indirect\n   costs\
    \ of these alternatives.  Additionally, there is a risk element\n   stemming from\
    \ the complex dependencies of renumbering: it is hard to\n   be fully certain\
    \ that the renumbering will not cause unforeseen\n   service disruptions, leading\
    \ to unknown additional costs.\n   A relevant example in a corporate context is\
    \ VPN configuration data\n   held in every employee laptop, for use while on travel\
    \ and connecting\n   securely from remote locations.  Typically, such VPNs are\
    \ statically\n   configured using numeric IP addresses for endpoints and even\
    \ with\n   prefix lists for host routing tables.  Use of VPN configurations with\n\
    \   FQDNs to name fixed endpoints, such as corporate VPN gateways, and\n   with\
    \ non-address identity types would enable existing IP Security\n   with IKE to\
    \ avoid address renumbering issues and work well for highly\n   mobile users.\
    \  This is all possible today with standard IPsec and\n   standard IKE.  It just\
    \ requires VPN software to be configured with\n   names instead of addresses,\
    \ and thoughtful network administration.\n   It should be noted that site and\
    \ network operations managers are\n   often very conservative, and reluctant to\
    \ change operational\n   procedures that are working reasonably well and are perceived\
    \ as\n   reasonably secure.  They quite logically argue that any change brings\n\
    \   with it an intrinsic risk of perturbation and insecurity.  Thus, even\n  \
    \ if procedural changes are recommended that will ultimately reduce the\n   risks\
    \ and difficulties of renumbering (such as using FQDNs protected\n   by DNSsec\
    \ where addresses are used today), these changes might be\n   resisted.\n"
- title: 5.3.5.  Security Issues
  contents:
  - "5.3.5.  Security Issues\n   For IPv6, addresses are intended to be protected\
    \ against forgery\n   during neighbour discovery by SEcure Neighbour Discovery\
    \ (SEND)\n   [RFC3971].  This appears to be a very useful precaution during\n\
    \   dynamic renumbering, to prevent hijacking of the process by an\n   attacker.\
    \  Any automatic renumbering scheme has a potential exposure\n   to such hijacking\
    \ at the moment that a new address is announced.\n   However, at present it is\
    \ unclear whether or when SEND might be\n   widely implemented or widely deployed.\n\
    \   Firewall rules will certainly need to be updated, and any other cases\n  \
    \ where addresses or address prefixes are embedded in security\n   components\
    \ (access control lists, AAA systems, intrusion detection\n   systems, etc.).\
    \  If this is not done in advance, legitimate access to\n   resources might be\
    \ blocked after the renumbering event.  If the old\n   rules are not removed promptly,\
    \ illegitimate access might be possible\n   after the renumbering event.  Thus,\
    \ the security updates will need to\n   be made in two stages (immediately before\
    \ and immediately after the\n   event).\n   There will be operational and security\
    \ issues if an X.509v3 Public\n   Key Infrastructure (PKI) Certificate includes\
    \ a subjectAltName\n   extension that contains an iPAddress [RFC5280], and if\
    \ the\n   corresponding node then undergoes an IP address change without a\n \
    \  concurrent update to the node's PKI Certificate.  For these reasons,\n   use\
    \ of the dNSName rather than the iPAddress is recommended for the\n   subjectAltName\
    \ extension.  Any other use of IP addresses in\n   cryptographic material is likely\
    \ to be similarly troublesome.\n   If a site is, for some reason, listed by IP\
    \ address in a white list\n   (such as a spam white list), this will need to be\
    \ updated.\n   Conversely, a site that is listed in a black list can escape that\n\
    \   list by renumbering itself.\n   The use of IP addresses instead of FQDNs in\
    \ configurations is\n   sometimes driven by a perceived security need.  Since\
    \ the name\n   resolution process has historically lacked authentication,\n  \
    \ administrators prefer to use raw IP addresses when the application is\n   security\
    \ sensitive (firewalls and VPN are two typical examples).  It\n   might be possible\
    \ to solve this issue in the next few years with\n   DNSsec (see Section 2.5),\
    \ now that there is strong DNS Security\n   deployment momentum.\n"
- title: 6.  Proposed Mechanisms
  contents:
  - '6.  Proposed Mechanisms

    '
- title: 6.1.  SHIM6
  contents:
  - "6.1.  SHIM6\n   SHIM6, proposed as a host-based multihoming mechanism for IPv6,\
    \ has\n   the property of dynamically switching the addresses used for\n   forwarding\
    \ the actual packet stream while presenting a constant\n   address as the upper-layer\
    \ identifier for the transport layer\n   [RFC5533].  At least in principle, this\
    \ property could be used during\n   renumbering to alleviate the problem described\
    \ in Section 5.1.2.\n   SHIM6 is an example of a class of solutions with this\
    \ or a similar\n   property; others are Host Identity Protocol (HIP), IKEv2 Mobility\
    \ and\n   Multihoming (MOBIKE), Mobile IPv6, SCTP, and proposals for multi-path\n\
    \   TCP.\n"
- title: 6.2.  MANET Proposals
  contents:
  - "6.2.  MANET Proposals\n   The IETF working groups dealing with mobile ad hoc\
    \ networks have been\n   working on a number of mechanisms for mobile routers\
    \ to discover\n   available border routers dynamically, and for those mobile routers\
    \ to\n   be able to communicate that information to hosts connected to those\n\
    \   mobile routers.\n   Recently, some MANET work has appeared on a \"Border Router\
    \ Discovery\n   Protocol (BRDP)\" that might be useful work towards a more dynamic\n\
    \   mechanism for site interior router renumbering [BRDP].\n   At present, the\
    \ IETF AUTOCONF WG\n   (http://www.ietf.org/html.charters/autoconf-charter.html)\
    \ is working\n   on address autoconfiguration mechanisms for MANET networks that\
    \ also\n   seem useful for ordinary non-mobile non-MANET networks [AUTOC].  This\n\
    \   work is extensively surveyed in [AUTOC2] and [AUTOC3].  Other work in\n  \
    \ the same area, e.g., [RFC5558], might also be relevant.\n   MANETs are, of course,\
    \ unusual in that they must be able to\n   reconfigure themselves at all times\
    \ and without notice.  Hence, the\n   type of hidden static configurations discussed\
    \ above in Section 5.3.4\n   are simply intolerable in MANETs.  Thus, it is possible\
    \ that when a\n   consensus is reached on autoconfiguration for MANETs, the selected\n\
    \   solution(s) might not be suitable for the more general renumbering\n   problem.\
    \  However, it is certainly worthwhile to explore applying\n   techniques that\
    \ work for MANETs to conventional networks also.\n"
- title: 6.3.  Other IETF Work
  contents:
  - "6.3.  Other IETF Work\n   A DHCPv6 extension has been proposed that could convey\
    \ alternative\n   routes, in addition to the default router address, to IPv6 hosts\n\
    \   [DHRTOPT].  Other DHCP options are also on the table that may offer\n   information\
    \ about address prefixes and routing to DHCP or DHCPv6\n   clients, such as [DHSUBNET]\
    \ and [DHMIFRT].  It is conceivable that\n   these might be extended as a way\
    \ of informing hosts dynamically of\n   prefix changes.\n   In the area of management\
    \ tools, Network Configuration (NETCONF)\n   Protocol [RFC4741] is suitable for\
    \ the configuration of any network\n   element or server, so could in principle\
    \ be used to support secure\n   remote address renumbering.\n   The DNSOP WG has\
    \ considered a Name Server Control Protocol (NSCP)\n   based on NETCONF that provides\
    \ means for consistent DNS management\n   including potential host renumbering\
    \ events [DNSCONT].\n"
- title: 6.4.  Other Proposals
  contents:
  - "6.4.  Other Proposals\n   A proposal has been made to include an address lifetime\
    \ as an\n   embedded field in IPv6 addresses, with the idea that all prefixes\n\
    \   would automatically expire after a certain period and become\n   unrouteable\
    \ [CROCKER].  While this might be viewed as provocative, it\n   would force the\
    \ issue by making renumbering compulsory.\n"
- title: 7.  Gaps
  contents:
  - "7.  Gaps\n   This section seeks to identify technology gaps between what is\n\
    \   available from existing open specifications and what appears to be\n   needed\
    \ for site renumbering to be tolerable.\n"
- title: 7.1.  Host-Related Gaps
  contents:
  - "7.1.  Host-Related Gaps\n   It would be beneficial to expose address lifetimes\
    \ in the socket API,\n   or any low-level networking API.  This would allow applications\
    \ to\n   avoid using stale addresses.\n   The various current discussions of a\
    \ name-based transport layer or a\n   name-based network API also have potential\
    \ to alleviate the\n   application-layer issues noted in this document.  Application\n\
    \   development would be enhanced by the addition of a more abstract\n   network\
    \ API that supports the C and C++ programming languages.  For\n   example, it\
    \ could use FQDNs and Service Names, rather than SockAddr,\n   IP Address, protocol,\
    \ and port number.  This would be equivalent to\n   similar interfaces already\
    \ extant for Java programmers.\n   Moving to a FQDN-based transport layer might\
    \ enhance the ability to\n   migrate the IP addresses of endpoints for TCP/UDP\
    \ without having to\n   interrupt a session, or at least in a way that allows\
    \ a session to\n   restart gracefully.\n   Having a single registry per host for\
    \ all address-based configuration\n   (/etc/hosts, anyone?), with secure access\
    \ for site network\n   management, might be helpful.  Ideally, this would be remotely\n\
    \   configurable, for example, leveraging the IETF's current work on\n   networked-device\
    \ configuration protocols (NetConf).  While there are\n   proprietary versions\
    \ of this approach, sometimes based on Lightweight\n   Directory Access Protocol\
    \ (LDAP), a fully standardised approach seems\n   desirable.\n   Do we really\
    \ need more than DHCP or SLAAC for regular hosts?  Do we\n   need an IPv4 equivalent\
    \ of SLAAC?  How can the use of DHCP FORCERENEW\n   and DHCPv6 RECONFIGURE for\
    \ bulk renumbering be deployed?  FORCERENEW\n   in particular requires DHCP authentication\
    \ [RFC3118] to be deployed.\n   The IETF should resolve the 'IPv6 ND M/O flag\
    \ debate' once and for\n   all, with default, mandatory and optional behaviours\
    \ of hosts being\n   fully specified.\n   The host behaviour for upstream link\
    \ learning suggested in\n   Section 2.3 should be documented.\n   It would be\
    \ helpful to have multi-path, survivable, extensions for\n   both UDP and TCP\
    \ (or institutionalise some aspects of SHIM6).\n"
- title: 7.2.  Router-Related Gaps
  contents:
  - "7.2.  Router-Related Gaps\n   A non-proprietary secure mechanism to allow all\
    \ address-based\n   configuration to be driven by a central repository for site\n\
    \   configuration data.  NETCONF might be a good starting point.\n   A MANET solution\
    \ that's solid enough to apply to fully operational\n   small to medium fixed\
    \ sites for voluntary or involuntary renumbering.\n   A MANET-style solution that\
    \ can be applied convincingly to large or\n   very large sites for voluntary renumbering.\n\
    \   A useful short-term measure would be to ensure that [RFC2894] and\n   [RFC3633]\
    \ can be used in practice.\n"
- title: 7.3.  Operational Gaps
  contents:
  - "7.3.  Operational Gaps\n   Since address changes are usually communicated via\
    \ the DNS, the\n   latter's security is essential for secure renumbering.  Thus,\
    \ we\n   should continue existing efforts to deploy DNSsec globally, including\n\
    \   not only signing the DNS root, DNS TLDs, and subsidiary DNS zones,\n   but\
    \ also widely deploying the already available DNSsec-capable DNS\n   resolvers.\n\
    \   Similarly, we should document and encourage widespread deployment of\n   Secure\
    \ Dynamic DNS Update both in DNS servers and also in both client\n   and server\
    \ operating systems.  This capability is already widely\n   implemented and widely\
    \ available, but it is not widely deployed at\n   present.\n   Deploy multi-prefix\
    \ usage of IPv6, including Unique Local Addresses\n   (ULAs) to provide stable\
    \ internal addresses.  In particular, address\n   management tools need to support\
    \ the multi-prefix model and ULAs.\n   Ensure that network monitoring systems\
    \ will function during\n   renumbering, in particular to confirm that renumbering\
    \ has completed\n   successfully or that some traffic is still using the old prefixes.\n\
    \   Document and encourage systematic site databases and secure\n   configuration\
    \ protocols for network elements and servers (e.g.,\n   NETCONF).  The database\
    \ should store all the information about the\n   network; scripts and tools should\
    \ derive all configurations from the\n   database.  An example of this approach\
    \ to simplify renumbering is\n   given at [LEROY].\n   Document functional requirements\
    \ for site renumbering tools or\n   toolkits.\n   Document operational procedures\
    \ useful for site renumbering.\n   In general, document renumbering instructions\
    \ as part of every\n   product manual.\n   Recommend strongly that all IPv6 deployment\
    \ plans, for all sizes of\n   site or network, should include provision for future\
    \ renumbering.\n   Renumbering should be planned from day one when the first lines\
    \ of\n   the configuration of a network or network service are written.  Every\n\
    \   IPv6 operator should expect to have to renumber the network one day\n   and\
    \ should plan for this event.\n"
- title: 7.4.  Other Gaps
  contents:
  - "7.4.  Other Gaps\n   Define a secure mechanism for announcing changes of site\
    \ prefix to\n   other sites (for example, those that configure routers or VPNs\
    \ to\n   point to the site in question).\n   For Mobile IP, define a better mechanism\
    \ to handle change of home\n   agent address while mobile is disconnected.\n"
- title: 8.  Security Considerations
  contents:
  - "8.  Security Considerations\n   Known current issues are discussed in Section\
    \ 5.3.5.  Security issues\n   related to SLAAC are discussed in [RFC3756].  DHCP\
    \ authentication is\n   defined in [RFC3118].\n   For future mechanisms to assist\
    \ and simplify renumbering, care must\n   be taken to ensure that prefix or address\
    \ changes (especially changes\n   coming from another site or via public sources\
    \ such as the DNS) are\n   adequately authenticated at all points.  Otherwise,\
    \ misuse of\n   renumbering mechanisms would become an attractive target for those\n\
    \   wishing to divert traffic or to cause major disruption.  As noted in\n   Section\
    \ 5.1.4, this may result in defensive techniques such as \"DNS\n   pinning\",\
    \ which create difficulty when renumbering.\n   Whatever authentication method(s)\
    \ are adopted, key distribution will\n   be an important aspect.  Most likely,\
    \ public key cryptography will be\n   needed to authenticate renumbering announcements\
    \ passing from one\n   site to another, since one cannot assume a preexisting\
    \ trust\n   relationship between such sites.\n"
- title: 9.  Acknowledgements
  contents:
  - "9.  Acknowledgements\n   Significant amounts of text have been adapted from [THINK],\
    \ which\n   reflects work carried out during the 6NET project funded by the\n\
    \   Information Society Technologies Programme of the European\n   Commission.\
    \  The authors of that document have agreed to their text\n   being submitted\
    \ under the IETF's current copyright provisions.\n   Helpful material about work\
    \ following on from 6NET was also provided\n   by Olivier Festor of INRIA.\n \
    \  Useful comments and contributions were made (in alphabetical order)\n   by\
    \ Jari Arkko, Fred Baker, Olivier Bonaventure, Teco Boot, Stephane\n   Bortzmeyer,\
    \ Dale Carder, Gert Doering, Ralph Droms, Pasi Eronen,\n   Vijay Gurbani, William\
    \ Herrin, Cullen Jennings, Eliot Lear, Darrel\n   Lewis, Masataka Ohta, Dan Romascanu,\
    \ Dave Thaler, Iljitsch van\n   Beijnum, Stig Venaas, Nathan Ward, James Woodyatt,\
    \ and others.\n"
- title: 10.  Informative References
  contents:
  - "10.  Informative References\n   [AUTOC]       Chakeres, I., Macker, J., and T.\
    \ Clausen, \"Mobile Ad\n                 hoc Network Architecture\", Work in Progress,\n\
    \                 November 2007.\n   [AUTOC2]      Bernardos, C., Calderon, M.,\
    \ and H. Moustafa, \"Survey\n                 of IP address autoconfiguration\
    \ mechanisms for MANETs\",\n                 Work in Progress, November 2008.\n\
    \   [AUTOC3]      Bernardos, C., Calderon, M., and H. Moustafa, \"Ad-Hoc\n   \
    \              IP Autoconfiguration Solution Space Analysis\", Work\n        \
    \         in Progress, November 2008.\n   [BRDP]        Boot, T. and A. Holtzer,\
    \ \"Border Router Discovery\n                 Protocol (BRDP) based Address Autoconfiguration\"\
    , Work\n                 in Progress, July 2009.\n   [CPE]         Singh, H.,\
    \ Beebee, W., Donley, C., Stark, B., and O.\n                 Troan, Ed., \"Basic\
    \ Requirements for IPv6 Customer Edge\n                 Routers\", Work in Progress,\
    \ May 2010.\n   [CROCKER]     Crocker, S., \"Renumbering Considered Normal\",\
    \ 2006,\n                 <http://www.arin.net/meetings/minutes/ARIN_XVIII/PDF\n\
    \                 /wednesday/Renumbering_Crocker.pdf>.\n   [DHMIFRT]     Sun,\
    \ T. and H. Deng, \"Route Configuration by DHCPv6\n                 Option for\
    \ Hosts with Multiple Interfaces\", Work\n                 in Progress, March\
    \ 2009.\n   [DHRTOPT]     Dec, W. and R. Johnson, \"DHCPv6 Route Option\", Work\n\
    \                 in Progress, March 2010.\n   [DHSUBNET]    Johnson, R., Kumarasamy,\
    \ J., Kinnear, K., and M. Stapp,\n                 \"Subnet Allocation Option\"\
    , Work in Progress, May 2010.\n   [DNSBOOK]     Albitz, P. and C. Liu, \"DNS and\
    \ BIND\", 5th Edition,\n                 O'Reilly, 2006.\n   [DNSCONT]     Dickinson,\
    \ J., Morris, S., and R. Arends, \"Design for a\n                 Nameserver Control\
    \ Protocol\", Work in Protocol,\n                 October 2008.\n   [DNSSD]  \
    \     Cheshire, S. and M. Krochmal, \"DNS-Based Service\n                 Discovery\"\
    , Work in Progress, March 2010.\n   [HANDLEY]     Handley, M., Wischik, D., and\
    \ M. Bagnulo, \"Multipath\n                 Transport, Resource Pooling, and implications\
    \ for\n                 Routing\", 2008,\n                 <http://www.ietf.org/proceedings/08jul/\n\
    \                 slides/RRG-2.pdf>.\n   [IEEE.802-1X] Institute of Electrical\
    \ and Electronics Engineers,\n                 \"Port-Based Network Access Control:\
    \  IEEE Standard for\n                 Local and Metropolitan Area Networks 802.1X-2004\"\
    ,\n                 December 2009.\n   [IEEE.802-1X-REV]\n                 Institute\
    \ of Electrical and Electronics Engineers,\n                 \"802.1X-REV - Revision\
    \ of 802.1X-2004 - Port Based\n                 Network Access Control:  IEEE\
    \ Standard for Local and\n                 Metropolitan Area Networks\", 2009.\n\
    \   [ILNP]        Atkinson, R., \"ILNP Concept of Operations\", Work\n       \
    \          in Progress, February 2010.\n   [LEROY]       Leroy, D. and O. Bonaventure,\
    \ \"Preparing network\n                 configurations for IPv6 renumbering\"\
    , International\n                 Journal of Network Management, 2009, <http://\n\
    \                 inl.info.ucl.ac.be/system/files/dleroy-nem-2009.pdf>.\n   [LISP]\
    \        Farinacci, D., Fuller, V., Meyer, D., and D. Lewis,\n               \
    \  \"Locator/ID Separation Protocol (LISP)\", Work\n                 in Progress,\
    \ April 2010.\n   [MDNS]        Cheshire, S. and M. Krochmal, \"Multicast DNS\"\
    , Work\n                 in Progress, March 2010.\n   [NAT66]       Wasserman,\
    \ M. and F. Baker, \"IPv6-to-IPv6 Network\n                 Address Translation\
    \ (NAT66)\", Work in Progress,\n                 March 2009.\n   [RFC1332]   \
    \  McGregor, G., \"The PPP Internet Protocol Control\n                 Protocol\
    \ (IPCP)\", RFC 1332, May 1992.\n   [RFC1661]     Simpson, W., \"The Point-to-Point\
    \ Protocol (PPP)\",\n                 STD 51, RFC 1661, July 1994.\n   [RFC1900]\
    \     Carpenter, B. and Y. Rekhter, \"Renumbering Needs Work\",\n            \
    \     RFC 1900, February 1996.\n   [RFC1916]     Berkowitz, H., Ferguson, P.,\
    \ Leland, W., and P. Nesser,\n                 \"Enterprise Renumbering: Experience\
    \ and Information\n                 Solicitation\", RFC 1916, February 1996.\n\
    \   [RFC1918]     Rekhter, Y., Moskowitz, R., Karrenberg, D., Groot, G.,\n   \
    \              and E. Lear, \"Address Allocation for Private\n               \
    \  Internets\", BCP 5, RFC 1918, February 1996.\n   [RFC1958]     Carpenter, B.,\
    \ \"Architectural Principles of the\n                 Internet\", RFC 1958, June\
    \ 1996.\n   [RFC2071]     Ferguson, P. and H. Berkowitz, \"Network Renumbering\n\
    \                 Overview: Why would I want it and what is it anyway?\",\n  \
    \               RFC 2071, January 1997.\n   [RFC2072]     Berkowitz, H., \"Router\
    \ Renumbering Guide\", RFC 2072,\n                 January 1997.\n   [RFC2131]\
    \     Droms, R., \"Dynamic Host Configuration Protocol\",\n                 RFC\
    \ 2131, March 1997.\n   [RFC2407]     Piper, D., \"The Internet IP Security Domain\
    \ of\n                 Interpretation for ISAKMP\", RFC 2407, November 1998.\n\
    \   [RFC2608]     Guttman, E., Perkins, C., Veizades, J., and M. Day,\n      \
    \           \"Service Location Protocol, Version 2\", RFC 2608,\n            \
    \     June 1999.\n   [RFC2610]     Perkins, C. and E. Guttman, \"DHCP Options\
    \ for Service\n                 Location Protocol\", RFC 2610, June 1999.\n  \
    \ [RFC2874]     Crawford, M. and C. Huitema, \"DNS Extensions to Support\n   \
    \              IPv6 Address Aggregation and Renumbering\", RFC 2874,\n       \
    \          July 2000.\n   [RFC2894]     Crawford, M., \"Router Renumbering for\
    \ IPv6\", RFC 2894,\n                 August 2000.\n   [RFC3007]     Wellington,\
    \ B., \"Secure Domain Name System (DNS)\n                 Dynamic Update\", RFC\
    \ 3007, November 2000.\n   [RFC3059]     Guttman, E., \"Attribute List Extension\
    \ for the Service\n                 Location Protocol\", RFC 3059, February 2001.\n\
    \   [RFC3118]     Droms, R. and W. Arbaugh, \"Authentication for DHCP\n      \
    \           Messages\", RFC 3118, June 2001.\n   [RFC3203]     T'Joens, Y., Hublet,\
    \ C., and P. De Schrijver, \"DHCP\n                 reconfigure extension\", RFC\
    \ 3203, December 2001.\n   [RFC3224]     Guttman, E., \"Vendor Extensions for\
    \ Service Location\n                 Protocol, Version 2\", RFC 3224, January\
    \ 2002.\n   [RFC3306]     Haberman, B. and D. Thaler, \"Unicast-Prefix-based IPv6\n\
    \                 Multicast Addresses\", RFC 3306, August 2002.\n   [RFC3315]\
    \     Droms, R., Bound, J., Volz, B., Lemon, T., Perkins, C.,\n              \
    \   and M. Carney, \"Dynamic Host Configuration Protocol for\n               \
    \  IPv6 (DHCPv6)\", RFC 3315, July 2003.\n   [RFC3421]     Zhao, W., Schulzrinne,\
    \ H., Guttman, E., Bisdikian, C.,\n                 and W. Jerome, \"Select and\
    \ Sort Extensions for the\n                 Service Location Protocol (SLP)\"\
    , RFC 3421,\n                 November 2002.\n   [RFC3633]     Troan, O. and R.\
    \ Droms, \"IPv6 Prefix Options for\n                 Dynamic Host Configuration\
    \ Protocol (DHCP) version 6\",\n                 RFC 3633, December 2003.\n  \
    \ [RFC3736]     Droms, R., \"Stateless Dynamic Host Configuration\n          \
    \       Protocol (DHCP) Service for IPv6\", RFC 3736,\n                 April\
    \ 2004.\n   [RFC3756]     Nikander, P., Kempf, J., and E. Nordmark, \"IPv6\n \
    \                Neighbor Discovery (ND) Trust Models and Threats\",\n       \
    \          RFC 3756, May 2004.\n   [RFC3775]     Johnson, D., Perkins, C., and\
    \ J. Arkko, \"Mobility\n                 Support in IPv6\", RFC 3775, June 2004.\n\
    \   [RFC3795]     Sofia, R. and P. Nesser, \"Survey of IPv4 Addresses in\n   \
    \              Currently Deployed IETF Application Area Standards\n          \
    \       Track and Experimental Documents\", RFC 3795, June 2004.\n   [RFC3832]\
    \     Zhao, W., Schulzrinne, H., Guttman, E., Bisdikian, C.,\n               \
    \  and W. Jerome, \"Remote Service Discovery in the Service\n                \
    \ Location Protocol (SLP) via DNS SRV\", RFC 3832,\n                 July 2004.\n\
    \   [RFC3956]     Savola, P. and B. Haberman, \"Embedding the Rendezvous\n   \
    \              Point (RP) Address in an IPv6 Multicast Address\",\n          \
    \       RFC 3956, November 2004.\n   [RFC3958]     Daigle, L. and A. Newton, \"\
    Domain-Based Application\n                 Service Location Using SRV RRs and\
    \ the Dynamic\n                 Delegation Discovery Service (DDDS)\", RFC 3958,\n\
    \                 January 2005.\n   [RFC3971]     Arkko, J., Kempf, J., Zill,\
    \ B., and P. Nikander,\n                 \"SEcure Neighbor Discovery (SEND)\"\
    , RFC 3971,\n                 March 2005.\n   [RFC4033]     Arends, R., Austein,\
    \ R., Larson, M., Massey, D., and S.\n                 Rose, \"DNS Security Introduction\
    \ and Requirements\",\n                 RFC 4033, March 2005.\n   [RFC4034]  \
    \   Arends, R., Austein, R., Larson, M., Massey, D., and S.\n                \
    \ Rose, \"Resource Records for the DNS Security\n                 Extensions\"\
    , RFC 4034, March 2005.\n   [RFC4035]     Arends, R., Austein, R., Larson, M.,\
    \ Massey, D., and S.\n                 Rose, \"Protocol Modifications for the\
    \ DNS Security\n                 Extensions\", RFC 4035, March 2005.\n   [RFC4076]\
    \     Chown, T., Venaas, S., and A. Vijayabhaskar,\n                 \"Renumbering\
    \ Requirements for Stateless Dynamic Host\n                 Configuration Protocol\
    \ for IPv6 (DHCPv6)\", RFC 4076,\n                 May 2005.\n   [RFC4191]   \
    \  Draves, R. and D. Thaler, \"Default Router Preferences\n                 and\
    \ More-Specific Routes\", RFC 4191, November 2005.\n   [RFC4192]     Baker, F.,\
    \ Lear, E., and R. Droms, \"Procedures for\n                 Renumbering an IPv6\
    \ Network without a Flag Day\",\n                 RFC 4192, September 2005.\n\
    \   [RFC4193]     Hinden, R. and B. Haberman, \"Unique Local IPv6 Unicast\n  \
    \               Addresses\", RFC 4193, October 2005.\n   [RFC4306]     Kaufman,\
    \ C., \"Internet Key Exchange (IKEv2) Protocol\",\n                 RFC 4306,\
    \ December 2005.\n   [RFC4340]     Kohler, E., Handley, M., and S. Floyd, \"Datagram\n\
    \                 Congestion Control Protocol (DCCP)\", RFC 4340,\n          \
    \       March 2006.\n   [RFC4741]     Enns, R., \"NETCONF Configuration Protocol\"\
    , RFC 4741,\n                 December 2006.\n   [RFC4861]     Narten, T., Nordmark,\
    \ E., Simpson, W., and H. Soliman,\n                 \"Neighbor Discovery for\
    \ IP version 6 (IPv6)\", RFC 4861,\n                 September 2007.\n   [RFC4862]\
    \     Thomson, S., Narten, T., and T. Jinmei, \"IPv6 Stateless\n             \
    \    Address Autoconfiguration\", RFC 4862, September 2007.\n   [RFC4941]    \
    \ Narten, T., Draves, R., and S. Krishnan, \"Privacy\n                 Extensions\
    \ for Stateless Address Autoconfiguration in\n                 IPv6\", RFC 4941,\
    \ September 2007.\n   [RFC4960]     Stewart, R., \"Stream Control Transmission\
    \ Protocol\",\n                 RFC 4960, September 2007.\n   [RFC5059]     Bhaskar,\
    \ N., Gall, A., Lingard, J., and S. Venaas,\n                 \"Bootstrap Router\
    \ (BSR) Mechanism for Protocol\n                 Independent Multicast (PIM)\"\
    , RFC 5059, January 2008.\n   [RFC5061]     Stewart, R., Xie, Q., Tuexen, M.,\
    \ Maruyama, S., and M.\n                 Kozuka, \"Stream Control Transmission\
    \ Protocol (SCTP)\n                 Dynamic Address Reconfiguration\", RFC 5061,\n\
    \                 September 2007.\n   [RFC5072]     S.Varada, Haskins, D., and\
    \ E. Allen, \"IP Version 6 over\n                 PPP\", RFC 5072, September 2007.\n\
    \   [RFC5280]     Cooper, D., Santesson, S., Farrell, S., Boeyen, S.,\n      \
    \           Housley, R., and W. Polk, \"Internet X.509 Public Key\n          \
    \       Infrastructure Certificate and Certificate Revocation\n              \
    \   List (CRL) Profile\", RFC 5280, May 2008.\n   [RFC5533]     Nordmark, E. and\
    \ M. Bagnulo, \"Shim6: Level 3\n                 Multihoming Shim Protocol for\
    \ IPv6\", RFC 5533,\n                 June 2009.\n   [RFC5558]     Templin, F.,\
    \ \"Virtual Enterprise Traversal (VET)\",\n                 RFC 5558, February\
    \ 2010.\n   [SCTPNAT]     Xie, Q., Stewart, R., Holdrege, M., and M. Tuexen,\n\
    \                 \"SCTP NAT Traversal Considerations\", Work in Progress,\n \
    \                November 2007.\n   [SIX-ONE]     Vogt, C., \"Six/One: A Solution\
    \ for Routing and\n                 Addressing in IPv6\", Work in Progress, October\
    \ 2009.\n   [THINK]       Chown, T., \"Things to think about when Renumbering\
    \ an\n                 IPv6 network\", Work in Progress, September 2006.\n"
- title: Appendix A.  Embedded IP Addresses
  contents:
  - "Appendix A.  Embedded IP Addresses\n   This Appendix lists common places where\
    \ IP addresses might be\n   embedded.  The list was adapted from [THINK].\n  \
    \    Provider based prefix(es)\n      Names resolved to IP addresses in firewall\
    \ at startup time\n      IP addresses in remote firewalls allowing access to remote\n\
    \      services\n      IP-based authentication in remote systems allowing access\
    \ to\n      online bibliographic resources\n      IP address of both tunnel end\
    \ points for IPv6 in IPv4 tunnel\n      Hard-coded IP subnet configuration information\n\
    \      IP addresses for static route targets\n      Blocked SMTP server IP list\
    \ (spam sources)\n      Web .htaccess and remote access controls\n      Apache\
    \ .Listen. directive on given IP address\n      Configured multicast rendezvous\
    \ point\n      TCP wrapper files\n      Samba configuration files\n      DNS resolv.conf\
    \ on Unix\n      Any network traffic monitoring tool\n      NIS/ypbind via the\
    \ hosts file\n      Some interface configurations\n      Unix portmap security\
    \ masks\n      NIS security masks\n      PIM-SM Rendezvous Point address on multicast\
    \ routers\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Brian Carpenter\n   Department of Computer Science\n \
    \  University of Auckland\n   PB 92019\n   Auckland  1142\n   New Zealand\n  \
    \ EMail: brian.e.carpenter@gmail.com\n   Randall Atkinson\n   Extreme Networks\n\
    \   PO Box 14129\n   Suite 100, 3306 East NC Highway 54\n   Research Triangle\
    \ Park, NC  27709\n   USA\n   EMail: rja@extremenetworks.com\n   Hannu Flinck\n\
    \   Nokia Siemens Networks\n   Linnoitustie 6\n   Espoo  02600\n   Finland\n \
    \  EMail: hannu.flinck@nsn.com\n"
