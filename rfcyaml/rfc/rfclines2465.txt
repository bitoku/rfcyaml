Abstract This document is one in the series of documents that provide MIB definitions for for IP Version 6.
Specifically, the IPv6 MIB textual conventions as well as the IPv6 MIB General group is defined in this document.
This memo defines a portion of the Management Information Base (MIB) for use with network management protocols in the IPv6 based internets.
This document specifies a MIB module in a manner that is both compliant to the SNMPv2 SMI, and semantically identical to the peer SNMPv1 definitions.
The SNMPv2 Network Management Framework
The SNMPv2 Network Management Framework presently consists of three major components.
[1] the mechanisms used for describing and naming objects for the purpose of management.
the MIB II, described in RFC 1213/STD 17 [3] the core set of managed objects for the Internet suite of protocols.
RFC 1157/STD 15 [4] and RFC 1905 [5] which define two versions of the protocol used for network access to managed objects.
The Framework permits new objects to be defined for the purpose of experimentation and evaluation.
Object Definitions Managed objects are accessed via a virtual information store, termed the Management Information Base or MIB.
Objects in the MIB are defined using the subset of Abstract Syntax Notation One (ASN.1) defined in the SMI.
In particular, each object type is named by an OBJECT IDENTIFIER, an administratively assigned name.
The object type together with an object instance serves to uniquely identify a specific instantiation of the object.
For human convenience, we often use a textual string, termed the descriptor, to refer to the object type.
This document is the first in the series of documents that define various MIB object groups for IPv6.
These groups are the basic unit of conformance: if the semantics of a group is applicable to an implementation, then it must implement all objects in that group.
For example, an implementation must implement the TCP group if and only if it implements the TCP over IPv6 protocol.
At minimum, implementations must implement the IPv6 General group defined in this document as well as the ICMPv6 group [9].
This document defines the IPv6 MIB textual conventions as well as the IPv6 General group which provides for the basic management of IPv6 entities and serve as the foundation for other IPv6 MIB definitions.
The IPv6 General group consists of 6 tables: ipv6IfTable The IPv6 Interfaces table contains information on the entity's IPv6 interfaces.
ipv6IfStatsTable This table contains information on the traffic statistics of the entity's IPv6 interfaces.
The IPv6 Address Prefix table contains information on Address Prefixes that are associated with the entity's IPv6 interfaces.
This table contains the addressing information relevant to the entity's IPv6 interfaces.
ipv6RouteTable The IPv6 routing table contains an entry for each valid IPv6 unicast route that can be used for packet forwarding determination.
The IPv6 address translation table contain the IPv6 Address to `physical' address equivalencies.
The IPv6 MIB defined in this memo uses an OCTET STRING of length 16 to represent 128 bit IPv6 address in
This approach allows to implement IPv6 MIB without requiring any changes to the SNMPv2 SMI and compliant SNMP implementations.
Definition of Textual Conventions IPV6 TC DEFINITIONS ::
FROM SNMPv2 TC;   definition of textual conventions
"This data type is used to model IPv6 addresses.
This is a binary string of 16 octets in network byte order."
"This data type is used to model IPv6 address prefixes.
This is a binary string of up to 16 octets in network byte order."
OCTET STRING (SIZE (0..16)) Ipv6AddressIfIdentifier ::
"This data type is used to model IPv6 address interface identifiers.
This is a binary string of up to 8 octets in network byte order."
It is recommended that values are assigned contiguously starting from 1.
The value for each internetwork layer interface must remain constant at least from one re initialization of the entity's network management system to the next re initialization."
"This textual convention is an extension of the Ipv6IfIndex convention.
The latter defines a greater than zero value used to identify an IPv6 interface in the managed system.
This extension permits the additional value of zero.
The value zero is object specific and must therefore be defined as part of the description of any object which uses this syntax.
Examples of the usage of zero might include situations where interface was unknown, or when none or all interfaces need to be referenced."
IMPORTS MODULE IDENTITY, OBJECT TYPE, NOTIFICATION TYPE,
SMI DisplayString, PhysAddress, TruthValue, TimeStamp, VariablePointer, RowPointer
Bay Networks, Inc. 660 Techology Park Drive.
MA  01821 US Tel:  1 978
Inc. 3 Federal Street Billerica, MA 01821
The MIB module for entities implementing the IPv6 protocol."
a router } MAX ACCESS read write STATUS
The indication of whether this entity is acting as an IPv6 router in respect to the forwarding of datagrams received by, but not addressed to, this entity.
IPv6 hosts do not (except those source routed via the host).
Note that for some managed nodes, this object may take on only a subset of the values possible.
Accordingly, it is appropriate for an agent to return a `wrongValue' response if a management station attempts to change this object to an inappropriate value."
"The default value inserted into the Hop Limit field of the IPv6 header of datagrams originated at this entity, whenever a Hop Limit value is not supplied by the transport layer protocol.
"The number of IPv6 interfaces (regardless of their current state) present on this system."
{ ipv6MIBObjects 3 } ipv6IfTableLastChange OBJECT TYPE SYNTAX
"The value of sysUpTime at the time of the last insertion or removal of an entry in the ipv6IfTable.
If the number of entries has been unchanged since the last re initialization of the local network management subsystem, then this object contains a zero value."
"The IPv6 Interfaces table contains information on the entity's internetwork layer interfaces.
An IPv6 interface constitutes a logical network layer attachment to the layer immediately below IPv6 including internet layer 'tunnels', such as tunnels over IPv4 or IPv6 itself."
Ipv6IfEntry MAX ACCESS not accessible STATUS
current DESCRIPTION "An interface entry containing objects about a particular IPv6 interface.
MAX ACCESS not accessible STATUS
A unique non zero value identifying the particular IPv6 interface."
This string may be set by the network management system."
"This object identifies the protocol layer over which this network interface operates.
If this network interface operates over the data link layer, then the value of this object refers to an instance of ifIndex [6].
If this network interface operates over an IPv4 interface, the value of this object refers to an instance of ipAdEntAddr [3].
If this network interface operates over another IPv6 interface, the value of this object refers to an instance of ipv6IfIndex.
If this network interface is not currently operating over an active protocol layer, then the value of this object should be set to the OBJECT ID { 0 0 }."
The size of the largest IPv6 packet which can be sent/received on the interface, specified in octets."
The size of the largest IPv6 datagram which this entity can re assemble from incoming IPv6 fragmented datagrams received on this interface."
current DESCRIPTION "The Interface Identifier for this interface that is (at least) unique on the link this interface is attached to.
The Interface Identifier is combined with an address prefix to form an interface address.
By default, the Interface Identifier is autoconfigured according to the rules of the link type this interface is attached to."
For example, for an IPv6 interface attached to an 802.x link, this object normally contains a MAC address.
Note that in some cases this address may differ from the address of the interface's protocol sub layer.
The interface's media specific MIB must define the bit and byte ordering and the format of the value of this object.
For interfaces which do not have such an address (e.g., a serial line), this object should contain an octet string of zero length."
The desired state of the interface.
When a managed system initializes,  all IPv6 interfaces start with ipv6IfAdminStatus in the down(2) state.
As a result of either explicit management action or per configuration information retained by the managed system,  ipv6IfAdminStatus is then changed to the up(1) state (or remains in the down(2) state)."
The current operational state of the interface.
The noIfIdentifier(3) state indicates that no valid Interface Identifier is assigned to the interface.
This state usually indicates that the link local interface address failed Duplicate Address Detection.
If ipv6IfAdminStatus is down(2) then ipv6IfOperStatus should be down(2).
If ipv6IfAdminStatus is changed to up(1)
then ipv6IfOperStatus should change to up(1) if the interface is ready to transmit and receive network traffic; it should remain in the down(2)
or noIfIdentifier(3) state if and only if there is a fault that prevents it from going to the up(1) state; it should remain in the notPresent(5) state if the interface has missing (typically, lower layer) components."
The value of sysUpTime at the time the interface entered its current operational state.
If the current state was entered prior to the last re initialization of the local network management subsystem, then this object contains a zero value."
current DESCRIPTION "An interface statistics entry containing objects at a particular IPv6 interface."
ipv6IfStatsOutRequests Counter32, ipv6IfStatsOutDiscards Counter32, ipv6IfStatsOutFragOKs Counter32, ipv6IfStatsOutFragFails Counter32, ipv6IfStatsOutFragCreates Counter32,
, ipv6IfStatsOutMcastPkts Counter32 } ipv6IfStatsInReceives OBJECT TYPE SYNTAX
"The number of input datagrams discarded due to errors in their IPv6 headers, including version number mismatch, other format errors,
hop count exceeded, errors discovered in processing their IPv6 options, etc."
"The number of input datagrams discarded because no route could be found to transmit them to their destination."
"The number of input datagrams discarded because the IPv6 address in their IPv6 header's destination field was not a valid address to be received at this entity.
For entities which are not IPv6 routers and
therefore do not forward datagrams, this counter includes datagrams discarded because the destination address was not a local address."
{ ipv6IfStatsEntry 5 } ipv6IfStatsInUnknownProtos OBJECT TYPE SYNTAX
"The number of locally addressed datagrams received successfully but discarded because of an unknown or unsupported protocol.
This counter is incremented at the interface to which these datagrams were addressed which might not be necessarily the input interface for some of the datagrams."
"The number of input datagrams discarded because datagram frame didn't carry enough data."
"The number of input IPv6 datagrams for which no problems were encountered to prevent their continued processing, but which were discarded (e.g., for lack of buffer space).
Note that this counter does not include any datagrams discarded while awaiting re assembly."
"The total number of datagrams successfully delivered to IPv6 user protocols (including ICMP).
This counter is incremented at the interface to which these datagrams were addressed which might not be necessarily the input interface for some of the datagrams."
"The number of output datagrams which this entity received and forwarded to their final destinations.
In entities which do not act as IPv6 routers, this counter will include only those packets which were Source Routed via this entity, and the Source Route processing was successful.
Note that for a successfully forwarded datagram the counter of the outgoing interface is incremented."
{ ipv6IfStatsEntry 10 } ipv6IfStatsOutRequests OBJECT
"The total number of IPv6 datagrams which local IPv6 user protocols (including ICMP) supplied to IPv6 in requests for transmission.
Note that this counter does not include any datagrams counted in ipv6IfStatsOutForwDatagrams."
"The number of output IPv6 datagrams for which no problem was encountered to prevent their transmission to their destination, but which were discarded (e.g., for lack of buffer space).
Note that this counter would include datagrams counted in ipv6IfStatsOutForwDatagrams if any such packets met this (discretionary) discard criterion."
"The number of IPv6 datagrams that have been successfully fragmented at this output interface."
"The number of IPv6 fragments received which needed to be reassembled at this interface.
Note that this counter is incremented at the interface to which these fragments were addressed which might not be necessarily the input interface for some of the fragments."
"The number of IPv6 datagrams successfully reassembled.
Note that this counter is incremented at the interface to which these datagrams were addressed which might not be necessarily the input interface for some of the fragments."
"The number of failures detected by the IPv6 re  assembly algorithm (for whatever reason: timed out, errors, etc.).
Note that this is not necessarily a count of discarded IPv6 fragments since some algorithms (notably the algorithm in RFC 815) can lose track of the number of fragments by combining them as they are received.
This counter is incremented at the interface to which these fragments were addressed which might not be necessarily the input interface for some of the fragments."
The IPv6 Address Prefix table contains information on   the entity's IPv6 Address Prefixes that are associated   with IPv6 interfaces.
The prefix associated with the this interface."
"The length of the prefix (in bits)."
"This object has the value 'true(1)', if this prefix can be used  for on link determination and the value 'false(2)' otherwise."
When true(1), indicates that this prefix can be used for autonomous address configuration (i.e. can be used to form a local interface address).
If false(2), it is not used to autoconfigure a local interface address."
"It is the length of time in seconds that this prefix will remain preferred, i.e. time until deprecation.
A value of 4,294,967,295 represents infinity.
The address generated from a deprecated prefix should no longer be used as a source address in new communications, but packets received on such an interface are processed as expected."
"It is the length of time in seconds that this prefix will remain valid, i.e. time until invalidation.
A value of 4,294,967,295 represents infinity.
The address generated from an invalidated prefix should not appear as the destination or source address of a packet."
SEQUENCE OF Ipv6AddrEntry MAX ACCESS
"The table of addressing information relevant to this node's interface addresses."
The addressing information for one of this node's interface addresses.
"The IPv6 address to which this entry's addressing information pertains."
The length of the prefix (in bits) associated with the IPv6 address of this entry."
' refers to an address that was statelessly autoconfigured; 'stateful(2)' refers to a address which was acquired by via a stateful protocol (e.g. DHCPv6, manual configuration)."
"This object has the value 'true(1)', if this address is an anycast address and the value 'false(2)' otherwise."
status can not be determined   for some reason. }
The preferred(1) state indicates that this is a valid address that can appear as the destination or source address of a packet.
The deprecated(2) state indicates that this is a valid but deprecated address that should no longer be used as a source address in new communications, but packets addressed to such an address are processed as expected.
The invalid(3) state indicates that this is not valid address which should not appear as the destination or source address of a packet.
The inaccessible(4) state indicates that the address is not accessible because the interface to which this address is assigned is not operational."
"The number of current ipv6RouteTable entries.
This is primarily to avoid having to read the table in order to determine this number."
{ ipv6MIBObjects 9 } ipv6DiscardedRoutes OBJECT TYPE SYNTAX
"The number of routing entries which were chosen to be discarded even though they are valid.
One possible reason for discarding such an entry could be to free up buffer space for other routing entries."
Ipv6RouteEntry MAX ACCESS not accessible
This table contains an entry for each valid IPv6 unicast route that can be used for packet forwarding determination."
Ipv6Address MAX ACCESS not accessible STATUS
"The destination IPv6 address of this route.
This object may not take a Multicast address value."
Indicates the prefix length of the destination address."
2 } ipv6RouteIndex OBJECT TYPE
MAX ACCESS not accessible STATUS
The value which uniquely identifies the route among the routes to the same network layer destination.
The way this value is chosen is implementation specific but it must be unique for ipv6RouteDest/ipv6RoutePfxLength pair and remain constant for the life of the route."
The index value which uniquely identifies the local interface through which the next hop of this route should be reached.
The interface identified by a particular value of this index is the same interface as identified by the same value of ipv6IfIndex.
For routes of the discard type this value can be zero."
On remote routes, the address of the next system en route;  otherwise, ::0 ('00000000000000000000000000000000'H in ASN.1 string representation).
Note that 'local(3)' refers to a route for which the next hop is the final destination; 'remote(4)'
refers to a route for which  the  next  hop is not the final destination; '
discard(2)' refers to a route indicating that packets to destinations matching this route are to be discarded (sometimes called black hole route).
"The routing mechanism via which this route was learned."
Unless the mechanism indicated by ipv6RouteProtocol specified otherwise, the policy specifier is the 8 bit Traffic Class field of the IPv6 packet header that is zero extended at the left to a 32 bit value.
Protocols defining 'policy' otherwise must either define a set of values which are valid for this object or must implement an integer
instanced  policy table for which this object's value acts as an index."
"The number of seconds since this route was last updated or otherwise determined to be correct.
Note that no semantics of `too old' can be implied except through knowledge of the routing protocol by which the route was learned."
The Routing Domain ID of the Next Hop.
The  semantics of this object are determined by the routing protocol specified in  the  route's ipv6RouteProtocol value.
When  this object is unknown or not relevant its value should be set to zero."
"The routing metric for this route.
The semantics of this metric are determined by the routing protocol specified in the route's ipv6RouteProtocol value.
When this is unknown or not relevant to the protocol indicated by ipv6RouteProtocol, the object value should be set to its maximum value (4,294,967,295)."
"The system internal weight value for this route.
The semantics of this value are determined by the implementation specific rules.
Generally, within routes with the same ipv6RoutePolicy value, the lower the weight value the more preferred is the route."
"A reference to MIB definitions specific to the particular routing protocol which is responsible for this route, as determined by the  value specified  in the route's ipv6RouteProto value.
If this information is not present,  its  value should be set to the OBJECT ID { 0 0 }, which is a syntactically valid object  identifier, and any implementation conforming to ASN.1 and the Basic Encoding Rules
must  be  able  to generate and recognize this value."
{ ipv6RouteEntry 13 } ipv6RouteValid OBJECT TYPE SYNTAX
TruthValue MAX ACCESS read write
Setting this object to the value 'false(2)' has the effect of invalidating the corresponding entry in the ipv6RouteTable object.
That is, it effectively disassociates the destination identified with said entry from the route identified with said entry.
It is an implementation specific matter as to whether the agent removes an invalidated entry from the table.
Accordingly, management stations must be prepared to receive tabular information from agents that corresponds to entries not currently in use.
Proper interpretation of such entries requires examination of the relevant ipv6RouteValid object."
IPv6 Address Translation table ipv6NetToMediaTable OBJECT
"The IPv6 Address Translation table used for mapping from IPv6 addresses to physical addresses.
The IPv6 address translation table contain the Ipv6Address to `physical' address equivalencies.
Some interfaces do not use translation tables for determining address equivalencies; if all interfaces are of this type, then the Address Translation table is empty, i.e., has zero entries."
MAX ACCESS not accessible STATUS
"Each entry contains one IPv6 address to `physical' address equivalence.
Ipv6Address MAX ACCESS not accessible STATUS
"The IPv6 Address corresponding to the media dependent `physical' address."
"The media dependent `physical' address."
The type of the mapping.
The 'dynamic(2)' type indicates that the IPv6 address to physical addresses mapping has been dynamically resolved using the IPv6 Neighbor Discovery protocol.
The static(3)' types indicates that the mapping has been statically configured.
The local(4) indicates that the mapping is provided for an entity's own interface address."
state can not be determined   for some reason. }
The Neighbor Unreachability Detection [8] state for the interface when the address mapping in this entry is used."
"The value of sysUpTime at the time this entry was last updated.
If this entry was updated prior to the last re initialization of the local network management subsystem, then this object contains a zero value."
TruthValue MAX ACCESS read write
Setting this object to the value 'false(2)' has the effect of invalidating the corresponding entry in the ipv6NetToMediaTable.
That is, it effectively disassociates the interface identified with said entry from the mapping identified with said entry.
It is an implementation specific matter as to whether the agent removes an invalidated entry from the table.
Accordingly, management stations must be prepared to receive tabular information from agents that corresponds to entries not currently in use.
Proper interpretation of such entries requires examination of the relevant ipv6NetToMediaValid object.
Note that we need ipv6NotificationPrefix with the 0   sub identifier to make this MIB to translate to   an SNMPv1 format in a reversible way.
For example   it is needed for proxies that convert SNMPv1 traps   to SNMPv2 notifications without MIB knowledge.
ipv6IfStateChange NOTIFICATION TYPE OBJECTS { ipv6IfDescr, ipv6IfOperStatus   the new state of the If. }
An ipv6IfStateChange notification signifies that there has been a change in the state of an ipv6 interface.
This notification should be generated when the interface's operational status transitions to or from the up(1) state."
ipv6Compliance MODULE COMPLIANCE STATUS  current DESCRIPTION
"The compliance statement for SNMPv2 entities which implement ipv6 MIB."
MODULE    this module MANDATORY GROUPS { ipv6GeneralGroup, ipv6NotificationGroup } OBJECT
"An agent is not required to provide write access to this object" OBJECT
MIN ACCESS  read only DESCRIPTION
"An agent is not required to provide write access to this object" OBJECT
MIN ACCESS  read only DESCRIPTION
"An agent is not required to provide write access to this object" OBJECT    ipv6IfIdentifier MIN ACCESS  read only DESCRIPTION
"An agent is not required to provide write access to this object"
OBJECT    ipv6IfIdentifierLength MIN ACCESS  read only DESCRIPTION
"An agent is not required to provide write access to this object" OBJECT
"An agent is not required to provide write access to this object" OBJECT
ipv6RouteValid MIN ACCESS  read only DESCRIPTION
"An agent is not required to provide write access to this object" OBJECT    ipv6NetToMediaValid MIN ACCESS
OBJECT GROUP OBJECTS { ipv6Forwarding, ipv6DefaultHopLimit, ipv6Interfaces, ipv6IfTableLastChange, ipv6IfDescr, ipv6IfLowerLayer, ipv6IfEffectiveMtu, ipv6IfReasmMaxSize, ipv6IfIdentifier, ipv6IfIdentifierLength, ipv6IfPhysicalAddress, ipv6IfAdminStatus, ipv6IfOperStatus, ipv6IfLastChange, ipv6IfStatsInReceives, ipv6IfStatsInHdrErrors, ipv6IfStatsInTooBigErrors, ipv6IfStatsInNoRoutes, ipv6IfStatsInAddrErrors, ipv6IfStatsInUnknownProtos, ipv6IfStatsInTruncatedPkts, ipv6IfStatsInDiscards, ipv6IfStatsInDelivers, ipv6IfStatsOutForwDatagrams, ipv6IfStatsOutRequests, ipv6IfStatsOutDiscards, ipv6IfStatsOutFragOKs, ipv6IfStatsOutFragFails, ipv6IfStatsOutFragCreates, ipv6IfStatsReasmReqds,
ipv6IfStatsReasmOKs, ipv6IfStatsReasmFails, ipv6IfStatsInMcastPkts, ipv6IfStatsOutMcastPkts, ipv6AddrPrefixOnLinkFlag, ipv6AddrPrefixAutonomousFlag, ipv6AddrPrefixAdvPreferredLifetime, ipv6AddrPrefixAdvValidLifetime, ipv6AddrPfxLength, ipv6AddrType,
ipv6AddrAnycastFlag, ipv6AddrStatus, ipv6RouteNumber, ipv6DiscardedRoutes, ipv6RouteIfIndex, ipv6RouteNextHop, ipv6RouteType, ipv6RouteProtocol, ipv6RoutePolicy, ipv6RouteAge, ipv6RouteNextHopRDI, ipv6RouteMetric, ipv6RouteWeight
, ipv6RouteInfo, ipv6RouteValid, ipv6NetToMediaPhysAddress, ipv6NetToMediaType, ipv6IfNetToMediaState, ipv6IfNetToMediaLastUpdated, ipv6NetToMediaValid } STATUS
"The IPv6 group of objects providing for basic management of IPv6 entities."
NOTIFICATION GROUP NOTIFICATIONS { ipv6IfStateChange } STATUS    current DESCRIPTION "
The notification that an IPv6 entity is required to implement."
Certain management information defined in this MIB may be considered sensitive in some network environments.
Therefore, authentication of received SNMP requests and controlled access to management information should be employed in such environments.
