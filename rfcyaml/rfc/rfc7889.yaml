- contents:
  - '                     The IMAP APPENDLIMIT Extension

    '
  title: __initial_text__
- contents:
  - "Abstract\n   This document defines an extension to the IMAP service whereby a\n
    \  server can inform the client about maximum message upload sizes,\n   allowing
    the client to avoid sending APPEND commands that will fail\n   because the messages
    are too large.\n"
  title: Abstract
- contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This
    document is a product of the Internet Engineering Task Force\n   (IETF).  It represents
    the consensus of the IETF community.  It has\n   received public review and has
    been approved for publication by the\n   Internet Engineering Steering Group (IESG).
    \ Further information on\n   Internet Standards is available in Section 2 of RFC
    5741.\n   Information about the current status of this document, any errata,\n
    \  and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc7889.\n"
  title: Status of This Memo
- contents:
  - "Copyright Notice\n   Copyright (c) 2016 IETF Trust and the persons identified
    as the\n   document authors.  All rights reserved.\n   This document is subject
    to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n
    \  (http://trustee.ietf.org/license-info) in effect on the date of\n   publication
    of this document.  Please review these documents\n   carefully, as they describe
    your rights and restrictions with respect\n   to this document.  Code Components
    extracted from this document must\n   include Simplified BSD License text as described
    in Section 4.e of\n   the Trust Legal Provisions and are provided without warranty
    as\n   described in the Simplified BSD License.\n"
  title: Copyright Notice
- contents:
  - "Table of Contents\n   1.  Introduction  . . . . . . . . . . . . . . . . . . .
    . . . . .   2\n     1.1.  Conventions . . . . . . . . . . . . . . . . . . . .
    . . .   2\n   2.  APPENDLIMIT Extension . . . . . . . . . . . . . . . . . . .
    .   3\n   3.  Mailbox-Specific APPENDLIMIT  . . . . . . . . . . . . . . . .   3\n
    \    3.1.  STATUS Response to the STATUS Command . . . . . . . . . .   4\n     3.2.
    \ STATUS Response to the LIST Command . . . . . . . . . . .   4\n     3.3.  APPENDLIMIT
    Behavior  . . . . . . . . . . . . . . . . . .   4\n   4.  APPEND Response . .
    . . . . . . . . . . . . . . . . . . . . .   4\n   5.  Formal Syntax . . . . .
    . . . . . . . . . . . . . . . . . . .   5\n   6.  Security Considerations . .
    . . . . . . . . . . . . . . . . .   5\n   7.  IANA Considerations . . . . . .
    . . . . . . . . . . . . . . .   5\n   8.  References  . . . . . . . . . . . .
    . . . . . . . . . . . . .   6\n     8.1.  Normative References  . . . . . . .
    . . . . . . . . . . .   6\n     8.2.  Informative References  . . . . . . . .
    . . . . . . . . .   6\n   Acknowledgements  . . . . . . . . . . . . . . . . .
    . . . . . . .   7\n   Authors' Addresses  . . . . . . . . . . . . . . . . . .
    . . . . .   7\n"
  title: Table of Contents
- contents:
  - "1.  Introduction\n   Some IMAP servers have limits for message upload size, and
    those\n   limits are not published to the email client.  When the email client\n
    \  APPENDs a message with huge attachments, using non-synchronizing\n   literals,
    the APPEND fails because of the upload limit, but the\n   client has already sent
    the message data anyway.  This results in\n   unnecessary resource usage.  Especially
    in the mobile device\n   environment, appending a message with huge attachments
    consumes\n   device resources like device battery power and mobile data.\n   The
    IMAP APPENDLIMIT extension provides the ability to advertise a\n   maximum upload
    size allowed by the IMAP server, so that the email\n   client knows the size limitation
    beforehand.  By implementing this\n   extension, IMAP server-side processing of
    huge attachments above the\n   maximum upload size can be avoided.\n"
  - contents:
    - "1.1.  Conventions\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\",
      \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and
      \"OPTIONAL\" in this\n   document are to be interpreted as described in [RFC2119].\n
      \  In examples, \"C:\" and \"S:\" indicate lines sent by the client and\n   server,
      respectively.  If a single \"C:\" or \"S:\" label applies to\n   multiple lines,
      then the line breaks between those lines are for\n   editorial clarity only
      and are not part of the actual protocol\n   exchange.\n"
    title: 1.1.  Conventions
  title: 1.  Introduction
- contents:
  - "2.  APPENDLIMIT Extension\n   An IMAP server that supports the APPENDLIMIT extension
    advertises\n   this by including the name APPENDLIMIT in its capability list in
    the\n   authenticated state.  The server may also advertise this extension\n   before
    the user has logged in.  If this capability is omitted, no\n   information is
    conveyed about the server's fixed maximum size for\n   mail uploads.  An IMAP
    server can publish the APPENDLIMIT capability\n   in two formats.\n   (a) APPENDLIMIT=<number>\n
    \  This indicates that the IMAP server has the same upload limit for all\n   mailboxes.
    \ The following example demonstrates the APPENDLIMIT\n   capability with the same
    upload limit for all mailboxes.\n   C: t1 CAPABILITY\n   S: * CAPABILITY IMAP4rev1
    ID APPENDLIMIT=257890\n   S: t1 OK foo\n   (b) APPENDLIMIT\n   The APPENDLIMIT
    capability without any value indicates that the IMAP\n   server supports this
    extension, and that the client will need to\n   discover upload limits for each
    mailbox, as they might differ from\n   mailbox to mailbox.  The following example
    demonstrates the\n   APPENDLIMIT capability without any value.\n   C: t1 CAPABILITY\n
    \  S: * CAPABILITY IMAP4rev1 ID APPENDLIMIT\n   S: t1 OK foo\n   In this case,
    the client can get an APPENDLIMIT value by either\n   issuing a STATUS or a LIST
    command.\n   An IMAP client implementing this extension should be able to parse\n
    \  both mailbox-specific and global APPENDLIMIT responses.  By looking\n   at
    the upload size advertised by the IMAP server, a client can avoid\n   trying to
    APPEND mail more than the advertised limit.\n"
  title: 2.  APPENDLIMIT Extension
- contents:
  - "3.  Mailbox-Specific APPENDLIMIT\n   An IMAP server can have mailbox-specific
    APPENDLIMIT values that will\n   not be advertised as part of the CAPABILITY response.
    \ The IMAP\n   server can publish specific values for each mailbox, and it can\n
    \  publish \"NIL\" for a mailbox to convey that there is no APPENDLIMIT\n   for
    that mailbox.  The following subsections describe the changes to\n   the STATUS
    and LIST commands in support of this situation.\n"
  - contents:
    - "3.1.  STATUS Response to the STATUS Command\n   A new attribute APPENDLIMIT
      is added to get the limit set by the\n   server for a mailbox as part of a STATUS
      command.  An IMAP client\n   should issue a STATUS command with an APPENDLIMIT
      item to get the\n   mailbox-specific upload value.  The following example demonstrates\n
      \  its usage.\n   C: t1 STATUS INBOX (APPENDLIMIT)\n   S: * STATUS INBOX (APPENDLIMIT
      257890)\n   S: t1 OK STATUS completed\n   In the above example, APPENDLIMIT
      represents the maximum upload size\n   for INBOX.\n"
    title: 3.1.  STATUS Response to the STATUS Command
  - contents:
    - "3.2.  STATUS Response to the LIST Command\n   If the server advertises the
      LIST-STATUS capability [RFC5819], the\n   client can issue a LIST command in
      combination with the STATUS return\n   option to get the mailbox-specific upload
      value.  The following\n   example demonstrates its usage.\n   C: t1 LIST \"\"
      % RETURN (STATUS (APPENDLIMIT))\n   S: * LIST () \".\"  \"INBOX\"\n   S: * STATUS
      \"INBOX\" (APPENDLIMIT 257890)\n   S: t1 OK List completed.\n   The IMAP server
      MUST recognize the APPENDLIMIT attribute and include\n   an appropriate STATUS
      response for each matching mailbox.  Refer to\n   Section 5 for the syntax.\n
      \  If the server does not support the STATUS return option on the LIST\n   command,
      then the client should use the STATUS command instead.\n"
    title: 3.2.  STATUS Response to the LIST Command
  - contents:
    - "3.3.  APPENDLIMIT Behavior\n   Computing the APPENDLIMIT should be fast and
      should not take Access\n   Control Lists (ACLs), quotas, or other such information
      into account.\n   The APPENDLIMIT specifies one part of the policy, but an APPEND\n
      \  command can still fail due to issues related to ACLs and quotas, even\n   if
      the message being appended is smaller than the APPENDLIMIT.\n"
    title: 3.3.  APPENDLIMIT Behavior
  title: 3.  Mailbox-Specific APPENDLIMIT
- contents:
  - "4.  APPEND Response\n   If a client uploads a message that exceeds the maximum
    upload size\n   set for that mailbox, then the server SHALL reject the APPEND
    command\n   with a tagged TOOBIG response code.  Refer to Section 4 of [RFC4469]\n
    \  for various APPEND response codes and their handling.\n   A client SHOULD avoid
    use of non-synchronizing literals [RFC7888]\n   when the maximum upload size supported
    by the IMAP server is unknown.\n   Refer to Section 4.2.2.3 of [RFC4549] for usage
    of non-synchronizing\n   literals and its risk for disconnected IMAP clients.\n"
  title: 4.  APPEND Response
- contents:
  - "5.  Formal Syntax\n   The following syntax specification uses the Augmented Backus-Naur\n
    \  Form (ABNF) notation as specified in [RFC5234] including the core\n   rules
    in Appendix B.1 of that document.  [RFC3501] defines the non-\n   terminals \"capability\"
    and \"status-att\", and [RFC4466] defines\n   \"status-att-val\".\n   All alphabetic
    characters are case insensitive.  The use of uppercase\n   or lowercase characters
    to define token strings is for editorial\n   clarity only.  Implementations MUST
    accept these strings in a case-\n   insensitive fashion.\n   capability =/ \"APPENDLIMIT\"
    [\"=\" number]\n               ;; capability is defined in RFC 3501\n   status-att
    =/ \"APPENDLIMIT\"\n               ;; status-att is defined in RFC 3501\n   status-att-val
    =/ \"APPENDLIMIT\" SP (number / nil)\n                   ;; status-att-val is
    defined in RFC 4466\n   The number indicates the fixed maximum message size in
    octets that\n   the server will accept.  An APPENDLIMIT number of 0 indicates
    the\n   server will not accept any APPEND commands at all for the affected\n   mailboxes.\n"
  title: 5.  Formal Syntax
- contents:
  - "6.  Security Considerations\n   This extension provides additional information
    that cooperative\n   clients can use as an optimization and does not introduce
    new\n   security concerns.  This extension does not address abusive clients\n
    \  that intend to consume server resources, and servers will still have\n   to
    take action to disconnect and/or restrict access to clients that\n   exhibit abusive
    behavior.\n"
  title: 6.  Security Considerations
- contents:
  - "7.  IANA Considerations\n   IANA has added \"APPENDLIMIT\" to the \"IMAP Capabilities\"
    registry,\n   using this document as its reference.\n"
  title: 7.  IANA Considerations
- contents:
  - '8.  References

    '
  - contents:
    - "8.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use
      in RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119,\n
      \             DOI 10.17487/RFC2119, March 1997,\n              <http://www.rfc-editor.org/info/rfc2119>.\n
      \  [RFC3501]  Crispin, M., \"INTERNET MESSAGE ACCESS PROTOCOL - VERSION\n              4rev1\",
      RFC 3501, DOI 10.17487/RFC3501, March 2003,\n              <http://www.rfc-editor.org/info/rfc3501>.\n
      \  [RFC4466]  Melnikov, A. and C. Daboo, \"Collected Extensions to IMAP4\n              ABNF\",
      RFC 4466, DOI 10.17487/RFC4466, April 2006,\n              <http://www.rfc-editor.org/info/rfc4466>.\n
      \  [RFC4469]  Resnick, P., \"Internet Message Access Protocol (IMAP)\n              CATENATE
      Extension\", RFC 4469, DOI 10.17487/RFC4469, April\n              2006, <http://www.rfc-editor.org/info/rfc4469>.\n
      \  [RFC5234]  Crocker, D., Ed. and P. Overell, \"Augmented BNF for Syntax\n
      \             Specifications: ABNF\", STD 68, RFC 5234,\n              DOI 10.17487/RFC5234,
      January 2008,\n              <http://www.rfc-editor.org/info/rfc5234>.\n   [RFC5819]
      \ Melnikov, A. and T. Sirainen, \"IMAP4 Extension for\n              Returning
      STATUS Information in Extended LIST\", RFC 5819,\n              DOI 10.17487/RFC5819,
      March 2010,\n              <http://www.rfc-editor.org/info/rfc5819>.\n   [RFC7888]
      \ Melnikov, A., Ed., \"IMAP4 Non-synchronizing Literals\",\n              RFC
      7888, DOI 10.17487/RFC7888, May 2016,\n              <http://www.rfc-editor.org/info/rfc7888>.\n"
    title: 8.1.  Normative References
  - contents:
    - "8.2.  Informative References\n   [RFC4549]  Melnikov, A., Ed., \"Synchronization
      Operations for\n              Disconnected IMAP4 Clients\", RFC 4549,\n              DOI
      10.17487/RFC4549, June 2006,\n              <http://www.rfc-editor.org/info/rfc4549>.\n"
    title: 8.2.  Informative References
  title: 8.  References
- contents:
  - "Acknowledgements\n   Thanks to Alexey Melnikov, Dave Cridland, Adrien de Croy,
    Michael\n   M. Slusarz, Timo Sirainen, Chris Newman, Pete Maclean, Jamie\n   Nicolson,
    Stu Brandt, Bron Gondwana, Arnt Gulbrandsen, Cyrus Daboo,\n   Jan Kundrat, Brandon
    Long, and Barry Leiba for providing valuable\n   comments.\n"
  title: Acknowledgements
- contents:
  - "Authors' Addresses\n   Jayantheesh SrimushnamBoovaraghamoorthy\n   Samsung Electronics
    America\n   685 US Highway 202/206\n   Bridgewater, NJ  08807\n   United States\n
    \  Email: jayantheesh.sb@gmail.com\n   Narendra Singh Bisht\n   Samsung Electronics
    America\n   685 US Highway 202/206\n   Bridgewater, NJ  08807\n   United States\n
    \  Email: narendrasingh.bisht@gmail.com\n"
  title: Authors' Addresses
