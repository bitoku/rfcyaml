- title: __initial_text__
  contents:
  - "            Prioritized Treatment of Specific OSPF Version 2\n              \
    \      Packets and Congestion Avoidance\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document specifies an Internet Best Current Practices\
    \ for the\n   Internet Community, and requests discussion and suggestions for\n\
    \   improvements.  Distribution of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2005).\n"
- title: Abstract
  contents:
  - "Abstract\n   This document recommends methods that are intended to improve the\n\
    \   scalability and stability of large networks using Open Shortest Path\n   First\
    \ (OSPF) Version 2 protocol.  The methods include processing OSPF\n   Hellos and\
    \ Link State Advertisement (LSA) Acknowledgments at a higher\n   priority compared\
    \ to other OSPF packets, and other congestion\n   avoidance procedures.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction...................................................2\n\
    \   2. Recommendations................................................3\n   3.\
    \ Security Considerations........................................6\n   4. Acknowledgments................................................6\n\
    \   5. Normative References...........................................6\n   6.\
    \ Informative References.........................................7\n   Appendix\
    \ A. LSA Storm: Causes and Impact..........................8\n   Appendix B. List\
    \ of Variables and Values.........................10\n   Appendix C. Other Recommendations\
    \ and Suggestions................11\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   In this document, OSPF refers to OSPFv2 [Ref1].  The scalability\
    \ and\n   stability improvement techniques described here may also apply to\n\
    \   OSPFv3 [Ref2], but that will require further study and operational\n   experience.\n\
    \   A large network running OSPF protocol may occasionally experience the\n  \
    \ simultaneous or near-simultaneous update of a large number of link\n   state\
    \ advertisements, or LSAs.  This is particularly true if OSPF\n   traffic engineering\
    \ extension [Ref3] is used that may significantly\n   increase the number of LSAs\
    \ in the network.  We call this event an\n   LSA storm and it may be initiated\
    \ by an unscheduled failure or a\n   scheduled maintenance event.  The failure\
    \ may be hardware, software,\n   or procedural in nature.\n   The LSA storm causes\
    \ high CPU and memory utilization at the router\n   causing incoming packets to\
    \ be delayed or dropped.  Delayed\n   acknowledgments (beyond the retransmission\
    \ timer value) result in\n   retransmissions, and delayed Hello packets (beyond\
    \ the router-dead\n   interval) result in neighbor adjacencies being declared\
    \ down.  The\n   retransmissions and additional LSA originations result in further\
    \ CPU\n   and memory usage, essentially causing a positive feedback loop,\n  \
    \ which, in the extreme case, may drive the network to an unstable\n   state.\n\
    \   The default value of the retransmission timer is 5 seconds and that\n   of\
    \ the router-dead interval is 40 seconds.  However, recently there\n   has been\
    \ a lot of interest in significantly reducing OSPF convergence\n   time.  As part\
    \ of that plan, much shorter (sub-second) Hello and\n   router-dead intervals\
    \ have been proposed [Ref4].  In such a scenario,\n   it will be more likely for\
    \ Hello packets to be delayed beyond the\n   router-dead interval during network\
    \ congestion caused by an LSA\n   storm.\n   In order to improve the scalability\
    \ and stability of networks, we\n   recommend steps for prioritizing critical\
    \ OSPF packets and avoiding\n   congestion.  The details of the recommendations\
    \ are given in Section\n   2.  A simulation study is reported in [Ref13] that\
    \ quantifies the\n   congestion phenomenon and its impact.  It also studies several\
    \ of the\n   recommendations and shows that they indeed improve the scalability\n\
    \   and stability of networks using OSPF protocol.  [Ref13] is available\n   on\
    \ request by contacting the editor or one of the authors.\n   Appendix A explains\
    \ in more detail LSA storm scenarios, their impact,\n   and points out a few real-life\
    \ examples of control-message storms.\n   Appendix B provides a list of variables\
    \ used in the recommendations\n   and their example values.  Appendix C provides\
    \ some further\n   recommendations and suggestions with similar goals.\n"
- title: 2.  Recommendations
  contents:
  - "2.  Recommendations\n   The recommendations below are intended to improve the\
    \ scalability and\n   stability of large networks using OSPF protocol.  During\
    \ periods of\n   network congestion, they would reduce retransmissions, avoid\
    \ an\n   adjacency to be declared down due to Hello packets being delayed\n  \
    \ beyond the RouterDeadInterval, and take other congestion avoidance\n   steps.\
    \  The recommendations are unordered except that Recommendation\n   2 is to be\
    \ implemented only if Recommendation 1 is not implemented.\n   (1) Classify all\
    \ OSPF packets in two classes: a \"high priority\" class\n       comprising OSPF\
    \ Hello packets and Link State Acknowledgement\n       packets, and a \"low priority\"\
    \ class comprising all other packets.\n       The classification is accomplished\
    \ by examining the OSPF packet\n       header.  While receiving a packet from\
    \ a neighbor and while\n       transmitting a packet to a neighbor, try to process\
    \ a \"high\n       priority\" packet ahead of a \"low priority\" packet.\n   \
    \    The prioritized processing while transmitting may cause OSPF\n       packets\
    \ from a neighbor to be received out of sequence.  If\n       Cryptographic Authentication\
    \ (AuType = 2) is used (as specified\n       in [Ref1]), then successive received\
    \ valid OSPF packets from a\n       neighbor need to have a non-decreasing \"\
    Cryptographic sequence\n       number\".  To comply with this requirement, we\
    \ recommend that in\n       case Cryptographic Authentication (AuType = 2) is\
    \ used [Ref1],\n       prioritized processing not be done at the transmitter.\
    \  This will\n       avoid packets arriving at the receiver out of sequence. \
    \ However,\n       after security processing at the receiver (including sequence\n\
    \       number checking) is complete, the OSPF packets may be kept in a\n    \
    \   \"high priority\" queue or a \"low priority\" queue based on their\n     \
    \  class and processed accordingly.  The benefit of prioritized\n       processing\
    \ is clearly higher in the absence of Cryptographic\n       Authentication since\
    \ in that case prioritization can be\n       implemented both at the transmitter\
    \ and at the receiver.\n       However, even with Cryptographic Authentication\
    \ it will be\n       beneficial to have prioritization only at the receiver (following\n\
    \       security processing).\n   (2) If Recommendation 1 cannot be implemented,\
    \ then reset the\n       inactivity timer for an adjacency whenever any OSPF unicast\n\
    \       packet or any OSPF packet sent to AllSPFRouters over a point-to-\n   \
    \    point link is received over that adjacency instead of resetting\n       the\
    \ inactivity timer only on receipt of the Hello packet.  So\n       OSPF would\
    \ declare the adjacency to be down only if no OSPF\n       unicast packets or\
    \ no OSPF packets sent to AllSPFRouters over a\n       point-to-point link are\
    \ received over that adjacency for a period\n       equaling or exceeding the\
    \ RouterDeadInterval.  The reason for not\n       recommending this proposal in\
    \ conjunction with Recommendation 1\n       is to avoid potential undesirable\
    \ side effects.  One such effect\n       is the delay in discovering the down\
    \ status of an adjacency in a\n       case where no high priority Hello packets\
    \ are being received but\n       the inactivity timer is being reset by other\
    \ stale packets in the\n       low priority queue.\n   (3) Use an exponential\
    \ backoff algorithm for determining the value of\n       the LSA retransmission\
    \ interval (RxmtInterval).  Let R(i)\n       represent the RxmtInterval value\
    \ used during the i-th\n       retransmission of an LSA.  Use the following algorithm\
    \ to compute\n       R(i).\n                    R(1) = Rmin\n                \
    \    R(i+1) = Min(KR(i),Rmax)  for i>=1\n       where K, Rmin, and Rmax are constants\
    \ and the function Min(.,.)\n       represents the minimum value of its two arguments.\
    \  Example\n       values for K, Rmin, and Rmax may be 2, 5, and 40 seconds,\n\
    \       respectively.  Note that the example value for Rmin, the initial\n   \
    \    retransmission interval, is the same as the sample value of\n       RxmtInterval\
    \ in [Ref1].\n       This recommendation is motivated by the observation that\
    \ during a\n       network congestion event caused by control messages, a major\n\
    \       source for sustaining the congestion is the repeated\n       retransmission\
    \ of LSAs.  The use of an exponential backoff\n       algorithm for the LSA retransmission\
    \ interval reduces the rate of\n       LSA retransmissions while the network experiences\
    \ congestion\n       (during which it is more likely that multiple retransmissions\
    \ of\n       the same LSA would happen).  This in turn helps the network get\n\
    \       out of the congested state.\n   (4) Implicit Congestion Detection and\
    \ Action Based on That:  If there\n       is control message congestion at a router,\
    \ its neighbors do not\n       know about that explicitly.  However, they can\
    \ implicitly detect\n       it based on the number of unacknowledged LSAs to this\
    \ router.  If\n       this number exceeds a certain \"high-water mark\", then\
    \ the rate at\n       which LSAs are sent to this router should be reduced\n \
    \      progressively using an exponential backoff mechanism but not\n       below\
    \ a certain minimum rate.  At a future time, if the number of\n       unacknowledged\
    \ LSAs to this router falls below a certain \"low-\n       water mark\", then\
    \ the rate of sending LSAs to this router should\n       be increased progressively,\
    \ again using an exponential backoff\n       mechanism but not above a certain\
    \ maximum rate.  The whole\n       algorithm is given below.  Note that this algorithm\
    \ is to be\n       applied independently to each neighbor and only for unicast\
    \ LSAs\n       sent to a neighbor or LSAs sent to AllSPFRouters over a point-\n\
    \       to-point link.\n       Let,\n       U(t) = Number of unacknowledged LSAs\
    \ to neighbor at time t.\n       H = A high-water mark (in units of number of\
    \ unacknowledged\n           LSAs).\n       L = A low-water mark (in units of\
    \ number of unacknowledged LSAs).\n       G(t) = Gap between sending successive\
    \ LSAs to neighbor at time t.\n       F = The factor by which the above gap is\
    \ to be increased during\n           congestion and decreased after coming out\
    \ of congestion.\n       T = Minimum time that has to elapse before the existing\
    \ gap\n           is considered for change.\n       Gmin = Minimum allowed value\
    \ of gap.\n       Gmax = Maximum allowed value of gap.\n       The equation below\
    \ shows how the gap is to be changed after a\n       time T has elapsed since\
    \ the last change:\n                 _\n                |\n                | Min(FG(t),Gmax)\
    \ if U(t+T) > H\n       G(t+T) = | G(t) if H >= U(t+T) >= L\n                |\
    \ Max(G(t)/F,Gmin) if U(t+T) < L\n                |_\n       Min(.,.) and Max(.,.)\
    \ represent the minimum and maximum values of\n       the two arguments, respectively.\n\
    \       Example values for the various parameters of the algorithm are as\n  \
    \     follows: H = 20, L = 10, F = 2, T = 1 second, Gmin = 20 ms, Gmax\n     \
    \  = 1 second.\n       Recommendations 3 and 4 both slow down LSAs to congested\n\
    \       neighbors based on implicitly detecting the congestion, but they\n   \
    \    have important differences.  Recommendation 3 progressively slows\n     \
    \  down successive retransmissions of the same LSA, whereas\n       Recommendation\
    \ 4 progressively slows down all LSAs (new or\n       retransmission) to a congested\
    \ neighbor.\n   (5) Throttling Adjacencies to Be Brought Up Simultaneously:  If\
    \ a\n       router tries to bring up a large number of adjacencies to its\n  \
    \     neighbors simultaneously, then that may cause severe congestion\n      \
    \ due to database synchronization and LSA flooding activities.  It\n       is\
    \ recommended that during such a situation no more than \"n\"\n       adjacencies\
    \ should be brought up simultaneously.  Once a subset\n       of adjacencies has\
    \ been brought up successfully, newer\n       adjacencies may be brought up as\
    \ long as the number of\n       simultaneous adjacencies being brought up does\
    \ not exceed \"n\".\n       The appropriate value of \"n\" would depend on the\
    \ router\n       processing power, total bandwidth available for control plane\n\
    \       traffic, and propagation delay.  The value of \"n\" should be\n      \
    \ configurable.\n       In the presence of throttling, an important issue is the\
    \ order in\n       which adjacencies are to be formed.  We recommend a First Come\n\
    \       First Served (FCFS) policy based on the order in which the\n       request\
    \ for adjacency formation arrives.  Requests may either be\n       from neighbors\
    \ or self-generated.  Among the self-generated\n       requests, a priority list\
    \ may be used to decide the order in\n       which the requests are to be made.\
    \  However, once an adjacency\n       formation process starts it is not to be\
    \ preempted except for\n       unusual circumstances such as errors or time-outs.\n\
    \   In some of the recommendations above, we refer to point-to-point\n   links.\
    \  Those references should also include cases where a broadcast\n   network is\
    \ to be treated as a point-to-point connection from the\n   standpoint of IP routing\
    \ [Ref5]\n"
- title: 3.  Security Considerations
  contents:
  - "3.  Security Considerations\n   This memo does not create any new security issues\
    \ for the OSPF\n   protocol.\n"
- title: 4.  Acknowledgments
  contents:
  - "4.  Acknowledgments\n   We would like to acknowledge the support and helpful\
    \ comments from\n   OSPF WG chairs Rohit Dube, Acee Lindem, and John Moy; Routing\
    \ Area\n   directors Alex Zinin and Bill Fenner; and IESG reviewers.  We\n   acknowledge\
    \ Vivek Dube,  Mitchell Erblich, Mike Fox, Tony Przygienda,\n   and Krishna Rao\
    \ for comments on previous versions of the document.\n   We also acknowledge Margaret\
    \ Chiosi, Elie Francis, Jeff Han, Beth\n   Munson, Roshan Rao, Moshe Segal, Mike\
    \ Wardlow, and Pat Wirth for\n   collaboration and encouragement in our scalability\
    \ improvement\n   efforts for Link State Protocol-based networks.\n"
- title: 5.  Normative References
  contents:
  - "5.  Normative References\n   [Ref1]  Moy, J., \"OSPF Version 2\", STD 54, RFC\
    \ 2328, April 1998.\n   [Ref2]  Coltun, R., Ferguson, D., and J. Moy, \"OSPF for\
    \ IPv6\", RFC\n           2740, December 1999.\n"
- title: 6.  Informative References
  contents:
  - "6.  Informative References\n   [Ref3]  Katz, D., Kompella, K., and D. Yeung,\
    \ \"Traffic Engineering\n           (TE) Extensions to OSPF Version 2\", RFC 3630,\
    \ September 2003.\n   [Ref4]  C. Alaettinoglu, V. Jacobson and H. Yu, \"Towards\
    \ Millisecond\n           IGP Convergence\", Work in Progress.\n   [Ref5]  N.\
    \ Shen, A. Lindem, J. Yuan, A. Zinin, R. White and S.\n           Previdi, \"\
    Point-to-point operation over LAN in link-state\n           routing protocols\"\
    , Work in Progress.\n   [Ref6]  Pappalardo, D., \"AT&T, customers grapple with\
    \ ATM net\n           outage\", Network World, February 26, 2001.\n   [Ref7] \
    \ \"AT&T announces cause of frame-relay network outage,\" AT&T\n           Press\
    \ Release, April 22, 1998.\n   [Ref8]  Cholewka, K., \"MCI Outage Has Domino Effect\"\
    , Inter@ctive\n           Week, August 20, 1999.\n   [Ref9]  Jander, M., \"In\
    \ Qwest Outage, ATM Takes Some Heat\", Light\n           Reading, April 6, 2001.\n\
    \   [Ref10] A. Zinin and M. Shand, \"Flooding Optimizations in Link-State\n  \
    \         Routing Protocols\", Work in Progress.\n   [Ref11] Pillay-Esnault, P.,\
    \ \"OSPF Refresh and Flooding Reduction in\n           Stable Topologies\", RFC\
    \ 4136, July 2005.\n   [Ref12] G. Ash, G. Choudhury, V. Sapozhnikova, M. Sherif,\
    \ A. Maunder,\n           V. Manral, \"Congestion Avoidance & Control for OSPF\n\
    \           Networks\", Work in Progress.\n   [Ref13] G. Choudhury, G. Ash, V.\
    \ Manral, A. Maunder and V.\n           Sapozhnikova, \"Prioritized Treatment\
    \ of Specific OSPF Packets\n           and Congestion Avoidance: Algorithms and\
    \ Simulations\", AT&T\n           Technical Report, August 2003.\n   [Ref14] Nichols,\
    \ K., Blake, S., Baker, F., and D. Black, \"Definition\n           of the Differentiated\
    \ Services Field (DS Field) in the IPv4\n           and IPv6 Headers\", RFC 2474,\
    \ December 1998.\n"
- title: 'Appendix A.  LSA Storm: Causes and Impact'
  contents:
  - "Appendix A.  LSA Storm: Causes and Impact\n   An LSA storm may be initiated due\
    \ to many reasons.  Here are some\n   examples:\n   (a) one or more link failures\
    \ due to fiber cuts,\n   (b) one or more router failures for some reason, e.g.,\
    \ software crash\n       or some type of disaster (including power outage) in\
    \ an office\n       complex hosting many routers,\n   (c) link/router flapping,\n\
    \   (d) requirement of taking down and later bringing back many routers\n    \
    \   during a software/hardware upgrade,\n   (e) near synchronization of the periodic\
    \ 1800-second LSA refreshes of\n       a subset of LSAs,\n   (f) refresh of all\
    \ LSAs in the system during a change in software\n       version,\n   (g) injecting\
    \ a large number of external routes to OSPF due to a\n       procedural error,\n\
    \   (h) Router ID changes causing a large number of LSA re-originations\n    \
    \   (possibly LSA purges as well depending on the implementation).\n   In addition\
    \ to the LSAs originated as a direct result of link/router\n   failures, there\
    \ may be other indirect LSAs as well.  One example in\n   MPLS networks is traffic\
    \ engineering LSAs [Ref3] originated at other\n   links as a result of significant\
    \ changes in reserved bandwidth.\n   These result from rerouting of Label Switched\
    \ Paths (LSPs) that went\n   down during the link/router failure.  The LSA storm\
    \ causes high CPU\n   and memory utilization at the router processor causing incoming\n\
    \   packets to be delayed or dropped.  Delayed acknowledgments (beyond\n   the\
    \ retransmission timer value) results in retransmissions, and\n   delayed Hello\
    \ packets (beyond the Router-Dead interval) results in\n   links being declared\
    \ down.  A trunk-down event causes router LSA\n   origination by its end-point\
    \ routers.  If traffic engineering LSAs\n   are used for each link, then that\
    \ type of LSA would also be\n   originated by the end-point routers and potentially\
    \ elsewhere as well\n   due to significant changes in reserved bandwidths at other\
    \ links\n   caused by the failure and reroute of LSPs originally using the failed\n\
    \   trunk.  Eventually, when the link recovers that would also trigger\n   additional\
    \ router LSAs and traffic engineering LSAs.\n   The retransmissions and additional\
    \ LSA originations result in further\n   CPU and memory usage, essentially causing\
    \ a positive feedback loop.\n   We define the LSA storm size as the number of\
    \ LSAs in the original\n   storm, not counting any additional LSAs resulting from\
    \ the feedback\n   loop described above.  If the LSA storm is too large, then\
    \ the\n   positive feedback loop mentioned above may be large enough to\n   indefinitely\
    \ sustain a large CPU and memory utilization at many\n   routers in the network,\
    \ thereby driving the network to an unstable\n   state.  In the past, network\
    \ outage events have been reported in IP\n   and ATM networks using link-state\
    \ protocols such as OSPF,\n   Intermediate System to Intermediate System (IS-IS),\
    \ Private Network-\n   Network Interface (PNNI), or some proprietary variants.\
    \  See for\n   example [Ref6-Ref9].  In many of these examples, large-scale flooding\n\
    \   of LSAs or other similar control messages (either naturally or\n   triggered\
    \ by some bug or inappropriate procedure) have been partly or\n   fully responsible\
    \ for network instability and outage.\n   In [Ref13], a simulation model is used\
    \ to show that there is a\n   certain LSA storm size threshold above which the\
    \ network may show\n   unstable behavior caused by a large number of retransmissions,\
    \ link\n   failures due to missed Hello packets, and subsequent link recoveries.\n\
    \   It is also shown that the LSA storm size causing instability may be\n   substantially\
    \ increased by providing prioritized treatment to Hello\n   and LSA Acknowledgment\
    \ packets and by using an exponential backoff\n   algorithm for determining the\
    \ LSA retransmission interval.  If it is\n   not possible to prioritize Hello\
    \ packets, then resetting the\n   inactivity timer on receiving any valid OSPF\
    \ packets can also provide\n   the same benefit.  Furthermore, if we prioritize\
    \ Hello packets, then\n   even when the network operates somewhat above the stability\n\
    \   threshold, links are not declared down due to missed Hellos.  This\n   implies\
    \ that even though there is control plane congestion due to\n   many retransmissions,\
    \ the data plane stays up and no new LSAs are\n   originated (besides the ones\
    \ in the original storm and the\n   refreshes).  These observations support the\
    \ first three\n   recommendations in Section 2.  The authors of this document\
    \ have also\n   done simulations to verify that the other recommendations in Section\n\
    \   2 help avoid congestion and allow a graceful exit from a congested\n   state.\n\
    \   One might argue that the scalability issue of large networks should\n   be\
    \ solved solely by dividing the network hierarchically into multiple\n   areas\
    \ so that flooding of LSAs remains localized within areas.\n   However, this approach\
    \ increases the network management and design\n   complexity and may result in\
    \ less optimal routing between areas.\n   Also, Autonomous System External (ASE)\
    \ LSAs are flooded throughout\n   the AS, and it may be a problem if there are\
    \ large numbers of them.\n   Furthermore, a large number of summary LSAs may need\
    \ to be flooded\n   across areas, and their numbers would increase significantly\
    \ if\n   multiple Area Border Routers are employed for the purpose of\n   reliability.\
    \  Thus, it is important to allow the network to grow\n   towards as large a size\
    \ as possible under a single area.\n   The recommendations in the document are\
    \ synergistic with a broader\n   set of scalability and stability improvement\
    \ proposals.  [Ref10]\n   proposes flooding overhead reduction in case more than\
    \ one interface\n   goes to the same neighbor.  [Ref11] proposes a mechanism for\
    \ greatly\n   reducing LSA refreshes in stable topologies.\n   [Ref12] proposes\
    \ a wide range of congestion control and failure\n   recovery mechanisms (some\
    \ of those ideas are covered in this\n   document, but [Ref12] has other ideas\
    \ not covered here).\n"
- title: Appendix B.  List of Variables and Values
  contents:
  - "Appendix B.  List of Variables and Values\n   F    = The factor by which the\
    \ gap between sending successive LSAs to\n          a neighbor is to be increased\
    \ during congestion and decreased\n          after coming out of congestion (used\
    \ in Recommendation 4).\n          Example value is 2.\n   G(t) = Gap between\
    \ sending successive LSAs to a neighbor at time t\n          (used in Recommendation\
    \ 4).\n   Gmax = Maximum allowed value of gap between sending successive LSAs\n\
    \          to a neighbor (used in Recommendation 4).  Example value is 1\n   \
    \       second.\n   Gmin = Minimum allowed value of gap between sending successive\
    \ LSAs\n          to a neighbor (used in Recommendation 4).  Example value is\
    \ 20\n          ms.\n   H    = A high-water mark (in units of number of unacknowledged\
    \ LSAs).\n          Exceeding this mark would trigger a potential increase in\
    \ the\n          gap between sending successive LSAs to a neighbor.  (used in\n\
    \          Recommendation 4).  Example value is 20.\n   K    = A multiplicative\
    \ constant used in increasing the RxmtInterval\n          value used during successive\
    \ retransmissions of the same LSA\n          (used in Recommendation 3).  Example\
    \ value is 2.\n   L    = A low-water mark (in units of number of unacknowledged\
    \ LSAs)\n          Dropping below this mark would trigger a potential decrease\
    \ in\n          the gap between sending successive LSAs to a neighbor.  (used\n\
    \          in Recommendation 4).  Example value is 10.\n   n    = Upper limit\
    \ on the number of adjacencies to be brought up\n          simultaneously (used\
    \ in Recommendation 5).\n   R(i) = RxmtInterval value used during the i-th retransmission\
    \ of an\n          LSA (used in Recommendation 3).\n   Rmax = The maximum allowed\
    \ value of RxmtInterval (used in\n          Recommendation 3).  Example value\
    \ is 40 seconds.\n   Rmin = The minimum allowed value of RxmtInterval (used in\n\
    \          Recommendation 3).  Example value is 5 seconds.\n   T    = Minimum\
    \ time that has to elapse before the existing gap\n          between sending successive\
    \ LSAs to a neighbor is considered\n          for change (used in Recommendation\
    \ 4).  Example value is 1\n          second.\n   U(t) = Number of unacknowledged\
    \ LSAs to a neighbor at time t (used in\n          Recommendation 4).\n"
- title: Appendix C.  Other Recommendations and Suggestions
  contents:
  - "Appendix C.  Other Recommendations and Suggestions\n   (1) Explicit Marking:\
    \  In Section 2, we recommended that OSPF packets\n       be classified to \"\
    high\" and \"low\" priority classes based on\n       examining the OSPF packet\
    \ header.  In some cases (particularly in\n       the receiver), this examination\
    \ may be computationally costly.\n       An alternative would be the use of different\
    \ TOS/Precedence field\n       settings for the two priority classes.  [Ref1]\
    \ recommends setting\n       the TOS field to 0 and the Precedence field to 6\
    \ for all OSPF\n       packets.  We recommend this same setting for the \"low\"\
    \ priority\n       OSPF packets and a different setting for the \"high\" priority\
    \ OSPF\n       packets in order to be able to classify them separately without\n\
    \       having to examine the OSPF packet header.  Two examples are given\n  \
    \     below:\n       Example 1: For \"low\" priority packets, set TOS field to\
    \ 0 and\n                  Precedence field to 6, and for \"high\" priority packets\n\
    \                  set TOS field to 4 and Precedence field to 6.\n       Example\
    \ 2: For \"low\" priority packets, set TOS field to 0 and\n                  Precedence\
    \ field to 6, and for \"high\" priority packets\n                  set TOS field\
    \ to 0 and Precedence field to 7.\n       Note that the TOS/Precedence bits have\
    \ been redefined by Diffserv\n       (RFC 2474, [Ref14]).  Also note that the\
    \ different TOS/Precedence\n       field settings suggested above only need to\
    \ be agreed among the\n       systems on the link.  This recommendation is not\
    \ needed to be\n       followed if it is easy to examine the OSPF packet header\
    \ and\n       thereby separately classify \"high\" and \"low\" priority packets.\n\
    \   (2) Further Prioritization of OSPF Packets: Besides the packets\n       designated\
    \ as \"high\" priority in Recommendation 1 of Section 2,\n       there may be\
    \ a need for further priority separation among the\n       \"low\" priority OSPF\
    \ packets.  We recommend the use of three\n       priority classes: \"high\",\
    \ \"medium\" and \"low\".  While receiving a\n       packet from a neighbor and\
    \ while transmitting a packet to a\n       neighbor, try to process a \"high priority\"\
    \ packet ahead of\n       \"medium\" and \"low\" priority packets and a \"medium\"\
    \ priority\n       packet ahead of \"low priority\" packets.  The \"high\" priority\n\
    \       packets are as designated in Recommendation 1 of Section 2.  We\n    \
    \   provide below two candidate examples for \"medium\" priority\n       packets.\
    \  All OSPF packets not designated as \"high\" or \"medium\"\n       priority\
    \ are \"low\" priority.  If Cryptographic Authentication\n       (AuType = 2)\
    \ is used (as specified in [Ref1]), then prioritized\n       treatment is to be\
    \ provided only at the receiver and after\n       security processing, but not\
    \ at the transmitter since that may\n       cause packets to arrive out of sequence\
    \ and violate the\n       requirements of \"Autype = 2\".\n       One example\
    \ of \"medium\" priority packet is the Database\n       Description (DBD) packet\
    \ from a slave (during the database\n       synchronization process) that is used\
    \ as an acknowledgment.\n       A second example is an LSA carrying intra-area\
    \ topology change\n       information (this may trigger SPF calculation and rerouting\
    \ of\n       Label Switched Paths, so fast processing of this packet may\n   \
    \    improve OSPF/Label Distribution Protocol (LDP) convergence\n       times).\
    \  However, if the processing cost of identifying and\n       separately queueing\
    \ the LSA in this example is deemed to be high,\n       then the implementer may\
    \ decide not to do it.\n   (3) Processing a Large Number of LSA Purges: Occasionally,\
    \ some\n       events in the network, such as router ID changes, may result in\
    \ a\n       large number of LSA re-originations and LSA purges.  In such a\n \
    \      scenario, one may consider processing LSAs in different order,\n      \
    \ e.g., processing LSA purges ahead of LSA originations.  We,\n       however,\
    \ do not recommend out-of-order LSA processing for several\n       reasons.  First,\
    \ detecting the LSA type ahead of queueing may be\n       computationally expensive.\
    \  Out-of-order processing may also\n       cause subtle bugs.  We do not want\
    \ to recommend a major change in\n       the LSA processing paradigm for a relatively\
    \ rare event such as\n       router ID change.  However, a router with a changing\
    \ ID may flush\n       the old LSAs gradually without causing a storm.\n"
- title: Contributing Authors and Their Addresses
  contents:
  - "Contributing Authors and Their Addresses\n   In addition to the editor, several\
    \ people contributed to this\n   document.  The names and contact information\
    \ of all authors are given\n   below.\n   Anurag S. Maunder\n   Erlang Technology\n\
    \   2880 Scott Boulevard\n   Santa Clara, CA 95052\n   USA\n   Phone: (408) 420-7617\n\
    \   EMail: anuragm@erlangtech.com\n   Gerald R. Ash\n   AT&T\n   Room D5-2A01\n\
    \   200 Laurel Avenue\n   Middletown, NJ, 07748\n   USA\n   Phone: (732) 420-4578\n\
    \   EMail: gash@att.com\n   Vishwas Manral\n   Sinett Corp,\n   2/1 Embassy Icon\
    \ Annex,\n   Infantry Road,\n   Bangalore 560 001\n   India\n   Phone: +91-(805)-137-7023\n\
    \   EMail: vishwas@sinett.com\n   Vera D. Sapozhnikova\n   AT&T\n   Room C5-2C29\n\
    \   200 Laurel Avenue\n   Middletown, NJ, 07748\n   USA\n   Phone: (732) 420-2653\n\
    \   EMail: sapozhnikova@att.com\n"
- title: Editor's Address
  contents:
  - "Editor's Address\n   Gagan L. Choudhury\n   AT&T\n   Room D5-3C21\n   200 Laurel\
    \ Avenue\n   Middletown, NJ, 07748\n   USA\n   Phone: (732) 420-3721\n   EMail:\
    \ gchoudhury@att.com\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2005).\n   This\
    \ document is subject to the rights, licenses and restrictions\n   contained in\
    \ BCP 78, and except as set forth therein, the authors\n   retain all their rights.\n\
    \   This document and the information contained herein are provided on an\n  \
    \ \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n  \
    \ OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY AND THE INTERNET\n   ENGINEERING\
    \ TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED,\n   INCLUDING BUT NOT\
    \ LIMITED TO ANY WARRANTY THAT THE USE OF THE\n   INFORMATION HEREIN WILL NOT\
    \ INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY OR FITNESS\
    \ FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ procedures with respect to rights in RFC documents can be\n   found in BCP 78\
    \ and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat and any\n\
    \   assurances of licenses to be made available, or the result of an\n   attempt\
    \ made to obtain a general license or permission for the use of\n   such proprietary\
    \ rights by implementers or users of this\n   specification can be obtained from\
    \ the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n   The IETF\
    \ invites any interested party to bring to its attention any\n   copyrights, patents\
    \ or patent applications, or other proprietary\n   rights that may cover technology\
    \ that may be required to implement\n   this standard.  Please address the information\
    \ to the IETF at ietf-\n   ipr@ietf.org.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
