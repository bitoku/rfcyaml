- title: __initial_text__
  contents:
  - '                     Issues with IP Address Sharing

    '
- title: Abstract
  contents:
  - "Abstract\n   The completion of IPv4 address allocations from IANA and the Regional\n\
    \   Internet Registries (RIRs) is causing service providers around the\n   world\
    \ to question how they will continue providing IPv4 connectivity\n   service to\
    \ their subscribers when there are no longer sufficient IPv4\n   addresses to\
    \ allocate them one per subscriber.  Several possible\n   solutions to this problem\
    \ are now emerging based around the idea of\n   shared IPv4 addressing.  These\
    \ solutions give rise to a number of\n   issues, and this memo identifies those\
    \ common to all such address\n   sharing approaches.  Such issues include application\
    \ failures,\n   additional service monitoring complexity, new security\n   vulnerabilities,\
    \ and so on.  Solution-specific discussions are out of\n   scope.\n   Deploying\
    \ IPv6 is the only perennial way to ease pressure on the\n   public IPv4 address\
    \ pool without the need for address sharing\n   mechanisms that give rise to the\
    \ issues identified herein.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n   published for informational purposes.\n   This document is a product\
    \ of the Internet Engineering Task Force\n   (IETF).  It represents the consensus\
    \ of the IETF community.  It has\n   received public review and has been approved\
    \ for publication by the\n   Internet Engineering Steering Group (IESG).  Not\
    \ all documents\n   approved by the IESG are a candidate for any level of Internet\n\
    \   Standard; see Section 2 of RFC 5741.\n   Information about the current status\
    \ of this document, any errata,\n   and how to provide feedback on it may be obtained\
    \ at\n   http://www.rfc-editor.org/info/rfc6269.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2011 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction . . . . . . . . . . . . . . . . . . .\
    \ . . . . . .  4\n   2.  Shared Addressing Solutions  . . . . . . . . . . . .\
    \ . . . . .  4\n   3.  Analysis of Issues as They Relate to First and Third\n\
    \       Parties  . . . . . . . . . . . . . . . . . . . . . . . . . . .  6\n  \
    \ 4.  Content Provider Example . . . . . . . . . . . . . . . . . . .  8\n   5.\
    \  Port Allocation  . . . . . . . . . . . . . . . . . . . . . . .  8\n     5.1.\
    \  Outgoing Ports . . . . . . . . . . . . . . . . . . . . . .  9\n     5.2.  Incoming\
    \ Ports . . . . . . . . . . . . . . . . . . . . . . 10\n       5.2.1.  Port Negotiation\
    \ . . . . . . . . . . . . . . . . . . . 11\n       5.2.2.  Connection to a Well-Known\
    \ Port Number . . . . . . . . 12\n       5.2.3.  Port Discovery Mechanisms  .\
    \ . . . . . . . . . . . . . 12\n   6.  Impact on Applications . . . . . . . .\
    \ . . . . . . . . . . . . 12\n   7.  Geo-location and Geo-proximity . . . . .\
    \ . . . . . . . . . . . 14\n   8.  Tracking Service Usage . . . . . . . . . .\
    \ . . . . . . . . . . 15\n   9.  ICMP . . . . . . . . . . . . . . . . . . . .\
    \ . . . . . . . . . 15\n   10. MTU  . . . . . . . . . . . . . . . . . . . . .\
    \ . . . . . . . . 16\n   11. Fragmentation  . . . . . . . . . . . . . . . . .\
    \ . . . . . . . 16\n   12. Traceability . . . . . . . . . . . . . . . . . . .\
    \ . . . . . . 17\n   13. Security . . . . . . . . . . . . . . . . . . . . . .\
    \ . . . . . 18\n     13.1. Abuse Logging and Penalty Boxes  . . . . . . . . .\
    \ . . . . 18\n     13.2. Authentication . . . . . . . . . . . . . . . . . . .\
    \ . . . 19\n     13.3. Spam . . . . . . . . . . . . . . . . . . . . . . . . .\
    \ . . 19\n     13.4. Port Randomization . . . . . . . . . . . . . . . . . . .\
    \ . 19\n     13.5. IPsec  . . . . . . . . . . . . . . . . . . . . . . . . . .\
    \ 20\n     13.6. Policing Forwarding Behavior . . . . . . . . . . . . . . . 20\n\
    \   14. Transport Issues . . . . . . . . . . . . . . . . . . . . . . . 20\n  \
    \   14.1. Parallel Connections . . . . . . . . . . . . . . . . . . . 20\n    \
    \ 14.2. Serial Connections . . . . . . . . . . . . . . . . . . . . 20\n     14.3.\
    \ TCP Control Block Sharing  . . . . . . . . . . . . . . . . 21\n   15. Reverse\
    \ DNS  . . . . . . . . . . . . . . . . . . . . . . . . . 21\n   16. Load Balancing\
    \ . . . . . . . . . . . . . . . . . . . . . . . . 21\n   17. IPv6 Transition Issues\
    \ . . . . . . . . . . . . . . . . . . . . 21\n   18. Introduction of Single Points\
    \ of Failure . . . . . . . . . . . 22\n   19. State Maintenance Reduces Battery\
    \ Life . . . . . . . . . . . . 22\n   20. Support of Multicast . . . . . . . .\
    \ . . . . . . . . . . . . . 22\n   21. Support of Mobile-IP . . . . . . . . .\
    \ . . . . . . . . . . . . 22\n   22. Security Considerations  . . . . . . . .\
    \ . . . . . . . . . . . 23\n   23. Contributors . . . . . . . . . . . . . . .\
    \ . . . . . . . . . . 23\n   24. Acknowledgments  . . . . . . . . . . . . . .\
    \ . . . . . . . . . 23\n   25. Informative References . . . . . . . . . . . .\
    \ . . . . . . . . 23\n   Appendix A.  Classes of Address Sharing Solution . .\
    \ . . . . . . . 27\n   Appendix B.  Address Space Multiplicative Factor . . .\
    \ . . . . . . 27\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   Allocations of IPv4 addresses from the Internet Assigned\
    \ Numbers\n   Authority (IANA) were completed on February 3, 2011 [IPv4_Pool].\n\
    \   Allocations from Regional Internet Registries (RIRs) are anticipated\n   to\
    \ be complete around a year later, although the exact date will vary\n   from\
    \ registry to registry.  This is causing service providers around\n   the world\
    \ to start to question how they will continue providing IPv4\n   connectivity\
    \ service to their subscribers when there are no longer\n   sufficient IPv4 addresses\
    \ to allocate them one per subscriber.\n   Several possible solutions to this\
    \ problem are now emerging based\n   around the idea of shared IPv4 addressing.\
    \  These solutions give rise\n   to a number of issues, and this memo identifies\
    \ those common to all\n   such address sharing approaches and collects them in\
    \ a single\n   document.\n   Deploying IPv6 is the only perennial way to ease\
    \ pressure on the\n   public IPv4 address pool without the need for address sharing\n\
    \   mechanisms that give rise to the issues identified herein.  In the\n   short\
    \ term, maintaining growth of IPv4 services in the presence of\n   IPv4 address\
    \ depletion will require address sharing.  Address sharing\n   will cause issues\
    \ for end-users, service providers, and third parties\n   such as law enforcement\
    \ agencies and content providers.  This memo is\n   intended to highlight and\
    \ briefly discuss these issues.\n   Increased IPv6 deployment should reduce the\
    \ burden being placed on an\n   address sharing solution, and should reduce the\
    \ costs of operating\n   that solution.  Increasing IPv6 deployment should cause\
    \ a reduction\n   in the number of concurrent IPv4 sessions per subscriber.  If\
    \ the\n   percentage of end-to-end IPv6 traffic significantly increases, so\n\
    \   that the volume of IPv4 traffic begins decreasing, then the number of\n  \
    \ IPv4 sessions will decrease.  The smaller the number of concurrent\n   IPv4\
    \ sessions per subscriber, the higher the number of subscribers\n   able to share\
    \ the same IPv4 public address, and consequently, the\n   lower the number of\
    \ IPv4 public addresses required.  However, this\n   effect will only occur for\
    \ subscribers who have both an IPv6 access\n   and a shared IPv4 access.  This\
    \ motivates a strategy to\n   systematically bind a shared IPv4 access to an IPv6\
    \ access.  It is\n   difficult to foresee to what extent growing IPv6 traffic\
    \ will reduce\n   the number of concurrent IPv4 sessions, but in any event, IPv6\n\
    \   deployment and use should reduce the pressure on the available public\n  \
    \ IPv4 address pool.\n"
- title: 2.  Shared Addressing Solutions
  contents:
  - "2.  Shared Addressing Solutions\n   In many networks today, a subscriber is provided\
    \ with a single public\n   IPv4 address at their home or small business.  For\
    \ instance, in fixed\n   broadband access, an IPv4 public address is assigned\
    \ to each CPE\n   (Customer Premises Equipment).  CPEs embed a NAT function that\
    \ is\n   responsible for translating private IPv4 addresses ([RFC1918]\n   addresses)\
    \ assigned to hosts within the local network, to the public\n   IPv4 address assigned\
    \ by the service provider (and vice versa).\n   Therefore, devices located with\
    \ the LAN share the single public IPv4\n   address and they are all associated\
    \ with a single subscriber account\n   and a single network operator.\n   A number\
    \ of proposals currently under consideration in the IETF rely\n   upon the mechanism\
    \ of multiplexing multiple subscribers' connections\n   over a smaller number\
    \ of shared IPv4 addresses.  This is a\n   significant change.  These proposals\
    \ include Carrier Grade NAT (CGN\n   a.k.a. LSN for Large Scale NAT) [LSN-REQS],\
    \ Dual-Stack Lite\n   [DS-Lite], NAT64 [RFC6145] [RFC6146], Address+Port (A+P)\
    \ proposals\n   [A+P] [PORT-RANGE], and Stateless Address Mapping [SAM].  Appendix\
    \ A\n   and Appendix B provide a classification of these different types of\n\
    \   solutions and discuss some of the design considerations to be borne\n   in\
    \ mind when deploying large-scale address sharing.  Whether we're\n   talking\
    \ about DS-Lite, A+P, NAT64, or CGN isn't especially important\n   -- it's the\
    \ view from the outside that matters, and given that, most\n   of the issues identified\
    \ below apply regardless of the specific\n   address sharing scenario in question.\n\
    \   In these new proposals, a single public IPv4 address would be shared\n   by\
    \ multiple homes or small businesses (i.e., multiple subscribers),\n   so the\
    \ operational paradigm described above would no longer apply.\n   In this document,\
    \ we refer to this new paradigm as large-scale\n   address sharing.  All these\
    \ proposals extend the address space by\n   adding port information; they differ\
    \ in the way they manage the port\n   value.\n   Security issues associated with\
    \ NAT have long been documented (see\n   [RFC2663] and [RFC2993]).  However, sharing\
    \ IPv4 addresses across\n   multiple subscribers by any means, either moving the\
    \ NAT\n   functionality from the home gateway to the core of the service\n   provider\
    \ network or restricting the port choice in the subscriber's\n   NAT, creates\
    \ additional issues for subscribers, content providers,\n   and network operators.\
    \  Many of these issues are created today by\n   public Wi-Fi hotspot deployments.\
    \  As such large-scale address\n   sharing solutions become more widespread in\
    \ the face of IPv4 address\n   depletion, these issues will become both more severe\
    \ and more\n   commonly felt.  NAT issues in the past typically only applied to\
    \ a\n   single legal entity; as large-scale address sharing becomes more\n   prevalent,\
    \ these issues will increasingly span across multiple legal\n   entities simultaneously.\n\
    \   All large-scale address sharing proposals share technical and\n   operational\
    \ issues, and these are addressed in the sections that\n   follow.  These issues\
    \ are common to any service-provider NAT,\n   enterprise NAT, and also non-NAT\
    \ solutions that share individual IPv4\n   addresses across multiple subscribers.\
    \  This document is intended to\n   bring all of these issues together in one\
    \ place.\n"
- title: 3.  Analysis of Issues as They Relate to First and Third Parties
  contents:
  - "3.  Analysis of Issues as They Relate to First and Third Parties\n   In this\
    \ section, we present an analysis of whether the issues\n   identified in the\
    \ remainder of this document are applicable to the\n   organization deploying\
    \ the shared addressing mechanism (and by\n   extension their subscribers) and/or\
    \ whether these issues impact third\n   parties (e.g., content providers, law\
    \ enforcement agencies, etc.).\n   In this analysis, issues that affect end-users\
    \ are deemed to affect\n   first parties, as end-users can be expected to complain\
    \ to their\n   service provider when problems arise.  Where issues can expect\
    \ to be\n   foreseen and addressed by the party deploying the shared addressing\n\
    \   solution, they are not attributed.\n   In Figure 1, we have also tried to\
    \ indicate (with 'xx') where issues\n   are newly created in addition to what\
    \ could be expected from the\n   introduction of a traditional NAT device.  Issues\
    \ marked with a\n   single 'x' are already present today in the case of typical\
    \ CPE NAT;\n   however, they can be expected to be more severe and widespread\
    \ in the\n   case of large-scale address sharing.\n   +------------------------------------------------+--------+---------+\n\
    \   |                   Issue                        |   1st  |   3rd   |\n  \
    \ |                                                |  party | parties |\n   +------------------------------------------------+--------+---------+\n\
    \   | Restricted allocations of outgoing             |    x   |         |\n  \
    \ | ports will impact performance for end-users    |        |         |\n   |\
    \                                                |        |         |\n   | Incoming\
    \ port negotiation mechanisms may fail  |    xx  |         |\n   |           \
    \                                     |        |         |\n   | Incoming connections\
    \ to Assigned Ports will    |    x   |         |\n   | not work              \
    \                         |        |         |\n   |                         \
    \                       |        |         |\n   | Port discovery mechanisms will\
    \ not work        |    x   |         |\n   |                                 \
    \               |        |         |\n   | Some applications will fail to operate\
    \         |    x   |    x    |\n   |                                         \
    \       |        |         |\n   | Assumptions about parallel/serial connections\
    \  |    x   |    x    |\n   | may fail                                       |\
    \        |         |\n   |                                                |  \
    \      |         |\n   +------------------------------------------------+--------+---------+\n\
    \   +------------------------------------------------+--------+---------+\n  \
    \ |                   Issue                        |   1st  |   3rd   |\n   |\
    \                                                |  party | parties |\n   +------------------------------------------------+--------+---------+\n\
    \   | TCP control block sharing will be affected     |    x   |    x    |\n  \
    \ |                                                |        |         |\n   |\
    \ Reverse DNS will be affected                   |    x   |    x    |\n   |  \
    \                                              |        |         |\n   | Inbound\
    \ ICMP will fail in many cases           |    x   |    x    |\n   |          \
    \                                      |        |         |\n   | Amplification\
    \ of security issues will occur    |    xx  |    xx   |\n   |                \
    \                                |        |         |\n   | Fragmentation will\
    \ require special handling    |    x   |         |\n   |                     \
    \                           |        |         |\n   | Single points of failure\
    \ and increased         |    x   |         |\n   | network instability may occur\
    \                  |        |         |\n   |                                \
    \                |        |         |\n   | Port randomization will be affected\
    \            |    x   |         |\n   |                                      \
    \          |        |         |\n   | Service usage monitoring and abuse logging\
    \     |    xx  |    xx   |\n   | will be impacted for all elements in the chain\
    \ |        |         |\n   | between service provider and content provider  |\
    \        |         |\n   |                                                |  \
    \      |         |\n   | Penalty boxes will no longer work              |    xx\
    \  |    xx   |\n   |                                                |        |\
    \         |\n   | Spam blacklisting will be affected             |    xx  |  \
    \  xx   |\n   |                                                |        |    \
    \     |\n   | Geo-location services will be impacted         |    xx  |    xx\
    \   |\n   |                                                |        |        \
    \ |\n   | Geo-proximity mechanisms will be impacted      |    xx  |    xx   |\n\
    \   |                                                |        |         |\n  \
    \ | Load balancing algorithms may be impacted      |        |    xx   |\n   |\
    \                                                |        |         |\n   | Authentication\
    \ mechanisms may be impacted      |        |    x    |\n   |                 \
    \                               |        |         |\n   | Traceability of network\
    \ usage and abusage will |        |    xx   |\n   | be affected              \
    \                      |        |         |\n   |                            \
    \                    |        |         |\n   | IPv6 transition mechanisms will\
    \ be affected    |    xx  |         |\n   |                                  \
    \              |        |         |\n   | Frequent keep-alives will reduce battery\
    \ life  |    x   |         |\n   |                                           \
    \     |        |         |\n   +------------------------------------------------+--------+---------+\n\
    \      Figure 1: Shared addressing issues for first and third parties\n   As can\
    \ be seen from Figure 1, deployment of large-scale address\n   sharing will create\
    \ almost as many problems for third parties as it\n   does for the service provider\
    \ deploying the address sharing\n   mechanism.  Several of these issues are specific\
    \ to the introduction\n   of large-scale address sharing as well.  All of these\
    \ issues are\n   discussed in further detail below.\n"
- title: 4.  Content Provider Example
  contents:
  - "4.  Content Provider Example\n   Taking a content provider as an example of a\
    \ third party, and\n   focusing on the issues that are created specifically by\
    \ the presence\n   of large-scale address sharing, we identify the following issues\
    \ as\n   being of particular concern:\n   o  Degraded geo-location for targeted\
    \ advertising and licensed\n      content restrictions (see Section 7).\n   o\
    \  Additional latency due to indirect routing and degraded geo-\n      proximity\
    \ (see Section 7).\n   o  Exposure to new amplification attacks (see Section 13).\n\
    \   o  Service usage monitoring is made more complicated (see Section 8).\n  \
    \ o  Incoming port negotiation mechanisms may fail (see Section 5.2.1).\n   o\
    \  IP blocking for abuse/spam will cause collateral damage (see\n      Section\
    \ 13).\n   o  Load balancing algorithms may be impacted (see Section 16).\n  \
    \ o  Traceability of network usage and abuse will be impacted (see\n      Section\
    \ 12).\n"
- title: 5.  Port Allocation
  contents:
  - "5.  Port Allocation\n   When we talk about port numbers, we need to make a distinction\n\
    \   between outgoing connections and incoming connections.  For outgoing\n   connections,\
    \ the actual source port number used is usually\n   irrelevant.  (While this is\
    \ true today, in a port-range solution, it\n   is necessary for the source port\
    \ to be within the allocated range.)\n   But for incoming connections, the specific\
    \ port numbers allocated to\n   subscribers matter because they are part of external\
    \ referrals (used\n   by third parties to contact services run by the subscribers).\n\
    \   The total number of subscribers able to share a single IPv4 address\n   will\
    \ depend upon assumptions about the average number of ports\n   required per active\
    \ subscriber, and the average number of\n   simultaneously active subscribers.\
    \  It is important to realize that\n   the TCP design makes it undesirable for\
    \ clients to re-use ports while\n   they remain in the TIME-WAIT state (typically\
    \ 4 minutes after the\n   connection has concluded).  TIME-WAIT state removes\
    \ the hazard of old\n   duplicates for \"fast\" or \"long\" connections, in which\
    \ clock-driven\n   Initial Sequence Number selection is unable to prevent overlap\
    \ of the\n   old and new sequence spaces.  The TIME-WAIT delay allows all old\n\
    \   duplicate segments time enough to die in the Internet before the\n   connection\
    \ is reopened [RFC1337].  Therefore, ports in this state\n   must be included\
    \ in calculations concerning port usage per\n   subscriber.\n   Most of the time\
    \ the source port selected by a client application\n   will be translated (unless\
    \ there is direct knowledge of a port-range\n   restriction in the client's stack),\
    \ either by a NAT in the\n   subscriber's device, or by a CPE NAT, or by a CPE\
    \ NAT and a CGN.\n   [RFC1700] (which was replaced by an online database, as described\
    \ by\n   [RFC3232]) defines the Assigned Ports (both System and User).  IANA\n\
    \   has further classified the whole port space into three categories, as\n  \
    \ defined in [IANA_Ports]:\n   o  The Well-Known Ports are those from 0 through\
    \ 1023.\n   o  The Registered Ports are those from 1024 through 49151.\n   o \
    \ The Dynamic and/or Private Ports are those from 49152 through\n      65535.\n\
    \   [RFC4787] notes that current NATs have different policies with regard\n  \
    \ to this classification; some NATs restrict their translations to the\n   use\
    \ of dynamic ports, some also include registered ports, some\n   preserve the\
    \ port if it is in the well-known range.  [RFC4787] makes\n   it clear that the\
    \ use of port space (1024-65535) is safe: \"mapping a\n   source port to a source\
    \ port that is already registered is unlikely\n   to have any bad effects\". \
    \ Therefore, for all address sharing\n   solutions, there is no reason to only\
    \ consider a subset of the port\n   space (1024-65535) for outgoing source ports.\n"
- title: 5.1.  Outgoing Ports
  contents:
  - "5.1.  Outgoing Ports\n   According to measurements, the average number of outgoing\
    \ ports\n   consumed per active subscriber is much, much smaller than the maximum\n\
    \   number of ports a subscriber can use at any given time.  However, the\n  \
    \ distribution is heavy-tailed, so there are typically a small number\n   of subscribers\
    \ who use a very high number of ports [CGN_Viability].\n   This means that an\
    \ algorithm that dynamically allocates outgoing port\n   numbers from a central\
    \ pool will typically allow more subscribers to\n   share a single IPv4 address\
    \ than algorithms that statically divide\n   the resource by pre-allocating a\
    \ fixed number of ports to each\n   subscriber.  Similarly, such an algorithm\
    \ should be more able to\n   accommodate subscribers wishing to use a relatively\
    \ high number of\n   ports.\n   It is important to note here that the desire to\
    \ dynamically allocate\n   outgoing port numbers will make a service provider's\
    \ job of\n   maintaining records of subscriber port number allocations\n   considerably\
    \ more onerous (see Section 12).  The number of records\n   per subscriber will\
    \ increase from 1 in a scheme where ports are\n   statically allocated, to a much\
    \ larger number equivalent to the total\n   number of outgoing ports consumed\
    \ by that subscriber during the time\n   period for which detailed logs must be\
    \ kept.\n   A potential problem with dynamic allocation occurs when one of the\n\
    \   subscriber devices behind such a port-shared IPv4 address becomes\n   infected\
    \ with a worm, which then quickly sets about opening many\n   outbound connections\
    \ in order to propagate itself.  Such an infection\n   could rapidly exhaust the\
    \ shared resource of the single IPv4 address\n   for all connected subscribers.\
    \  It is therefore necessary to impose\n   limits on the total number of ports\
    \ available to an individual\n   subscriber to ensure that the shared resource\
    \ (the IPv4 address)\n   remains available in some capacity to all the subscribers\
    \ using it.\n   However, static schemes for ports assignment may introduce security\n\
    \   issues [RFC6056] when small contiguous port ranges are statically\n   assigned\
    \ to subscribers.  Another way to mitigate this issue is to\n   kill off (randomly)\
    \ established connections when the port space runs\n   out.  A user with many\
    \ connections will be proportionally more likely\n   to get impacted.\n   Session\
    \ failure due to NAT state overflow or timeout (when the NAT\n   discards session\
    \ state because it's run out of resource) can be\n   experienced when the configured\
    \ quota per user is reached or if the\n   NAT is out of resources.\n"
- title: 5.2.  Incoming Ports
  contents:
  - "5.2.  Incoming Ports\n   It is desirable to ensure that incoming ports remain\
    \ stable over\n   time.  This is challenging as the network doesn't know anything\
    \ in\n   particular about the applications that it is supporting, and\n   therefore\
    \ has no real notion of how long an application/service\n   session is still ongoing\
    \ and therefore requiring port stability.\n   Early measurements [CGN_Viability]\
    \ also seem to indicate that, on\n   average, only very few ports are used by\
    \ subscribers for incoming\n   connections.  However, a majority of subscribers\
    \ accept at least one\n   inbound connection.\n   This means that it is not necessary\
    \ to pre-allocate a large number of\n   incoming ports to each subscriber.  It\
    \ is possible to either pre-\n   allocate a small number of ports for incoming\
    \ connections or do port\n   allocation on demand when the application wishing\
    \ to receive a\n   connection is initiated.  The bulk of incoming ports can be\
    \ reserved\n   as a centralized resource shared by all subscribers using a given\n\
    \   public IPv4 address.\n"
- title: 5.2.1.  Port Negotiation
  contents:
  - "5.2.1.  Port Negotiation\n   In current deployments, one important and widely\
    \ used feature of many\n   CPE devices is the ability to open incoming ports (port\
    \ forwarding)\n   either manually, or with a protocol such as the Universal Plug\
    \ and\n   Play Internet Gateway Device (UPnP IGD) [UPnP-IGD].  If a CGN is\n \
    \  present, the port must also be opened in the CGN.  CGN makes\n   subscribers\
    \ dependent on their service provider for this\n   functionality.\n   CPE and\
    \ CGN will need to cooperate in order for port forwarding\n   functionality to\
    \ work.  UPnP, or NAT-PMP proxy could be a solution if\n   there is a direct link\
    \ (or tunnel) between the CPE and the CGN.  An\n   alternative solution is a web\
    \ interface to configure the incoming\n   port mapping on the CGN.  Protocol development\
    \ is underway in the\n   IETF to provide a generalized, automated solution via\
    \ the Port\n   Control Protocol [PCP].\n   Note that such an interface effectively\
    \ makes public what was\n   previously a private management interface and this\
    \ raises security\n   concerns that must be addressed.\n   For port-range solutions,\
    \ port forwarding capabilities may still be\n   present at the CPE, with the limitation\
    \ that the open incoming port\n   must be within the allocated port range (for\
    \ instance, it is not\n   possible to open port 5002 for incoming connections\
    \ if port 5002 is\n   not within the allocated port range).\n"
- title: 5.2.1.1.  Universal Plug and Play (UPnP)
  contents:
  - "5.2.1.1.  Universal Plug and Play (UPnP)\n   Using the UPnP semantic, an application\
    \ asks \"I want to use port\n   number X, is that OK?\", and the answer is yes\
    \ or no.  If the answer\n   is no, the application will typically try the next\
    \ port in sequence,\n   until it either finds one that works or gives up after\
    \ a limited\n   number of attempts.  UPnP IGD 1.0 has no way to redirect the\n\
    \   application to use another port number.  UPnP IGD 2.0 improves this\n   situation\
    \ and allows for allocation of any available port.\n"
- title: 5.2.1.2.  NAT Port Mapping Protocol (NAT-PMP)
  contents:
  - "5.2.1.2.  NAT Port Mapping Protocol (NAT-PMP)\n   NAT-PMP enables the NAT to\
    \ redirect the requesting application to a\n   port deemed to be available for\
    \ use by the NAT state mapping table.\n"
- title: 5.2.2.  Connection to a Well-Known Port Number
  contents:
  - "5.2.2.  Connection to a Well-Known Port Number\n   Once an IPv4-address sharing\
    \ mechanism is in place, inbound\n   connections to well-known port numbers will\
    \ not work in the general\n   case.  Any application that is not port-agile cannot\
    \ be expected to\n   work.  Some workaround (e.g., redirects to a port-specific\
    \ URI) could\n   be deployed given sufficient incentives.  There exist several\n\
    \   proposals for 'application service location' protocols that would\n   provide\
    \ a means of addressing this problem, but historically these\n   proposals have\
    \ not gained much deployment traction.\n   For example, the use of DNS SRV records\
    \ [RFC2782] provides a\n   potential solution for subscribers wishing to host\
    \ services in the\n   presence of a shared-addressing scheme.  SRV records make\
    \ it possible\n   to specify a port value related to a service, thereby making\
    \ services\n   accessible on ports other than the well-known ports.  It is worth\n\
    \   noting that this mechanism is not applicable to HTTP and many other\n   protocols.\n"
- title: 5.2.3.  Port Discovery Mechanisms
  contents:
  - "5.2.3.  Port Discovery Mechanisms\n   Port discovery using a UDP port to discover\
    \ a service available on a\n   corresponding TCP port, either through broadcast,\
    \ multicast, or\n   unicast, is a commonly deployed mechanism.  Unsolicited inbound\
    \ UDP\n   will be dropped by address sharing mechanisms as they have no live\n\
    \   mapping to enable them to forward the packet to the appropriate host.\n  \
    \ Address sharing thereby breaks this service discovery technique.\n"
- title: 6.  Impact on Applications
  contents:
  - "6.  Impact on Applications\n   Address sharing solutions will have an impact\
    \ on the following types\n   of applications:\n   o  Applications that establish\
    \ inbound communications - These\n      applications will have to ensure that\
    \ ports selected for inbound\n      communications are either within the allocated\
    \ range (for port-\n      range solutions) or are forwarded appropriately by the\
    \ CGN (for\n      CGN-based solutions).  See Section 5.2 for more discussion.\n\
    \   o  Applications that carry address and/or port information in their\n    \
    \  payload - Where translation of port and/or address information is\n      performed\
    \ at the IP and transport layers by the address sharing\n      solution, an ALG\
    \ will also be required to ensure application-layer\n      data is appropriately\
    \ modified.  Note that ALGs are required in\n      some cases, and in many other\
    \ cases end-to-end protocol mechanisms\n      have developed to work around a\
    \ lack of ALGs in address\n      translators, to the point of it being preferable\
    \ to avoid any\n      support in the NAT.\n   o  Applications that use fixed ports\
    \ - See Section 5.2.2 for more\n      discussion.\n   o  Applications that do\
    \ not use any port (e.g., ICMP echo) - Such\n      applications will require special\
    \ handling -- see Section 9 for\n      more discussion.\n   o  Applications that\
    \ assume the uniqueness of source addresses (e.g.,\n      IP address as identifier)\
    \ - Such applications will fail to operate\n      correctly in the presence of\
    \ multiple, discrete, simultaneous\n      connections from the same source IP\
    \ address.\n   o  Applications that explicitly prohibit concurrent connections\
    \ from\n      the same address - Such applications will fail when multiple\n \
    \     subscribers sharing an IP address attempt to use them\n      simultaneously.\n\
    \   o  Applications that do not use TCP or UDP for transport - All IP-\n     \
    \ address sharing mechanisms proposed to date are limited to TCP,\n      UDP,\
    \ and ICMP, thereby preventing end-users from fully utilizing\n      the Internet\
    \ (e.g., SCTP, DCCP, RSVP, protocol 41 (IPv6-over-\n      IPv4), protocol 50 (IPsec\
    \ ESP)).\n   Applications already frequently implement mechanisms in order to\n\
    \   circumvent the presence of NATs (typically CPE NATs):\n   o  Application Layer\
    \ Gateways (ALGs): Many CPE devices today embed\n      ALGs that allow applications\
    \ to behave correctly despite the\n      presence of NAT on the CPE.  When the\
    \ NAT belongs to the\n      subscriber, the subscriber has flexibility to tailor\
    \ the device to\n      his or her needs.  For CGNs, subscribers will be dependent\
    \ on the\n      set of ALGs that their service provider makes available.  For\n\
    \      port-range solutions, ALGs will require modification to deal with\n   \
    \   the port-range restriction, but will otherwise have the same\n      capabilities\
    \ as today.  Note that ALGs are required in some cases,\n      and in many other\
    \ cases end-to-end protocol mechanisms have\n      developed to work around a\
    \ lack of ALGs, to the point of it being\n      preferable to avoid any support\
    \ in the NAT.\n   o  NAT Traversal Techniques: There are several commonly deployed\n\
    \      mechanisms that support operating servers behind a NAT by\n      forwarding\
    \ specific TCP or UDP ports to specific internal hosts\n      ([UPnP-IGD], [NAT-PMP],\
    \ and manual configuration).  All of these\n      mechanisms assume the NAT's\
    \ WAN address is a publicly routable IP\n      address, and fail to work normally\
    \ when that assumption is wrong.\n      There have been attempts to avoid that\
    \ problem by automatically\n      disabling the NAT function and bridging traffic\
    \ instead upon\n      assignment of a private IP address to the WAN interface\
    \ (as is\n      required for [Windows-Logo] certification).  Bridging (rather\
    \ than\n      NATting) has other side effects (DHCP requests are served by an\n\
    \      upstream DHCP server that can increase complexity of in-home\n      networking).\n"
- title: 7.  Geo-location and Geo-proximity
  contents:
  - "7.  Geo-location and Geo-proximity\n   IP addresses are frequently used to indicate,\
    \ with some level of\n   granularity and some level of confidence, where a host\
    \ is physically\n   located.  Using IP addresses in this fashion is a heuristic\
    \ at best,\n   and is already challenged today by other deployed capabilities,\
    \ e.g.,\n   tunnels.  Geo-location services are used by content providers to\n\
    \   allow them to conform with regional content licensing restrictions,\n   to\
    \ target advertising at specific geographic areas, or to provide\n   customized\
    \ content.  Geo-location services are also necessary for\n   emergency services\
    \ provision.  In some deployment contexts (e.g.,\n   centralized CGN), shared\
    \ addressing will reduce the level of\n   confidence and level of location granularity\
    \ that IP-based geo-\n   location services can provide.  Viewed from the content\
    \ provider, a\n   subscriber behind a CGN geo-locates to wherever the prefix of\
    \ the CGN\n   appears to be; very often that will be in a different city than\
    \ the\n   subscriber.\n   IP addresses are also used as input to geo-location\
    \ services that\n   resolve an IP address to a physical location using information\
    \ from\n   the network infrastructure.  Current systems rely on resources such\n\
    \   as RADIUS databases and DHCP lease tables.  The use of address\n   sharing\
    \ will prevent these systems from resolving the location of a\n   host based on\
    \ IP address alone.  It will be necessary for users of\n   such systems to provide\
    \ more information (e.g., TCP or UDP port\n   numbers), and for the systems to\
    \ use this information to query\n   additional network resources (e.g., Network\
    \ Address Translation -\n   Protocol Translation (NAT-PT) binding tables).  Since\
    \ these new data\n   elements tend to be more ephemeral than those currently used\
    \ for geo-\n   location, their use by geo-location systems may require them to\
    \ be\n   cached for some period of time.\n   Other forms of geo-location will\
    \ still work as usual.\n   A slightly different use of an IP address is to calculate\
    \ the\n   proximity of a connecting host to a particular service delivery\n  \
    \ point.  This use of IP address information impacts the efficient\n   delivery\
    \ of content to an end-user.  If a CGN is introduced in\n   communications and\
    \ it is far from an end-user connected to it,\n   application performance may\
    \ be degraded insofar as IP-based geo-\n   proximity is a factor.\n"
- title: 8.  Tracking Service Usage
  contents:
  - "8.  Tracking Service Usage\n   As large-scale address sharing becomes more commonplace,\
    \ monitoring\n   the number of unique users of a service will become more complex\
    \ than\n   simply counting the number of connections from unique IP addresses.\n\
    \   While this is a somewhat inexact methodology today due to the\n   widespread\
    \ use of CPE NAT, it will become a much less useful approach\n   in the presence\
    \ of widespread large-scale address sharing solutions.\n   In general, all elements\
    \ that monitor usage or abusage in the chain\n   between a service provider that\
    \ has deployed address sharing and a\n   content provider will need to be upgraded\
    \ to take account of the port\n   value in addition to IP addresses.\n"
- title: 9.  ICMP
  contents:
  - "9.  ICMP\n   ICMP does not include a port field and is consequently problematic\n\
    \   for address sharing mechanisms.  Some ICMP message types include a\n   fragment\
    \ of the datagram that triggered the signal to be sent, which\n   is assumed to\
    \ include port numbers.  For some ICMP message types, the\n   Identifier field\
    \ has to be used as a de-multiplexing token.  Sourcing\n   ICMP echo messages\
    \ from hosts behind an address sharing solution does\n   not pose problems, although\
    \ responses to outgoing ICMP echo messages\n   will require special handling,\
    \ such as making use of the ICMP\n   Identifier value to route the response appropriately.\n\
    \   For inbound ICMP there are two cases.  The first case is that of ICMP\n  \
    \ sourced from outside the network of the address sharing solution\n   provider.\
    \  Where ICMP messages include a fragment of an outgoing\n   packet including\
    \ port numbers, it may be possible to forward the\n   packet appropriately.  In\
    \ addition to these network signaling\n   messages, several applications (e.g.,\
    \ peer-to-peer applications) make\n   use of ICMP echo messages that include no\
    \ hints that could be used to\n   route the packet correctly.  Measurements derived\
    \ by such\n   applications in the presence of an address sharing solution will\
    \ be\n   erroneous or fail altogether.  The second case is that of ICMP\n   sourced\
    \ from within the network of the address sharing solution\n   provider (e.g.,\
    \ for network management, signaling, and diagnostic\n   purposes).  In this case,\
    \ ICMP can be routed normally for CGN-based\n   solutions owing to the presence\
    \ of locally unique private IP\n   addresses for each CPE device.  For port-range\
    \ solutions, ICMP echo\n   messages will not be routable without special handling,\
    \ e.g., placing\n   a port number in the ICMP Identifier field, and having port-range\n\
    \   routers make routing decisions based upon that field.\n   Considerations related\
    \ to ICMP message handling in NAT-based\n   environments are specified in [RFC5508].\n"
- title: 10.  MTU
  contents:
  - "10.  MTU\n   In applications where the end hosts are attempting to use path MTU\n\
    \   Discovery [RFC1191] to optimize transmitted packet size with\n   underlying\
    \ network MTU, shared addressing has a number of items that\n   must be considered.\
    \  As covered in Section 9, ICMP \"Packet Too Big\"\n   messages must be properly\
    \ translated through the address sharing\n   solution in both directions.  However,\
    \ even when this is done\n   correctly, MTU can be a concern.  Many end hosts\
    \ cache information\n   that was received via Path MTU Discovery (PMTUD) for a\
    \ certain period\n   of time.  If the MTU behind the address sharing solution\
    \ is\n   inconsistent, the public end host may have the incorrect MTU value\n\
    \   cached.  This may cause it to send packets that are too large,\n   causing\
    \ them to be dropped if the DF (Don't Fragment) bit is set, or\n   causing them\
    \ to be fragmented by the network, increasing load and\n   overhead.  Because\
    \ the host eventually will reduce MTU to the lowest\n   common value for all hosts\
    \ behind a given public address, it may also\n   send packets that are below optimal\
    \ size for the specific connection,\n   increasing overhead and reducing throughput.\n\
    \   This issue also generates a potential attack vector -- a malevolent\n   user\
    \ could send an ICMP \"Packet Too Big\" (Type 3, Code 4) message\n   indicating\
    \ a Next-Hop MTU of anything down to 68 octets.  This value\n   will be cached\
    \ by the off-net server for all subscribers sharing the\n   address of the malevolent\
    \ user.  This could lead to a denial of\n   service (DoS) against both the remote\
    \ server and the large-scale NAT\n   device itself (as they will both have to\
    \ handle many more packets per\n   second).\n"
- title: 11.  Fragmentation
  contents:
  - "11.  Fragmentation\n   When a packet is fragmented, transport-layer port information\
    \ (either\n   UDP or TCP) is only present in the first fragment.  Subsequent\n\
    \   fragments will not carry the port information and so will require\n   special\
    \ handling.  In addition, the IP Identifier may no longer be\n   unique as required\
    \ by the receiver to aid in assembling the fragments\n   of a datagram.\n"
- title: 12.  Traceability
  contents:
  - "12.  Traceability\n   In many jurisdictions, service providers are legally obliged\
    \ to\n   provide the identity of a subscriber upon request to the appropriate\n\
    \   authorities.  Such legal requests have traditionally included the\n   source\
    \ IPv4 address and date (and usually the time), which is\n   sufficient information\
    \ when subscribers are assigned IPv4 addresses\n   for a long duration.\n   However,\
    \ where one public IPv4 address is shared between several\n   subscribers, the\
    \ IPv4 address no longer uniquely identifies a\n   subscriber.  There are two\
    \ solutions to this problem:\n   o  The first solution is for servers to additionally\
    \ log the source\n      port of incoming connections and for the legal request\
    \ to include\n      the source port.  The legal request should include the\n \
    \     information: [Source IP address, Source Port, Timestamp] (and\n      possibly\
    \ other information).  Accurate time-keeping (e.g., use of\n      NTP or Simple\
    \ NTP) is vital because port assignments are dynamic.\n      A densely populated\
    \ CGN could mean even very small amounts of\n      clock skew between a third\
    \ party's server and the CGN operator\n      will result in ambiguity about which\
    \ customer was using a specific\n      port at a given time.\n   o  The second\
    \ solution considers it unrealistic to expect all servers\n      to log the source\
    \ port number of incoming connections.  To deal\n      with this, service providers\
    \ using IPv4 address sharing may need\n      to log IP destination addresses.\n\
    \   Destination logging is imperfect if multiple subscribers are\n   accessing\
    \ the same (popular) server at nearly the same time; it can\n   be impossible\
    \ to disambiguate which subscriber accessed the server,\n   especially with protocols\
    \ that involve several connections (e.g.,\n   HTTP).  Thus, logging the destination\
    \ address on the NAT is inferior\n   to logging the source port at the server.\n\
    \   If neither solution is used (that is, the server is not logging\n   source\
    \ port numbers and the NAT is not logging destination IP\n   addresses), the service\
    \ provider cannot trace a particular activity\n   to a specific subscriber.  In\
    \ this circumstance, the service provider\n   would need to disclose the identity\
    \ of all subscribers who had active\n   sessions on the NAT during the time period\
    \ in question.  This may be\n   a large number of subscribers.\n   Address sharing\
    \ solutions must record and store all mappings\n   (typically during 6-12 months,\
    \ depending on the local jurisdiction)\n   that they create.  If we consider one\
    \ mapping per session, a service\n   provider should record and retain traces\
    \ of all sessions created by\n   all subscribers during one year (if the legal\
    \ storage duration is one\n   year).  This may be challenging due to the volume\
    \ of data requiring\n   storage, the volume of data to repeatedly transfer to\
    \ the storage\n   location, and the volume of data to search in response to a\
    \ query.\n   Address sharing solutions may mitigate these issues to some extent\
    \ by\n   pre-allocating groups of ports.  Then only the allocation of the\n  \
    \ group needs to be recorded, and not the creation of every session\n   binding\
    \ within that group.  There are trade-offs to be made between\n   the sizes of\
    \ these port groups, the ratio of public addresses to\n   subscribers, whether\
    \ or not these groups timeout, and the impact on\n   logging requirements and\
    \ port randomization security [RFC6056].\n"
- title: 13.  Security
  contents:
  - "13.  Security\n   Before noting some specific security-related issues caused\
    \ by large-\n   scale address sharing, it is perhaps worth noting that, in general,\n\
    \   address sharing creates a vector for attack amplification in numerous\n  \
    \ ways.  See Section 10 for one example.\n"
- title: 13.1.  Abuse Logging and Penalty Boxes
  contents:
  - "13.1.  Abuse Logging and Penalty Boxes\n   When an abuse is reported today, it\
    \ is usually done in the form: IPv4\n   address X has done something bad at time\
    \ T0.  This is not enough\n   information to uniquely identify the subscriber\
    \ responsible for the\n   abuse when that IPv4 address is shared by more than\
    \ one subscriber.\n   Law enforcement authorities may be particularly impacted\
    \ because of\n   this.  This particular issue can be fixed by logging port numbers,\n\
    \   although this will increase logging data storage requirements.\n   A number\
    \ of services on the network today log the IPv4 source\n   addresses used in connection\
    \ attempts to protect themselves from\n   certain attacks.  For example, if a\
    \ server sees too many requests\n   from the same IPv4 address in a short period\
    \ of time, it may decide\n   to put that address in a penalty box for a certain\
    \ time during which\n   requests are denied, or it may require completion of a\
    \ CAPTCHA\n   (Completely Automated Public Turing test to tell Computers and Humans\n\
    \   Apart) for future requests.  If an IPv4 address is shared by multiple\n  \
    \ subscribers, this would have unintended consequences in a couple of\n   ways.\
    \  First it may become the natural behavior to see many login\n   attempts from\
    \ the same address because it is now shared across a\n   potentially large number\
    \ of subscribers.  Second and more likely is\n   that one user who fails a number\
    \ of login attempts may block out\n   other users who have not made any previous\
    \ attempts but who will now\n   fail on their first attempt.  In the presence\
    \ of widespread large-\n   scale address sharing, penalty box solutions to service\
    \ abuse simply\n   will not work.\n   In addition, there are web tie-ins into\
    \ different blacklists that web\n   administrators subscribe to in order to redirect\
    \ users with infected\n   machines (e.g., detect the presence of a worm) to a\
    \ URL that says\n   \"Hey, your machine is infected!\".  With address sharing,\
    \ someone\n   else's worm can interfere with the ability to access the service\
    \ for\n   other subscribers sharing the same IP address.\n"
- title: 13.2.  Authentication
  contents:
  - "13.2.  Authentication\n   Simple address-based identification mechanisms that\
    \ are used to\n   populate access control lists will fail when an IP address is\
    \ no\n   longer sufficient to identify a particular subscriber.  Including\n \
    \  port numbers in access control list definitions may be possible at\n   the\
    \ cost of extra complexity, and may also require the service\n   provider to make\
    \ static port assignments, which conflicts with the\n   requirement for dynamic\
    \ assignments discussed in Section 5.1.\n   Address or DNS-name-based signatures\
    \ (e.g., some X.509 signatures)\n   may also be affected by address sharing as\
    \ the address itself is now\n   a shared token, and the name to address mapping\
    \ may not be current.\n"
- title: 13.3.  Spam
  contents:
  - "13.3.  Spam\n   Another case of identifying abusers has to do with spam blacklisting.\n\
    \   When a spammer is behind a CGN or using a port-shared address,\n   blacklisting\
    \ of their IP address will result in all other subscribers\n   sharing that address\
    \ having their ability to source SMTP packets\n   restricted to some extent.\n"
- title: 13.4.  Port Randomization
  contents:
  - "13.4.  Port Randomization\n   A blind attack that can be performed against TCP\
    \ relies on the\n   attacker's ability to guess the 5-tuple (Protocol, Source\
    \ Address,\n   Destination Address, Source Port, Destination Port) that identifies\n\
    \   the transport protocol instance to be attacked.  [RFC6056] describes\n   a\
    \ number of methods for the random selection of the source port\n   number, such\
    \ that the ability of an attacker to correctly guess the\n   5-tuple is reduced.\
    \  With shared IPv4 addresses, the port selection\n   space is reduced.  Preserving\
    \ port randomization is important and may\n   be more or less difficult depending\
    \ on the address sharing solution\n   and the size of the port space that is being\
    \ manipulated.  Allocation\n   of non-contiguous port ranges could help to mitigate\
    \ this issue.\n   It should be noted that guessing the port information may not\
    \ be\n   sufficient to carry out a successful blind attack.  An in-window TCP\n\
    \   Sequence Number (SN) should also be known or guessed.  A TCP segment\n   is\
    \ processed only if all previous segments have been received, except\n   for some\
    \ Reset segment implementations that immediately process the\n   Reset as long\
    \ as it is within the Window.  If SN is randomly chosen,\n   it will be difficult\
    \ to guess it (SN is 32 bits long); port\n   randomization is one protection among\
    \ others against blind attacks.\n   There is more detailed discussion of improving\
    \ TCP's robustness to\n   Blind In-Window Attacks in [RFC5961].\n"
- title: 13.5.  IPsec
  contents:
  - "13.5.  IPsec\n   The impact of large-scale IP address sharing for IPsec operation\n\
    \   should be evaluated and assessed.  [RFC3947] proposes a solution to\n   solve\
    \ issues documented in [RFC3715].  [RFC5996] specifies Internet\n   Key Exchange\
    \ (IKE) Protocol Version 2, which includes NAT traversal\n   mechanisms that are\
    \ now widely used to enable IPsec to work in the\n   presence of NATs in many\
    \ cases.  Nevertheless, service providers may\n   wish to ensure that CGN deployments\
    \ do not inadvertently block NAT\n   traversal for security protocols such as\
    \ IKE (refer to [NAT-SEC] for\n   more information).\n"
- title: 13.6.  Policing Forwarding Behavior
  contents:
  - "13.6.  Policing Forwarding Behavior\n   [RFC2827] motivates and discusses a simple,\
    \ effective, and\n   straightforward method for using ingress traffic filtering\
    \ to\n   prohibit DoS attacks that use forged IP addresses.  Following this\n\
    \   recommendation, service providers operating shared-addressing\n   mechanisms\
    \ should ensure that source addresses, or source ports in\n   the case of port-range\
    \ schemes, are set correctly in outgoing packets\n   from their subscribers or\
    \ they should drop the packets.\n   If some form of IPv6 ingress filtering is\
    \ deployed in the broadband\n   network and DS-Lite service is restricted to those\
    \ subscribers, then\n   tunnels terminating at the CGN and coming from registered\
    \ subscriber\n   IPv6 addresses cannot be spoofed.  Thus, a simple access control\
    \ list\n   on the tunnel transport source address is all that is required to\n\
    \   accept traffic on the internal interface of a CGN.\n"
- title: 14.  Transport Issues
  contents:
  - '14.  Transport Issues

    '
- title: 14.1.  Parallel Connections
  contents:
  - "14.1.  Parallel Connections\n   One issue is systems that assume that multiple\
    \ simultaneous\n   connections to a single IP address implies connectivity to\
    \ a single\n   host -- such systems may experience unexpected results.\n"
- title: 14.2.  Serial Connections
  contents:
  - "14.2.  Serial Connections\n   Another issue is systems that assume that returning\
    \ to a given IP\n   address means returning to the same physical host, as with\
    \ stateful\n   transactions.  This may also affect cookie-based systems.\n"
- title: 14.3.  TCP Control Block Sharing
  contents:
  - "14.3.  TCP Control Block Sharing\n   [RFC2140] defines a performance optimization\
    \ for TCP based on sharing\n   state between TCP control blocks that pertain to\
    \ connections to the\n   same host, as opposed to maintaining state for each discrete\n\
    \   connection.  This optimization assumes that an address says something\n  \
    \ about the properties of the path between two hosts, which is clearly\n   not\
    \ the case if the address in question is shared by multiple hosts\n   at different\
    \ physical network locations.  While CPE NAT today causes\n   problems for sharing\
    \ TCP control block state across multiple\n   connections to a given IP address,\
    \ large-scale address sharing will\n   make these issues more severe and more\
    \ widespread.\n"
- title: 15.  Reverse DNS
  contents:
  - "15.  Reverse DNS\n   Many service providers populate forward and reverse DNS\
    \ zones for the\n   public IPv4 addresses that they allocate to their subscribers.\
    \  In\n   the case where public addresses are shared across multiple\n   subscribers,\
    \ such strings are, by definition, no longer sufficient to\n   identify an individual\
    \ subscriber without additional information.\n"
- title: 16.  Load Balancing
  contents:
  - "16.  Load Balancing\n   Algorithms used to balance traffic load for popular destinations\
    \ may\n   be affected by the introduction of address sharing.  Where balancing\n\
    \   is achieved by deterministically routing traffic from specific source\n  \
    \ IP addresses to specific servers, imbalances in load may be\n   experienced\
    \ as address sharing is enabled for some of those source IP\n   addresses.  This\
    \ will require re-evaluation of the algorithms used in\n   the load-balancing\
    \ design.  In general, as the scale of address\n   sharing grows, load-balancing\
    \ designs will need to be re-evaluated\n   and any assumptions about average load\
    \ per source IP address\n   revisited.\n"
- title: 17.  IPv6 Transition Issues
  contents:
  - "17.  IPv6 Transition Issues\n   IPv4 address sharing solutions may interfere\
    \ with existing IPv4 to\n   IPv6 transition mechanisms, which were not designed\
    \ with IPv4\n   shortage considerations in mind.  With port-range solutions, for\n\
    \   instance, incoming 6to4 packets should be able to find their way from\n  \
    \ a 6to4 relay to the appropriate 6to4 CPE router, despite the lack of\n   direct\
    \ port-range information (UDP/TCP initial source port did not\n   pass through\
    \ the CPE port range translation process).  One solution\n   would be for a 6to4\
    \ IPv6 address to embed not only an IPv4 address\n   but also a port range value.\n\
    \   Subscribers allocated with private addresses will not be able to\n   utilize\
    \ 6to4 [RFC3056] to access IPv6, but may be able to utilize\n   Teredo [RFC4380].\n\
    \   Some routers enable 6to4 on their WAN link. 6to4 requires a publicly\n   routable\
    \ IPv4 address.  Enabling 6to4 when the apparently public IPv4\n   WAN address\
    \ is in fact behind a NAT creates a disconnected IPv6\n   island.\n"
- title: 18.  Introduction of Single Points of Failure
  contents:
  - "18.  Introduction of Single Points of Failure\n   In common with all deployments\
    \ of new network functionality, the\n   introduction of new nodes or functions\
    \ to handle the multiplexing of\n   multiple subscribers across shared IPv4 addresses\
    \ could create single\n   points of failure in the network.  Any IP address sharing\
    \ solution\n   should consider the opportunity to add redundancy features in order\n\
    \   to alleviate the impact on the robustness of the offered IP\n   connectivity\
    \ service.  The ability of the solution to allow hot\n   swapping from one machine\
    \ to another should be considered.  This is\n   especially important where the\
    \ address sharing solution in question\n   requires the creation of per-flow state\
    \ in the network.\n"
- title: 19.  State Maintenance Reduces Battery Life
  contents:
  - "19.  State Maintenance Reduces Battery Life\n   In order for hosts to maintain\
    \ network state in the presence of NAT,\n   keep-alive messages have to be sent\
    \ at frequent intervals.  For\n   battery-powered devices, sending these keep-alive\
    \ messages can result\n   in significantly reduced battery performance than would\
    \ otherwise be\n   the case [Mobile_Energy_Consumption].\n"
- title: 20.  Support of Multicast
  contents:
  - "20.  Support of Multicast\n   [RFC5135] specifies requirements for a NAT that\
    \ supports Any Source\n   IP Multicast or Source-Specific IP Multicast.  Port-range\
    \ routers\n   that form part of port-range solutions will need to support similar\n\
    \   requirements if multicast support is required.\n"
- title: 21.  Support of Mobile-IP
  contents:
  - "21.  Support of Mobile-IP\n   IP address sharing within the context of Mobile\
    \ IP deployments (in\n   the home network and/or in the visited network) will\
    \ require Home\n   Agents and/or Foreign Agents to be updated so as to take into\
    \ account\n   the relevant port information.  There may also be issues raised\
    \ when\n   an additional layer of encapsulation is required thereby causing, or\n\
    \   increasing the need for, fragmentation and reassembly.\n   Issues for Mobile-IP\
    \ in the presence of NAT are discussed in\n   [NAT64-MOBILITY].\n"
- title: 22.  Security Considerations
  contents:
  - "22.  Security Considerations\n   This memo does not define any protocol and therefore\
    \ creates no new\n   security issues.  Section 13 discusses some of the security\
    \ and\n   identity-related implications of IP address sharing.\n"
- title: 23.  Contributors
  contents:
  - "23.  Contributors\n   This document is based on sources co-authored by J.L. Grimault\
    \ and A.\n   Villefranque of France Telecom.\n"
- title: 24.  Acknowledgments
  contents:
  - "24.  Acknowledgments\n   This memo was partly inspired by conversations that\
    \ took place as\n   part of Internet Society (ISOC) hosted roundtable events for\n\
    \   operators and content providers deploying IPv6.  Participants in\n   those\
    \ discussions included John Brzozowski, Leslie Daigle, Tom\n   Klieber, Yiu Lee,\
    \ Kurtis Lindqvist, Wes George, Lorenzo Colliti, Erik\n   Kline, Igor Gashinsky,\
    \ Jason Fesler, Rick Reed, Adam Bechtel, Larry\n   Campbell, Tom Coffeen, David\
    \ Temkin, Pete Gelbman, Mark Winter, Will\n   Charnock, Martin Levy, Greg Wood,\
    \ and Christian Jacquenet.\n   The authors are also grateful to Christian Jacquenet,\
    \ Iain Calder,\n   Joel Halpern, Brian Carpenter, Gregory Lebovitz, Bob Briscoe,\
    \ Marcelo\n   Bagnulo, Dan Wing, and Wes George for their helpful comments and\n\
    \   suggestions for improving the document.\n   This memo was created using the\
    \ xml2rfc tool.\n"
- title: 25.  Informative References
  contents:
  - "25.  Informative References\n   [A+P]      Bush, R., \"The A+P Approach to the\
    \ IPv4 Address Shortage\",\n              Work in Progress, February 2011.\n \
    \  [CGN_Viability]\n              Alcock, S., \"Research into the Viability of\
    \ Service-\n              Provider NAT\", 2008, <http://www.wand.net.nz/~salcock/\n\
    \              someisp/flow_counting/result_page.html>.\n   [DS-Lite]  Durand,\
    \ A., Droms, R., Woodyatt, J., and Y. Lee, \"Dual-\n              Stack Lite Broadband\
    \ Deployments Following IPv4\n              Exhaustion\", Work in Progress, May\
    \ 2011.\n   [IANA_Ports]\n              IANA, \"Port Numbers\", <http://www.iana.org>.\n\
    \   [IPv4_Pool]\n              ICANN, \"Available Pool of Unallocated IPv4 Internet\n\
    \              Addresses Now Completely Emptied\", February 2011,\n          \
    \    <http://icann.org/en/news/releases/\n              release-03feb11-en.pdf>.\n\
    \   [LSN-REQS] Perreault, S., Yamagata, I., Miyakawa, S., Nakagawa, A.,\n    \
    \          and H. Ashida, \"Common requirements for IP address sharing\n     \
    \         schemes\", Work in Progress, March 2011.\n   [Mobile_Energy_Consumption]\n\
    \              Haverinen, H., Siren, J., and P. Eronen, \"Energy\n           \
    \   Consumption of Always-On Applications in WCDMA Networks\",\n             \
    \ April 2007, <http://research.nokia.com/node/5597>.\n   [NAT-PMP]  Cheshire,\
    \ S., \"NAT Port Mapping Protocol (NAT-PMP)\", Work\n              in Progress,\
    \ April 2008.\n   [NAT-SEC]  Gont, F. and P. Srisuresh, \"Security implications\
    \ of\n              Network Address Translators (NATs)\", Work in Progress,\n\
    \              October 2009.\n   [NAT444]   Yamagata, I., Shirasaki, Y., Nakagawa,\
    \ A., Yamaguchi, J.,\n              and H. Ashida, \"NAT444\", January 2011.\n\
    \   [NAT64-MOBILITY]\n              Haddad, W. and C. Perkins, \"A Note on NAT64\
    \ Interaction\n              with Mobile IPv6\", Work in Progress, March 2011.\n\
    \   [PCP]      Wing, D., Ed., Cheshire, S., Boucadair, M., Penno, R., and\n  \
    \            P. Selkirk, \"Port Control Protocol (PCP)\", Work\n             \
    \ in Progress, May 2011.\n   [PORT-RANGE]\n              Boucadair, M., Levis,\
    \ P., Bajko, G., and T. Savolainen,\n              \"IPv4 Connectivity Access\
    \ in the Context of IPv4 Address\n              Exhaustion: Port Range based IP\
    \ Architecture\", Work\n              in Progress, July 2009.\n   [RFC1191]  Mogul,\
    \ J. and S. Deering, \"Path MTU discovery\", RFC 1191,\n              November\
    \ 1990.\n   [RFC1337]  Braden, B., \"TIME-WAIT Assassination Hazards in TCP\"\
    ,\n              RFC 1337, May 1992.\n   [RFC1700]  Reynolds, J. and J. Postel,\
    \ \"Assigned Numbers\", RFC 1700,\n              October 1994.\n   [RFC1918] \
    \ Rekhter, Y., Moskowitz, R., Karrenberg, D., Groot, G., and\n              E.\
    \ Lear, \"Address Allocation for Private Internets\",\n              BCP 5, RFC\
    \ 1918, February 1996.\n   [RFC2140]  Touch, J., \"TCP Control Block Interdependence\"\
    , RFC 2140,\n              April 1997.\n   [RFC2663]  Srisuresh, P. and M. Holdrege,\
    \ \"IP Network Address\n              Translator (NAT) Terminology and Considerations\"\
    ,\n              RFC 2663, August 1999.\n   [RFC2782]  Gulbrandsen, A., Vixie,\
    \ P., and L. Esibov, \"A DNS RR for\n              specifying the location of\
    \ services (DNS SRV)\", RFC 2782,\n              February 2000.\n   [RFC2827]\
    \  Ferguson, P. and D. Senie, \"Network Ingress Filtering:\n              Defeating\
    \ Denial of Service Attacks which employ IP Source\n              Address Spoofing\"\
    , BCP 38, RFC 2827, May 2000.\n   [RFC2993]  Hain, T., \"Architectural Implications\
    \ of NAT\", RFC 2993,\n              November 2000.\n   [RFC3056]  Carpenter,\
    \ B. and K. Moore, \"Connection of IPv6 Domains\n              via IPv4 Clouds\"\
    , RFC 3056, February 2001.\n   [RFC3232]  Reynolds, J., \"Assigned Numbers: RFC\
    \ 1700 is Replaced by\n              an On-line Database\", RFC 3232, January\
    \ 2002.\n   [RFC3715]  Aboba, B. and W. Dixon, \"IPsec-Network Address Translation\n\
    \              (NAT) Compatibility Requirements\", RFC 3715, March 2004.\n   [RFC3947]\
    \  Kivinen, T., Swander, B., Huttunen, A., and V. Volpe,\n              \"Negotiation\
    \ of NAT-Traversal in the IKE\", RFC 3947,\n              January 2005.\n   [RFC4380]\
    \  Huitema, C., \"Teredo: Tunneling IPv6 over UDP through\n              Network\
    \ Address Translations (NATs)\", RFC 4380,\n              February 2006.\n   [RFC4787]\
    \  Audet, F. and C. Jennings, \"Network Address Translation\n              (NAT)\
    \ Behavioral Requirements for Unicast UDP\", BCP 127,\n              RFC 4787,\
    \ January 2007.\n   [RFC5135]  Wing, D. and T. Eckert, \"IP Multicast Requirements\
    \ for a\n              Network Address Translator (NAT) and a Network Address\n\
    \              Port Translator (NAPT)\", BCP 135, RFC 5135, February 2008.\n \
    \  [RFC5508]  Srisuresh, P., Ford, B., Sivakumar, S., and S. Guha, \"NAT\n   \
    \           Behavioral Requirements for ICMP\", BCP 148, RFC 5508,\n         \
    \     April 2009.\n   [RFC5961]  Ramaiah, A., Stewart, R., and M. Dalal, \"Improving\
    \ TCP's\n              Robustness to Blind In-Window Attacks\", RFC 5961,\n  \
    \            August 2010.\n   [RFC5996]  Kaufman, C., Hoffman, P., Nir, Y., and\
    \ P. Eronen,\n              \"Internet Key Exchange Protocol Version 2 (IKEv2)\"\
    ,\n              RFC 5996, September 2010.\n   [RFC6056]  Larsen, M. and F. Gont,\
    \ \"Recommendations for Transport-\n              Protocol Port Randomization\"\
    , BCP 156, RFC 6056,\n              January 2011.\n   [RFC6145]  Li, X., Bao,\
    \ C., and F. Baker, \"IP/ICMP Translation\n              Algorithm\", RFC 6145,\
    \ April 2011.\n   [RFC6146]  Bagnulo, M., Matthews, P., and I. van Beijnum, \"\
    Stateful\n              NAT64: Network Address and Protocol Translation from IPv6\n\
    \              Clients to IPv4 Servers\", RFC 6146, April 2011.\n   [SAM]    \
    \  Despres, R., \"Scalable Multihoming across IPv6 Local-\n              Address\
    \ Routing Zones Global-Prefix/Local-Address\n              Stateless Address Mapping\
    \ (SAM)\", July 2009.\n   [UPnP-IGD] UPnP Forum, \"Universal Plug and Play (UPnP)\
    \ Internet\n              Gateway Device (IGD) V 2.0\", December 2010,\n     \
    \         <http://upnp.org/specs/gw/igd2/>.\n   [Windows-Logo]\n             \
    \ Microsoft, \"Windows Logo Program Requirements and\n              Policies\"\
    , 2006, <http://www.microsoft.com/whdc/winlogo/\n              hwrequirements/default.mspx>.\n"
- title: Appendix A.  Classes of Address Sharing Solution
  contents:
  - "Appendix A.  Classes of Address Sharing Solution\n   IP address sharing solutions\
    \ fall into two classes.  Either a\n   service-provider-operated NAT function\
    \ is introduced and subscribers\n   are allocated addresses from [RFC1918] space,\
    \ or public IPv4\n   addresses are shared across multiple subscribers by restricting\
    \ the\n   range of ports available to each subscriber.  These classes of\n   solution\
    \ are described in a bit more detail below.\n   o  CGN-based solutions: These\
    \ solutions propose the introduction of a\n      NAPT function in the service\
    \ provider's network, denoted also as\n      Carrier Grade NAT (CGN), or Large\
    \ Scale NAT (LSN) [LSN-REQS], or\n      Provider NAT.  The CGN is responsible\
    \ for translating private\n      addresses to publicly routable addresses.  Private\
    \ addresses are\n      assigned to subscribers, a pool of public addresses is\
    \ assigned to\n      the CGN, and the number of public addresses is smaller than\
    \ the\n      number of subscribers.  A public IPv4 address in the CGN pool is\n\
    \      shared by several subscribers at the same time.  Solutions making\n   \
    \   use of a service provider-based NAT include [NAT444] (two layers\n      of\
    \ NAT) and [DS-Lite] (a single layer of NAT).\n   o  Port-range solutions: These\
    \ solutions avoid the presence of a CGN\n      function.  A single public IPv4\
    \ address is assigned to several\n      subscribers at the same time.  A restricted\
    \ port range is also\n      assigned to each subscriber so that two subscribers\
    \ with the same\n      IPv4 address have two different port ranges that do not\
    \ overlap.\n      These solutions are called Address+Port [A+P], or Port Range\n\
    \      [PORT-RANGE], or Stateless Address Mapping [SAM].\n"
- title: Appendix B.  Address Space Multiplicative Factor
  contents:
  - "Appendix B.  Address Space Multiplicative Factor\n   The purpose of sharing public\
    \ IPv4 addresses is to increase the\n   addressing space.  A key parameter is\
    \ the factor by which service\n   providers want or need to multiply their IPv4\
    \ public address space,\n   and the consequence is the number of subscribers sharing\
    \ the same\n   public IPv4 address.  We refer to this parameter as the address\
    \ space\n   multiplicative factor; the inverse is called the compression ratio.\n\
    \   The multiplicative factor can only be applied to the subset of\n   subscribers\
    \ that are eligible for a shared address.  The reasons a\n   subscriber cannot\
    \ have a shared address can be:\n   o  It would not be compatible with the service\
    \ to which they are\n      currently subscribed (for example, business subscriber).\n\
    \   o  Subscriber CPE is not compatible with the address sharing solution\n  \
    \    selected by the service provider (for example, it does not handle\n     \
    \ port restriction for port-range solutions or it does not allow\n      IPv4 in\
    \ IPv6 encapsulation for the DS-Lite solution), and its\n      replacement is\
    \ not easy.\n   Different service providers may have very different needs.  A\
    \ long-\n   lived service provider, whose number of subscribers is rather stable,\n\
    \   may have an existing address pool that will only need a small\n   extension\
    \ to cope with the next few years, assuming that this address\n   pool can be\
    \ re-purposed for an address sharing solution (small\n   multiplicative factor,\
    \ less than 10).  A new entrant or a new line of\n   business will need a much\
    \ bigger multiplicative factor (e.g., 1000).\n   A mobile operator may see its\
    \ addressing needs grow dramatically as\n   the IP-enabled mobile handset market\
    \ grows.\n   When the multiplicative factor is large, the average number of ports\n\
    \   per subscriber is small.  Given the large measured disparity between\n   average\
    \ and peak port consumption [CGN_Viability], this will create\n   service problems\
    \ in the event that ports are allocated statically.\n   In this case, it is essential\
    \ for port allocation to map to need as\n   closely as possible, and to avoid\
    \ allocating ports for longer than\n   necessary.  Therefore, the larger the multiplicative\
    \ factor, the more\n   dynamic the port assignment has to be.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Mat Ford (editor)\n   Internet Society\n   Geneva\n  \
    \ Switzerland\n   EMail: ford@isoc.org\n   Mohamed Boucadair\n   France Telecom\n\
    \   Rennes  35000\n   France\n   EMail: mohamed.boucadair@orange-ftgroup.com\n\
    \   Alain Durand\n   Juniper Networks\n   EMail: adurand@juniper.net\n   Pierre\
    \ Levis\n   France Telecom\n   42 rue des Coutures\n   BP 6243\n   Caen Cedex\
    \ 4  14066\n   France\n   EMail: pierre.levis@orange-ftgroup.com\n   Phil Roberts\n\
    \   Internet Society\n   Reston, VA\n   USA\n   EMail: roberts@isoc.org\n"
