- contents:
  - '              Textual Conventions for Transport Addresses

    '
  title: __initial_text__
- contents:
  - "Status of this Memo\n   This document specifies an Internet standards track protocol
    for the\n   Internet community, and requests discussion and suggestions for\n
    \  improvements.  Please refer to the current edition of the \"Internet\n   Official
    Protocol Standards\" (STD 1) for the standardization state\n   and status of this
    protocol.  Distribution of this memo is unlimited.\n"
  title: Status of this Memo
- contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2002).  All Rights Reserved.\n"
  title: Copyright Notice
- contents:
  - "Abstract\n   This document introduces a Management Information Base (MIB) module\n
    \  that defines textual conventions to represent commonly used\n   transport-layer
    addressing information.  The definitions are\n   compatible with the concept of
    TAddress/TDomain pairs introduced by\n   the Structure of Management Information
    version 2 (SMIv2) and support\n   the Internet transport protocols over IPv4 and
    IPv6.\n"
  title: Abstract
- contents:
  - "Table of Contents\n   1.    Introduction . . . . . . . . . . . . . . . . . .
    . . . . . .  2\n   2.    The Internet-Standard Management Framework . . . . .
    . . . .  2\n   3.    Overview . . . . . . . . . . . . . . . . . . . . . . . .
    . .  3\n   3.1   Relationship to Other MIBs . . . . . . . . . . . . . . . . .
    \ 4\n   3.1.1 SNMPv2-TC (TAddress, TDomain)  . . . . . . . . . . . . . . .  4\n
    \  3.1.2 SNMPv2-TM  . . . . . . . . . . . . . . . . . . . . . . . . .  4\n   3.1.3
    INET-ADDRESS-MIB (InetAddressType, InetAddress)  . . . . . .  5\n   4.    Definitions
    \ . . . . . . . . . . . . . . . . . . . . . . . .  5\n   5.    Examples . . .
    . . . . . . . . . . . . . . . . . . . . . . . 14\n   6.    Security Considerations
    \ . . . . . . . . . . . . . . . . . . 15\n   7.    Acknowledgments  . . . . .
    . . . . . . . . . . . . . . . . . 15\n   8.    Intellectual Property Notice .
    . . . . . . . . . . . . . . . 15\n         Normative References . . . . . . .
    . . . . . . . . . . . . . 16\n         Informative References . . . . . . . .
    . . . . . . . . . . . 16\n         Authors' Addresses . . . . . . . . . . . .
    . . . . . . . . . 17\n         Full Copyright Statement . . . . . . . . . . .
    . . . . . . . 18\n"
  title: Table of Contents
- contents:
  - "1. Introduction\n   Several MIB modules need to represent transport-layer addresses
    in a\n   generic way.  Typical examples are MIBs for application protocols\n   that
    can operate over several different transports or application\n   management MIBs
    that need to model generic communication endpoints.\n   The SMIv2 in STD 58, RFC
    2579 [RFC2579] defines the textual\n   conventions TDomain and TAddress to represent
    generic transport layer\n   endpoints.  A generic TAddress value is interpreted
    in a given\n   transport domain which is identified by a TDomain value.  The TDomain\n
    \  is an object identifier which allows MIB authors to extend the set of\n   supported
    transport domains by providing suitable definitions in\n   standardized or enterprise
    specific MIB modules.\n   An initial set of TDomain values and concrete TAddress
    formats has\n   been standardized in STD 62, RFC 3417 [RFC3417].  These definitions\n
    \  are however mixed up with SNMP semantics.  Furthermore, definitions\n   for
    Internet transport protocols over IPv4 and IPv6 are missing.\n   The purpose of
    this memo is to introduce a set of well-known textual\n   conventions to represent
    commonly used transport-layer addressing\n   information which is compatible with
    the original TDomain and\n   TAddress approach and which includes definitions
    for additional\n   Internet transport protocols over IPv4 and IPv6.  This memo
    also\n   introduces a new textual convention which enumerates the well-known\n
    \  transport domains since such an enumeration provides in many cases\n   sufficient
    flexibility and is more efficient compared to object\n   identifiers.\n   The
    key words \"MUST\", \"MUST NOT\", \"SHOULD\", \"SHOULD NOT\" and \"MAY\" in\n
    \  this document are to be interpreted as described in BCP 14, RFC 2119\n   [RFC2119].\n"
  title: 1. Introduction
- contents:
  - "2. The Internet-Standard Management Framework\n   For a detailed overview of
    the documents that describe the current\n   Internet-Standard Management Framework,
    please refer to section 7 of\n   RFC 3410 [RFC3410].\n   Managed objects are accessed
    via a virtual information store, termed\n   the Management Information Base or
    MIB.  MIB objects are generally\n   accessed through the Simple Network Management
    Protocol (SNMP).\n   Objects in the MIB are defined using the mechanisms defined
    in the\n   Structure of Management Information (SMI).  This memo specifies a MIB\n
    \  module that is compliant to the SMIv2, which is described in STD 58,\n   RFC
    2578 [RFC2578], STD 58, RFC 2579 [RFC2579] and STD 58, RFC 2580\n   [RFC2580].\n"
  title: 2. The Internet-Standard Management Framework
- contents:
  - "3. Overview\n   This MIB module contains definitions for commonly used transport\n
    \  layer addressing information.  In particular, it provides the\n   following
    definitions:\n   1. Textual conventions for generic transport addresses\n      (TransportAddress)
    and generic transport domains\n      (TransportDomain).\n   2. Object identifier
    registrations for well-known transport domains.\n   3. An enumeration of the well-known
    transport domains, called a\n      transport address type (TransportAddressType).\n
    \  4. A set of textual conventions for the address formats used by\n      well-known
    transport domains.  The DISPLAY-HINTs are aligned with\n      the formats used
    in URIs [RFC2396], [RFC3291].\n   The textual conventions for well-known transport
    domains support\n   scoped Internet addresses.  The scope of an Internet address
    is a\n   topological span within which the address may be used as a unique\n   identifier
    for an interface or set of interfaces.  A scope zone, or\n   simply a zone, is
    a concrete connected region of topology of a given\n   scope.  Note that a zone
    is a particular instance of a topological\n   region, whereas a scope is the size
    of a topological region [SCOPED].\n   Since Internet addresses on devices that
    connect multiple zones are\n   not necessarily unique, an additional zone index
    is needed on these\n   devices to select an interface.  The textual conventions\n
    \  TransportAddressIPv4z and TransportAddressIPv6z are provided to\n   support
    Internet transport addresses that include a zone index.  In\n   order to support
    arbitrary combinations of scoped Internet transport\n   addresses, MIB authors
    SHOULD use a separate TransportDomain or\n   TransportAddressType objects for
    each TransportAddress object.\n   There are two different ways how new transport
    domains and textual\n   conventions for the address formats used by those new
    transport\n   domains can be defined.\n   1. The MIB module contained in this
    memo can be updated and new\n      constants for the TransportDomain and the TransportAddressType\n
    \     enumeration can be assigned.\n   2. Other MIB modules may define additional
    transport domains and\n      associated textual conventions.  Such an extension
    can not update\n      the TransportAddressType enumeration.\n   It is therefore
    a MIB designers choice whether he uses (a) a more\n   compact TransportAddressType
    object with limited extensibility or (b)\n   a more verbose TransportDomain object
    which allows arbitrary\n   extensions in other MIB modules.\n   The MIB module
    contained in this memo does NOT define the transport\n   mappings of any particular
    protocol.  Rather, it defines a set of\n   common identifiers and textual conventions
    that are intended to be\n   used within various transport mappings documents.\n"
  - contents:
    - "3.1 Relationship to Other MIBs\n   This section discusses how the definitions
      provided by the MIB module\n   contained in this memo relate to definitions
      in other MIB modules.\n"
    - contents:
      - "3.1.1 SNMPv2-TC (TAddress, TDomain)\n   The SNMPv2-TC MIB module [RFC2579]
        defines the textual conventions\n   TAddress and TDomain to represent generic
        transport addresses.\n   A TAddress is an octet string with a size between
        1 and 255 octets.\n   Experience has shown that there is sometimes a need
        to represent\n   unknown transport addresses.  The MIB module contained in
        this memo\n   therefore introduces a new textual convention TransportAddress
        which\n   is an octet string with a size between 0 and 255 octets and otherwise\n
        \  identical semantics.  In other words, the sub-type TransportAddress\n   (SIZE
        (1..255)) is identical with the TAddress defined in the\n   SNMPv2-TC MIB
        module [RFC2579].\n   This MIB module also introduces a new textual convention\n
        \  TransportDomain which is compatible with the TDomain definition so\n   that
        a complete set of definitions is contained in a single MIB\n   module.  New
        MIB modules SHOULD use the generic TransportDomain,\n   TransportAddressType
        and TransportAddress definitions defined in this\n   memo.  Existing MIB modules
        may be updated to use the definitions\n   provided in this memo by replacing
        TDomain with TransportDomain and\n   TAddress with TransportAddress (SIZE
        (1..255)).\n"
      title: 3.1.1 SNMPv2-TC (TAddress, TDomain)
    - contents:
      - "3.1.2 SNMPv2-TM\n   The transport domain values defined in the SNMPv2-TM
        MIB module\n   [RFC3417] all contain \"snmp\" as the prefix in their name
        and are\n   registered under `snmpDomains' (from RFC 2578 [RFC2578]).  They
        were\n   originally intended to describe SNMP transport domains only - but\n
        \  they were later also used for non-SNMP transport endpoints.  These\n   definitions
        are also incomplete since new transport address domains\n   are needed to
        support (at least) SNMP over UDP over IPv6.\n   The transport domain values
        defined in this memo are independent of\n   the protocol running over the
        transport-layer and SHOULD be used for\n   all transport endpoints not carrying
        SNMP traffic.  Programs that\n   interpret transport domain values should
        in addition accept the\n   transport domain values defined in the SNMPv2-TM
        MIB module in order\n   to provide interoperability with existing implementations
        that use\n   the SNMP specific transport domain values.\n   Transport endpoints
        which carry SNMP traffic SHOULD continue to use\n   the definitions from the
        SNMPv2-TM MIB module where applicable.  They\n   SHOULD use the transport
        domain values defined in this memo for SNMP\n   transports not defined in
        the SNMPv2-TM MIB module, such as SNMP over\n   UDP over IPv6.  Programs that
        interpret transport domain values\n   should in addition accept all the transport
        domain values defined in\n   this memo in order to provide interoperability
        in cases where it is\n   not possible or desirable to distinguish the protocols
        running over a\n   transport endpoint.\n"
      title: 3.1.2 SNMPv2-TM
    - contents:
      - "3.1.3 INET-ADDRESS-MIB (InetAddressType, InetAddress)\n   The INET-ADDRESS-MIB
        MIB module [RFC3291] defines the textual\n   conventions InetAddressType and
        InetAddress to represent Internet\n   network layer endpoints.  Some MIB modules
        use these textual\n   conventions in conjunction with the InetPortNumber textual
        convention\n   to represent Internet transport-layer endpoints.  This approach
        is\n   fine as long as a MIB models protocols or applications that are\n   specific
        to the Internet suite of transport protocols.  For protocols\n   or applications
        that can potentially use other transport protocols,\n   the use of the definitions
        contained in this memo is more\n   appropriate.\n"
      title: 3.1.3 INET-ADDRESS-MIB (InetAddressType, InetAddress)
    title: 3.1 Relationship to Other MIBs
  title: 3. Overview
- contents:
  - '4. Definitions

    '
  - 'TRANSPORT-ADDRESS-MIB DEFINITIONS ::= BEGIN

    '
  - "IMPORTS\n    MODULE-IDENTITY, OBJECT-IDENTITY, mib-2     FROM SNMPv2-SMI\n    TEXTUAL-CONVENTION
    \                         FROM SNMPv2-TC;\n"
  - "transportAddressMIB MODULE-IDENTITY\n    LAST-UPDATED \"200211010000Z\"\n    ORGANIZATION\n
    \       \"IETF Operations and Management Area\"\n    CONTACT-INFO\n        \"Juergen
    Schoenwaelder (Editor)\n         TU Braunschweig\n         Bueltenweg 74/75\n
    \        38106 Braunschweig, Germany\n         Phone: +49 531 391-3289\n         EMail:
    schoenw@ibr.cs.tu-bs.de\n         Send comments to <mibs@ops.ietf.org>.\"\n    DESCRIPTION\n
    \       \"This MIB module provides commonly used transport\n         address definitions.\n
    \        Copyright (C) The Internet Society (2002). This version of\n         this
    MIB module is part of RFC 3419; see the RFC itself for\n         full legal notices.\"\n
    \   -- Revision log\n    REVISION    \"200211010000Z\"\n    DESCRIPTION\n        \"Initial
    version, published as RFC 3419.\"\n    ::= { mib-2 100 }\n"
  - 'transportDomains OBJECT IDENTIFIER ::= { transportAddressMIB 1 }

    '
  - "transportDomainUdpIpv4 OBJECT-IDENTITY\n    STATUS      current\n    DESCRIPTION\n
    \       \"The UDP over IPv4 transport domain.  The corresponding\n         transport
    address is of type TransportAddressIPv4 for\n         global IPv4 addresses.\"\n
    \   ::= { transportDomains 1 }\n"
  - "transportDomainUdpIpv6 OBJECT-IDENTITY\n    STATUS      current\n    DESCRIPTION\n
    \       \"The UDP over IPv6 transport domain.  The corresponding\n         transport
    address is of type TransportAddressIPv6 for\n         global IPv6 addresses.\"\n
    \   ::= { transportDomains 2 }\n"
  - "transportDomainUdpIpv4z OBJECT-IDENTITY\n    STATUS      current\n    DESCRIPTION\n
    \       \"The UDP over IPv4 transport domain.  The corresponding\n         transport
    address is of type TransportAddressIPv4z for\n         scoped IPv4 addresses with
    a zone index.\"\n    ::= { transportDomains 3 }\n"
  - "transportDomainUdpIpv6z OBJECT-IDENTITY\n    STATUS      current\n    DESCRIPTION\n
    \       \"The UDP over IPv6 transport domain.  The corresponding\n         transport
    address is of type TransportAddressIPv6z for\n         scoped IPv6 addresses with
    a zone index.\"\n    ::= { transportDomains 4 }\n"
  - "transportDomainTcpIpv4 OBJECT-IDENTITY\n    STATUS      current\n    DESCRIPTION\n
    \       \"The TCP over IPv4 transport domain.  The corresponding\n         transport
    address is of type TransportAddressIPv4 for\n         global IPv4 addresses.\"\n
    \   ::= { transportDomains 5 }\n"
  - "transportDomainTcpIpv6 OBJECT-IDENTITY\n    STATUS      current\n    DESCRIPTION\n
    \       \"The TCP over IPv6 transport domain.  The corresponding\n         transport
    address is of type TransportAddressIPv6 for\n         global IPv6 addresses.\"\n
    \   ::= { transportDomains 6 }\n"
  - "transportDomainTcpIpv4z OBJECT-IDENTITY\n    STATUS      current\n    DESCRIPTION\n
    \       \"The TCP over IPv4 transport domain.  The corresponding\n         transport
    address is of type TransportAddressIPv4z for\n         scoped IPv4 addresses with
    a zone index.\"\n    ::= { transportDomains 7 }\n"
  - "transportDomainTcpIpv6z OBJECT-IDENTITY\n    STATUS      current\n    DESCRIPTION\n
    \       \"The TCP over IPv6 transport domain.  The corresponding\n         transport
    address is of type TransportAddressIPv6z for\n         scoped IPv6 addresses with
    a zone index.\"\n    ::= { transportDomains 8 }\n"
  - "transportDomainSctpIpv4 OBJECT-IDENTITY\n    STATUS      current\n    DESCRIPTION\n
    \       \"The SCTP over IPv4 transport domain.  The corresponding\n         transport
    address is of type TransportAddressIPv4 for\n         global IPv4 addresses. This
    transport domain usually\n         represents the primary address on multihomed
    SCTP\n         endpoints.\"\n    ::= { transportDomains 9 }\n"
  - "transportDomainSctpIpv6 OBJECT-IDENTITY\n    STATUS      current\n    DESCRIPTION\n
    \       \"The SCTP over IPv6 transport domain.  The corresponding\n         transport
    address is of type TransportAddressIPv6 for\n         global IPv6 addresses. This
    transport domain usually\n         represents the primary address on multihomed
    SCTP\n         endpoints.\"\n    ::= { transportDomains 10 }\n"
  - "transportDomainSctpIpv4z OBJECT-IDENTITY\n    STATUS      current\n    DESCRIPTION\n
    \       \"The SCTP over IPv4 transport domain.  The corresponding\n         transport
    address is of type TransportAddressIPv4z for\n         scoped IPv4 addresses with
    a zone index. This transport\n         domain usually represents the primary address
    on\n         multihomed SCTP endpoints.\"\n    ::= { transportDomains 11 }\n"
  - "transportDomainSctpIpv6z OBJECT-IDENTITY\n    STATUS      current\n    DESCRIPTION\n
    \       \"The SCTP over IPv6 transport domain.  The corresponding\n         transport
    address is of type TransportAddressIPv6z for\n         scoped IPv6 addresses with
    a zone index. This transport\n         domain usually represents the primary address
    on\n         multihomed SCTP endpoints.\"\n    ::= { transportDomains 12 }\n"
  - "transportDomainLocal OBJECT-IDENTITY\n    STATUS      current\n    DESCRIPTION\n
    \       \"The Posix Local IPC transport domain. The corresponding\n         transport
    address is of type TransportAddressLocal.\n         The Posix Local IPC transport
    domain incorporates the\n         well-known UNIX domain sockets.\"\n    ::= {
    transportDomains 13 }\n"
  - "transportDomainUdpDns OBJECT-IDENTITY\n    STATUS      current\n    DESCRIPTION\n
    \       \"The UDP transport domain using fully qualified domain\n         names.
    The corresponding transport address is of type\n         TransportAddressDns.\"\n
    \   ::= { transportDomains 14 }\n"
  - "transportDomainTcpDns OBJECT-IDENTITY\n    STATUS      current\n    DESCRIPTION\n
    \       \"The TCP transport domain using fully qualified domain\n         names.
    The corresponding transport address is of type\n         TransportAddressDns.\"\n
    \   ::= { transportDomains 15 }\n"
  - "transportDomainSctpDns OBJECT-IDENTITY\n    STATUS      current\n    DESCRIPTION\n
    \       \"The SCTP transport domain using fully qualified domain\n         names.
    The corresponding transport address is of type\n         TransportAddressDns.\"\n
    \   ::= { transportDomains 16 }\n"
  - "TransportDomain ::= TEXTUAL-CONVENTION\n    STATUS      current\n    DESCRIPTION\n
    \       \"A value that represents a transport domain.\n         Some possible
    values, such as transportDomainUdpIpv4, are\n         defined in this module.
    \ Other possible values can be\n         defined in other MIB modules.\"\n    SYNTAX
    \     OBJECT IDENTIFIER\n"
  - '--

    '
  - '-- The enumerated values of the textual convention below should

    '
  - '-- be identical to the last sub-identifier of the OID registered

    '
  - '-- for the same domain.

    '
  - '--

    '
  - "TransportAddressType ::= TEXTUAL-CONVENTION\n    STATUS      current\n    DESCRIPTION\n
    \       \"A value that represents a transport domain. This is the\n         enumerated
    version of the transport domain registrations\n         in this MIB module. The
    enumerated values have the\n         following meaning:\n         unknown(0)     unknown
    transport address type\n         udpIpv4(1)     transportDomainUdpIpv4\n         udpIpv6(2)
    \    transportDomainUdpIpv6\n         udpIpv4z(3)    transportDomainUdpIpv4z\n
    \        udpIpv6z(4)    transportDomainUdpIpv6z\n         tcpIpv4(5)     transportDomainTcpIpv4\n
    \        tcpIpv6(6)     transportDomainTcpIpv6\n         tcpIpv4z(7)    transportDomainTcpIpv4z\n
    \        tcpIpv6z(8)    transportDomainTcpIpv6z\n         sctpIpv4(9)    transportDomainSctpIpv4\n
    \        sctpIpv6(10)   transportDomainSctpIpv6\n         sctpIpv4z(11)  transportDomainSctpIpv4z\n
    \        sctpIpv6z(12)  transportDomainSctpIpv6z\n         local(13)      transportDomainLocal\n
    \        udpDns(14)     transportDomainUdpDns\n         tcpDns(15)     transportDomainTcpDns\n
    \        sctpDns(16)    transportDomainSctpDns\n         This textual convention
    can be used to represent transport\n         domains in situations where a syntax
    of TransportDomain is\n         unwieldy (for example, when used as an index).\n
    \        The usage of this textual convention implies that additional\n         transport
    domains can only be supported by updating this MIB\n         module. This extensibility
    restriction does not apply for the\n         TransportDomain textual convention
    which allows MIB authors\n         to define additional transport domains independently
    in\n         other MIB modules.\"\n    SYNTAX      INTEGER {\n                    unknown(0),\n
    \                   udpIpv4(1),\n                    udpIpv6(2),\n                    udpIpv4z(3),\n
    \                   udpIpv6z(4),\n                    tcpIpv4(5),\n                    tcpIpv6(6),\n
    \                   tcpIpv4z(7),\n                    tcpIpv6z(8),\n                    sctpIpv4(9),\n
    \                   sctpIpv6(10),\n                    sctpIpv4z(11),\n                    sctpIpv6z(12),\n
    \                   local(13),\n                    udpDns(14),\n                    tcpDns(15),\n
    \                   sctpDns(16)\n                }\n"
  - "TransportAddress ::= TEXTUAL-CONVENTION\n    STATUS      current\n    DESCRIPTION\n
    \       \"Denotes a generic transport address.\n         A TransportAddress value
    is always interpreted within the\n         context of a TransportAddressType or
    TransportDomain value.\n         Every usage of the TransportAddress textual convention
    MUST\n         specify the TransportAddressType or TransportDomain object\n         which
    provides the context. Furthermore, MIB authors SHOULD\n         define a separate
    TransportAddressType or TransportDomain\n         object for each TransportAddress
    object. It is suggested that\n         the TransportAddressType or TransportDomain
    is logically\n         registered before the object(s) which use the\n         TransportAddress
    textual convention if they appear in the\n         same logical row.\n         The
    value of a TransportAddress object must always be\n         consistent with the
    value of the associated\n         TransportAddressType or TransportDomain object.
    Attempts\n         to set a TransportAddress object to a value which is\n         inconsistent
    with the associated TransportAddressType or\n         TransportDomain must fail
    with an inconsistentValue error.\n         When this textual convention is used
    as a syntax of an\n         index object, there may be issues with the limit of
    128\n         sub-identifiers specified in SMIv2, STD 58. In this case,\n         the
    OBJECT-TYPE declaration MUST include a 'SIZE' clause\n         to limit the number
    of potential instance sub-identifiers.\"\n    SYNTAX      OCTET STRING (SIZE (0..255))\n"
  - "TransportAddressIPv4 ::= TEXTUAL-CONVENTION\n    DISPLAY-HINT \"1d.1d.1d.1d:2d\"\n
    \   STATUS      current\n    DESCRIPTION\n        \"Represents a transport address
    consisting of an IPv4\n         address and a port number (as used for example
    by UDP,\n         TCP and SCTP):\n          octets       contents         encoding\n
    \          1-4         IPv4 address     network-byte order\n           5-6         port
    number      network-byte order\n         This textual convention SHOULD NOT be
    used directly in object\n         definitions since it restricts addresses to
    a specific format.\n         However, if it is used, it MAY be used either on
    its own or\n         in conjunction with TransportAddressType or TransportDomain\n
    \        as a pair.\"\n    SYNTAX      OCTET STRING (SIZE (6))\n"
  - "TransportAddressIPv6 ::= TEXTUAL-CONVENTION\n    DISPLAY-HINT \"0a[2x:2x:2x:2x:2x:2x:2x:2x]0a:2d\"\n
    \   STATUS      current\n    DESCRIPTION\n        \"Represents a transport address
    consisting of an IPv6\n         address and a port number (as used for example
    by UDP,\n         TCP and SCTP):\n          octets       contents         encoding\n
    \          1-16        IPv6 address     network-byte order\n          17-18        port
    number      network-byte order\n         This textual convention SHOULD NOT be
    used directly in object\n         definitions since it restricts addresses to
    a specific format.\n         However, if it is used, it MAY be used either on
    its own or\n         in conjunction with TransportAddressType or TransportDomain\n
    \        as a pair.\"\n    SYNTAX      OCTET STRING (SIZE (18))\n"
  - "TransportAddressIPv4z ::= TEXTUAL-CONVENTION\n    DISPLAY-HINT \"1d.1d.1d.1d%4d:2d\"\n
    \   STATUS      current\n    DESCRIPTION\n        \"Represents a transport address
    consisting of an IPv4\n         address, a zone index and a port number (as used
    for\n         example by UDP, TCP and SCTP):\n          octets       contents
    \        encoding\n           1-4         IPv4 address     network-byte order\n
    \          5-8         zone index       network-byte order\n           9-10        port
    number      network-byte order\n         This textual convention SHOULD NOT be
    used directly in object\n         definitions since it restricts addresses to
    a specific format.\n         However, if it is used, it MAY be used either on
    its own or\n         in conjunction with TransportAddressType or TransportDomain\n
    \        as a pair.\"\n    SYNTAX      OCTET STRING (SIZE (10))\n"
  - "TransportAddressIPv6z ::= TEXTUAL-CONVENTION\n    DISPLAY-HINT \"0a[2x:2x:2x:2x:2x:2x:2x:2x%4d]0a:2d\"\n
    \   STATUS      current\n    DESCRIPTION\n        \"Represents a transport address
    consisting of an IPv6\n         address, a zone index and a port number (as used
    for\n         example by UDP, TCP and SCTP):\n          octets       contents
    \        encoding\n           1-16        IPv6 address     network-byte order\n
    \         17-20        zone index       network-byte order\n          21-22        port
    number      network-byte order\n         This textual convention SHOULD NOT be
    used directly in object\n         definitions since it restricts addresses to
    a specific format.\n         However, if it is used, it MAY be used either on
    its own or\n         in conjunction with TransportAddressType or TransportDomain\n
    \        as a pair.\"\n    SYNTAX      OCTET STRING (SIZE (22))\n"
  - "TransportAddressLocal ::= TEXTUAL-CONVENTION\n    DISPLAY-HINT \"1a\"\n    STATUS
    \     current\n    DESCRIPTION\n        \"Represents a POSIX Local IPC transport
    address:\n          octets       contents                   encoding\n           all
    \        POSIX Local IPC address    string\n         The Posix Local IPC transport
    domain subsumes UNIX domain\n         sockets.\n         This textual convention
    SHOULD NOT be used directly in object\n         definitions since it restricts
    addresses to a specific format.\n         However, if it is used, it MAY be used
    either on its own or\n         in conjunction with TransportAddressType or TransportDomain\n
    \        as a pair.\n         When this textual convention is used as a syntax
    of an\n         index object, there may be issues with the limit of 128\n         sub-identifiers
    specified in SMIv2, STD 58. In this case,\n         the OBJECT-TYPE declaration
    MUST include a 'SIZE' clause\n         to limit the number of potential instance
    sub-identifiers.\"\n    REFERENCE\n        \"Protocol Independent Interfaces (IEEE
    POSIX 1003.1g)\"\n    SYNTAX      OCTET STRING (SIZE (1..255))\n"
  - "TransportAddressDns ::= TEXTUAL-CONVENTION\n    DISPLAY-HINT \"1a\"\n    STATUS
    \     current\n    DESCRIPTION\n        \"Represents a DNS domain name followed
    by a colon ':'\n         (ASCII character 0x3A) and a port number in ASCII.\n
    \        The name SHOULD be fully qualified whenever possible.\n         Values
    of this textual convention are not directly useable as\n         transport-layer
    addressing information, and require runtime\n         resolution. As such, applications
    that write them must be\n         prepared for handling errors if such values
    are not\n         supported, or cannot be resolved (if resolution occurs at the\n
    \        time of the management operation).\n         The DESCRIPTION clause of
    TransportAddress objects that may\n         have TransportAddressDns values must
    fully describe how (and\n         when) such names are to be resolved to IP addresses
    and vice\n         versa.\n         This textual convention SHOULD NOT be used
    directly in object\n         definitions since it restricts addresses to a specific
    format.\n         However, if it is used, it MAY be used either on its own or\n
    \        in conjunction with TransportAddressType or TransportDomain\n         as
    a pair.\n         When this textual convention is used as a syntax of an\n         index
    object, there may be issues with the limit of 128\n         sub-identifiers specified
    in SMIv2, STD 58. In this case,\n         the OBJECT-TYPE declaration MUST include
    a 'SIZE' clause\n         to limit the number of potential instance sub-identifiers.\"\n
    \   SYNTAX      OCTET STRING (SIZE (1..255))\n"
  - 'END

    '
  title: 4. Definitions
- contents:
  - "5. Examples\n   This section shows some examples how transport addresses are
    encoded\n   and rendered using some of the transport address definitions.\n"
  - 'Description:      Unspecified IPv4 address on port 80.

    '
  - 'Encoding (hex):   000000000050

    '
  - 'Display:          0.0.0.0:80

    '
  - 'Description:      Global IPv4 address on port 80.

    '
  - 'Encoding (hex):   86A922010050

    '
  - 'Display:          134.169.34.1:80

    '
  - 'Description:      Unspecified IPv6 address on port 80.

    '
  - 'Encoding (hex):   000000000000000000000000000000000050

    '
  - 'Display:          [0:0:0:0:0:0:0:0]:80

    '
  - 'Description:      Global IPv6 address on port 80.

    '
  - 'Encoding (hex):   108000000000000000080800200C417A0050

    '
  - 'Display:          [1080:0:0:0:8:800:200C:417A]:80

    '
  - 'Description:      Link-local IPv6 address with zone-index 42 on port 80.

    '
  - 'Encoding (hex):   FE8000000000000000010000000002000000002A0050

    '
  - 'Display:          [FE80:0:0:0:1:0:0:200%42]:80

    '
  - 'Description:      Posix Local IPC address (UNIX domain).

    '
  - 'Encoding (hex):   2F7661722F6167656E74782F6D6173746572

    '
  - 'Display:          /var/agentx/master

    '
  - 'Description:      Fully qualified domain name on port 80.

    '
  - 'Encoding (hex):   7777772E6578616D706C652E6E65743A3830

    '
  - 'Display:          www.example.net:80

    '
  title: 5. Examples
- contents:
  - "6. Security Considerations\n   The MIB module contained in this memo does not
    define any management\n   objects.  Instead, it defines a set of textual conventions
    which may\n   be used by other MIB modules to define management objects.\n   Meaningful
    security considerations can only be written for MIB\n   modules that define concrete
    management objects.  This document has\n   therefore no impact on the security
    of the Internet.\n"
  title: 6. Security Considerations
- contents:
  - "7. Acknowledgments\n   This document was produced by the Operations and Management
    Area\n   \"IPv6MIB\" design team.  The authors would like to thank Mark Ellison,\n
    \  Brian Haberman, Mike Heard, Glenn Mansfield Keeni, Erik Nordmark,\n   Shawn
    A. Routhier, Bill Strahm, Dave Thaler and Bert Wijnen for their\n   comments and
    suggestions.\n"
  title: 7. Acknowledgments
- contents:
  - "8. Intellectual Property Notice\n   The IETF takes no position regarding the
    validity or scope of any\n   intellectual property or other rights that might
    be claimed to\n   pertain to the implementation or use of the technology described
    in\n   this document or the extent to which any license under such rights\n   might
    or might not be available; neither does it represent that it\n   has made any
    effort to identify any such rights.  Information on the\n   IETF's procedures
    with respect to rights in standards-track and\n   standards-related documentation
    can be found in BCP-11.  Copies of\n   claims of rights made available for publication
    and any assurances of\n   licenses to be made available, or the result of an attempt
    made to\n   obtain a general license or permission for the use of such\n   proprietary
    rights by implementors or users of this specification can\n   be obtained from
    the IETF Secretariat.\n   The IETF invites any interested party to bring to its
    attention any\n   copyrights, patents or patent applications, or other proprietary\n
    \  rights which may cover technology that may be required to practice\n   this
    standard.  Please address the information to the IETF Executive\n   Director.\n"
  title: 8. Intellectual Property Notice
- contents:
  - "Normative References\n   [RFC2119] Bradner, S., \"Key words for use in RFCs to
    Indicate\n             Requirement Levels\", BCP 14, RFC 2119, March 1997.\n   [RFC2578]
    McCloghrie, K., Perkins, D., Schoenwaelder, J., Case, J.,\n             Rose,
    M. and S. Waldbusser, \"Structure of Management\n             Information Version
    2 (SMIv2)\", STD 58, RFC 2578, April\n             1999.\n   [RFC2579] McCloghrie,
    K., Perkins, D., Schoenwaelder, J., Case, J.,\n             Rose, M. and S. Waldbusser,
    \"Textual Conventions for\n             SMIv2\", STD 58, RFC 2579, April 1999.\n
    \  [RFC2580] McCloghrie, K., Perkins, D., Schoenwaelder, J., Case, J.,\n             Rose,
    M. and S. Waldbusser, \"Conformance Statements for\n             SMIv2\", STD
    58, RFC 2580, April 1999.\n   [RFC3417] Presuhn, R., Case, J., McCloghrie, K.,
    Rose, M. and S.\n             Waldbusser, \"Transport Mappings for the Simple
    Network\n             Management Protocol (SNMP)\", STD 62, RFC 3417, December\n
    \            2002.\n"
  title: Normative References
- contents:
  - "Informative References\n   [SCOPED]  Deering, S., Haberman, B., Jinmei, T., Nordmark,
    E., Onoe,\n             A. and B. Zill, \"IPv6 Scoped Address Architecture\",
    Work in\n             Progress.\n   [RFC2396] Berners-Lee, T., Fielding, R. and
    L. Masinter, \"Uniform\n             Resource Identifiers (URI): Generic Syntax\",
    RFC 2396,\n             August 1998.\n   [RFC2732] Hinden, R., Carpenter, B. and
    L. Masinter, \"Format for\n             Literal IPv6 Addresses in URL's\", RFC
    2732, August 1998.\n   [RFC3291] Daniele, M., Haberman, B., Routhier, S. and J.\n
    \            Schoenwaelder, \"Textual Conventions for Internet Network\n             Addresses\",
    RFC 3291, December 2001.\n   [RFC3410] Case, J., Mundy, R., Partain, D. and B.
    Stewart,\n             \"Introduction and Applicability Statements for Internet-\n
    \            Standard Management Framework\", RFC 3410, December 2002.\n"
  title: Informative References
- contents:
  - "Authors' Addresses\n   Mike Daniele\n   Consultant\n   19 Pinewood Rd\n   Hudson,
    NH  03051\n   USA\n   Phone: +1 603 883-6365\n   EMail: md@world.std.com\n   Juergen
    Schoenwaelder\n   TU Braunschweig\n   Bueltenweg 74/75\n   38106 Braunschweig\n
    \  Germany\n   Phone: +49 531 391-3289\n   EMail: schoenw@ibr.cs.tu-bs.de\n"
  title: Authors' Addresses
- contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2002).  All
    Rights Reserved.\n   This document and translations of it may be copied and furnished
    to\n   others, and derivative works that comment on or otherwise explain it\n
    \  or assist in its implementation may be prepared, copied, published\n   and
    distributed, in whole or in part, without restriction of any\n   kind, provided
    that the above copyright notice and this paragraph are\n   included on all such
    copies and derivative works.  However, this\n   document itself may not be modified
    in any way, such as by removing\n   the copyright notice or references to the
    Internet Society or other\n   Internet organizations, except as needed for the
    purpose of\n   developing Internet standards in which case the procedures for\n
    \  copyrights defined in the Internet Standards process must be\n   followed,
    or as required to translate it into languages other than\n   English.\n   The
    limited permissions granted above are perpetual and will not be\n   revoked by
    the Internet Society or its successors or assigns.\n   This document and the information
    contained herein is provided on an\n   \"AS IS\" basis and THE INTERNET SOCIETY
    AND THE INTERNET ENGINEERING\n   TASK FORCE DISCLAIMS ALL WARRANTIES, EXPRESS
    OR IMPLIED, INCLUDING\n   BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE
    INFORMATION\n   HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED WARRANTIES
    OF\n   MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.\n"
  title: Full Copyright Statement
- contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided
    by the\n   Internet Society.\n"
  title: Acknowledgement
