- contents:
  - "         Path Computation Element Communication Protocol (PCEP)\n                Management
    Information Base (MIB) Module\n"
  title: __initial_text__
- contents:
  - "Abstract\n   This memo defines a portion of the Management Information Base (MIB)\n
    \  for use with network management protocols in the Internet community.\n   In
    particular, it describes managed objects for modeling of the Path\n   Computation
    Element Communication Protocol (PCEP) for communications\n   between a Path Computation
    Client (PCC) and a Path Computation\n   Element (PCE), or between two PCEs.\n"
  title: Abstract
- contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This
    document is a product of the Internet Engineering Task Force\n   (IETF).  It represents
    the consensus of the IETF community.  It has\n   received public review and has
    been approved for publication by the\n   Internet Engineering Steering Group (IESG).
    \ Further information on\n   Internet Standards is available in Section 2 of RFC
    5741.\n   Information about the current status of this document, any errata,\n
    \  and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc7420.\n"
  title: Status of This Memo
- contents:
  - "Copyright Notice\n   Copyright (c) 2014 IETF Trust and the persons identified
    as the\n   document authors.  All rights reserved.\n   This document is subject
    to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n
    \  (http://trustee.ietf.org/license-info) in effect on the date of\n   publication
    of this document.  Please review these documents\n   carefully, as they describe
    your rights and restrictions with respect\n   to this document.  Code Components
    extracted from this document must\n   include Simplified BSD License text as described
    in Section 4.e of\n   the Trust Legal Provisions and are provided without warranty
    as\n   described in the Simplified BSD License.\n"
  title: Copyright Notice
- contents:
  - "Table of Contents\n   1.  Introduction  . . . . . . . . . . . . . . . . . . .
    . . . . .   3\n     1.1.  Requirements Language . . . . . . . . . . . . . . .
    . . .   3\n     1.2.  Terminology . . . . . . . . . . . . . . . . . . . . . .
    .   3\n   2.  The Internet-Standard Management Framework  . . . . . . . . .   4\n
    \  3.  PCEP MIB Module Architecture  . . . . . . . . . . . . . . . .   4\n     3.1.
    \ pcePcepEntityTable  . . . . . . . . . . . . . . . . . . .   4\n     3.2.  pcePcepPeerTable
    \ . . . . . . . . . . . . . . . . . . . .   5\n     3.3.  pcePcepSessTable  .
    . . . . . . . . . . . . . . . . . . .   5\n     3.4.  PCEP Notifications  . .
    . . . . . . . . . . . . . . . . .   6\n     3.5.  Relationship to Other MIB Modules
    . . . . . . . . . . . .   6\n     3.6.  Illustrative Example  . . . . . . . .
    . . . . . . . . . .   7\n   4.  Object Definitions  . . . . . . . . . . . . .
    . . . . . . . .   8\n     4.1.  PCE-PCEP-MIB  . . . . . . . . . . . . . . . .
    . . . . . .   8\n   5.  Security Considerations . . . . . . . . . . . . . . .
    . . . .  49\n   6.  IANA Considerations . . . . . . . . . . . . . . . . . . .
    . .  50\n   7.  References  . . . . . . . . . . . . . . . . . . . . . . . . .
    \ 50\n     7.1.  Normative References  . . . . . . . . . . . . . . . . . .  50\n
    \    7.2.  Informative References  . . . . . . . . . . . . . . . . .  51\n   Appendix
    A.  PCEP MIB Module Example  . . . . . . . . . . . . . .  52\n     A.1.  Contents
    of PCEP MIB Module at PCE2 . . . . . . . . . . .  53\n     A.2.  Contents of PCEP
    MIB Module at PCCb . . . . . . . . . . .  60\n   Acknowledgements  . . . . . .
    . . . . . . . . . . . . . . . . . .  64\n   Contributors  . . . . . . . . . .
    . . . . . . . . . . . . . . . .  64\n   Authors' Addresses  . . . . . . . . .
    . . . . . . . . . . . . . .  65\n"
  title: Table of Contents
- contents:
  - "1.  Introduction\n   The PCE defined in [RFC4655] is an entity that is capable
    of\n   computing a network path or route based on a network graph and\n   applying
    computational constraints.  A PCC may make requests to a PCE\n   for paths to
    be computed.\n   PCEP is the communication protocol between a PCC and PCE and
    is\n   defined in [RFC5440].  PCEP interactions include path computation\n   requests
    and path computation replies as well as notifications of\n   specific states related
    to the use of a PCE in the context of\n   Multiprotocol Label Switching (MPLS)
    and Generalized MPLS (GMPLS)\n   Traffic Engineering (TE).\n   This memo defines
    a portion of the MIB for use with network\n   management protocols in the Internet
    community.  In particular, it\n   defines a MIB module that can be used to monitor
    PCEP interactions\n   between a PCC and a PCE, or between two PCEs.\n   The scope
    of this document is to provide a MIB module for the PCEP\n   base protocol defined
    in [RFC5440].  Extensions to the PCEP base\n   protocol are beyond the scope for
    this document.\n"
  - contents:
    - "1.1.  Requirements Language\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\",
      \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\"
      and \"OPTIONAL\" in this\n   document are to be interpreted as described in
      BCP 14 [RFC2119].\n"
    title: 1.1.  Requirements Language
  - contents:
    - "1.2.  Terminology\n   This document uses the terminology defined in [RFC4655]
      and\n   [RFC5440].  In particular, it uses the following acronyms.\n   o  Path
      Computation Request (PCReq) message.\n   o  Path Computation Reply (PCRep) message.\n
      \  o  Notification (PCNtf) message.\n   o  Error (PCErr) message.\n   o  Request
      Parameter (RP) object.\n   o  Synchronization Vector (SVEC) object.\n   o  Explicit
      Route Object (ERO).\n   This document uses the term \"PCEP entity\" to refer
      to a local PCEP\n   speaker, \"peer\" to refer to a remote PCEP speaker, and
      \"PCEP speaker\"\n   where it is not necessary to distinguish between local
      and remote.\n"
    title: 1.2.  Terminology
  title: 1.  Introduction
- contents:
  - "2.  The Internet-Standard Management Framework\n   For a detailed overview of
    the documents that describe the current\n   Internet-Standard Management Framework,
    please refer to section 7 of\n   RFC 3410 [RFC3410].\n   Managed objects are accessed
    via a virtual information store, termed\n   the Management Information Base or
    MIB.  MIB objects are generally\n   accessed through the Simple Network Management
    Protocol (SNMP).\n   Objects in the MIB are defined using the mechanisms defined
    in the\n   Structure of Management Information (SMI).  This memo specifies a MIB\n
    \  module that is compliant to the SMIv2, which is described in STD 58,\n   RFC
    2578 [RFC2578], STD 58, RFC 2579 [RFC2579], and STD 58, RFC 2580\n   [RFC2580].\n"
  title: 2.  The Internet-Standard Management Framework
- contents:
  - "3.  PCEP MIB Module Architecture\n   The PCEP MIB module contains the following
    information:\n   a.  PCE and PCC local entity status (see pcePcepEntityTable).\n
    \  b.  PCEP peer information (see pcePcepPeerTable).\n   c.  PCEP session information
    (see pcePcepSessTable).\n   d.  Notifications to indicate PCEP session changes.\n
    \  The PCEP MIB module is limited to \"read-only\" access except for\n   pcePcepNotificationsMaxRate,
    which is used to throttle the rate at\n   which the implementation generates notifications.\n"
  - contents:
    - "3.1.  pcePcepEntityTable\n   The PCEP MIB module may contain status information
      for multiple\n   logical local PCEP entities.  There are several scenarios in
      which\n   there may be more than one local PCEP entity, including the\n   following.\n
      \  o  A physical router, which is partitioned into multiple virtual\n      routers,
      each with its own PCC.\n   o  A PCE device that front ends a cluster of compute
      resources, each\n      with a different set of capabilities that are accessed
      via\n      different IP addresses.\n   The pcePcepEntityTable contains one row
      for each local PCEP entity.\n   Each row is read-only and contains current status
      information, plus\n   the PCEP entity's running configuration.\n   The pcePcepEntityTable
      is indexed by pcePcepEntityIndex, which also\n   acts as the primary index for
      the other tables in this MIB module.\n"
    title: 3.1.  pcePcepEntityTable
  - contents:
    - "3.2.  pcePcepPeerTable\n   The pcePcepPeerTable contains one row for each peer
      that the local\n   PCEP entity knows about.  Each row is read-only and contains\n
      \  information to identify the peer, the running configuration relating\n   to
      that peer, and statistics that track the messages exchanged with\n   that peer
      and its response times.\n   A PCEP speaker is identified by its IP address.
      \ If there is a PCEP\n   speaker in the network that uses multiple IP addresses,
      then it looks\n   like multiple distinct peers to the other PCEP speakers in
      the\n   network.\n   The pcePcepPeerTable is indexed first by pcePcepEntityIndex,
      then by\n   pcePcepPeerAddrType and pcePcepPeerAddr.  This indexing structure\n
      \  allows each local PCEP entity to report its own set of peers.\n   Since PCEP
      sessions can be ephemeral, pcePcepPeerTable tracks a peer\n   even when no PCEP
      session currently exists to that peer.  The\n   statistics contained in pcePcepPeerTable
      are an aggregate of the\n   statistics for all successive sessions to that peer.\n
      \  To limit the quantity of information that is stored, an\n   implementation
      MAY choose to discard a row from pcePcepPeerTable if\n   and only if no PCEP
      session exists to the corresponding peer.\n"
    title: 3.2.  pcePcepPeerTable
  - contents:
    - "3.3.  pcePcepSessTable\n   The pcePcepSessTable contains one row for each PCEP
      session that the\n   PCEP entity (PCE or PCC) is currently participating in.
      \ Each row is\n   read-only and contains the running configuration that is applied
      to\n   the session, plus identifiers and statistics for the session.\n   The
      statistics in pcePcepSessTable are semantically different from\n   those in
      pcePcepPeerTable since the former applies to the current\n   session only, whereas
      the latter is the aggregate for all sessions\n   that have existed to that peer.\n
      \  Although it is forbidden per [RFC5440] to have more than one active\n   PCEP
      session between a given pair of PCEP entities at any one time,\n   there is
      a window during session establishment where the\n   pcePcepSessTable may contain
      two rows for a given peer, one\n   representing a session initiated by the local
      PCEP entity and one\n   representing a session initiated by the peer.  If either
      of these\n   sessions reaches an active state, then the other is discarded.\n
      \  The pcePcepSessTable is indexed first by pcePcepEntityIndex, then by\n   pcePcepPeerAddrType
      and pcePcepPeerAddr, and finally by\n   pcePcepSessInitiator.  This indexing
      structure allows each local PCEP\n   entity to report its own set of active
      sessions.  The\n   pcePcepSessInitiator index allows two rows to exist transiently
      for a\n   given peer, as discussed above.\n"
    title: 3.3.  pcePcepSessTable
  - contents:
    - "3.4.  PCEP Notifications\n   The PCEP MIB module contains notifications for
      the following\n   conditions.\n   a.  pcePcepSessUp: PCEP session has gone up.\n
      \  b.  pcePcepSessDown: PCEP session has gone down.\n   c.  pcePcepSessLocalOverload:
      Local PCEP entity has sent an overload\n       PCNtf on this session.\n   d.
      \ pcePcepSessLocalOverloadClear: Local PCEP entity has sent an\n       overload-cleared
      PCNtf on this session.\n   e.  pcePcepSessPeerOverload: Peer has sent an overload
      PCNtf on this\n       session.\n   f.  pcePcepSessPeerOverloadClear: Peer has
      sent an overload-cleared\n       PCNtf on this session.\n"
    title: 3.4.  PCEP Notifications
  - contents:
    - "3.5.  Relationship to Other MIB Modules\n   The PCEP MIB module imports the
      following textual conventions from\n   the INET-ADDRESS-MIB defined in RFC 4001
      [RFC4001]:\n   o  InetAddressType\n   o  InetAddress\n   PCEP relies on existing
      protocols that have specialized MIB objects\n   to monitor their own activities.
      \ Consequently, this document\n   considers that the monitoring of underlying
      protocols is out of scope\n   of the PCEP MIB module.\n"
    title: 3.5.  Relationship to Other MIB Modules
  - contents:
    - "3.6.  Illustrative Example\n   The following diagram illustrates the relationships
      between\n   pcePcepEntityTable, pcePcepPeerTable, and pcePcepSessTable.\n       Index
      by:\n       pcePcepEntityIndex\n       +--------------+      Index by:\n       |pcePcepEntity
      |      pcePcepEntityIndex,\n       |Table         |      pcePcepPeerAddrType,\n
      \      +--------------+      pcePcepPeerAddr\n       |pcePcepEntity |\n       |Entry
      \        |<----*\n       +--------------+     |  +------------+    Index by:\n
      \      |              |     |  |pcePcepPeer |    pcePcepEntityIndex,\n       |
      \             |<-*  |  |Table       |    pcePcepPeerAddrType,\n       +--------------+
      \ |  |  +------------+    pcePcepPeerAddr,\n                         |  *--|PcePcepPeer
      |    pcePcepSessInitiator\n                         |  |  |Entry       |<-----*\n
      \                        |  |  +------------+      | +------------+\n                         |
      \ *--|            |      | |pcePcepSess |\n                         |     |
      \           |<----*| |Table       |\n                         |     +------------+
      \    || +------------+\n                         *-----|            |     |*-|pcePcepSess
      |\n                         |     |            |<--* |  |Entry       |\n                         |
      \    +------------+   | |  +------------+\n                         *-----|
      \           |   | *--|            |\n                               | [1]        |
      \  |    |            |\n                               +------------+   |    +------------+\n
      \                                               *----|            |\n                                                |
      \   |            |\n                                                |    +------------+\n
      \                                               *----| [2]        |\n                                                     |
      \           |\n                                                     +------------+\n
      \     [1]: A peer entry with no current session.\n      [2]: Two sessions exist
      during a window in session\n           initialization.\n"
    title: 3.6.  Illustrative Example
  title: 3.  PCEP MIB Module Architecture
- contents:
  - '4.  Object Definitions

    '
  - contents:
    - "4.1.  PCE-PCEP-MIB\n   PCE-PCEP-MIB DEFINITIONS ::= BEGIN\n   IMPORTS\n       MODULE-IDENTITY,\n
      \      OBJECT-TYPE,\n       mib-2,\n       NOTIFICATION-TYPE,\n       Unsigned32,\n
      \      Counter32\n              FROM SNMPv2-SMI             -- RFC 2578\n       TruthValue,\n
      \      TimeStamp\n              FROM SNMPv2-TC              -- RFC 2579\n       MODULE-COMPLIANCE,\n
      \      OBJECT-GROUP,\n       NOTIFICATION-GROUP\n              FROM SNMPv2-CONF
      \           -- RFC 2580\n       InetAddressType,\n       InetAddress\n              FROM
      INET-ADDRESS-MIB;      -- RFC 4001\n   pcePcepMIB MODULE-IDENTITY\n       LAST-UPDATED\n
      \          \"201412171200Z\" -- 17 December 2014\n       ORGANIZATION\n           \"IETF
      Path Computation Element (PCE) Working Group\"\n       CONTACT-INFO\n           \"Email:
      pce@ietf.org\n            WG charter:\n                     http://datatracker.ietf.org/wg/pce/charter/\"\n
      \      DESCRIPTION\n         \"This MIB module defines a collection of objects
      for managing\n          the Path Computation Element Communication Protocol
      (PCEP).\n          Copyright (c) 2014 IETF Trust and the persons identified
      as\n          authors of the code.  All rights reserved.\n          Redistribution
      and use in source and binary forms, with or\n          without modification,
      is permitted pursuant to, and subject\n          to the license terms contained
      in, the Simplified BSD License\n          set forth in Section 4.c of the IETF
      Trust's Legal Provisions\n          Relating to IETF Documents\n          (http://trustee.ietf.org/license-info).\"\n
      \      REVISION\n           \"201412171200Z\" -- 17 December 2014\n       DESCRIPTION\n
      \          \"Initial version, published as RFC 7420.\"\n       ::= { mib-2 227
      }\n   pcePcepNotifications OBJECT IDENTIFIER ::= { pcePcepMIB 0 }\n   pcePcepObjects
      \      OBJECT IDENTIFIER ::= { pcePcepMIB 1 }\n   pcePcepConformance   OBJECT
      IDENTIFIER ::= { pcePcepMIB 2 }\n   --\n   -- PCEP Entity Objects\n   --\n   pcePcepEntityTable
      OBJECT-TYPE\n       SYNTAX      SEQUENCE OF PcePcepEntityEntry\n       MAX-ACCESS
      \ not-accessible\n       STATUS      current\n       DESCRIPTION\n           \"This
      table contains information about local PCEP entities.\n            The entries
      in this table are read-only.\"\n       ::= { pcePcepObjects 1 }\n   pcePcepEntityEntry
      OBJECT-TYPE\n       SYNTAX      PcePcepEntityEntry\n       MAX-ACCESS  not-accessible\n
      \      STATUS      current\n       DESCRIPTION\n           \"This entry represents
      a local PCEP entity.\"\n       INDEX       {  pcePcepEntityIndex  }\n       ::=
      { pcePcepEntityTable 1 }\n   PcePcepEntityEntry ::= SEQUENCE {\n       pcePcepEntityIndex
      \               Unsigned32,\n       pcePcepEntityAdminStatus          INTEGER,\n
      \      pcePcepEntityOperStatus           INTEGER,\n       pcePcepEntityAddrType
      \            InetAddressType,\n       pcePcepEntityAddr                 InetAddress,\n
      \      pcePcepEntityConnectTimer         Unsigned32,\n       pcePcepEntityConnectMaxRetry
      \     Unsigned32,\n       pcePcepEntityInitBackoffTimer     Unsigned32,\n       pcePcepEntityMaxBackoffTimer
      \     Unsigned32,\n       pcePcepEntityOpenWaitTimer        Unsigned32,\n       pcePcepEntityKeepWaitTimer
      \       Unsigned32,\n       pcePcepEntityKeepAliveTimer       Unsigned32,\n
      \      pcePcepEntityDeadTimer            Unsigned32,\n       pcePcepEntityAllowNegotiation
      \    TruthValue,\n       pcePcepEntityMaxKeepAliveTimer    Unsigned32,\n       pcePcepEntityMaxDeadTimer
      \        Unsigned32,\n       pcePcepEntityMinKeepAliveTimer    Unsigned32,\n
      \      pcePcepEntityMinDeadTimer         Unsigned32,\n       pcePcepEntitySyncTimer
      \           Unsigned32,\n       pcePcepEntityRequestTimer         Unsigned32,\n
      \      pcePcepEntityMaxSessions          Unsigned32,\n       pcePcepEntityMaxUnknownReqs
      \      Unsigned32,\n       pcePcepEntityMaxUnknownMsgs       Unsigned32\n   }\n
      \  pcePcepEntityIndex OBJECT-TYPE\n       SYNTAX      Unsigned32\n       MAX-ACCESS
      \ not-accessible\n       STATUS      current\n       DESCRIPTION\n           \"This
      index is used to uniquely identify the PCEP entity.\"\n       ::= { pcePcepEntityEntry
      1 }\n   pcePcepEntityAdminStatus OBJECT-TYPE\n       SYNTAX      INTEGER {\n
      \                    adminStatusUp(1),\n                     adminStatusDown(2)\n
      \                  }\n       MAX-ACCESS  read-only\n       STATUS      current\n
      \      DESCRIPTION\n           \"The administrative status of this PCEP entity.\n
      \           This is the desired operational status as currently set by\n            an
      operator or by default in the implementation.  The value\n            of pcePcepEntityOperStatus
      represents the current status of\n            an attempt to reach this desired
      status.\"\n       ::= { pcePcepEntityEntry 2 }\n   pcePcepEntityOperStatus OBJECT-TYPE\n
      \      SYNTAX      INTEGER {\n                     operStatusUp(1),\n                     operStatusDown(2),\n
      \                    operStatusGoingUp(3),\n                     operStatusGoingDown(4),\n
      \                    operStatusFailed(5),\n                     operStatusFailedPerm(6)\n
      \                  }\n       MAX-ACCESS  read-only\n       STATUS      current\n
      \      DESCRIPTION\n           \"The operational status of the PCEP entity.
      \ It takes one of\n            the following values.\n            - operStatusUp(1):
      the PCEP entity is active.\n            - operStatusDown(2): the PCEP entity
      is inactive.\n            - operStatusGoingUp(3): the PCEP entity is activating.\n
      \           - operStatusGoingDown(4): the PCEP entity is deactivating.\n            -
      operStatusFailed(5): the PCEP entity has failed and will\n              recover
      when possible.\n            - operStatusFailedPerm(6): the PCEP entity has failed
      and\n              will not recover without operator intervention.\"\n       ::=
      { pcePcepEntityEntry 3 }\n   pcePcepEntityAddrType OBJECT-TYPE\n       SYNTAX
      \     InetAddressType\n       MAX-ACCESS  read-only\n       STATUS      current\n
      \      DESCRIPTION\n           \"The type of the PCEP entity's Internet address.
      \ This object\n            specifies how the value of the pcePcepEntityAddr
      object\n            should be interpreted.  Only values unknown(0), ipv4(1),
      or\n            ipv6(2) are supported.\"\n       ::= { pcePcepEntityEntry 4
      }\n   pcePcepEntityAddr OBJECT-TYPE\n       SYNTAX      InetAddress\n       MAX-ACCESS
      \ read-only\n       STATUS      current\n       DESCRIPTION\n           \"The
      local Internet address of this PCEP entity.  The type is\n            given
      by pcePcepEntityAddrType.\n            If operating as a PCE server, the PCEP
      entity listens on\n            this address.  If operating as a PCC, the PCEP
      entity binds\n            outgoing TCP connections to this address.\n            It
      is possible for the PCEP entity to operate both as a PCC\n            and a
      PCE server, in which case it uses this address both to\n            listen for
      incoming TCP connections and to bind outgoing\n            TCP connections.\"\n
      \      ::= { pcePcepEntityEntry 5 }\n   pcePcepEntityConnectTimer OBJECT-TYPE\n
      \      SYNTAX      Unsigned32 (1..65535)\n       UNITS       \"seconds\"\n       MAX-ACCESS
      \ read-only\n       STATUS      current\n       DESCRIPTION\n           \"The
      time that the PCEP entity will wait to establish a TCP\n            connection
      with a peer.  If a TCP connection is not\n            established within this
      time, then PCEP aborts the session\n            setup attempt.\"\n       ::=
      { pcePcepEntityEntry 6 }\n   pcePcepEntityConnectMaxRetry OBJECT-TYPE\n       SYNTAX
      \     Unsigned32\n       MAX-ACCESS  read-only\n       STATUS      current\n
      \      DESCRIPTION\n           \"The maximum number of times the system tries
      to establish\n            a TCP connection to a peer before the session with
      the peer\n            transitions to the idle state.\n            When the session
      transitions to the idle state:\n            - pcePcepPeerSessionExists transitions
      to false(2).\n            - the associated PcePcepSessEntry is deleted.\n            -
      a backoff timer runs before the session is tried again.\"\n       ::= { pcePcepEntityEntry
      7 }\n   pcePcepEntityInitBackoffTimer OBJECT-TYPE\n       SYNTAX      Unsigned32
      (1..65535)\n       UNITS       \"seconds\"\n       MAX-ACCESS  read-only\n       STATUS
      \     current\n       DESCRIPTION\n           \"The initial backoff time for
      retrying a failed session\n            setup attempt to a peer.\n            The
      backoff time increases for each failed session setup\n            attempt, until
      a maximum backoff time is reached.  The\n            maximum backoff time is
      pcePcepEntityMaxBackoffTimer.\"\n       ::= { pcePcepEntityEntry 8 }\n   pcePcepEntityMaxBackoffTimer
      OBJECT-TYPE\n       SYNTAX      Unsigned32\n       UNITS       \"seconds\"\n
      \      MAX-ACCESS  read-only\n       STATUS      current\n       DESCRIPTION\n
      \          \"The maximum backoff time for retrying a failed session\n            setup
      attempt to a peer.\n            The backoff time increases for each failed session
      setup\n            attempt, until this maximum value is reached.  Session\n
      \           setup attempts then repeats periodically without any\n            further
      increase in backoff time.\"\n       ::= { pcePcepEntityEntry 9 }\n   pcePcepEntityOpenWaitTimer
      OBJECT-TYPE\n       SYNTAX      Unsigned32 (1..65535)\n       UNITS       \"seconds\"\n
      \      MAX-ACCESS  read-only\n       STATUS      current\n       DESCRIPTION\n
      \          \"The time that the PCEP entity will wait to receive an Open\n            message
      from a peer after the TCP connection has come up.\n            If no Open message
      is received within this time, then PCEP\n            terminates the TCP connection
      and deletes the associated\n            PcePcepSessEntry.\"\n       ::= { pcePcepEntityEntry
      10 }\n   pcePcepEntityKeepWaitTimer OBJECT-TYPE\n       SYNTAX      Unsigned32
      (1..65535)\n       UNITS       \"seconds\"\n       MAX-ACCESS  read-only\n       STATUS
      \     current\n       DESCRIPTION\n           \"The time that the PCEP entity
      will wait to receive a\n            Keepalive or PCErr message from a peer during
      session\n            initialization after receiving an Open message.  If no\n
      \           Keepalive or PCErr message is received within this time,\n            then
      PCEP terminates the TCP connection and deletes the\n            associated PcePcepSessEntry.\"\n
      \      ::= { pcePcepEntityEntry 11 }\n   pcePcepEntityKeepAliveTimer OBJECT-TYPE\n
      \      SYNTAX      Unsigned32 (0..255)\n       UNITS       \"seconds\"\n       MAX-ACCESS
      \ read-only\n       STATUS      current\n       DESCRIPTION\n           \"The
      Keepalive transmission timer that this PCEP entity will\n            propose
      in the initial OPEN message of each session it is\n            involved in.
      \ This is the maximum time between two\n            consecutive messages sent
      to a peer.  Zero means that\n            the PCEP entity prefers not to send
      Keepalives at all.\n            Note that the actual Keepalive transmission
      intervals, in\n            either direction of an active PCEP session, are determined\n
      \           by negotiation between the peers as specified by RFC\n            5440,
      and so may differ from this configured value.  For\n            the actually
      negotiated values (per session), see\n            pcePcepSessKeepaliveTimer
      and\n            pcePcepSessPeerKeepaliveTimer.\"\n       ::= { pcePcepEntityEntry
      12 }\n   pcePcepEntityDeadTimer OBJECT-TYPE\n       SYNTAX      Unsigned32 (0..255)\n
      \      UNITS       \"seconds\"\n       MAX-ACCESS  read-only\n       STATUS
      \     current\n       DESCRIPTION\n           \"The DeadTimer that this PCEP
      entity will propose in the\n            initial OPEN message of each session
      it is involved in.\n            This is the time after which a peer should declare
      a\n            session down if it does not receive any PCEP messages.\n            Zero
      suggests that the peer does not run a DeadTimer at\n            all.\"\n       ::=
      { pcePcepEntityEntry 13 }\n   pcePcepEntityAllowNegotiation OBJECT-TYPE\n       SYNTAX
      \     TruthValue\n       MAX-ACCESS  read-only\n       STATUS      current\n
      \      DESCRIPTION\n           \"Whether the PCEP entity will permit negotiation
      of session\n            parameters.\"\n       ::= { pcePcepEntityEntry 14 }\n
      \  pcePcepEntityMaxKeepAliveTimer OBJECT-TYPE\n       SYNTAX      Unsigned32
      (0..255)\n       UNITS       \"seconds\"\n       MAX-ACCESS  read-only\n       STATUS
      \     current\n       DESCRIPTION\n           \"In PCEP session parameter negotiation,
      the maximum value\n            that this PCEP entity will accept from a peer
      for the\n            interval between Keepalive transmissions.  Zero means that\n
      \           the PCEP entity will allow no Keepalive transmission at\n            all.\"\n
      \      ::= { pcePcepEntityEntry 15 }\n   pcePcepEntityMaxDeadTimer OBJECT-TYPE\n
      \      SYNTAX      Unsigned32 (0..255)\n       UNITS       \"seconds\"\n       MAX-ACCESS
      \ read-only\n       STATUS      current\n       DESCRIPTION\n           \"In
      PCEP session parameter negotiation, the maximum value\n            that this
      PCEP entity will accept from a peer for the\n            DeadTimer.  Zero means
      that the PCEP entity will allow not\n            running a DeadTimer.\"\n       ::=
      { pcePcepEntityEntry 16 }\n   pcePcepEntityMinKeepAliveTimer OBJECT-TYPE\n       SYNTAX
      \     Unsigned32 (0..255)\n       UNITS       \"seconds\"\n       MAX-ACCESS
      \ read-only\n       STATUS      current\n       DESCRIPTION\n           \"In
      PCEP session parameter negotiation, the minimum value\n            that this
      PCEP entity will accept for the interval between\n            Keepalive transmissions.
      \ Zero means that the PCEP entity\n            insists on no Keepalive transmission
      at all.\"\n       ::= { pcePcepEntityEntry 17 }\n   pcePcepEntityMinDeadTimer
      OBJECT-TYPE\n       SYNTAX      Unsigned32 (0..255)\n       UNITS       \"seconds\"\n
      \      MAX-ACCESS  read-only\n       STATUS      current\n       DESCRIPTION\n
      \          \"In PCEP session parameter negotiation, the minimum value\n            that
      this PCEP entity will accept for the DeadTimer.  Zero\n            means that
      the PCEP entity insists on not running a\n            DeadTimer.\"\n       ::=
      { pcePcepEntityEntry 18 }\n   pcePcepEntitySyncTimer OBJECT-TYPE\n       SYNTAX
      \     Unsigned32 (0..65535)\n       UNITS       \"seconds\"\n       MAX-ACCESS
      \ read-only\n       STATUS      current\n       DESCRIPTION\n           \"The
      value of SyncTimer is used in the case of a synchronized\n            path computation
      request using the SVEC object.\n            Consider the case where a PCReq
      message is received by a PCE\n            that contains the SVEC object referring
      to M synchronized\n            path computation requests.  If after the expiration
      of the\n            SyncTimer all the M path computation requests have not been\n
      \           received, a protocol error is triggered and the PCE MUST\n            cancel
      the whole set of path computation requests.\n            The aim of the SyncTimer
      is to avoid the storage of unused\n            synchronized requests should
      one of them get lost for some\n            reason (for example, a misbehaving
      PCC).\n            A value of zero is returned if and only if the entity does\n
      \           not use the SyncTimer.\"\n       ::= { pcePcepEntityEntry 19 }\n
      \  pcePcepEntityRequestTimer OBJECT-TYPE\n       SYNTAX      Unsigned32 (1..65535)\n
      \      UNITS       \"seconds\"\n       MAX-ACCESS  read-only\n       STATUS
      \     current\n       DESCRIPTION\n           \"The maximum time that the PCEP
      entity will wait for a\n            response to a PCReq message.\"\n       ::=
      { pcePcepEntityEntry 20 }\n   pcePcepEntityMaxSessions OBJECT-TYPE\n       SYNTAX
      \     Unsigned32\n       MAX-ACCESS  read-only\n       STATUS      current\n
      \      DESCRIPTION\n           \"The maximum number of sessions involving this
      PCEP entity\n            that can exist at any time.\"\n       ::= { pcePcepEntityEntry
      21 }\n   pcePcepEntityMaxUnknownReqs OBJECT-TYPE\n       SYNTAX      Unsigned32\n
      \      MAX-ACCESS  read-only\n       STATUS      current\n       DESCRIPTION\n
      \          \"The maximum number of unrecognized requests and replies that\n
      \           any session on this PCEP entity is willing to accept per\n            minute
      before terminating the session.\n            A PCRep message contains an unrecognized
      reply if it\n            contains an RP object whose request ID does not correspond\n
      \           to any in-progress request sent by this PCEP entity.\n            A
      PCReq message contains an unrecognized request if it\n            contains an
      RP object whose request ID is zero.\"\n       ::= { pcePcepEntityEntry 22 }\n
      \  pcePcepEntityMaxUnknownMsgs OBJECT-TYPE\n       SYNTAX      Unsigned32\n
      \      MAX-ACCESS  read-only\n       STATUS      current\n       DESCRIPTION\n
      \          \"The maximum number of unknown messages that any session\n            on
      this PCEP entity is willing to accept per minute before\n            terminating
      the session.\"\n       ::= { pcePcepEntityEntry 23 }\n   --\n   -- The PCEP
      Peer Table\n   --\n   pcePcepPeerTable OBJECT-TYPE\n       SYNTAX      SEQUENCE
      OF PcePcepPeerEntry\n       MAX-ACCESS  not-accessible\n       STATUS      current\n
      \      DESCRIPTION\n           \"This table contains information about peers
      known by\n            the local PCEP entity.  The entries in this table are\n
      \           read-only.\n            This table gives peer information that spans
      PCEP\n            sessions.  Information about current PCEP sessions can be\n
      \           found in the pcePcepSessTable table.\"\n       ::= { pcePcepObjects
      2 }\n   pcePcepPeerEntry OBJECT-TYPE\n       SYNTAX      PcePcepPeerEntry\n
      \      MAX-ACCESS  not-accessible\n       STATUS      current\n       DESCRIPTION\n
      \          \"Information about a single peer that spans all PCEP\n            sessions
      to that peer.\"\n       INDEX { pcePcepEntityIndex,\n               pcePcepPeerAddrType,\n
      \              pcePcepPeerAddr }\n       ::= { pcePcepPeerTable 1 }\n   PcePcepPeerEntry
      ::= SEQUENCE {\n       pcePcepPeerAddrType                 InetAddressType,\n
      \      pcePcepPeerAddr                     InetAddress,\n       pcePcepPeerRole
      \                    INTEGER,\n       pcePcepPeerDiscontinuityTime        TimeStamp,\n
      \      pcePcepPeerInitiateSession          TruthValue,\n       pcePcepPeerSessionExists
      \           TruthValue,\n       pcePcepPeerNumSessSetupOK           Counter32,\n
      \      pcePcepPeerNumSessSetupFail         Counter32,\n       pcePcepPeerSessionUpTime
      \           TimeStamp,\n       pcePcepPeerSessionFailTime          TimeStamp,\n
      \      pcePcepPeerSessionFailUpTime        TimeStamp,\n       pcePcepPeerAvgRspTime
      \              Unsigned32,\n       pcePcepPeerLWMRspTime               Unsigned32,\n
      \      pcePcepPeerHWMRspTime               Unsigned32,\n       pcePcepPeerNumPCReqSent
      \            Counter32,\n       pcePcepPeerNumPCReqRcvd             Counter32,\n
      \      pcePcepPeerNumPCRepSent             Counter32,\n       pcePcepPeerNumPCRepRcvd
      \            Counter32,\n       pcePcepPeerNumPCErrSent             Counter32,\n
      \      pcePcepPeerNumPCErrRcvd             Counter32,\n       pcePcepPeerNumPCNtfSent
      \            Counter32,\n       pcePcepPeerNumPCNtfRcvd             Counter32,\n
      \      pcePcepPeerNumKeepaliveSent         Counter32,\n       pcePcepPeerNumKeepaliveRcvd
      \        Counter32,\n       pcePcepPeerNumUnknownRcvd           Counter32,\n
      \      pcePcepPeerNumCorruptRcvd           Counter32,\n       pcePcepPeerNumReqSent
      \              Counter32,\n       pcePcepPeerNumSvecSent              Counter32,\n
      \      pcePcepPeerNumSvecReqSent           Counter32,\n       pcePcepPeerNumReqSentPendRep
      \       Counter32,\n       pcePcepPeerNumReqSentEroRcvd        Counter32,\n
      \      pcePcepPeerNumReqSentNoPathRcvd     Counter32,\n       pcePcepPeerNumReqSentCancelRcvd
      \    Counter32,\n       pcePcepPeerNumReqSentErrorRcvd      Counter32,\n       pcePcepPeerNumReqSentTimeout
      \       Counter32,\n       pcePcepPeerNumReqSentCancelSent     Counter32,\n
      \      pcePcepPeerNumReqSentClosed         Counter32,\n       pcePcepPeerNumReqRcvd
      \              Counter32,\n       pcePcepPeerNumSvecRcvd              Counter32,\n
      \      pcePcepPeerNumSvecReqRcvd           Counter32,\n       pcePcepPeerNumReqRcvdPendRep
      \       Counter32,\n       pcePcepPeerNumReqRcvdEroSent        Counter32,\n
      \      pcePcepPeerNumReqRcvdNoPathSent     Counter32,\n       pcePcepPeerNumReqRcvdCancelSent
      \    Counter32,\n       pcePcepPeerNumReqRcvdErrorSent      Counter32,\n       pcePcepPeerNumReqRcvdCancelRcvd
      \    Counter32,\n       pcePcepPeerNumReqRcvdClosed         Counter32,\n       pcePcepPeerNumRepRcvdUnknown
      \       Counter32,\n       pcePcepPeerNumReqRcvdUnknown        Counter32\n   }\n
      \  pcePcepPeerAddrType OBJECT-TYPE\n       SYNTAX      InetAddressType\n       MAX-ACCESS
      \ not-accessible\n       STATUS      current\n       DESCRIPTION\n           \"The
      type of the peer's Internet address.  This object\n            specifies how
      the value of the pcePcepPeerAddr object should\n            be interpreted.
      \ Only values unknown(0), ipv4(1), or\n            ipv6(2) are supported.\"\n
      \      ::= { pcePcepPeerEntry 1 }\n   pcePcepPeerAddr OBJECT-TYPE\n       SYNTAX
      \     InetAddress\n       MAX-ACCESS  not-accessible\n       STATUS      current\n
      \      DESCRIPTION\n           \"The Internet address of the peer.  The type
      is given by\n            pcePcepPeerAddrType.\"\n       ::= { pcePcepPeerEntry
      2 }\n   pcePcepPeerRole OBJECT-TYPE\n       SYNTAX      INTEGER {\n                     unknown(0),\n
      \                    pcc(1),\n                     pce(2),\n                     pccAndPce(3)\n
      \                  }\n       MAX-ACCESS  read-only\n       STATUS      current\n
      \      DESCRIPTION\n           \"The role that this peer took the last time
      a session was\n            established.  It takes one of the following values.\n
      \           - unknown(0): this peer's role is not known.\n            - pcc(1):
      this peer is a Path Computation Client (PCC).\n            - pce(2): this peer
      is a Path Computation Element (PCE).\n            - pccAndPce(3): this peer
      is both a PCC and a PCE.\"\n       ::= { pcePcepPeerEntry 3 }\n   pcePcepPeerDiscontinuityTime
      OBJECT-TYPE\n       SYNTAX      TimeStamp\n       MAX-ACCESS  read-only\n       STATUS
      \     current\n       DESCRIPTION\n           \"The value of sysUpTime at the
      time that the information and\n            statistics in this row were last
      reset.\"\n       ::= { pcePcepPeerEntry 4 }\n   pcePcepPeerInitiateSession OBJECT-TYPE\n
      \      SYNTAX      TruthValue\n       MAX-ACCESS  read-only\n       STATUS      current\n
      \      DESCRIPTION\n           \"Indicates whether the local PCEP entity initiates
      sessions\n            to this peer or waits for the peer to initiate a session.\"\n
      \      ::= { pcePcepPeerEntry 5 }\n   pcePcepPeerSessionExists OBJECT-TYPE\n
      \      SYNTAX      TruthValue\n       MAX-ACCESS  read-only\n       STATUS      current\n
      \      DESCRIPTION\n           \"Indicates whether a session with this peer
      currently\n            exists.\"\n       ::= { pcePcepPeerEntry 6 }\n   pcePcepPeerNumSessSetupOK
      OBJECT-TYPE\n       SYNTAX      Counter32\n       MAX-ACCESS  read-only\n       STATUS
      \     current\n       DESCRIPTION\n           \"The number of PCEP sessions
      successfully established with\n            the peer, including any current session.
      \ This counter is\n            incremented each time a session with this peer
      is\n            successfully established.\"\n       ::= { pcePcepPeerEntry 7
      }\n   pcePcepPeerNumSessSetupFail OBJECT-TYPE\n       SYNTAX      Counter32\n
      \      MAX-ACCESS  read-only\n       STATUS      current\n       DESCRIPTION\n
      \          \"The number of PCEP sessions with the peer that have been\n            attempted
      but failed before being fully established.\n            This counter is incremented
      each time a session retry to\n            this peer fails.\"\n       ::= { pcePcepPeerEntry
      8 }\n   pcePcepPeerSessionUpTime OBJECT-TYPE\n       SYNTAX      TimeStamp\n
      \      MAX-ACCESS  read-only\n       STATUS      current\n       DESCRIPTION\n
      \          \"The value of sysUpTime the last time a session with this\n            peer
      was successfully established.\n            If pcePcepPeerNumSessSetupOK is zero,
      then this object\n            contains zero.\"\n       ::= { pcePcepPeerEntry
      9 }\n   pcePcepPeerSessionFailTime OBJECT-TYPE\n       SYNTAX      TimeStamp\n
      \      MAX-ACCESS  read-only\n       STATUS      current\n       DESCRIPTION\n
      \          \"The value of sysUpTime the last time a session with this\n            peer
      failed to be established.\n            If pcePcepPeerNumSessSetupFail is zero,
      then this object\n            contains zero.\"\n       ::= { pcePcepPeerEntry
      10 }\n   pcePcepPeerSessionFailUpTime OBJECT-TYPE\n       SYNTAX      TimeStamp\n
      \      MAX-ACCESS  read-only\n       STATUS      current\n       DESCRIPTION\n
      \          \"The value of sysUpTime the last time a session with this\n            peer
      failed from active.\n            If pcePcepPeerNumSessSetupOK is zero, then
      this object\n            contains zero.\"\n       ::= { pcePcepPeerEntry 11
      }\n   pcePcepPeerAvgRspTime OBJECT-TYPE\n       SYNTAX      Unsigned32\n       UNITS
      \      \"milliseconds\"\n       MAX-ACCESS  read-only\n       STATUS      current\n
      \      DESCRIPTION\n           \"The average response time for this peer.\n
      \           If an average response time has not been calculated for this\n            peer,
      then this object has the value zero.\n            If pcePcepPeerRole is pcc,
      then this field is meaningless\n            and is set to zero.\"\n       ::=
      { pcePcepPeerEntry 12 }\n   pcePcepPeerLWMRspTime OBJECT-TYPE\n       SYNTAX
      \     Unsigned32\n       UNITS       \"milliseconds\"\n       MAX-ACCESS  read-only\n
      \      STATUS      current\n       DESCRIPTION\n           \"The smallest (low-water
      mark) response time seen from this\n            peer.\n            If no responses
      have been received from this peer, then this\n            object has the value
      zero.\n            If pcePcepPeerRole is pcc, then this field is meaningless\n
      \           and is set to zero.\"\n       ::= { pcePcepPeerEntry 13 }\n   pcePcepPeerHWMRspTime
      OBJECT-TYPE\n       SYNTAX      Unsigned32\n       UNITS       \"milliseconds\"\n
      \      MAX-ACCESS  read-only\n       STATUS      current\n       DESCRIPTION\n
      \          \"The greatest (high-water mark) response time seen from this\n            peer.\n
      \           If no responses have been received from this peer, then this\n            object
      has the value zero.\n            If pcePcepPeerRole is pcc, then this field
      is meaningless\n            and is set to zero.\"\n       ::= { pcePcepPeerEntry
      14 }\n   pcePcepPeerNumPCReqSent OBJECT-TYPE\n       SYNTAX      Counter32\n
      \      MAX-ACCESS  read-only\n       STATUS      current\n       DESCRIPTION\n
      \          \"The number of PCReq messages sent to this peer.\"\n       ::= {
      pcePcepPeerEntry 15 }\n   pcePcepPeerNumPCReqRcvd OBJECT-TYPE\n       SYNTAX
      \     Counter32\n       MAX-ACCESS  read-only\n       STATUS      current\n
      \      DESCRIPTION\n           \"The number of PCReq messages received from
      this peer.\"\n       ::= { pcePcepPeerEntry 16 }\n   pcePcepPeerNumPCRepSent
      OBJECT-TYPE\n       SYNTAX      Counter32\n       MAX-ACCESS  read-only\n       STATUS
      \     current\n       DESCRIPTION\n           \"The number of PCRep messages
      sent to this peer.\"\n       ::= { pcePcepPeerEntry 17 }\n   pcePcepPeerNumPCRepRcvd
      OBJECT-TYPE\n       SYNTAX      Counter32\n       MAX-ACCESS  read-only\n       STATUS
      \     current\n       DESCRIPTION\n           \"The number of PCRep messages
      received from this peer.\"\n       ::= { pcePcepPeerEntry 18 }\n   pcePcepPeerNumPCErrSent
      OBJECT-TYPE\n       SYNTAX      Counter32\n       MAX-ACCESS  read-only\n       STATUS
      \     current\n       DESCRIPTION\n           \"The number of PCErr messages
      sent to this peer.\"\n       ::= { pcePcepPeerEntry 19 }\n   pcePcepPeerNumPCErrRcvd
      OBJECT-TYPE\n       SYNTAX      Counter32\n       MAX-ACCESS  read-only\n       STATUS
      \     current\n       DESCRIPTION\n           \"The number of PCErr messages
      received from this peer.\"\n       ::= { pcePcepPeerEntry 20 }\n   pcePcepPeerNumPCNtfSent
      OBJECT-TYPE\n       SYNTAX      Counter32\n       MAX-ACCESS  read-only\n       STATUS
      \     current\n       DESCRIPTION\n           \"The number of PCNtf messages
      sent to this peer.\"\n       ::= { pcePcepPeerEntry 21 }\n   pcePcepPeerNumPCNtfRcvd
      OBJECT-TYPE\n       SYNTAX      Counter32\n       MAX-ACCESS  read-only\n       STATUS
      \     current\n       DESCRIPTION\n           \"The number of PCNtf messages
      received from this peer.\"\n       ::= { pcePcepPeerEntry 22 }\n   pcePcepPeerNumKeepaliveSent
      OBJECT-TYPE\n       SYNTAX      Counter32\n       MAX-ACCESS  read-only\n       STATUS
      \     current\n       DESCRIPTION\n           \"The number of Keepalive messages
      sent to this peer.\"\n       ::= { pcePcepPeerEntry 23 }\n   pcePcepPeerNumKeepaliveRcvd
      OBJECT-TYPE\n       SYNTAX      Counter32\n       MAX-ACCESS  read-only\n       STATUS
      \     current\n       DESCRIPTION\n           \"The number of Keepalive messages
      received from this peer.\"\n       ::= { pcePcepPeerEntry 24 }\n   pcePcepPeerNumUnknownRcvd
      OBJECT-TYPE\n       SYNTAX      Counter32\n       MAX-ACCESS  read-only\n       STATUS
      \     current\n       DESCRIPTION\n           \"The number of unknown messages
      received from this peer.\"\n       ::= { pcePcepPeerEntry 25 }\n   pcePcepPeerNumCorruptRcvd
      OBJECT-TYPE\n       SYNTAX      Counter32\n       MAX-ACCESS  read-only\n       STATUS
      \     current\n       DESCRIPTION\n           \"The number of corrupted PCEP
      messages received from this\n            peer.\"\n       ::= { pcePcepPeerEntry
      26 }\n   pcePcepPeerNumReqSent OBJECT-TYPE\n       SYNTAX      Counter32\n       MAX-ACCESS
      \ read-only\n       STATUS      current\n       DESCRIPTION\n           \"The
      number of requests sent to this peer.  A request\n            corresponds 1:1
      with an RP object in a PCReq message.\n            This might be greater than
      pcePcepPeerNumPCReqSent because\n            multiple requests can be batched
      into a single PCReq\n            message.\"\n       ::= { pcePcepPeerEntry 27
      }\n   pcePcepPeerNumSvecSent OBJECT-TYPE\n       SYNTAX      Counter32\n       MAX-ACCESS
      \ read-only\n       STATUS      current\n       DESCRIPTION\n           \"The
      number of SVEC objects sent to this peer in PCReq\n            messages.  An
      SVEC object represents a set of synchronized\n            requests.\"\n       ::=
      { pcePcepPeerEntry 28 }\n   pcePcepPeerNumSvecReqSent OBJECT-TYPE\n       SYNTAX
      \     Counter32\n       MAX-ACCESS  read-only\n       STATUS      current\n
      \      DESCRIPTION\n           \"The number of requests sent to this peer that
      appeared in\n            one or more SVEC objects.\"\n       ::= { pcePcepPeerEntry
      29 }\n   pcePcepPeerNumReqSentPendRep OBJECT-TYPE\n       SYNTAX      Counter32\n
      \      MAX-ACCESS  read-only\n       STATUS      current\n       DESCRIPTION\n
      \          \"The number of requests that have been sent to this peer for\n            which
      a response is still pending.\"\n       ::= { pcePcepPeerEntry 30 }\n   pcePcepPeerNumReqSentEroRcvd
      OBJECT-TYPE\n       SYNTAX      Counter32\n       MAX-ACCESS  read-only\n       STATUS
      \     current\n       DESCRIPTION\n           \"The number of requests that
      have been sent to this peer for\n            which a response with an ERO was\n
      \           received.  Such responses indicate that a path was\n            successfully
      computed by the peer.\"\n       ::= { pcePcepPeerEntry 31 }\n   pcePcepPeerNumReqSentNoPathRcvd
      OBJECT-TYPE\n       SYNTAX      Counter32\n       MAX-ACCESS  read-only\n       STATUS
      \     current\n       DESCRIPTION\n           \"The number of requests that
      have been sent to this peer for\n            which a response with a NO-PATH
      object was received.  Such\n            responses indicate that the peer could
      not find a path to\n            satisfy the request.\"\n       ::= { pcePcepPeerEntry
      32 }\n   pcePcepPeerNumReqSentCancelRcvd OBJECT-TYPE\n       SYNTAX      Counter32\n
      \      MAX-ACCESS  read-only\n       STATUS      current\n       DESCRIPTION\n
      \          \"The number of requests that were canceled by the peer with\n            a
      PCNtf message.\n            This might be different than pcePcepPeerNumPCNtfRcvd
      because\n            not all PCNtf messages are used to cancel requests, and
      a\n            single PCNtf message can cancel multiple requests.\"\n       ::=
      { pcePcepPeerEntry 33 }\n   pcePcepPeerNumReqSentErrorRcvd OBJECT-TYPE\n       SYNTAX
      \     Counter32\n       MAX-ACCESS  read-only\n       STATUS      current\n
      \      DESCRIPTION\n           \"The number of requests that were rejected by
      the peer with a\n            PCErr message.\n            This might be different
      than pcePcepPeerNumPCErrRcvd because\n            not all PCErr messages are
      used to reject requests, and a\n            single PCErr message can reject
      multiple requests.\"\n       ::= { pcePcepPeerEntry 34 }\n   pcePcepPeerNumReqSentTimeout
      OBJECT-TYPE\n       SYNTAX      Counter32\n       MAX-ACCESS  read-only\n       STATUS
      \     current\n       DESCRIPTION\n           \"The number of requests that
      have been sent to a peer and\n            have been abandoned because the peer
      has taken too long to\n            respond to them.\"\n       ::= { pcePcepPeerEntry
      35 }\n   pcePcepPeerNumReqSentCancelSent OBJECT-TYPE\n       SYNTAX      Counter32\n
      \      MAX-ACCESS  read-only\n       STATUS      current\n       DESCRIPTION\n
      \          \"The number of requests that were sent to the peer and\n            explicitly
      canceled by the local PCEP entity sending a\n            PCNtf.\"\n       ::=
      { pcePcepPeerEntry 36 }\n   pcePcepPeerNumReqSentClosed OBJECT-TYPE\n       SYNTAX
      \     Counter32\n       MAX-ACCESS  read-only\n       STATUS      current\n
      \      DESCRIPTION\n           \"The number of requests that were sent to the
      peer and\n            implicitly canceled when the session they were sent over
      was\n            closed.\"\n       ::= { pcePcepPeerEntry 37 }\n   pcePcepPeerNumReqRcvd
      OBJECT-TYPE\n       SYNTAX      Counter32\n       MAX-ACCESS  read-only\n       STATUS
      \     current\n       DESCRIPTION\n           \"The number of requests received
      from this peer.  A request\n            corresponds 1:1 with an RP object in
      a PCReq message.\n            This might be greater than pcePcepPeerNumPCReqRcvd
      because\n            multiple requests can be batched into a single PCReq\n
      \           message.\"\n       ::= { pcePcepPeerEntry 38 }\n   pcePcepPeerNumSvecRcvd
      OBJECT-TYPE\n       SYNTAX      Counter32\n       MAX-ACCESS  read-only\n       STATUS
      \     current\n       DESCRIPTION\n           \"The number of SVEC objects received
      from this peer in PCReq\n            messages.  An SVEC object represents a
      set of synchronized\n            requests.\"\n       ::= { pcePcepPeerEntry
      39 }\n   pcePcepPeerNumSvecReqRcvd OBJECT-TYPE\n       SYNTAX      Counter32\n
      \      MAX-ACCESS  read-only\n       STATUS      current\n       DESCRIPTION\n
      \          \"The number of requests received from this peer that appeared\n
      \           in one or more SVEC objects.\"\n       ::= { pcePcepPeerEntry 40
      }\n   pcePcepPeerNumReqRcvdPendRep OBJECT-TYPE\n       SYNTAX      Counter32\n
      \      MAX-ACCESS  read-only\n       STATUS      current\n       DESCRIPTION\n
      \          \"The number of requests that have been received from this\n            peer
      for which a response is still pending.\"\n       ::= { pcePcepPeerEntry 41 }\n
      \  pcePcepPeerNumReqRcvdEroSent OBJECT-TYPE\n       SYNTAX      Counter32\n
      \      MAX-ACCESS  read-only\n       STATUS      current\n       DESCRIPTION\n
      \          \"The number of requests that have been received from this\n            peer
      for which a response with an ERO was sent.  Such\n            responses indicate
      that a path was successfully computed by\n            the local PCEP entity.\"\n
      \      ::= { pcePcepPeerEntry 42 }\n   pcePcepPeerNumReqRcvdNoPathSent OBJECT-TYPE\n
      \      SYNTAX      Counter32\n       MAX-ACCESS  read-only\n       STATUS      current\n
      \      DESCRIPTION\n           \"The number of requests that have been received
      from this\n            peer for which a response with a NO-PATH object was sent.\n
      \           Such responses indicate that the local PCEP entity could\n            not
      find a path to satisfy the request.\"\n       ::= { pcePcepPeerEntry 43 }\n
      \  pcePcepPeerNumReqRcvdCancelSent OBJECT-TYPE\n       SYNTAX      Counter32\n
      \      MAX-ACCESS  read-only\n       STATUS      current\n       DESCRIPTION\n
      \          \"The number of requests received from this peer that were\n            canceled
      by the local PCEP entity sending a PCNtf message.\n            This might be
      different than pcePcepPeerNumPCNtfSent because\n            not all PCNtf messages
      are used to cancel requests, and a\n            single PCNtf message can cancel
      multiple requests.\"\n       ::= { pcePcepPeerEntry 44 }\n   pcePcepPeerNumReqRcvdErrorSent
      OBJECT-TYPE\n       SYNTAX      Counter32\n       MAX-ACCESS  read-only\n       STATUS
      \     current\n       DESCRIPTION\n           \"The number of requests received
      from this peer that were\n            rejected by the local PCEP entity sending
      a PCErr message.\n            This might be different than pcePcepPeerNumPCErrSent
      because\n            not all PCErr messages are used to reject requests, and
      a\n            single PCErr message can reject multiple requests.\"\n       ::=
      { pcePcepPeerEntry 45 }\n   pcePcepPeerNumReqRcvdCancelRcvd OBJECT-TYPE\n       SYNTAX
      \     Counter32\n       MAX-ACCESS  read-only\n       STATUS      current\n
      \      DESCRIPTION\n           \"The number of requests that were received from
      the peer and\n            explicitly canceled by the peer sending a PCNtf.\"\n
      \      ::= { pcePcepPeerEntry 46 }\n   pcePcepPeerNumReqRcvdClosed OBJECT-TYPE\n
      \      SYNTAX      Counter32\n       MAX-ACCESS  read-only\n       STATUS      current\n
      \      DESCRIPTION\n           \"The number of requests that were received from
      the peer and\n            implicitly canceled when the session they were received
      over\n            was closed.\"\n       ::= { pcePcepPeerEntry 47 }\n   pcePcepPeerNumRepRcvdUnknown
      OBJECT-TYPE\n       SYNTAX      Counter32\n       MAX-ACCESS  read-only\n       STATUS
      \     current\n       DESCRIPTION\n           \"The number of responses to unknown
      requests received from\n            this peer.  A response to an unknown request
      is a response\n            whose RP object does not contain the request ID of
      any\n            request that is currently outstanding on the session.\"\n       ::=
      { pcePcepPeerEntry 48 }\n   pcePcepPeerNumReqRcvdUnknown OBJECT-TYPE\n       SYNTAX
      \     Counter32\n       MAX-ACCESS  read-only\n       STATUS      current\n
      \      DESCRIPTION\n           \"The number of unknown requests that have been
      received from\n            a peer.  An unknown request is a request whose RP
      object\n            contains a request ID of zero.\"\n       ::= { pcePcepPeerEntry
      49 }\n   --\n   -- The PCEP Sessions Table\n   --\n   pcePcepSessTable OBJECT-TYPE\n
      \      SYNTAX      SEQUENCE OF PcePcepSessEntry\n       MAX-ACCESS  not-accessible\n
      \      STATUS      current\n       DESCRIPTION\n           \"A table of PCEP
      sessions that involve the local PCEP\n            entity.  Each entry in this
      table represents a single\n            session.  The entries in this table are
      read-only.\n            An entry appears in this table when the corresponding
      PCEP\n            session transitions out of idle state.  If the PCEP session\n
      \           transitions back into an idle state, then the corresponding\n            entry
      in this table is removed.\"\n       ::= { pcePcepObjects 3 }\n   pcePcepSessEntry
      OBJECT-TYPE\n       SYNTAX      PcePcepSessEntry\n       MAX-ACCESS  not-accessible\n
      \      STATUS      current\n       DESCRIPTION\n           \"This entry represents
      a single PCEP session in which the\n            local PCEP entity participates.\n
      \           This entry exists only if the corresponding PCEP session has\n            been
      initialized by some event, such as manual user\n            configuration, auto-discovery
      of a peer, or an incoming TCP\n            connection.\"\n       INDEX { pcePcepEntityIndex,\n
      \              pcePcepPeerAddrType,\n               pcePcepPeerAddr,\n               pcePcepSessInitiator
      }\n       ::= { pcePcepSessTable 1 }\n   PcePcepSessEntry ::= SEQUENCE {\n       pcePcepSessInitiator
      \               INTEGER,\n       pcePcepSessStateLastChange          TimeStamp,\n
      \      pcePcepSessState                    INTEGER,\n       pcePcepSessConnectRetry
      \            Counter32,\n       pcePcepSessLocalID                  Unsigned32,\n
      \      pcePcepSessRemoteID                 Unsigned32,\n       pcePcepSessKeepaliveTimer
      \          Unsigned32,\n       pcePcepSessPeerKeepaliveTimer       Unsigned32,\n
      \      pcePcepSessDeadTimer                Unsigned32,\n       pcePcepSessPeerDeadTimer
      \           Unsigned32,\n       pcePcepSessKAHoldTimeRem            Unsigned32,\n
      \      pcePcepSessOverloaded               TruthValue,\n       pcePcepSessOverloadTime
      \            Unsigned32,\n       pcePcepSessPeerOverloaded           TruthValue,\n
      \      pcePcepSessPeerOverloadTime         Unsigned32,\n       pcePcepSessDiscontinuityTime
      \       TimeStamp,\n       pcePcepSessAvgRspTime               Unsigned32,\n
      \      pcePcepSessLWMRspTime               Unsigned32,\n       pcePcepSessHWMRspTime
      \              Unsigned32,\n       pcePcepSessNumPCReqSent             Counter32,\n
      \      pcePcepSessNumPCReqRcvd             Counter32,\n       pcePcepSessNumPCRepSent
      \            Counter32,\n       pcePcepSessNumPCRepRcvd             Counter32,\n
      \      pcePcepSessNumPCErrSent             Counter32,\n       pcePcepSessNumPCErrRcvd
      \            Counter32,\n       pcePcepSessNumPCNtfSent             Counter32,\n
      \      pcePcepSessNumPCNtfRcvd             Counter32,\n       pcePcepSessNumKeepaliveSent
      \        Counter32,\n       pcePcepSessNumKeepaliveRcvd         Counter32,\n
      \      pcePcepSessNumUnknownRcvd           Counter32,\n       pcePcepSessNumCorruptRcvd
      \          Counter32,\n       pcePcepSessNumReqSent               Counter32,\n
      \      pcePcepSessNumSvecSent              Counter32,\n       pcePcepSessNumSvecReqSent
      \          Counter32,\n       pcePcepSessNumReqSentPendRep        Counter32,\n
      \      pcePcepSessNumReqSentEroRcvd        Counter32,\n       pcePcepSessNumReqSentNoPathRcvd
      \    Counter32,\n       pcePcepSessNumReqSentCancelRcvd     Counter32,\n       pcePcepSessNumReqSentErrorRcvd
      \     Counter32,\n       pcePcepSessNumReqSentTimeout        Counter32,\n       pcePcepSessNumReqSentCancelSent
      \    Counter32,\n       pcePcepSessNumReqRcvd               Counter32,\n       pcePcepSessNumSvecRcvd
      \             Counter32,\n       pcePcepSessNumSvecReqRcvd           Counter32,\n
      \      pcePcepSessNumReqRcvdPendRep        Counter32,\n       pcePcepSessNumReqRcvdEroSent
      \       Counter32,\n       pcePcepSessNumReqRcvdNoPathSent     Counter32,\n
      \      pcePcepSessNumReqRcvdCancelSent     Counter32,\n       pcePcepSessNumReqRcvdErrorSent
      \     Counter32,\n       pcePcepSessNumReqRcvdCancelRcvd     Counter32,\n       pcePcepSessNumRepRcvdUnknown
      \       Counter32,\n       pcePcepSessNumReqRcvdUnknown        Counter32\n   }\n
      \  pcePcepSessInitiator OBJECT-TYPE\n       SYNTAX      INTEGER {\n                      local(1),\n
      \                     remote(2)\n                   }\n       MAX-ACCESS  not-accessible\n
      \      STATUS      current\n       DESCRIPTION\n           \"The initiator of
      the session; that is, whether the TCP\n            connection was initiated
      by the local PCEP entity or the\n            peer.\n            There is a window
      during session initialization where two\n            sessions can exist between
      a pair of PCEP speakers, each\n            initiated by one of the speakers.
      \ One of these sessions is\n            always discarded before it leaves OpenWait
      state.  However,\n            before it is discarded, two sessions to the given
      peer\n            appear transiently in this MIB module.  The sessions are\n
      \           distinguished by who initiated them, and so this field is an\n            index
      for pcePcepSessTable.\"\n       ::= { pcePcepSessEntry 1 }\n   pcePcepSessStateLastChange
      OBJECT-TYPE\n       SYNTAX      TimeStamp\n       MAX-ACCESS  read-only\n       STATUS
      \     current\n       DESCRIPTION\n           \"The value of sysUpTime at the
      time this session entered its\n            current state as denoted by the pcePcepSessState
      object.\"\n       ::= { pcePcepSessEntry 2 }\n   pcePcepSessState OBJECT-TYPE\n
      \      SYNTAX      INTEGER {\n                      tcpPending(1),\n                      openWait(2),\n
      \                     keepWait(3),\n                      sessionUp(4)\n                   }\n
      \      MAX-ACCESS  read-only\n       STATUS      current\n       DESCRIPTION\n
      \          \"The current state of the session.\n            The set of possible
      states excludes the idle state since\n            entries do not exist in this
      table in the idle state.\"\n       ::= { pcePcepSessEntry 3 }\n   pcePcepSessConnectRetry
      OBJECT-TYPE\n       SYNTAX      Counter32\n       MAX-ACCESS  read-only\n       STATUS
      \     current\n       DESCRIPTION\n           \"The number of times that the
      local PCEP entity has\n            attempted to establish a TCP connection for
      this session\n            without success.  The PCEP entity gives up when this\n
      \           reaches pcePcepEntityConnectMaxRetry.\"\n       ::= { pcePcepSessEntry
      4 }\n   pcePcepSessLocalID OBJECT-TYPE\n       SYNTAX      Unsigned32 (0..255)\n
      \      MAX-ACCESS  read-only\n       STATUS      current\n       DESCRIPTION\n
      \          \"The value of the PCEP session ID used by the local PCEP\n            entity
      in the Open message for this session.\n            If pcePcepSessState is tcpPending,
      then this is the session\n            ID that will be used in the Open message.
      \ Otherwise, this\n            is the session ID that was sent in the Open message.\"\n
      \      ::= { pcePcepSessEntry 5 }\n   pcePcepSessRemoteID OBJECT-TYPE\n       SYNTAX
      \     Unsigned32 (0..255)\n       MAX-ACCESS  read-only\n       STATUS      current\n
      \      DESCRIPTION\n           \"The value of the PCEP session ID used by the
      peer in its\n            Open message for this session.\n            If pcePcepSessState
      is tcpPending or openWait, then this\n            field is not used and MUST
      be set to zero.\"\n       ::= { pcePcepSessEntry 6 }\n   pcePcepSessKeepaliveTimer
      OBJECT-TYPE\n       SYNTAX      Unsigned32 (0..255)\n       UNITS       \"seconds\"\n
      \      MAX-ACCESS  read-only\n       STATUS      current\n       DESCRIPTION\n
      \          \"The agreed maximum interval at which the local PCEP entity\n            transmits
      PCEP messages on this PCEP session.  Zero means\n            that the local
      PCEP entity never sends Keepalives on this\n            session.\n            This
      field is used if and only if pcePcepSessState is\n            sessionUp.  Otherwise,
      it is not used and MUST be set to\n            zero.\"\n       ::= { pcePcepSessEntry
      7 }\n   pcePcepSessPeerKeepaliveTimer OBJECT-TYPE\n       SYNTAX      Unsigned32
      (0..255)\n       UNITS       \"seconds\"\n       MAX-ACCESS  read-only\n       STATUS
      \     current\n       DESCRIPTION\n           \"The agreed maximum interval
      at which the peer transmits PCEP\n            messages on this PCEP session.
      \ Zero means that the peer\n            never sends Keepalives on this session.\n
      \           This field is used if and only if pcePcepSessState is\n            sessionUp.
      \ Otherwise, it is not used and MUST be set to\n            zero.\"\n       ::=
      { pcePcepSessEntry 8 }\n   pcePcepSessDeadTimer OBJECT-TYPE\n       SYNTAX      Unsigned32
      (0..255)\n       UNITS       \"seconds\"\n       MAX-ACCESS  read-only\n       STATUS
      \     current\n       DESCRIPTION\n           \"The DeadTimer interval for this
      PCEP session.\"\n       ::= { pcePcepSessEntry 9 }\n   pcePcepSessPeerDeadTimer
      OBJECT-TYPE\n       SYNTAX      Unsigned32 (0..255)\n       UNITS       \"seconds\"\n
      \      MAX-ACCESS  read-only\n       STATUS      current\n       DESCRIPTION\n
      \          \"The peer's DeadTimer interval for this PCEP session.\n            If
      pcePcepSessState is tcpPending or openWait, then this\n            field is
      not used and MUST be set to zero.\"\n       ::= { pcePcepSessEntry 10 }\n   pcePcepSessKAHoldTimeRem
      OBJECT-TYPE\n       SYNTAX      Unsigned32 (0..255)\n       UNITS       \"seconds\"\n
      \      MAX-ACCESS  read-only\n       STATUS      current\n       DESCRIPTION\n
      \          \"The Keepalive hold time remaining for this session.\n            If
      pcePcepSessState is tcpPending or openWait, then this\n            field is
      not used and MUST be set to zero.\"\n       ::= { pcePcepSessEntry 11 }\n   pcePcepSessOverloaded
      OBJECT-TYPE\n       SYNTAX      TruthValue\n       MAX-ACCESS  read-only\n       STATUS
      \     current\n       DESCRIPTION\n           \"If the local PCEP entity has
      informed the peer that it is\n            currently overloaded, then this is
      set to true.  Otherwise,\n            it is set to false.\"\n       ::= { pcePcepSessEntry
      12 }\n   pcePcepSessOverloadTime OBJECT-TYPE\n       SYNTAX      Unsigned32\n
      \      UNITS       \"seconds\"\n       MAX-ACCESS  read-only\n       STATUS
      \     current\n       DESCRIPTION\n           \"The interval of time that is
      remaining until the local PCEP\n            entity will cease to be overloaded
      on this session.\n            This field is only used if pcePcepSessOverloaded
      is set to\n            true.  Otherwise, it is not used and MUST be set to zero.\"\n
      \      ::= { pcePcepSessEntry 13 }\n   pcePcepSessPeerOverloaded OBJECT-TYPE\n
      \      SYNTAX      TruthValue\n       MAX-ACCESS  read-only\n       STATUS      current\n
      \      DESCRIPTION\n           \"If the peer has informed the local PCEP entity
      that it is\n            currently overloaded, then this is set to true.  Otherwise,\n
      \           it is set to false.\"\n       ::= { pcePcepSessEntry 14 }\n   pcePcepSessPeerOverloadTime
      OBJECT-TYPE\n       SYNTAX      Unsigned32\n       UNITS       \"seconds\"\n
      \      MAX-ACCESS  read-only\n       STATUS      current\n       DESCRIPTION\n
      \          \"The interval of time that is remaining until the peer will\n            cease
      to be overloaded.  If it is not known how long the\n            peer will stay
      in overloaded state, this field is set to\n            zero.\n            This
      field is only used if pcePcepSessPeerOverloaded is set\n            to true.
      \ Otherwise, it is not used and MUST be set to\n            zero.\"\n       ::=
      { pcePcepSessEntry 15 }\n   pcePcepSessDiscontinuityTime OBJECT-TYPE\n       SYNTAX
      \     TimeStamp\n       MAX-ACCESS  read-only\n       STATUS      current\n
      \      DESCRIPTION\n           \"The value of sysUpTime at the time that the
      statistics in\n            this row were last reset.\"\n       ::= { pcePcepSessEntry
      16 }\n   pcePcepSessAvgRspTime OBJECT-TYPE\n       SYNTAX      Unsigned32\n
      \      UNITS       \"milliseconds\"\n       MAX-ACCESS  read-only\n       STATUS
      \     current\n       DESCRIPTION\n           \"The average response time for
      this peer on this session.\n            If an average response time has not
      been calculated for this\n            peer, then this object has the value zero.\"\n
      \      ::= { pcePcepSessEntry 17 }\n   pcePcepSessLWMRspTime OBJECT-TYPE\n       SYNTAX
      \     Unsigned32\n       UNITS       \"milliseconds\"\n       MAX-ACCESS  read-only\n
      \      STATUS      current\n       DESCRIPTION\n           \"The smallest (low-water
      mark) response time seen from this\n            peer on this session.\n            If
      no responses have been received from this peer, then this\n            object
      has the value zero.\"\n       ::= { pcePcepSessEntry 18 }\n   pcePcepSessHWMRspTime
      OBJECT-TYPE\n       SYNTAX      Unsigned32\n       UNITS       \"milliseconds\"\n
      \      MAX-ACCESS  read-only\n       STATUS      current\n       DESCRIPTION\n
      \          \"The greatest (high-water mark) response time seen from this\n            peer
      on this session.\n            If no responses have been received from this peer,
      then this\n            object has the value zero.\"\n       ::= { pcePcepSessEntry
      19 }\n   pcePcepSessNumPCReqSent OBJECT-TYPE\n       SYNTAX      Counter32\n
      \      MAX-ACCESS  read-only\n       STATUS      current\n       DESCRIPTION\n
      \          \"The number of PCReq messages sent on this session.\"\n       ::=
      { pcePcepSessEntry 20 }\n   pcePcepSessNumPCReqRcvd OBJECT-TYPE\n       SYNTAX
      \     Counter32\n       MAX-ACCESS  read-only\n       STATUS      current\n
      \      DESCRIPTION\n           \"The number of PCReq messages received on this
      session.\"\n       ::= { pcePcepSessEntry 21 }\n   pcePcepSessNumPCRepSent OBJECT-TYPE\n
      \      SYNTAX      Counter32\n       MAX-ACCESS  read-only\n       STATUS      current\n
      \      DESCRIPTION\n           \"The number of PCRep messages sent on this session.\"\n
      \      ::= { pcePcepSessEntry 22 }\n   pcePcepSessNumPCRepRcvd OBJECT-TYPE\n
      \      SYNTAX      Counter32\n       MAX-ACCESS  read-only\n       STATUS      current\n
      \      DESCRIPTION\n           \"The number of PCRep messages received on this
      session.\"\n       ::= { pcePcepSessEntry 23 }\n   pcePcepSessNumPCErrSent OBJECT-TYPE\n
      \      SYNTAX      Counter32\n       MAX-ACCESS  read-only\n       STATUS      current\n
      \      DESCRIPTION\n           \"The number of PCErr messages sent on this session.\"\n
      \      ::= { pcePcepSessEntry 24 }\n   pcePcepSessNumPCErrRcvd OBJECT-TYPE\n
      \      SYNTAX      Counter32\n       MAX-ACCESS  read-only\n       STATUS      current\n
      \      DESCRIPTION\n           \"The number of PCErr messages received on this
      session.\"\n       ::= { pcePcepSessEntry 25 }\n   pcePcepSessNumPCNtfSent OBJECT-TYPE\n
      \      SYNTAX      Counter32\n       MAX-ACCESS  read-only\n       STATUS      current\n
      \      DESCRIPTION\n           \"The number of PCNtf messages sent on this session.\"\n
      \      ::= { pcePcepSessEntry 26 }\n   pcePcepSessNumPCNtfRcvd OBJECT-TYPE\n
      \      SYNTAX      Counter32\n       MAX-ACCESS  read-only\n       STATUS      current\n
      \      DESCRIPTION\n           \"The number of PCNtf messages received on this
      session.\"\n       ::= { pcePcepSessEntry 27 }\n   pcePcepSessNumKeepaliveSent
      OBJECT-TYPE\n       SYNTAX      Counter32\n       MAX-ACCESS  read-only\n       STATUS
      \     current\n       DESCRIPTION\n           \"The number of Keepalive messages
      sent on this session.\"\n       ::= { pcePcepSessEntry 28 }\n   pcePcepSessNumKeepaliveRcvd
      OBJECT-TYPE\n       SYNTAX      Counter32\n       MAX-ACCESS  read-only\n       STATUS
      \     current\n       DESCRIPTION\n           \"The number of Keepalive messages
      received on this session.\"\n       ::= { pcePcepSessEntry 29 }\n   pcePcepSessNumUnknownRcvd
      OBJECT-TYPE\n       SYNTAX      Counter32\n       MAX-ACCESS  read-only\n       STATUS
      \     current\n       DESCRIPTION\n           \"The number of unknown messages
      received on this session.\"\n       ::= { pcePcepSessEntry 30 }\n   pcePcepSessNumCorruptRcvd
      OBJECT-TYPE\n       SYNTAX      Counter32\n       MAX-ACCESS  read-only\n       STATUS
      \     current\n       DESCRIPTION\n           \"The number of corrupted PCEP
      messages received on this\n            session.\"\n       ::= { pcePcepSessEntry
      31 }\n   pcePcepSessNumReqSent OBJECT-TYPE\n       SYNTAX      Counter32\n       MAX-ACCESS
      \ read-only\n       STATUS      current\n       DESCRIPTION\n           \"The
      number of requests sent on this session.  A request\n            corresponds
      1:1 with an RP object in a PCReq message.\n            This might be greater
      than pcePcepSessNumPCReqSent because\n            multiple requests can be batched
      into a single PCReq\n            message.\"\n       ::= { pcePcepSessEntry 32
      }\n   pcePcepSessNumSvecSent OBJECT-TYPE\n       SYNTAX      Counter32\n       MAX-ACCESS
      \ read-only\n       STATUS      current\n       DESCRIPTION\n           \"The
      number of SVEC objects sent on this session in PCReq\n            messages.
      \ An SVEC object represents a set of synchronized\n            requests.\"\n
      \      ::= { pcePcepSessEntry 33 }\n   pcePcepSessNumSvecReqSent OBJECT-TYPE\n
      \      SYNTAX      Counter32\n       MAX-ACCESS  read-only\n       STATUS      current\n
      \      DESCRIPTION\n           \"The number of requests sent on this session
      that appeared in\n            one or more SVEC objects.\"\n       ::= { pcePcepSessEntry
      34 }\n   pcePcepSessNumReqSentPendRep OBJECT-TYPE\n       SYNTAX      Counter32\n
      \      MAX-ACCESS  read-only\n       STATUS      current\n       DESCRIPTION\n
      \          \"The number of requests that have been sent on this session\n            for
      which a response is still pending.\"\n       ::= { pcePcepSessEntry 35 }\n   pcePcepSessNumReqSentEroRcvd
      OBJECT-TYPE\n       SYNTAX      Counter32\n       MAX-ACCESS  read-only\n       STATUS
      \     current\n       DESCRIPTION\n           \"The number of successful responses
      received on this session.\n            A response corresponds 1:1 with an RP
      object in a PCRep\n            message.  A successful response is a response
      for which an\n            ERO was successfully computed.\"\n       ::= { pcePcepSessEntry
      36 }\n   pcePcepSessNumReqSentNoPathRcvd OBJECT-TYPE\n       SYNTAX      Counter32\n
      \      MAX-ACCESS  read-only\n       STATUS      current\n       DESCRIPTION\n
      \          \"The number of unsuccessful responses received on this\n            session.
      \ A response corresponds 1:1 with an RP object in a\n            PCRep message.
      \ An unsuccessful response is a response with\n            a NO-PATH object.\"\n
      \      ::= { pcePcepSessEntry 37 }\n   pcePcepSessNumReqSentCancelRcvd OBJECT-TYPE\n
      \      SYNTAX      Counter32\n       MAX-ACCESS  read-only\n       STATUS      current\n
      \      DESCRIPTION\n           \"The number of requests sent on this session
      that were\n            canceled by the peer with a PCNtf message.\n            This
      might be different than pcePcepSessNumPCNtfRcvd because\n            not all
      PCNtf messages are used to cancel requests, and a\n            single PCNtf
      message can cancel multiple requests.\"\n       ::= { pcePcepSessEntry 38 }\n
      \  pcePcepSessNumReqSentErrorRcvd OBJECT-TYPE\n       SYNTAX      Counter32\n
      \      MAX-ACCESS  read-only\n       STATUS      current\n       DESCRIPTION\n
      \          \"The number of requests sent on this session that were\n            rejected
      by the peer with a PCErr message.\n            This might be different than
      pcePcepSessNumPCErrRcvd because\n            not all PCErr messages are used
      to reject requests, and a\n            single PCErr message can reject multiple
      requests.\"\n       ::= { pcePcepSessEntry 39 }\n   pcePcepSessNumReqSentTimeout
      OBJECT-TYPE\n       SYNTAX      Counter32\n       MAX-ACCESS  read-only\n       STATUS
      \     current\n       DESCRIPTION\n           \"The number of requests sent
      on this session that have been\n            sent to a peer and have been abandoned
      because the peer has\n            taken too long to respond to them.\"\n       ::=
      { pcePcepSessEntry 40 }\n   pcePcepSessNumReqSentCancelSent OBJECT-TYPE\n       SYNTAX
      \     Counter32\n       MAX-ACCESS  read-only\n       STATUS      current\n
      \      DESCRIPTION\n           \"The number of requests sent on this session
      that were sent\n            to the peer and explicitly canceled by the local
      PCEP\n            entity sending a PCNtf.\"\n       ::= { pcePcepSessEntry 41
      }\n   pcePcepSessNumReqRcvd OBJECT-TYPE\n       SYNTAX      Counter32\n       MAX-ACCESS
      \ read-only\n       STATUS      current\n       DESCRIPTION\n           \"The
      number of requests received on this session.  A request\n            corresponds
      1:1 with an RP object in a PCReq message.\n            This might be greater
      than pcePcepSessNumPCReqRcvd because\n            multiple requests can be batched
      into a single PCReq\n            message.\"\n       ::= { pcePcepSessEntry 42
      }\n   pcePcepSessNumSvecRcvd OBJECT-TYPE\n       SYNTAX      Counter32\n       MAX-ACCESS
      \ read-only\n       STATUS      current\n       DESCRIPTION\n           \"The
      number of SVEC objects received on this session in PCReq\n            messages.
      \ An SVEC object represents a set of synchronized\n            requests.\"\n
      \      ::= { pcePcepSessEntry 43 }\n   pcePcepSessNumSvecReqRcvd OBJECT-TYPE\n
      \      SYNTAX      Counter32\n       MAX-ACCESS  read-only\n       STATUS      current\n
      \      DESCRIPTION\n           \"The number of requests received on this session
      that\n            appeared in one or more SVEC objects.\"\n       ::= { pcePcepSessEntry
      44 }\n   pcePcepSessNumReqRcvdPendRep OBJECT-TYPE\n       SYNTAX      Counter32\n
      \      MAX-ACCESS  read-only\n       STATUS      current\n       DESCRIPTION\n
      \          \"The number of requests that have been received on this\n            session
      for which a response is still pending.\"\n       ::= { pcePcepSessEntry 45 }\n
      \  pcePcepSessNumReqRcvdEroSent OBJECT-TYPE\n       SYNTAX      Counter32\n
      \      MAX-ACCESS  read-only\n       STATUS      current\n       DESCRIPTION\n
      \          \"The number of successful responses sent on this session.  A\n            response
      corresponds 1:1 with an RP object in a PCRep\n            message.  A successful
      response is a response for which an\n            ERO was successfully computed.\"\n
      \      ::= { pcePcepSessEntry 46 }\n   pcePcepSessNumReqRcvdNoPathSent OBJECT-TYPE\n
      \      SYNTAX      Counter32\n       MAX-ACCESS  read-only\n       STATUS      current\n
      \      DESCRIPTION\n           \"The number of unsuccessful responses sent on
      this session.\n            A response corresponds 1:1 with an RP object in a
      PCRep\n            message.  An unsuccessful response is a response with a\n
      \           NO-PATH object.\"\n       ::= { pcePcepSessEntry 47 }\n   pcePcepSessNumReqRcvdCancelSent
      OBJECT-TYPE\n       SYNTAX      Counter32\n       MAX-ACCESS  read-only\n       STATUS
      \     current\n       DESCRIPTION\n           \"The number of requests received
      on this session that were\n            canceled by the local PCEP entity sending
      a PCNtf message.\n            This might be different than pcePcepSessNumPCNtfSent
      because\n            not all PCNtf messages are used to cancel requests, and
      a\n            single PCNtf message can cancel multiple requests.\"\n       ::=
      { pcePcepSessEntry 48 }\n   pcePcepSessNumReqRcvdErrorSent OBJECT-TYPE\n       SYNTAX
      \     Counter32\n       MAX-ACCESS  read-only\n       STATUS      current\n
      \      DESCRIPTION\n           \"The number of requests received on this session
      that were\n            rejected by the local PCEP entity sending a PCErr message.\n
      \           This might be different than pcePcepSessNumPCErrSent because\n            not
      all PCErr messages are used to reject requests, and a\n            single PCErr
      message can reject multiple requests.\"\n       ::= { pcePcepSessEntry 49 }\n
      \  pcePcepSessNumReqRcvdCancelRcvd OBJECT-TYPE\n       SYNTAX      Counter32\n
      \      MAX-ACCESS  read-only\n       STATUS      current\n       DESCRIPTION\n
      \          \"The number of requests that were received on this session\n            and
      explicitly canceled by the peer sending a PCNtf.\"\n       ::= { pcePcepSessEntry
      50 }\n   pcePcepSessNumRepRcvdUnknown OBJECT-TYPE\n       SYNTAX      Counter32\n
      \      MAX-ACCESS  read-only\n       STATUS      current\n       DESCRIPTION\n
      \          \"The number of responses to unknown requests received on this\n
      \           session.  A response to an unknown request is a response\n            whose
      RP object does not contain the request ID of any\n            request that is
      currently outstanding on the session.\"\n       ::= { pcePcepSessEntry 51 }\n
      \  pcePcepSessNumReqRcvdUnknown OBJECT-TYPE\n       SYNTAX      Counter32\n
      \      MAX-ACCESS  read-only\n       STATUS      current\n       DESCRIPTION\n
      \          \"The number of unknown requests that have been received on\n            this
      session.  An unknown request is a request whose RP\n            object contains
      a request ID of zero.\"\n       ::= { pcePcepSessEntry 52 }\n   ---\n   ---
      Notifications Configuration\n   ---\n   pcePcepNotificationsMaxRate OBJECT-TYPE\n
      \      SYNTAX       Unsigned32\n       MAX-ACCESS   read-write\n       STATUS
      \      current\n       DESCRIPTION\n           \"This variable indicates the
      maximum number of\n            notifications issued per second.  If events occur\n
      \           more rapidly, the implementation may simply fail to\n            emit
      these notifications during that period or may\n            queue them until
      an appropriate time.  A value of zero\n            means no notifications are
      emitted and all should be\n            discarded (that is, not queued).\"\n
      \      ::= { pcePcepObjects 4 }\n   ---\n   --- Notifications\n   ---\n   pcePcepSessUp
      NOTIFICATION-TYPE\n       OBJECTS     {\n                      pcePcepSessState,\n
      \                     pcePcepSessStateLastChange\n                   }\n       STATUS
      \     current\n       DESCRIPTION\n           \"This notification is sent when
      the value of\n            pcePcepSessState enters the sessionUp state.\"\n       ::=
      { pcePcepNotifications 1 }\n   pcePcepSessDown NOTIFICATION-TYPE\n       OBJECTS
      \    {\n                      pcePcepSessState,\n                      pcePcepSessStateLastChange\n
      \                  }\n       STATUS      current\n       DESCRIPTION\n           \"This
      notification is sent when the value of\n            pcePcepSessState leaves
      the sessionUp state.\"\n       ::= { pcePcepNotifications 2 }\n   pcePcepSessLocalOverload
      NOTIFICATION-TYPE\n       OBJECTS     {\n                      pcePcepSessOverloaded,\n
      \                     pcePcepSessOverloadTime\n                   }\n       STATUS
      \     current\n       DESCRIPTION\n           \"This notification is sent when
      the local PCEP entity enters\n            overload state for a peer.\"\n       ::=
      { pcePcepNotifications 3 }\n   pcePcepSessLocalOverloadClear NOTIFICATION-TYPE\n
      \      OBJECTS     {\n                      pcePcepSessOverloaded\n                   }\n
      \      STATUS      current\n       DESCRIPTION\n           \"This notification
      is sent when the local PCEP entity leaves\n            overload state for a
      peer.\"\n       ::= { pcePcepNotifications 4 }\n   pcePcepSessPeerOverload NOTIFICATION-TYPE\n
      \      OBJECTS     {\n                      pcePcepSessPeerOverloaded,\n                      pcePcepSessPeerOverloadTime\n
      \                  }\n       STATUS      current\n       DESCRIPTION\n           \"This
      notification is sent when a peer enters overload\n            state.\"\n       ::=
      { pcePcepNotifications 5 }\n   pcePcepSessPeerOverloadClear NOTIFICATION-TYPE\n
      \      OBJECTS     {\n                      pcePcepSessPeerOverloaded\n                   }\n
      \      STATUS      current\n       DESCRIPTION\n           \"This notification
      is sent when a peer leaves overload\n            state.\"\n       ::= { pcePcepNotifications
      6 }\n   --\n   -- Module Conformance Statement\n   --\n   pcePcepCompliances\n
      \      OBJECT IDENTIFIER ::= { pcePcepConformance 1 }\n   pcePcepGroups\n       OBJECT
      IDENTIFIER ::= { pcePcepConformance 2 }\n   --\n   -- Read-Only Compliance\n
      \  --\n   pcePcepModuleReadOnlyCompliance MODULE-COMPLIANCE\n       STATUS current\n
      \      DESCRIPTION\n           \"The module is implemented with support for
      read-only.  In\n            other words, only monitoring is available by implementing\n
      \           this MODULE-COMPLIANCE.\"\n       MODULE -- this module\n           MANDATORY-GROUPS
      \   {\n                                 pcePcepGeneralGroup,\n                                 pcePcepNotificationsGroup\n
      \                              }\n       OBJECT       pcePcepEntityAddrType\n
      \      SYNTAX       InetAddressType { unknown(0), ipv4(1), ipv6(2) }\n       DESCRIPTION
      \ \"Only unknown(0), ipv4(1), and ipv6(2) support\n                     is required.\"\n"
    - '-- The following restriction is commented out because of a limitation

      '
    - '-- in SMIv2 which does not allow index objects to be restricted in

      '
    - '-- scope.  Nevertheless, this object is intended to be restricted in

      '
    - '-- scope, as follows.

      '
    - '--

      '
    - '--     OBJECT       pcePcepPeerAddrType

      '
    - '--     SYNTAX       InetAddressType { unknown(0), ipv4(1), ipv6(2) }

      '
    - '--     DESCRIPTION  "Only unknown(0), ipv4(1), and ipv6(2) support

      '
    - "--                   is required.\"\n       ::= { pcePcepCompliances 1 }\n
      \  -- units of conformance\n   pcePcepGeneralGroup OBJECT-GROUP\n       OBJECTS
      { pcePcepEntityAdminStatus,\n                 pcePcepEntityOperStatus,\n                 pcePcepEntityAddrType,\n
      \                pcePcepEntityAddr,\n                 pcePcepEntityConnectTimer,\n
      \                pcePcepEntityConnectMaxRetry,\n                 pcePcepEntityInitBackoffTimer,\n
      \                pcePcepEntityMaxBackoffTimer,\n                 pcePcepEntityOpenWaitTimer,\n
      \                pcePcepEntityKeepWaitTimer,\n                 pcePcepEntityKeepAliveTimer,\n
      \                pcePcepEntityDeadTimer,\n                 pcePcepEntityAllowNegotiation,\n
      \                pcePcepEntityMaxKeepAliveTimer,\n                 pcePcepEntityMaxDeadTimer,\n
      \                pcePcepEntityMinKeepAliveTimer,\n                 pcePcepEntityMinDeadTimer,\n
      \                pcePcepEntitySyncTimer,\n                 pcePcepEntityRequestTimer,\n
      \                pcePcepEntityMaxSessions,\n                 pcePcepEntityMaxUnknownReqs,\n
      \                pcePcepEntityMaxUnknownMsgs,\n                 pcePcepPeerRole,\n
      \                pcePcepPeerDiscontinuityTime,\n                 pcePcepPeerInitiateSession,\n
      \                pcePcepPeerSessionExists,\n                 pcePcepPeerNumSessSetupOK,\n
      \                pcePcepPeerNumSessSetupFail,\n                 pcePcepPeerSessionUpTime,\n
      \                pcePcepPeerSessionFailTime,\n                 pcePcepPeerSessionFailUpTime,\n
      \                pcePcepPeerAvgRspTime,\n                 pcePcepPeerLWMRspTime,\n
      \                pcePcepPeerHWMRspTime,\n                 pcePcepPeerNumPCReqSent,\n
      \                pcePcepPeerNumPCReqRcvd,\n                 pcePcepPeerNumPCRepSent,\n
      \                pcePcepPeerNumPCRepRcvd,\n                 pcePcepPeerNumPCErrSent,\n
      \                pcePcepPeerNumPCErrRcvd,\n                 pcePcepPeerNumPCNtfSent,\n
      \                pcePcepPeerNumPCNtfRcvd,\n                 pcePcepPeerNumKeepaliveSent,\n
      \                pcePcepPeerNumKeepaliveRcvd,\n                 pcePcepPeerNumUnknownRcvd,\n
      \                pcePcepPeerNumCorruptRcvd,\n                 pcePcepPeerNumReqSent,\n
      \                pcePcepPeerNumSvecSent,\n                 pcePcepPeerNumSvecReqSent,\n
      \                pcePcepPeerNumReqSentPendRep,\n                 pcePcepPeerNumReqSentEroRcvd,\n
      \                pcePcepPeerNumReqSentNoPathRcvd,\n                 pcePcepPeerNumReqSentCancelRcvd,\n
      \                pcePcepPeerNumReqSentErrorRcvd,\n                 pcePcepPeerNumReqSentTimeout,\n
      \                pcePcepPeerNumReqSentCancelSent,\n                 pcePcepPeerNumReqSentClosed,\n
      \                pcePcepPeerNumReqRcvd,\n                 pcePcepPeerNumSvecRcvd,\n
      \                pcePcepPeerNumSvecReqRcvd,\n                 pcePcepPeerNumReqRcvdPendRep,\n
      \                pcePcepPeerNumReqRcvdEroSent,\n                 pcePcepPeerNumReqRcvdNoPathSent,\n
      \                pcePcepPeerNumReqRcvdCancelSent,\n                 pcePcepPeerNumReqRcvdErrorSent,\n
      \                pcePcepPeerNumReqRcvdCancelRcvd,\n                 pcePcepPeerNumReqRcvdClosed,\n
      \                pcePcepPeerNumRepRcvdUnknown,\n                 pcePcepPeerNumReqRcvdUnknown,\n
      \                pcePcepSessStateLastChange,\n                 pcePcepSessState,\n
      \                pcePcepSessConnectRetry,\n                 pcePcepSessLocalID,\n
      \                pcePcepSessRemoteID,\n                 pcePcepSessKeepaliveTimer,\n
      \                pcePcepSessPeerKeepaliveTimer,\n                 pcePcepSessDeadTimer,\n
      \                pcePcepSessPeerDeadTimer,\n                 pcePcepSessKAHoldTimeRem,\n
      \                pcePcepSessOverloaded,\n                 pcePcepSessOverloadTime,\n
      \                pcePcepSessPeerOverloaded,\n                 pcePcepSessPeerOverloadTime,\n
      \                pcePcepSessDiscontinuityTime,\n                 pcePcepSessAvgRspTime,\n
      \                pcePcepSessLWMRspTime,\n                 pcePcepSessHWMRspTime,\n
      \                pcePcepSessNumPCReqSent,\n                 pcePcepSessNumPCReqRcvd,\n
      \                pcePcepSessNumPCRepSent,\n                 pcePcepSessNumPCRepRcvd,\n
      \                pcePcepSessNumPCErrSent,\n                 pcePcepSessNumPCErrRcvd,\n
      \                pcePcepSessNumPCNtfSent,\n                 pcePcepSessNumPCNtfRcvd,\n
      \                pcePcepSessNumKeepaliveSent,\n                 pcePcepSessNumKeepaliveRcvd,\n
      \                pcePcepSessNumUnknownRcvd,\n                 pcePcepSessNumCorruptRcvd,\n
      \                pcePcepSessNumReqSent,\n                 pcePcepSessNumSvecSent,\n
      \                pcePcepSessNumSvecReqSent,\n                 pcePcepSessNumReqSentPendRep,\n
      \                pcePcepSessNumReqSentEroRcvd,\n                 pcePcepSessNumReqSentNoPathRcvd,\n
      \                pcePcepSessNumReqSentCancelRcvd,\n                 pcePcepSessNumReqSentErrorRcvd,\n
      \                pcePcepSessNumReqSentTimeout,\n                 pcePcepSessNumReqSentCancelSent,\n
      \                pcePcepSessNumReqRcvd,\n                 pcePcepSessNumSvecRcvd,\n
      \                pcePcepSessNumSvecReqRcvd,\n                 pcePcepSessNumReqRcvdPendRep,\n
      \                pcePcepSessNumReqRcvdEroSent,\n                 pcePcepSessNumReqRcvdNoPathSent,\n
      \                pcePcepSessNumReqRcvdCancelSent,\n                 pcePcepSessNumReqRcvdErrorSent,\n
      \                pcePcepSessNumReqRcvdCancelRcvd,\n                 pcePcepSessNumRepRcvdUnknown,\n
      \                pcePcepSessNumReqRcvdUnknown,\n                 pcePcepNotificationsMaxRate\n
      \              }\n       STATUS current\n       DESCRIPTION\n           \"Objects
      that apply to all PCEP MIB module implementations.\"\n       ::= { pcePcepGroups
      1 }\n   pcePcepNotificationsGroup NOTIFICATION-GROUP\n       NOTIFICATIONS {
      pcePcepSessUp,\n                       pcePcepSessDown,\n                       pcePcepSessLocalOverload,\n
      \                      pcePcepSessLocalOverloadClear,\n                       pcePcepSessPeerOverload,\n
      \                      pcePcepSessPeerOverloadClear\n                     }\n
      \      STATUS   current\n       DESCRIPTION\n           \"The notifications
      for a PCEP MIB module implementation.\"\n       ::= { pcePcepGroups 2 }\n   END\n"
    title: 4.1.  PCE-PCEP-MIB
  title: 4.  Object Definitions
- contents:
  - "5.  Security Considerations\n   The pcePcepNotificationsMaxRate object defined
    in this MIB module has\n   a MAX-ACCESS clause of read-write.  Such objects may
    be considered\n   sensitive or vulnerable in some network environments.  The support\n
    \  for SET operations in a non-secure environment without proper\n   protection
    opens devices to attack.  In particular,\n   pcePcepNotificationsMaxRate may be
    used improperly to stop\n   notifications being issued or to permit a flood of
    notifications to\n   be sent to the management agent at a high rate.\n   All the
    readable objects in this MIB module (i.e., objects with a\n   MAX-ACCESS other
    than not-accessible) may be considered sensitive or\n   vulnerable in some network
    environments.  It is thus important to\n   control even GET and/or NOTIFY access
    to these objects and possibly\n   to even encrypt the values of these objects
    when sending them over\n   the network via SNMP.  The sensitivity/vulnerability
    arises because,\n   collectively, these objects provide information about the
    amount and\n   frequency of path computation requests and responses within the\n
    \  network and can reveal some aspects of its configuration.\n   SNMP versions
    prior to SNMPv3 did not include adequate security.\n   Even if the network itself
    is secure (for example by using IPsec),\n   there is no control as to who on the
    secure network is allowed to\n   access and GET/SET (read/change/create/delete)
    the objects in this\n   MIB module.\n   Implementations SHOULD provide the security
    features described by the\n   SNMPv3 framework (see [RFC3410]), and implementations
    claiming\n   compliance to the SNMPv3 standard MUST include full support for\n
    \  authentication and privacy via the User-based Security Model (USM)\n   [RFC3414]
    with the AES cipher algorithm [RFC3826].  Implementations\n   MAY also provide
    support for the Transport Security Model (TSM)\n   [RFC5591] in combination with
    a secure transport such as SSH\n   [RFC5592] or TLS/DTLS [RFC6353].\n   Further,
    deployment of SNMP versions prior to SNMPv3 is NOT\n   RECOMMENDED.  Instead,
    it is RECOMMENDED to deploy SNMPv3 and to\n   enable cryptographic security.  It
    is then a customer/operator\n   responsibility to ensure that the SNMP entity
    giving access to an\n   instance of this MIB module is properly configured to
    give access to\n   the objects only to those principals (users) that have legitimate\n
    \  rights to indeed GET or SET (change/create/delete) them.\n"
  title: 5.  Security Considerations
- contents:
  - "6.  IANA Considerations\n   The MIB module in this document uses the following
    IANA-assigned\n   OBJECT IDENTIFIER values recorded in the SMI Numbers registry:\n
    \       Descriptor        OBJECT IDENTIFIER value\n        ----------        -----------------------\n
    \       pcePcepMIB         { mib-2 227 }\n"
  title: 6.  IANA Considerations
- contents:
  - '7.  References

    '
  - contents:
    - "7.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use
      in RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119, March
      1997,\n              <http://www.rfc-editor.org/info/rfc2119>.\n   [RFC2578]
      \ McCloghrie, K., Ed., Perkins, D., Ed., and J.\n              Schoenwaelder,
      Ed., \"Structure of Management Information\n              Version 2 (SMIv2)\",
      STD 58, RFC 2578, April 1999,\n              <http://www.rfc-editor.org/info/rfc2578>.\n
      \  [RFC2579]  McCloghrie, K., Ed., Perkins, D., Ed., and J.\n              Schoenwaelder,
      Ed., \"Textual Conventions for SMIv2\", STD\n              58, RFC 2579, April
      1999,\n              <http://www.rfc-editor.org/info/rfc2579>.\n   [RFC2580]
      \ McCloghrie, K., Perkins, D., and J. Schoenwaelder,\n              \"Conformance
      Statements for SMIv2\", STD 58, RFC 2580,\n              April 1999, <http://www.rfc-editor.org/info/rfc2580>.\n
      \  [RFC3414]  Blumenthal, U. and B. Wijnen, \"User-based Security Model\n              (USM)
      for version 3 of the Simple Network Management\n              Protocol (SNMPv3)\",
      STD 62, RFC 3414, December 2002,\n              <http://www.rfc-editor.org/info/rfc3414>.\n
      \  [RFC3826]  Blumenthal, U., Maino, F., and K. McCloghrie, \"The\n              Advanced
      Encryption Standard (AES) Cipher Algorithm in the\n              SNMP User-based
      Security Model\", RFC 3826, June 2004,\n              <http://www.rfc-editor.org/info/rfc3826>.\n
      \  [RFC4001]  Daniele, M., Haberman, B., Routhier, S., and J.\n              Schoenwaelder,
      \"Textual Conventions for Internet Network\n              Addresses\", RFC 4001,
      February 2005,\n              <http://www.rfc-editor.org/info/rfc4001>.\n   [RFC5440]
      \ Vasseur, JP. and JL. Le Roux, \"Path Computation Element\n              (PCE)
      Communication Protocol (PCEP)\", RFC 5440, March\n              2009, <http://www.rfc-editor.org/info/rfc5440>.\n
      \  [RFC5591]  Harrington, D. and W. Hardaker, \"Transport Security Model\n              for
      the Simple Network Management Protocol (SNMP)\", STD\n              78, RFC
      5591, June 2009,\n              <http://www.rfc-editor.org/info/rfc5591>.\n
      \  [RFC5592]  Harrington, D., Salowey, J., and W. Hardaker, \"Secure\n              Shell
      Transport Model for the Simple Network Management\n              Protocol (SNMP)\",
      RFC 5592, June 2009,\n              <http://www.rfc-editor.org/info/rfc5592>.\n
      \  [RFC6353]  Hardaker, W., \"Transport Layer Security (TLS) Transport\n              Model
      for the Simple Network Management Protocol (SNMP)\",\n              STD 78,
      RFC 6353, July 2011,\n              <http://www.rfc-editor.org/info/rfc6353>.\n"
    title: 7.1.  Normative References
  - contents:
    - "7.2.  Informative References\n   [RFC3410]  Case, J., Mundy, R., Partain, D.,
      and B. Stewart,\n              \"Introduction and Applicability Statements for
      Internet-\n              Standard Management Framework\", RFC 3410, December
      2002,\n              <http://www.rfc-editor.org/info/rfc3410>.\n   [RFC4655]
      \ Farrel, A., Vasseur, J., and J. Ash, \"A Path Computation\n              Element
      (PCE)-Based Architecture\", RFC 4655, August 2006,\n              <http://www.rfc-editor.org/info/rfc4655>.\n"
    title: 7.2.  Informative References
  title: 7.  References
- contents:
  - "Appendix A.  PCEP MIB Module Example\n   This example considers the set of PCC/PCE
    relationships shown in the\n   following figure.  The example shows the contents
    of the PCEP MIB\n   module as read at PCE2 and PCCb.\n       PCE1---PCE2   PCE3\n
    \        |   /  |    /  |\n         |  /   |   /   |\n       PCCa/    PCCb   PCCc\n
    \  The IP addresses of the PCE speakers in this diagram are given in the\n   following
    table.\n       +------+-------------+\n       | PCE1 | 1.1.1.1     |\n       +------+-------------+\n
    \      | PCE2 | 2.2.2.2     |\n       +------+-------------+\n       | PCE3 |
    3.3.3.3     |\n       +------+-------------+\n       | PCCa | 11.11.11.11 |\n
    \      +------+-------------+\n       | PCCb | 22.22.22.22 |\n       +------+-------------+\n
    \      | PCCc | 33.33.33.33 |\n       +------+-------------+\n   In this example,
    the PCEP session between PCCb and PCE3 is currently\n   down.\n"
  - contents:
    - "A.1.  Contents of PCEP MIB Module at PCE2\n   At PCE2, there is a single local
      PCEP entity that has three peers\n   (PCCa, PCCb, and PCE1).  There is a session
      active to all of these\n   peers.\n   The contents of the PCEP MIB module as
      read at PCE2 are as follows.\n   In pcePcepEntityTable  {\n          pcePcepEntityIndex
      \               1,\n          pcePcepEntityAdminStatus          adminStatusUp(1),\n
      \         pcePcepEntityOperStatus           operStatusUp(1),\n          pcePcepEntityAddrType
      \            ipv4(1),\n          pcePcepEntityAddr                 2.2.2.2,
      -- PCE2\n          pcePcepEntityConnectTimer         60,\n          pcePcepEntityConnectMaxRetry
      \     5,\n          pcePcepEntityInitBackoffTimer     30,\n          pcePcepEntityMaxBackoffTimer
      \     3600,\n          pcePcepEntityOpenWaitTimer        60,\n          pcePcepEntityKeepWaitTimer
      \       60,\n          pcePcepEntityKeepAliveTimer       1,\n          pcePcepEntityDeadTimer
      \           4,\n          pcePcepEntityAllowNegotiation     true(1),\n          pcePcepEntityMaxKeepAliveTimer
      \   60,\n          pcePcepEntityMaxDeadTimer         240,\n          pcePcepEntityMinKeepAliveTimer
      \   1,\n          pcePcepEntityMinDeadTimer         4,\n          pcePcepEntitySyncTimer
      \           60,\n          pcePcepEntityRequestTimer         120,\n          pcePcepEntityMaxSessions
      \         999,\n          pcePcepEntityMaxUnknownReqs       5,\n          pcePcepEntityMaxUnknownMsgs
      \      5\n      }\n   In pcePcepPeerTable {\n          pcePcepPeerAddrType                 ipv4(1),
      --PCE1\n          pcePcepPeerAddr                     1.1.1.1,\n          pcePcepPeerRole
      \                    pccAndPce(3),\n          pcePcepPeerDiscontinuityTime        TimeStamp,\n
      \         pcePcepPeerInitiateSession          true(1),\n          pcePcepPeerSessionExists
      \           true(1),\n          pcePcepPeerNumSessSetupOK           1,\n          pcePcepPeerNumSessSetupFail
      \        0,\n          pcePcepPeerSessionUpTime            TimeStamp,\n          pcePcepPeerSessionFailTime
      \         0,\n          pcePcepPeerSessionFailUpTime        TimeStamp,\n          pcePcepPeerAvgRspTime
      \              0,\n          pcePcepPeerLWMRspTime               0,\n          pcePcepPeerHWMRspTime
      \              0,\n          pcePcepPeerNumPCReqSent             0,\n          pcePcepPeerNumPCReqRcvd
      \            0,\n          pcePcepPeerNumPCRepSent             0,\n          pcePcepPeerNumPCRepRcvd
      \            0,\n          pcePcepPeerNumPCErrSent             0,\n          pcePcepPeerNumPCErrRcvd
      \            0,\n          pcePcepPeerNumPCNtfSent             0,\n          pcePcepPeerNumPCNtfRcvd
      \            0,\n          pcePcepPeerNumKeepaliveSent         123,\n          pcePcepPeerNumKeepaliveRcvd
      \        123,\n          pcePcepPeerNumUnknownRcvd           0,\n          pcePcepPeerNumCorruptRcvd
      \          0,\n          pcePcepPeerNumReqSent               0,\n          pcePcepPeerNumSvecSent
      \             0,\n          pcePcepPeerNumSvecReqSent           0,\n          pcePcepPeerNumReqSentPendRep
      \       0,\n          pcePcepPeerNumReqSentEroRcvd        0,\n          pcePcepPeerNumReqSentNoPathRcvd
      \    0,\n          pcePcepPeerNumReqSentCancelRcvd     0,\n          pcePcepPeerNumReqSentErrorRcvd
      \     0,\n          pcePcepPeerNumReqSentTimeout        0,\n          pcePcepPeerNumReqSentCancelSent
      \    0,\n          pcePcepPeerNumReqSentClosed         0,\n          pcePcepPeerNumReqRcvd
      \              0,\n          pcePcepPeerNumSvecRcvd              0,\n          pcePcepPeerNumSvecReqRcvd
      \          0,\n          pcePcepPeerNumReqRcvdPendRep        0,\n          pcePcepPeerNumReqRcvdEroSent
      \       0,\n          pcePcepPeerNumReqRcvdNoPathSent     0,\n          pcePcepPeerNumReqRcvdCancelSent
      \    0,\n          pcePcepPeerNumReqRcvdErrorSent      0,\n          pcePcepPeerNumReqRcvdCancelRcvd
      \    0,\n          pcePcepPeerNumReqRcvdClosed         0,\n          pcePcepPeerNumRepRcvdUnknown
      \       0,\n          pcePcepPeerNumReqRcvdUnknown        0\n      },\n      {\n
      \         pcePcepPeerAddrType                 ipv4(1),  --PCCa\n          pcePcepPeerAddr
      \                    11.11.11.11,\n          pcePcepPeerRole                     pcc(1),\n
      \         pcePcepPeerDiscontinuityTime        TimeStamp,\n          pcePcepPeerInitiateSession
      \         false(0),\n          pcePcepPeerSessionExists            true(1),\n
      \         pcePcepPeerNumSessSetupOK           1,\n          pcePcepPeerNumSessSetupFail
      \        0,\n          pcePcepPeerSessionUpTime            TimeStamp,\n          pcePcepPeerSessionFailTime
      \         0,\n          pcePcepPeerSessionFailUpTime        TimeStamp,\n          pcePcepPeerAvgRspTime
      \              200,\n          pcePcepPeerLWMRspTime               100,\n          pcePcepPeerHWMRspTime
      \              300,\n          pcePcepPeerNumPCReqSent             0,\n          pcePcepPeerNumPCReqRcvd
      \            3,\n          pcePcepPeerNumPCRepSent             3,\n          pcePcepPeerNumPCRepRcvd
      \            0,\n          pcePcepPeerNumPCErrSent             0,\n          pcePcepPeerNumPCErrRcvd
      \            0,\n          pcePcepPeerNumPCNtfSent             0,\n          pcePcepPeerNumPCNtfRcvd
      \            0,\n          pcePcepPeerNumKeepaliveSent         123,\n          pcePcepPeerNumKeepaliveRcvd
      \        123,\n          pcePcepPeerNumUnknownRcvd           0,\n          pcePcepPeerNumCorruptRcvd
      \          0,\n          pcePcepPeerNumReqSent               0,\n          pcePcepPeerNumSvecSent
      \             0,\n          pcePcepPeerNumSvecReqSent           0,\n          pcePcepPeerNumReqSentPendRep
      \       0,\n          pcePcepPeerNumReqSentEroRcvd        0,\n          pcePcepPeerNumReqSentNoPathRcvd
      \    0,\n          pcePcepPeerNumReqSentCancelRcvd     0,\n          pcePcepPeerNumReqSentErrorRcvd
      \     0,\n          pcePcepPeerNumReqSentTimeout        0,\n          pcePcepPeerNumReqSentCancelSent
      \    0,\n          pcePcepPeerNumReqSentClosed         0,\n          pcePcepPeerNumReqRcvd
      \              3,\n          pcePcepPeerNumSvecRcvd              0,\n          pcePcepPeerNumSvecReqRcvd
      \          0,\n          pcePcepPeerNumReqRcvdPendRep        0,\n          pcePcepPeerNumReqRcvdEroSent
      \       3,\n          pcePcepPeerNumReqRcvdNoPathSent     0,\n          pcePcepPeerNumReqRcvdCancelSent
      \    0,\n          pcePcepPeerNumReqRcvdErrorSent      0,\n          pcePcepPeerNumReqRcvdCancelRcvd
      \    0,\n          pcePcepPeerNumReqRcvdClosed         0,\n          pcePcepPeerNumRepRcvdUnknown
      \       0,\n          pcePcepPeerNumReqRcvdUnknown        0\n      },\n      {\n
      \         pcePcepPeerAddrType                 ipv4(1), -- PCCb\n          pcePcepPeerAddr
      \                    22.22.22.22,\n          pcePcepPeerRole                     pcc(1),\n
      \         pcePcepPeerDiscontinuityTime        TimeStamp,\n          pcePcepPeerInitiateSession
      \         true(1),\n          pcePcepPeerSessionExists            true(1),\n
      \         pcePcepPeerNumSessSetupOK           1,\n          pcePcepPeerNumSessSetupFail
      \        0,\n          pcePcepPeerSessionUpTime            TimeStamp,\n          pcePcepPeerSessionFailTime
      \         0,\n          pcePcepPeerSessionFailUpTime        TimeStamp,\n          pcePcepPeerAvgRspTime
      \              200,\n          pcePcepPeerLWMRspTime               100,\n          pcePcepPeerHWMRspTime
      \              300,\n          pcePcepPeerNumPCReqSent             0,\n          pcePcepPeerNumPCReqRcvd
      \            4,\n          pcePcepPeerNumPCRepSent             4,\n          pcePcepPeerNumPCRepRcvd
      \            0,\n          pcePcepPeerNumPCErrSent             0,\n          pcePcepPeerNumPCErrRcvd
      \            0,\n          pcePcepPeerNumPCNtfSent             0,\n          pcePcepPeerNumPCNtfRcvd
      \            0,\n          pcePcepPeerNumKeepaliveSent         123,\n          pcePcepPeerNumKeepaliveRcvd
      \        123,\n          pcePcepPeerNumUnknownRcvd           0,\n          pcePcepPeerNumCorruptRcvd
      \          0,\n          pcePcepPeerNumReqSent               0,\n          pcePcepPeerNumSvecSent
      \             0,\n          pcePcepPeerNumSvecReqSent           0,\n          pcePcepPeerNumReqSentPendRep
      \       0,\n          pcePcepPeerNumReqSentEroRcvd        0,\n          pcePcepPeerNumReqSentNoPathRcvd
      \    0,\n          pcePcepPeerNumReqSentCancelRcvd     0,\n          pcePcepPeerNumReqSentErrorRcvd
      \     0,\n          pcePcepPeerNumReqSentTimeout        0,\n          pcePcepPeerNumReqSentCancelSent
      \    0,\n          pcePcepPeerNumReqSentClosed         0,\n          pcePcepPeerNumReqRcvd
      \              4,\n          pcePcepPeerNumSvecRcvd              0,\n          pcePcepPeerNumSvecReqRcvd
      \          0,\n          pcePcepPeerNumReqRcvdPendRep        0,\n          pcePcepPeerNumReqRcvdEroSent
      \       3,\n          pcePcepPeerNumReqRcvdNoPathSent     1,\n          pcePcepPeerNumReqRcvdCancelSent
      \    0,\n          pcePcepPeerNumReqRcvdErrorSent      0,\n          pcePcepPeerNumReqRcvdCancelRcvd
      \    0,\n          pcePcepPeerNumReqRcvdClosed         0,\n          pcePcepPeerNumRepRcvdUnknown
      \       0,\n          pcePcepPeerNumReqRcvdUnknown        0\n      }\n   In
      pcePcepSessTable {\n          pcePcepSessInitiator                local(1),
      --PCE1\n          pcePcepSessStateLastChange          TimeStamp,\n          pcePcepSessState
      \                   sessionUp(4),\n          pcePcepSessConnectRetry             0,\n
      \         pcePcepSessLocalID                  1,\n          pcePcepSessRemoteID
      \                2,\n          pcePcepSessKeepaliveTimer           1,\n          pcePcepSessPeerKeepaliveTimer
      \      1,\n          pcePcepSessDeadTimer                4,\n          pcePcepSessPeerDeadTimer
      \           4,\n          pcePcepSessKAHoldTimeRem            1,\n          pcePcepSessOverloaded
      \              false(0),\n          pcePcepSessOverloadTime             0,\n
      \         pcePcepSessPeerOverloaded           false(0),\n          pcePcepSessPeerOverloadTime
      \        0,\n          pcePcepSessDiscontinuityTime        TimeStamp,\n          pcePcepSessAvgRspTime
      \              0,\n          pcePcepSessLWMRspTime               0,\n          pcePcepSessHWMRspTime
      \              0,\n          pcePcepSessNumPCReqSent             0,\n          pcePcepSessNumPCReqRcvd
      \            0,\n          pcePcepSessNumPCRepSent             0,\n          pcePcepSessNumPCRepRcvd
      \            0,\n          pcePcepSessNumPCErrSent             0,\n          pcePcepSessNumPCErrRcvd
      \            0,\n          pcePcepSessNumPCNtfSent             0,\n          pcePcepSessNumPCNtfRcvd
      \            0,\n          pcePcepSessNumKeepaliveSent         123,\n          pcePcepSessNumKeepaliveRcvd
      \        123,\n          pcePcepSessNumUnknownRcvd           0,\n          pcePcepSessNumCorruptRcvd
      \          0,\n          pcePcepSessNumReqSent               0,\n          pcePcepSessNumSvecSent
      \             0,\n          pcePcepSessNumSvecReqSent           0,\n          pcePcepSessNumReqSentPendRep
      \       0,\n          pcePcepSessNumReqSentEroRcvd        0,\n          pcePcepSessNumReqSentNoPathRcvd
      \    0,\n          pcePcepSessNumReqSentCancelRcvd     0,\n          pcePcepSessNumReqSentErrorRcvd
      \     0,\n          pcePcepSessNumReqSentTimeout        0,\n          pcePcepSessNumReqSentCancelSent
      \    0,\n          pcePcepSessNumReqRcvd               0,\n          pcePcepSessNumSvecRcvd
      \             0,\n          pcePcepSessNumSvecReqRcvd           0,\n          pcePcepSessNumReqRcvdPendRep
      \       0,\n          pcePcepSessNumReqRcvdEroSent        0,\n          pcePcepSessNumReqRcvdNoPathSent
      \    0,\n          pcePcepSessNumReqRcvdCancelSent     0,\n          pcePcepSessNumReqRcvdErrorSent
      \     0,\n          pcePcepSessNumReqRcvdCancelRcvd     0,\n          pcePcepSessNumRepRcvdUnknown
      \       0,\n          pcePcepSessNumReqRcvdUnknown        0\n      },\n      {\n
      \         pcePcepSessInitiator                remote(2), --PCCa\n          pcePcepSessStateLastChange
      \         TimeStamp,\n          pcePcepSessState                    sessionUp(4),\n
      \         pcePcepSessConnectRetry             0,\n          pcePcepSessLocalID
      \                 2,\n          pcePcepSessRemoteID                 1,\n          pcePcepSessKeepaliveTimer
      \          1,\n          pcePcepSessPeerKeepaliveTimer       1,\n          pcePcepSessDeadTimer
      \               4,\n          pcePcepSessPeerDeadTimer            4,\n          pcePcepSessKAHoldTimeRem
      \           1,\n          pcePcepSessOverloaded               false(0),\n          pcePcepSessOverloadTime
      \            0,\n          pcePcepSessPeerOverloaded           false(0),\n          pcePcepSessPeerOverloadTime
      \        0,\n          pcePcepSessDiscontinuityTime        TimeStamp,\n          pcePcepSessAvgRspTime
      \              200,\n          pcePcepSessLWMRspTime               100,\n          pcePcepSessHWMRspTime
      \              300,\n          pcePcepSessNumPCReqSent             0,\n          pcePcepSessNumPCReqRcvd
      \            1,\n          pcePcepSessNumPCRepSent             1,\n          pcePcepSessNumPCRepRcvd
      \            0,\n          pcePcepSessNumPCErrSent             0,\n          pcePcepSessNumPCErrRcvd
      \            0,\n          pcePcepSessNumPCNtfSent             0,\n          pcePcepSessNumPCNtfRcvd
      \            0,\n          pcePcepSessNumKeepaliveSent         123,\n          pcePcepSessNumKeepaliveRcvd
      \        123,\n          pcePcepSessNumUnknownRcvd           0,\n          pcePcepSessNumCorruptRcvd
      \          0,\n          pcePcepSessNumReqSent               0,\n          pcePcepSessNumSvecSent
      \             0,\n          pcePcepSessNumSvecReqSent           0,\n          pcePcepSessNumReqSentPendRep
      \       0,\n          pcePcepSessNumReqSentEroRcvd        0,\n          pcePcepSessNumReqSentNoPathRcvd
      \    0,\n          pcePcepSessNumReqSentCancelRcvd     0,\n          pcePcepSessNumReqSentErrorRcvd
      \     0,\n          pcePcepSessNumReqSentTimeout        0,\n          pcePcepSessNumReqSentCancelSent
      \    0,\n          pcePcepSessNumReqRcvd               3,\n          pcePcepSessNumSvecRcvd
      \             0,\n          pcePcepSessNumSvecReqRcvd           0,\n          pcePcepSessNumReqRcvdPendRep
      \       0,\n          pcePcepSessNumReqRcvdEroSent        3,\n          pcePcepSessNumReqRcvdNoPathSent
      \    0,\n          pcePcepSessNumReqRcvdCancelSent     0,\n          pcePcepSessNumReqRcvdErrorSent
      \     0,\n          pcePcepSessNumReqRcvdCancelRcvd     0,\n          pcePcepSessNumRepRcvdUnknown
      \       0,\n          pcePcepSessNumReqRcvdUnknown        0\n      },\n      {\n
      \         pcePcepSessInitiator                remote(2), --PCCb\n          pcePcepSessStateLastChange
      \         TimeStamp,\n          pcePcepSessState                    sessionUp(4),\n
      \         pcePcepSessConnectRetry             0,\n          pcePcepSessLocalID
      \                 2,\n          pcePcepSessRemoteID                 1,\n          pcePcepSessKeepaliveTimer
      \          1,\n          pcePcepSessPeerKeepaliveTimer       1,\n          pcePcepSessDeadTimer
      \               4,\n          pcePcepSessPeerDeadTimer            4,\n          pcePcepSessKAHoldTimeRem
      \           1,\n          pcePcepSessOverloaded               false(0),\n          pcePcepSessOverloadTime
      \            0,\n          pcePcepSessPeerOverloaded           false(0),\n          pcePcepSessPeerOverloadTime
      \        0,\n          pcePcepSessDiscontinuityTime        TimeStamp,\n          pcePcepSessAvgRspTime
      \              200,\n          pcePcepSessLWMRspTime               100,\n          pcePcepSessHWMRspTime
      \              300,\n          pcePcepSessNumPCReqSent             0,\n          pcePcepSessNumPCReqRcvd
      \            4,\n          pcePcepSessNumPCRepSent             4,\n          pcePcepSessNumPCRepRcvd
      \            0,\n          pcePcepSessNumPCErrSent             0,\n          pcePcepSessNumPCErrRcvd
      \            0,\n          pcePcepSessNumPCNtfSent             0,\n          pcePcepSessNumPCNtfRcvd
      \            0,\n          pcePcepSessNumKeepaliveSent         123,\n          pcePcepSessNumKeepaliveRcvd
      \        123,\n          pcePcepSessNumUnknownRcvd           0,\n          pcePcepSessNumCorruptRcvd
      \          0,\n          pcePcepSessNumReqSent               0,\n          pcePcepSessNumSvecSent
      \             0,\n          pcePcepSessNumSvecReqSent           0,\n          pcePcepSessNumReqSentPendRep
      \       0,\n          pcePcepSessNumReqSentEroRcvd        0,\n          pcePcepSessNumReqSentNoPathRcvd
      \    0,\n          pcePcepSessNumReqSentCancelRcvd     0,\n          pcePcepSessNumReqSentErrorRcvd
      \     0,\n          pcePcepSessNumReqSentTimeout        0,\n          pcePcepSessNumReqSentCancelSent
      \    0,\n          pcePcepSessNumReqRcvd               4,\n          pcePcepSessNumSvecRcvd
      \             0,\n          pcePcepSessNumSvecReqRcvd           0,\n          pcePcepSessNumReqRcvdPendRep
      \       0,\n          pcePcepSessNumReqRcvdEroSent        3,\n          pcePcepSessNumReqRcvdNoPathSent
      \    1,\n          pcePcepSessNumReqRcvdCancelSent     0,\n          pcePcepSessNumReqRcvdErrorSent
      \     0,\n          pcePcepSessNumReqRcvdCancelRcvd     0,\n          pcePcepSessNumRepRcvdUnknown
      \       0,\n          pcePcepSessNumReqRcvdUnknown        0\n      }\n"
    title: A.1.  Contents of PCEP MIB Module at PCE2
  - contents:
    - "A.2.  Contents of PCEP MIB Module at PCCb\n   At PCCb, there is a single local
      PCEP entity that has two peers (PCE2\n   and PCE3).  There is a session active
      to PCE2, but the session to\n   PCE3 is currently down.\n   The contents of
      the PCEP MIB module as read at PCCb are as follows.\n   In pcePcepEntityTable
      \ {\n          pcePcepEntityIndex                1,\n          pcePcepEntityAdminStatus
      \         adminStatusUp(1),\n          pcePcepEntityOperStatus           operStatusUp(1),\n
      \         pcePcepEntityAddrType             ipv4(1),\n          pcePcepEntityAddr
      \                22.22.22.22, -- PCCb\n          pcePcepEntityConnectTimer         60,\n
      \         pcePcepEntityConnectMaxRetry      5,\n          pcePcepEntityInitBackoffTimer
      \    30,\n          pcePcepEntityMaxBackoffTimer      3600,\n          pcePcepEntityOpenWaitTimer
      \       60,\n          pcePcepEntityKeepWaitTimer        60,\n          pcePcepEntityKeepAliveTimer
      \      1,\n          pcePcepEntityDeadTimer            4,\n          pcePcepEntityAllowNegotiation
      \    true(1),\n          pcePcepEntityMaxKeepAliveTimer    60,\n          pcePcepEntityMaxDeadTimer
      \        240,\n          pcePcepEntityMinKeepAliveTimer    1,\n          pcePcepEntityMinDeadTimer
      \        4,\n          pcePcepEntitySyncTimer            60,\n          pcePcepEntityRequestTimer
      \        120,\n          pcePcepEntityMaxSessions          999,\n          pcePcepEntityMaxUnknownReqs
      \      5,\n          pcePcepEntityMaxUnknownMsgs       5\n      }\n   In pcePcepPeerTable
      {\n          pcePcepPeerAddrType                 ipv4(1), --PCE2\n          pcePcepPeerAddr
      \                    2.2.2.2,\n          pcePcepPeerRole                     pce(2),\n
      \         pcePcepPeerDiscontinuityTime        TimeStamp,\n          pcePcepPeerInitiateSession
      \         true(1),\n          pcePcepPeerSessionExists            true(1)),\n
      \         pcePcepPeerNumSessSetupOK           0,\n          pcePcepPeerNumSessSetupFail
      \        1,\n          pcePcepPeerSessionUpTime            TimeStamp,\n          pcePcepPeerSessionFailTime
      \         TimeStamp,\n          pcePcepPeerSessionFailUpTime        TimeStamp,\n
      \         pcePcepPeerAvgRspTime               0,\n          pcePcepPeerLWMRspTime
      \              0,\n          pcePcepPeerHWMRspTime               0,\n          pcePcepPeerNumPCReqSent
      \            4,\n          pcePcepPeerNumPCReqRcvd             0,\n          pcePcepPeerNumPCRepSent
      \            0,\n          pcePcepPeerNumPCRepRcvd             4,\n          pcePcepPeerNumPCErrSent
      \            0,\n          pcePcepPeerNumPCErrRcvd             0,\n          pcePcepPeerNumPCNtfSent
      \            0,\n          pcePcepPeerNumPCNtfRcvd             0,\n          pcePcepPeerNumKeepaliveSent
      \        0,\n          pcePcepPeerNumKeepaliveRcvd         0,\n          pcePcepPeerNumUnknownRcvd
      \          0,\n          pcePcepPeerNumCorruptRcvd           0,\n          pcePcepPeerNumReqSent
      \              4,\n          pcePcepPeerNumSvecSent              0,\n          pcePcepPeerNumSvecReqSent
      \          0,\n          pcePcepPeerNumReqSentPendRep        0,\n          pcePcepPeerNumReqSentEroRcvd
      \       3,\n          pcePcepPeerNumReqSentNoPathRcvd     1,\n          pcePcepPeerNumReqSentCancelRcvd
      \    0,\n          pcePcepPeerNumReqSentErrorRcvd      0,\n          pcePcepPeerNumReqSentTimeout
      \       0,\n          pcePcepPeerNumReqSentCancelSent     0,\n          pcePcepPeerNumReqSentClosed
      \        0,\n          pcePcepPeerNumReqRcvd               0,\n          pcePcepPeerNumSvecRcvd
      \             0,\n          pcePcepPeerNumSvecReqRcvd           0,\n          pcePcepPeerNumReqRcvdPendRep
      \       0,\n          pcePcepPeerNumReqRcvdEroSent        0,\n          pcePcepPeerNumReqRcvdNoPathSent
      \    0,\n          pcePcepPeerNumReqRcvdCancelSent     0,\n          pcePcepPeerNumReqRcvdErrorSent
      \     0,\n          pcePcepPeerNumReqRcvdCancelRcvd     0,\n          pcePcepPeerNumReqRcvdClosed
      \        0,\n          pcePcepPeerNumRepRcvdUnknown        0,\n          pcePcepPeerNumReqRcvdUnknown
      \       0\n      },\n      {\n          pcePcepPeerAddrType                 ipv4(1),
      \ --PCE3\n          pcePcepPeerAddr                     3.3.3.3,\n          pcePcepPeerRole
      \                    pce(2),\n          pcePcepPeerDiscontinuityTime        TimeStamp,\n
      \         pcePcepPeerInitiateSession          true(1),\n          pcePcepPeerSessionExists
      \           false(0),\n          pcePcepPeerNumSessSetupOK           1,\n          pcePcepPeerNumSessSetupFail
      \        0,\n          pcePcepPeerSessionUpTime            TimeStamp,\n          pcePcepPeerSessionFailTime
      \         TimeStamp,\n          pcePcepPeerSessionFailUpTime        TimeStamp,\n
      \         pcePcepPeerAvgRspTime               200,\n          pcePcepPeerLWMRspTime
      \              100,\n          pcePcepPeerHWMRspTime               300,\n          pcePcepPeerNumPCReqSent
      \            4,\n          pcePcepPeerNumPCReqRcvd             0,\n          pcePcepPeerNumPCRepSent
      \            0,\n          pcePcepPeerNumPCRepRcvd             3,\n          pcePcepPeerNumPCErrSent
      \            0,\n          pcePcepPeerNumPCErrRcvd             0,\n          pcePcepPeerNumPCNtfSent
      \            0,\n          pcePcepPeerNumPCNtfRcvd             0,\n          pcePcepPeerNumKeepaliveSent
      \        123,\n          pcePcepPeerNumKeepaliveRcvd         123,\n          pcePcepPeerNumUnknownRcvd
      \          0,\n          pcePcepPeerNumCorruptRcvd           0,\n          pcePcepPeerNumReqSent
      \              4,\n          pcePcepPeerNumSvecSent              0,\n          pcePcepPeerNumSvecReqSent
      \          0,\n          pcePcepPeerNumReqSentPendRep        0,\n          pcePcepPeerNumReqSentEroRcvd
      \       3,\n          pcePcepPeerNumReqSentNoPathRcvd     0,\n          pcePcepPeerNumReqSentCancelRcvd
      \    0,\n          pcePcepPeerNumReqSentErrorRcvd      0,\n          pcePcepPeerNumReqSentTimeout
      \       0,\n          pcePcepPeerNumReqSentCancelSent     0,\n          pcePcepPeerNumReqSentClosed
      \        1,\n          pcePcepPeerNumReqRcvd               0,\n          pcePcepPeerNumSvecRcvd
      \             0,\n          pcePcepPeerNumSvecReqRcvd           0,\n          pcePcepPeerNumReqRcvdPendRep
      \       0,\n          pcePcepPeerNumReqRcvdEroSent        0,\n          pcePcepPeerNumReqRcvdNoPathSent
      \    0,\n          pcePcepPeerNumReqRcvdCancelSent     0,\n          pcePcepPeerNumReqRcvdErrorSent
      \     0,\n          pcePcepPeerNumReqRcvdCancelRcvd     0,\n          pcePcepPeerNumReqRcvdClosed
      \        0,\n          pcePcepPeerNumRepRcvdUnknown        0,\n          pcePcepPeerNumReqRcvdUnknown
      \       0\n      }\n   In pcePcepSessTable {\n          pcePcepSessInitiator
      \               local(1), --PCE2\n          pcePcepSessStateLastChange          TimeStamp,\n
      \         pcePcepSessState                    sessionUp(4),\n          pcePcepSessConnectRetry
      \            0,\n          pcePcepSessLocalID                  1,\n          pcePcepSessRemoteID
      \                1,\n          pcePcepSessKeepaliveTimer           1,\n          pcePcepSessPeerKeepaliveTimer
      \      1,\n          pcePcepSessDeadTimer                4,\n          pcePcepSessPeerDeadTimer
      \           4,\n          pcePcepSessKAHoldTimeRem            1,\n          pcePcepSessOverloaded
      \              false(0),\n          pcePcepSessOverloadTime             0,\n
      \         pcePcepSessPeerOverloaded           false(0),\n          pcePcepSessPeerOverloadTime
      \        0,\n          pcePcepSessDiscontinuityTime        TimeStamp,\n          pcePcepSessAvgRspTime
      \              200,\n          pcePcepSessLWMRspTime               100,\n          pcePcepSessHWMRspTime
      \              300,\n          pcePcepSessNumPCReqSent             4,\n          pcePcepSessNumPCReqRcvd
      \            0,\n          pcePcepSessNumPCRepSent             0,\n          pcePcepSessNumPCRepRcvd
      \            4,\n          pcePcepSessNumPCErrSent             0,\n          pcePcepSessNumPCErrRcvd
      \            0,\n          pcePcepSessNumPCNtfSent             0,\n          pcePcepSessNumPCNtfRcvd
      \            0,\n          pcePcepSessNumKeepaliveSent         123,\n          pcePcepSessNumKeepaliveRcvd
      \        123,\n          pcePcepSessNumUnknownRcvd           0,\n          pcePcepSessNumCorruptRcvd
      \          0,\n          pcePcepSessNumReqSent               4,\n          pcePcepSessNumSvecSent
      \             0,\n          pcePcepSessNumSvecReqSent           0,\n          pcePcepSessNumReqSentPendRep
      \       0,\n          pcePcepSessNumReqSentEroRcvd        3,\n          pcePcepSessNumReqSentNoPathRcvd
      \    1,\n          pcePcepSessNumReqSentCancelRcvd     0,\n          pcePcepSessNumReqSentErrorRcvd
      \     0,\n          pcePcepSessNumReqSentTimeout        0,\n          pcePcepSessNumReqSentCancelSent
      \    0,\n          pcePcepSessNumReqRcvd               0,\n          pcePcepSessNumSvecRcvd
      \             0,\n          pcePcepSessNumSvecReqRcvd           0,\n          pcePcepSessNumReqRcvdPendRep
      \       0,\n          pcePcepSessNumReqRcvdEroSent        0,\n          pcePcepSessNumReqRcvdNoPathSent
      \    0,\n          pcePcepSessNumReqRcvdCancelSent     0,\n          pcePcepSessNumReqRcvdErrorSent
      \     0,\n          pcePcepSessNumReqRcvdCancelRcvd     0,\n          pcePcepSessNumRepRcvdUnknown
      \       0,\n          pcePcepSessNumReqRcvdUnknown        0\n      }\n      --
      no session to PCE3\n Acknowledgements\n   The authors would like to thank Santanu
      Mazumder, Meral Shirazipour,\n   and Adrian Farrel for their valuable input.\n"
    title: A.2.  Contents of PCEP MIB Module at PCCb
  title: Appendix A.  PCEP MIB Module Example
- contents:
  - "Contributors\n   Dhruv Dhody\n   Huawei Technologies\n   Leela Palace\n   Bangalore,
    Karnataka  560008\n   India\n   EMail: dhruv.ietf@gmail.com\n"
  title: Contributors
- contents:
  - "Authors' Addresses\n   Agrahara Kiran Koushik\n   Brocade Communications, Inc.\n
    \  EMail: kkoushik@brocade.com\n   Emile Stephan\n   Orange\n   2 Avenue Pierre
    Marzin\n   Lannion  F-22307\n   France\n   EMail: emile.stephan@orange.com\n   Quintin
    Zhao\n   Huawei Technology\n   125 Nagog Technology Park\n   Acton, MA  01719\n
    \  United States\n   EMail: qzhao@huawei.com\n   Daniel King\n   Old Dog Consulting\n
    \  EMail: daniel@olddog.co.uk\n   Jonathan Hardwick\n   Metaswitch\n   100 Church
    Street\n   Enfield  EN2 6BQ\n   United Kingdom\n   EMail: jonathan.hardwick@metaswitch.com\n"
  title: Authors' Addresses
