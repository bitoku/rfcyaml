- contents:
  - "         Transparent Interconnection of Lots of Links (TRILL):\n                         Fine-Grained
    Labeling\n"
  title: __initial_text__
- contents:
  - "Abstract\n   The IETF has standardized Transparent Interconnection of Lots of\n
    \  Links (TRILL), a protocol for least-cost transparent frame routing in\n   multi-hop
    networks with arbitrary topologies and link technologies,\n   using link-state
    routing and a hop count.  The TRILL base protocol\n   standard supports the labeling
    of TRILL Data packets with up to 4K\n   IDs.  However, there are applications
    that require a larger number of\n   labels providing configurable isolation of
    data.  This document\n   updates RFC 6325 by specifying optional extensions to
    the TRILL base\n   protocol to safely accomplish this.  These extensions, called
    fine-\n   grained labeling, are primarily intended for use in large data\n   centers,
    that is, those with more than 4K users requiring\n   configurable data isolation
    from each other.\n"
  title: Abstract
- contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This
    document is a product of the Internet Engineering Task Force\n   (IETF).  It represents
    the consensus of the IETF community.  It has\n   received public review and has
    been approved for publication by the\n   Internet Engineering Steering Group (IESG).
    \ Further information on\n   Internet Standards is available in Section 2 of RFC
    5741.\n   Information about the current status of this document, any errata,\n
    \  and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc7172.\n"
  title: Status of This Memo
- contents:
  - "Copyright Notice\n   Copyright (c) 2014 IETF Trust and the persons identified
    as the\n   document authors.  All rights reserved.\n   This document is subject
    to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n
    \  (http://trustee.ietf.org/license-info) in effect on the date of\n   publication
    of this document.  Please review these documents\n   carefully, as they describe
    your rights and restrictions with respect\n   to this document.  Code Components
    extracted from this document must\n   include Simplified BSD License text as described
    in Section 4.e of\n   the Trust Legal Provisions and are provided without warranty
    as\n   described in the Simplified BSD License.\n"
  title: Copyright Notice
- contents:
  - "Table of Contents\n   1. Introduction ....................................................4\n
    \     1.1. Terminology ................................................5\n      1.2.
    Contributors ...............................................5\n   2. Fine-Grained
    Labeling ...........................................5\n      2.1. Goals ......................................................6\n
    \     2.2. Base Protocol TRILL Data Labeling ..........................7\n      2.3.
    Fine-Grained Labeling (FGL) ................................7\n      2.4. Reasons
    for VL and FGL Coexistence .........................9\n   3. VL versus FGL Label
    Differences ................................10\n   4. FGL Processing .................................................11\n
    \     4.1. Ingress Processing ........................................11\n           4.1.1.
    Multi-Destination FGL Ingress ......................11\n      4.2. Transit Processing
    ........................................12\n           4.2.1. Unicast Transit
    Processing .........................12\n           4.2.2. Multi-Destination Transit
    Processing ...............12\n      4.3. Egress Processing .........................................13\n
    \     4.4. Appointed Forwarders and the DRB ..........................14\n      4.5.
    Distribution Tree Construction ............................14\n      4.6. Address
    Learning ..........................................15\n      4.7. ESADI Extension
    ...........................................15\n   5. FGL TRILL Interaction with
    VL TRILL ............................15\n      5.1. FGL and VL Mixed Campus ...................................15\n
    \     5.2. FGL and VL Mixed Links ....................................17\n      5.3.
    Summary of FGL-Safe Requirements ..........................18\n   6. IS-IS Extensions
    ...............................................19\n   7. Comparison with Goals
    ..........................................19\n   8. Allocation Considerations
    ......................................20\n      8.1. IEEE Allocation Considerations
    ............................20\n      8.2. IANA Considerations .......................................20\n
    \  9. Security Considerations ........................................20\n   Appendix
    A. Serial Unicast ........................................22\n   Appendix B. Mixed
    Campus Characteristics ..........................23\n      B.1. Mixed Campus with
    High Cost Adjacencies ...................23\n      B.2. Mixed Campus with Data
    Blocked Adjacencies ................24\n   Acknowledgements ..................................................25\n
    \  References ........................................................25\n      Normative
    References ...........................................25\n      Informative References
    .........................................26\n"
  title: Table of Contents
- contents:
  - "1.  Introduction\n   The IETF has standardized the Transparent Interconnection
    of Lots of\n   Links (TRILL) protocol [RFC6325], which provides a solution for\n
    \  least-cost transparent routing in multi-hop networks with arbitrary\n   topologies
    and link technologies, using [IS-IS] [RFC6165] [RFC7176]\n   link-state routing
    and a hop count.  TRILL switches are sometimes\n   called RBridges (Routing Bridges).\n
    \  The TRILL base protocol standard supports the labeling of TRILL Data\n   packets
    with up to 4K IDs.  However, there are applications that\n   require a larger
    number of labels of data for configurable isolation\n   based on different tenants,
    service instances, or the like.  This\n   document updates [RFC6325] by specifying
    optional extensions to the\n   TRILL base protocol to safely accomplish this.
    \ These extensions,\n   called fine-grained labeling, are primarily intended for
    use in large\n   data centers, that is, those with more than 4K users requiring\n
    \  configurable data isolation from each other.\n   This document describes a
    format for allowing a data label of\n   24 bits, known as a \"fine-grained label\",
    or FGL.  It also describes\n   coexistence and migration from current RBridges,
    known as \"VL\" (for\n   \"VLAN Labeled\") RBridges, to TRILL switches that can
    support FGL\n   (\"Fine-Grained Labeled\") packets.  Because various VL implementations\n
    \  might handle FGL packets incorrectly, FGL packets cannot be\n   introduced
    until either all VL RBridges are upgraded to what we will\n   call \"FGL-safe\",
    which means that they will not \"do anything bad\"\n   with FGL packets, or all
    FGL RBridges take special precautions on any\n   port by which they are connected
    to a VL RBridge.  FGL-safe\n   requirements are summarized in Section 5.3.\n   It
    is hoped that many RBridges can become FGL-safe through a software\n   upgrade.
    \ VL RBridges and FGL-safe RBridges can coexist without any\n   disruption to
    service, as long as no FGL packets are introduced.\n   If all RBridges are upgraded
    to FGL-safe, FGL traffic can be\n   successfully handled by the campus without
    any topology restrictions.\n   The existence of FGL traffic is known to all FGL
    RBridges because\n   some RBridge (say, RB3) that might source or sink FGL traffic
    will\n   advertise interest in one or more fine-grained labels in its\n   contribution
    to the link state (its LSP).  If any VL RBridges remain\n   at the point when
    any RBridge announces that it might source or sink\n   FGL traffic, the adjacent
    FGL-safe RBridges MUST ensure that no FGL\n   packets are forwarded to their VL
    RBridge neighbor(s).  The details\n   are specified in Section 5.1 below.\n"
  - contents:
    - "1.1.  Terminology\n   The terminology and acronyms of [RFC6325] are used in
      this document\n   with the additions listed below.\n      DEI - Drop Eligibility
      Indicator [802.1Q].\n      FGL - Fine-Grained Labeling or Fine-Grained Labeled
      or\n            Fine-Grained Label.\n      FGL-edge - An FGL TRILL switch advertising
      interest in an FGL\n            label.\n      FGL link - A link where all of
      the attached TRILL switches are\n            FGL.\n      FGL-safe - A TRILL
      switch that can safely be given an FGL data\n            packet, as summarized
      in Section 5.3.\n      RBridge - Alternative name for a TRILL switch.\n      TRILL
      switch - Alternative name for an RBridge.\n      VL - VLAN Labeling or VLAN
      Labeled or VLAN Label.\n      VL link - A link where any one or more of the
      attached RBridges\n            are VL.\n      VL RBridge - A TRILL switch that
      supports VL but is not FGL-safe.\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\",
      \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\",
      and \"OPTIONAL\" in this\n   document are to be interpreted as described in
      [RFC2119].\n"
    title: 1.1.  Terminology
  - contents:
    - "1.2.  Contributors\n   Thanks for the contributions of the following:\n      Tissa
      Senevirathne and Jon Hudson\n"
    title: 1.2.  Contributors
  title: 1.  Introduction
- contents:
  - "2.  Fine-Grained Labeling\n   The essence of Fine-Grained Labeling (FGL) is that
    (a) when frames\n   are ingressed or created they may incorporate a data label
    from a set\n   consisting of significantly more than 4K labels, (b) TRILL switch\n
    \  ports can be labeled with a set of such fine-grained data labels,\n   and (c)
    an FGL TRILL Data packet cannot be egressed through a TRILL\n   switch port unless
    its fine-grained label (FGL) matches one of the\n   data labels of the port.\n
    \  Section 2.1 lists FGL goals.  Section 2.2 briefly outlines the more\n   coarse
    TRILL base protocol standard [RFC6325] data labeling.\n   Section 2.3 outlines
    FGL for TRILL Data packets.  Section 2.4\n   discusses VL and FGL coexistence.\n"
  - contents:
    - "2.1.  Goals\n   There are several goals that would be desirable for FGL TRILL.
      \ They\n   are briefly described in the list below in approximate order by\n
      \  priority, with the most important first.\n   1. Fine-Grained\n      Some
      networks have a large number of entities that need\n      configurable isolation,
      whether those entities are independent\n      customers, applications, or branches
      of a single endeavor or some\n      combination of these or other entities.
      \ The labeling supported by\n      [RFC6325] provides for only 2**12 - 2 valid
      identifiers or labels\n      (VLANs).  A substantially larger number is required.\n
      \  2. Silicon\n      Fine-grained labeling (FGL) should, to the extent practical,
      use\n      existing features, processing, and fields that are already\n      supported
      in many fast path silicon implementations that support\n      the TRILL base
      protocol.\n   3. Base RBridge Interoperation\n      To support some incremental
      conversion scenarios, it is desirable\n      that not all RBridges in a campus
      using FGL be required to be FGL\n      aware.  That is, it is desirable if RBridges
      not implementing the\n      FGL features can exchange VL TRILL Data packets
      with FGL TRILL\n      switches.\n   4. Alternate Priority\n      Under some
      circumstances, it would be desirable for traffic from\n      an attached non-TRILL
      network to be handled, while transiting a\n      TRILL network, with a different
      priority from the priority of the\n      original native frames.  This could
      be accomplished by the ingress\n      TRILL switch assigning a different priority
      to the FGL TRILL Data\n      packet resulting from ingressing the native frames.
      \ The original\n      priority should be restored on egress.\n"
    title: 2.1.  Goals
  - contents:
    - "2.2.  Base Protocol TRILL Data Labeling\n   This section provides a brief review
      of the [RFC6325] TRILL Data\n   packet VL Labeling and changes the description
      of the TRILL Header by\n   moving the point at which the TRILL Header ends.
      \ This change in\n   description does not involve any change in the bits on
      the wire or in\n   the behavior of VL TRILL switches.\n   VL TRILL Data packets
      have the structure shown below:\n               +-------------------------------------------+\n
      \              | Link Header (depends on link technology)  |\n               |
      \ (if link is an Ethernet link, the link   |\n               |  header may include
      an Outer.VLAN tag)    |\n               +-------------------------------------------+\n
      \              | TRILL Header                              |\n               |
      +---------------------------------------+ |\n               | |    Initial Fields
      and Options         | |\n               | +---------------------------------------+
      |\n               | |         Inner.MacDA         | (6 bytes) |\n               |
      +-----------------------------+           |\n               | |         Inner.MacSA
      \        | (6 bytes) |\n               | +-----------------------+-----+           |\n
      \              | | Ethertype 0x8100      |       (2 bytes) |\n               |
      +-----------------------+                 |\n               | | Inner.VLAN Label
      \     |       (2 bytes) |\n               | +-----------------------+                 |\n
      \              +-------------------------------------------+\n               |
      \              Native Payload              |\n               +-------------------------------------------+\n
      \              | Link Trailer (depends on link technology) |\n               +-------------------------------------------+\n
      \                      Figure 1: TRILL Data with VL\n   In the base protocol
      as specified in [RFC6325], the 0x8100 value is\n   always present and is followed
      by the Inner.VLAN field, which\n   includes the 12-bit VL.\n"
    title: 2.2.  Base Protocol TRILL Data Labeling
  - contents:
    - "2.3.  Fine-Grained Labeling (FGL)\n   FGL expands the variety of data labels
      available under the TRILL\n   protocol to include a fine-grained label (FGL)
      with a 12-bit high\n   order part and a 12-bit low order part.  In this document,
      FGLs are\n   denoted as \"(X.Y)\", where X is the high order part and Y is the
      low\n   order part of the FGL.\n   FGL TRILL Data packets have the structure
      shown below.\n               +-------------------------------------------+\n
      \              | Link Header (depends on link technology)  |\n               |
      \ (if link is an Ethernet link, the link   |\n               |  header may include
      an Outer.VLAN tag)    |\n               +-------------------------------------------+\n
      \              | TRILL Header                              |\n               |
      +---------------------------------------+ |\n               | |    Initial Fields
      and Options         | |\n               | +---------------------------------------+
      |\n               | |         Inner.MacDA         | (6 bytes) |\n               |
      +-----------------------------+           |\n               | |         Inner.MacSA
      \        | (6 bytes) |\n               | +-----------------------+-----+           |\n
      \              | | Ethertype 0x893B      |       (2 bytes) |\n               |
      +-----------------------+                 |\n               | | Inner.Label
      High Part |       (2 bytes) |\n               | +-----------------------+                 |\n
      \              | | Ethertype 0x893B      |       (2 bytes) |\n               |
      +-----------------------+                 |\n               | | Inner.Label
      Low Part  |       (2 bytes) |\n               | +-----------------------+                 |\n
      \              +-------------------------------------------+\n               |
      \              Native Payload              |\n               +-------------------------------------------+\n
      \              | Link Trailer (depends on link technology) |\n               +-------------------------------------------+\n
      \                      Figure 2: TRILL Data with FGL\n   For FGL packets, the
      inner Media Access Control (MAC) address fields\n   are followed by the FGL
      information using 0x893B.  There MUST be two\n   occurrences of 0x893B, as shown.
      \ Should a TRILL switch processing an\n   FGL TRILL Data packet notice that
      the second occurrence is actually\n   some other value, it MUST discard the
      packet.  (A TRILL switch\n   transiting a TRILL Data packet is not required
      to examine any fields\n   past the initial fixed fields and options, although
      it may do so to\n   support Equal-Cost Multi-Path (ECMP) or distribution tree
      pruning.)\n   The two bytes following each 0x893B have, in their low order 12
      bits,\n   fine-grained label information.  The upper 4 bits of those two bytes\n
      \  are used for a 3-bit priority field and one Drop Eligibility\n   Indicator
      (DEI) bit as shown below.\n               0  1  2   3  4  5  6  7  8  9 10 11
      12 13 14 15\n             +--+--+--+---+--+--+--+--+--+--+--+--+--+--+--+--+\n
      \            |priority|DEI|    label information              |\n             +--+--+--+---+--+--+--+--+--+--+--+--+--+--+--+--+\n
      \                    Figure 3: FGL Part Data Structure\n   The priority field
      of the Inner.Label High Part is the priority used\n   for frame transport across
      the TRILL campus from ingress to egress.\n   The label bits in the Inner.Label
      High Part are the high order part\n   of the FGL, and those bits in the Inner.Label
      Low Part are the low\n   order part of the FGL.  The priority field of the Inner.Label
      Low\n   Part is remembered from the data frame as ingressed and is restored\n
      \  on egress.\n   The appropriate FGL value for an ingressed or locally originated\n
      \  native frame is determined by the ingress TRILL switch port as\n   specified
      in Section 4.1.\n"
    title: 2.3.  Fine-Grained Labeling (FGL)
  - contents:
    - "2.4.  Reasons for VL and FGL Coexistence\n   For several reasons, as listed
      below, it is desirable for FGL TRILL\n   switches to be able to handle both
      FGL and VL TRILL Data packets.\n   o  Continued support of VL packets means
      that, by taking the\n      precautions specified herein, in many cases such
      arrangements as\n      VL TRILL switches easily exchanging VL packets through
      a core of\n      FGL TRILL switches are possible.\n   o  Due to the way TRILL
      works, it may be desirable to have a\n      maintenance VLAN or FGL [RFC7174]
      in which all TRILL switches in\n      the campus indicate interest.  It will
      be simpler to use the same\n      type of label for all TRILL switches for this
      purpose.  That\n      implies using VL if there might be any VL TRILL switches
      in the\n      campus.\n   o  If a campus is being upgraded from VL to FGL, continued
      support of\n      VL allows long-term support of edges labeled as VL.\n"
    title: 2.4.  Reasons for VL and FGL Coexistence
  title: 2.  Fine-Grained Labeling
- contents:
  - "3.  VL versus FGL Label Differences\n   There are differences between the semantics
    across a TRILL campus for\n   TRILL Data packets that are data labeled with VL
    and FGL.\n   With VL, data label IDs have the same meaning throughout the campus\n
    \  and are from the same label space as the C-VLAN IDs used on Ethernet\n   links
    to end stations.\n   The larger FGL data label space is a different space from
    the VL data\n   label space.  For ports configured for FGL, the C-VLAN on an\n
    \  ingressed native frame is stripped and mapped to the FGL data label\n   space
    with a potentially different mapping for each port.  A similar\n   FGL-to-C-VLAN
    mapping occurs per port on egress.  Thus, for ports\n   configured for FGL, the
    native frame C-VLAN on one link corresponding\n   to an FGL can be different from
    the native frame C-VLAN corresponding\n   to that same FGL on a different link
    elsewhere in the campus or even\n   a different link attached to the same TRILL
    switch.  The FGL label\n   space is flat and does not hierarchically encode any
    particular\n   number of native frame C-VLAN bits or the like.  FGLs appear only\n
    \  inside TRILL Data packets after the inner MAC addresses.\n   It is the responsibility
    of the network manager to properly configure\n   the TRILL switches in the campus
    to obtain the desired mappings.\n   Such configuration is expected to be automatic
    in many cases, based\n   on configuration databases and orchestration systems.\n
    \  With FGL TRILL switches, many things remain the same because an FGL\n   can
    appear only as the Inner.Label inside a TRILL Data packet.  As\n   such, only
    TRILL-aware devices will see a fine-grained label.  The\n   Outer.VLAN that may
    appear on native frames and that may appear on\n   TRILL Data packets if they
    are on an Ethernet link can only be a\n   C-VLAN tag.  Thus, ports of FGL TRILL
    switches, up through the usual\n   VLAN and priority processing, act as they do
    for VL TRILL switches:\n   TRILL switch ports provide a C-VLAN ID for an incoming
    frame and\n   accept a C-VLAN ID for a frame being queued for output.  Appointed\n
    \  Forwarders [RFC6439] on a link are still appointed for a C-VLAN.  The\n   Designated
    VLAN for an Ethernet link is still a C-VLAN.\n   FGL TRILL switches have capabilities
    that are a superset of those for\n   VL TRILL switches.  FGL TRILL switch ports
    can be configured for FGL\n   or VL, with VL being the default.  As with a base
    protocol [RFC6325]\n   TRILL switch, an unconfigured FGL TRILL switch port reports
    an\n   untagged frame it receives as being in VLAN 1.\n"
  title: 3.  VL versus FGL Label Differences
- contents:
  - "4.  FGL Processing\n   This section specifies ingress, transit, egress, and other
    processing\n   details for FGL TRILL switches.  A transit or egress FGL TRILL
    switch\n   determines that a TRILL Data packet is FGL by detecting that the\n
    \  Inner.MacSA is followed by 0x893B.\n"
  - contents:
    - "4.1.  Ingress Processing\n   FGL-edge TRILL switch ports are configurable to
      ingress native frames\n   as FGL.  Any port not so configured performs the previously
      specified\n   [RFC6325] VL ingress processing on native frames resulting in
      a VL\n   TRILL Data packet.  (There is no change in Appointed Forwarder logic\n
      \  (see Section 4.4).)  An FGL-safe TRILL switch may have only VL ports,\n   in
      which case it is not required to support the capabilities for FGL\n   ingress
      described in this section.\n   FGL-edge TRILL switches support configurable
      per-port mapping from\n   the C-VLAN of a native frame, as reported by the ingress
      port, to an\n   FGL.  FGL TRILL switches MAY support other methods to determine
      the\n   FGL of an incoming native frame, such as methods based on the\n   protocol
      of the native frame or based on local knowledge.\n   The FGL ingress process
      MUST copy the priority and DEI (Drop\n   Eligibility Indicator) associated with
      an ingressed native frame to\n   the upper 4 bits of the Inner.Label Low Order
      part.  It SHOULD also\n   associate a possibly different mapped priority and
      DEI with an\n   ingressed frame, but a TRILL switch might not be able to do
      so\n   because of implementation limitations.  The mapped priority is placed\n
      \  in the Inner.Label High Part.  If such mapping is not supported, then\n   the
      original priority and DEI MUST be placed in the Inner.Label\n   High Part.\n"
    - contents:
      - "4.1.1.  Multi-Destination FGL Ingress\n   If a native frame that has a broadcast,
        multicast, or unknown MAC\n   destination address is FGL ingressed, it MUST
        be handled in one of\n   the following two ways.  The choice of which method
        to use can vary\n   from frame to frame, at the choice of the ingress TRILL
        switch.\n   1. Ingress as a TRILL multi-destination data packet (TRILL Header
        M\n      bit = 1) on a distribution tree rooted at a nickname held by an\n
        \     FGL RBridge or by the pseudonode of an FGL link.  FGL TRILL Data\n      packets
        MUST NOT be sent on a tree rooted at a nickname held by a\n      VL TRILL
        switch or by the pseudonode of a VL link.\n   2. Serially TRILL unicast the
        ingressed frame to the relevant egress\n      TRILL switches by using a known
        unicast TRILL Header (M bit = 0).\n      An FGL ingress TRILL switch SHOULD
        unicast a multi-destination\n      TRILL Data packet if there is only one
        relevant egress FGL TRILL\n      switch.  The relevant egress TRILL switches
        are determined by\n      starting with those announcing interest in the frame's
        (X.Y)\n      label.  That set SHOULD be further filtered based on multicast\n
        \     listener and multicast router attachment LSP announcements if the\n
        \     native frame was a multicast frame.\n   Using a TRILL unicast header
        for a multi-destination frame when it\n   has only one actual destination
        RBridge almost always improves\n   traffic spreading and decreases latency
        as discussed in Appendix A.\n   How to decide whether to use a distribution
        tree or serial unicast\n   for a multi-destination TRILL Data packet that
        has more than one\n   destination TRILL switch is beyond the scope of this
        document.\n"
      title: 4.1.1.  Multi-Destination FGL Ingress
    title: 4.1.  Ingress Processing
  - contents:
    - "4.2.  Transit Processing\n   Any FGL TRILL switch MUST be capable of TRILL
      Data packet transit\n   processing.  Such processing is fairly straightforward
      as described\n   in Section 4.2.1 for known unicast TRILL Data packets and in\n
      \  Section 4.2.2 for multi-destination TRILL Data packets.\n"
    - contents:
      - "4.2.1.  Unicast Transit Processing\n   There is very little change in TRILL
        Data packet unicast transit\n   processing.  A transit TRILL switch forwards
        any unicast TRILL Data\n   packet to the next hop towards the egress TRILL
        switch as specified\n   in the TRILL Header.  All transit TRILL switches MUST
        take the\n   priority and DEI used to forward a packet from the Inner.VLAN
        label\n   or the FGL Inner.Label High Part.  These bits are in the same place\n
        \  in the packet.\n   An FGL TRILL switch MUST properly distinguish flows
        if it provides\n   ECMP for unicast FGL TRILL Data packets.\n"
      title: 4.2.1.  Unicast Transit Processing
    - contents:
      - "4.2.2.  Multi-Destination Transit Processing\n   Multi-destination TRILL
        Data packets are forwarded on a distribution\n   tree selected by the ingress
        TRILL switch, except that an FGL ingress\n   TRILL switch MAY TRILL unicast
        such a frame to all relevant egress\n   TRILL switches, all as described in
        Section 4.1.  The distribution\n   trees do not distinguish between FGL and
        VL multi-destination\n   packets, except in pruning behavior if they provide
        pruning.  There\n   is no change in the Reverse Path Forwarding Check.\n   An
        FGL TRILL switch (say, RB1) having an FGL multi-destination frame\n   for
        label (X.Y) to forward on a distribution tree SHOULD prune that\n   tree based
        on whether there are any TRILL switches on a tree branch\n   that are advertising
        connectivity to label (X.Y).  In addition, RB1\n   SHOULD prune multicast
        frames based on reported multicast listener\n   and multicast router attachment
        in (X.Y).\n   Pruning is an optimization.  If a transit TRILL switch does
        less\n   pruning than it could, there may be greater link utilization than\n
        \  strictly necessary but the campus will still operate correctly.  A\n   transit
        TRILL switch MAY prune based on an arbitrary subset of the\n   bits in the
        FGL label, for example, only the High Part or only the\n   Low Part of the
        label.\n"
      title: 4.2.2.  Multi-Destination Transit Processing
    title: 4.2.  Transit Processing
  - contents:
    - "4.3.  Egress Processing\n   Egress processing is generally the reverse of ingress
      progressing\n   described in Section 4.1.  An FGL-safe TRILL switch may have
      only VL\n   ports, in which case it is not required to support the capabilities\n
      \  for FGL egress described in this section.\n   An FGL-edge TRILL switch MUST
      be able to convert, in a configurable\n   fashion, from the FGL in an FGL TRILL
      Data packet it is egressing to\n   the C-VLAN ID for the resulting native frame
      with different mappings\n   on a per-port basis.  The priority and DEI of the
      egressed native\n   frame are taken from the Inner.Label Low Order Part.  A
      port MAY be\n   configured to strip output VLAN tagging.\n   It is the responsibility
      of the network manager to properly configure\n   the TRILL switches in the campus
      to obtain the desired mappings.\n   FGL egress is similar to VL egress, as follows:\n
      \  1. If the Inner.MacDA is All-Egress-RBridges, special processing\n      applies,
      based on the payload Ethertype (for example, End-Station\n      Address Distribution
      Information (ESADI) [RFC6325] or RBridge\n      Channel [RFC7178]), and if the
      payload Ethertype is unknown, the\n      packet is discarded.  If the Inner.MacDA
      is not\n      All-Egress-RBridges, then either item 2 or item 3 below applies,\n
      \     as appropriate.\n   2. A known unicast FGL TRILL Data packet (TRILL Header
      M bit = 0)\n      with a unicast Inner.MacDA is egressed to the FGL port or
      ports\n      matching its FGL and Inner.MacDA.  If there are no such ports,
      it\n      is flooded out of all FGL ports that have its FGL, except any\n      ports
      for which the TRILL switch has knowledge that the frame's\n      Inner.MacDA
      cannot be present on the link out of that port.\n   3. A multi-destination FGL
      TRILL Data packet is decapsulated and\n      flooded out of all ports that have
      its FGL, subject to multicast\n      pruning.  The same processing applies to
      a unicast FGL TRILL Data\n      packet with a broadcast or multicast Inner.MacDA
      that might be\n      received due to serial unicast.\n   An FGL TRILL switch
      MUST NOT egress an FGL packet with label (X.Y) to\n   any port not configured
      with that FGL, even if the port is configured\n   to egress VL packets in VLAN
      X.\n   FGL TRILL switches MUST accept multi-destination TRILL Data packets\n
      \  that are sent to them as TRILL unicast packets (packets with the\n   TRILL
      Header M bit set to 0).  They locally egress such packets, if\n   appropriate,
      but MUST NOT forward them (other than egressing them as\n   native frames on
      their local links).\n"
    title: 4.3.  Egress Processing
  - contents:
    - "4.4.  Appointed Forwarders and the DRB\n   There is no change in adjacency
      [RFC7177], DRB (Designated RBridge)\n   election, or Appointed Forwarder logic
      [RFC6439] on a link,\n   regardless of whether some or all the ports on the
      link are for FGL\n   TRILL switches, with one exception: implementations SHOULD
      provide\n   that their default priority for a VL RBridge port to be the DRB
      is\n   less than their default priority for an FGL RBridge to be the DRB.\n
      \  This will assure that, in the unconfigured case, an FGL RBridge will\n   be
      elected DRB when using that implementation.\n"
    title: 4.4.  Appointed Forwarders and the DRB
  - contents:
    - "4.5.  Distribution Tree Construction\n   All distribution trees are calculated
      as provided for in the TRILL\n   base protocol standard [RFC6325] as updated
      by [RFC7180], with the\n   exception that the default tree root priority for
      a nickname held by\n   an FGL TRILL switch or an FGL link pseudonode is 0x9000.
      \ As a\n   result, they will be chosen in preference to VL nicknames in the\n
      \  absence of configuration.  If distribution tree roots are configured,\n   there
      MUST be at least one tree rooted at a nickname held by an FGL\n   TRILL switch
      or by an FGL link pseudonode.  If distribution tree\n   roots are misconfigured
      so there would not be such a tree, then the\n   highest priority FGL nickname
      to be a tree root is used to construct\n   an additional tree, regardless of
      configuration.  (VL TRILL switches\n   will not know about this additional distribution
      tree but, through\n   the use of Step (A) or (B) in Section 5.1, no VL TRILL
      switch should\n   ever receive a multi-destination TRILL Data packet using this\n
      \  additional tree.)\n"
    title: 4.5.  Distribution Tree Construction
  - contents:
    - "4.6.  Address Learning\n   An FGL TRILL switch learns addresses from the data
      plane on ports\n   configured for FGL based on the fine-grained label rather
      than the\n   native frame's VLAN.  Addresses learned from ingressed native frames\n
      \  on FGL ports are logically represented by { MAC address, FGL, port,\n   confidence,
      timer }, while remote addresses learned from egressing\n   FGL packets are logically
      represented by { MAC address, FGL, remote\n   TRILL switch nickname, confidence,
      timer }.\n"
    title: 4.6.  Address Learning
  - contents:
    - "4.7.  ESADI Extension\n   The TRILL ESADI (End-Station Address Distribution
      Information)\n   protocol is specified in [RFC6325] as optionally transmitting
      MAC\n   address connection information through TRILL Data packets between\n
      \  participating TRILL switches over the virtual link provided by the\n   TRILL
      multi-destination packet distribution mechanism.  In [RFC6325],\n   the VL to
      which an ESADI packet applies is indicated only by the\n   Inner.VLAN label,
      and no indication of that VL is allowed within the\n   ESADI payload.\n   ESADI
      is extended to support FGL by providing for the indication of\n   the FGL to
      which an ESADI packet applies only in the Inner.Label of\n   that packet, and
      no indication of that FGL is allowed within the\n   ESADI payload.\n"
    title: 4.7.  ESADI Extension
  title: 4.  FGL Processing
- contents:
  - "5.  FGL TRILL Interaction with VL TRILL\n   This section discusses mixing FGL-safe
    and VL TRILL switches in a\n   campus.  It does not apply if the campus is entirely
    FGL-safe or if\n   there are no FGL-edges.  Section 5.1 specifies what behaviors
    are\n   needed to render such mixed campuses safe.  See also Appendix B for a\n
    \  discussion of campus characteristics when these behaviors are in use.\n   Section
    5.2 gives details of link-local mixed behavior.\n   It is best, if possible, for
    VL TRILL switches to be upgraded to\n   FGL-safe before introducing FGL-edges
    (and therefore FGL data\n   packets).\n"
  - contents:
    - "5.1.  FGL and VL Mixed Campus\n   By definition, it is not possible for VL
      TRILL switches to safely\n   handle FGL traffic, even if the VL TRILL switch
      is only acting in the\n   transit capacity.  If a TRILL switch can safely transit
      FGL TRILL\n   Data packets, then it qualifies as FGL-safe but will still be
      assumed\n   to be VL until it advertises in its LSP that it is FGL-safe.\n   VL
      frames are required to have 0x8100 at the beginning of the data\n   label, where
      FGL frames have 0x893B.  VL TRILL switches conformant to\n   [RFC6325] should
      discard frames with this new value after the inner\n   MAC addresses.  However,
      if they do not discard such frames, they\n   could be confused and egress them
      into the wrong VLAN (see Section 9\n   below) or persistently reorder them due
      to miscomputing flows for\n   ECMP, or they could improperly prune their distribution
      if they are\n   multi-destination so that they would fail to reach some intended\n
      \  destinations.  Such difficulties are avoided by taking all practical\n   steps
      to minimize the chance of a VL TRILL switch handling an FGL\n   TRILL Data packet.
      \ These steps are specified below.\n   FGL-safe switches will report their FGL
      capability in LSPs.  Thus,\n   FGL-safe TRILL switches (and any management system
      with access to the\n   link-state database) will be able to detect the existence
      of TRILL\n   switches in the campus that do not support FGL.\n   Once a TRILL
      switch advertises an FGL-edge, any FGL-safe TRILL switch\n   (RB1 in this discussion)
      that observes, on one of its ports, a VL\n   RBridge on the link out of that
      port, MUST take Step (A) or (B) below\n   for that port and also take Step (C)
      further below.  (\"Observes\"\n   means that it has an adjacency to the VL TRILL
      switch that is in any\n   state other than Down [RFC7177] and holds an LSP fragment
      zero for\n   it, showing that it is not FGL-safe.)  Finally, for there to be
      full\n   FGL connectivity, the campus topology must be such that all FGL TRILL\n
      \  switches are reachable from all other FGL TRILL switches without\n   going
      through a VL TRILL switch.\n   (A) If RB1 can discard any FGL TRILL Data packet
      that would be output\n       through a port where it observes a VL RBridge,
      while allowing the\n       output of VL TRILL Data packets through that port,
      then\n       A1. RB1 MUST so discard all FGL TRILL Data output packets that\n
      \          would otherwise be output through the port, and\n       A2. For all
      adjacencies out of that port (even adjacencies to\n           other FGL RBridges
      or a pseudonode) in the Report state\n           [RFC7177], RB1 MUST report
      that adjacency cost as 2**23\n           greater than it would have otherwise
      reported, but not more\n           than 2**24 - 2 (the highest link cost still
      usable in least-\n           cost path calculations and distribution tree construction).\n
      \          This assures that if any path through FGL-safe TRILL switches\n           exists,
      such a path will be computed.\n   (B) If RB1 cannot discard any FGL TRILL Data
      packet that would be\n       output through a port where it observes a VL RBridge
      while\n       allowing VL TRILL Data packets, then RB1 MUST, for all\n       adjacencies
      out of that port (even adjacencies to other FGL-safe\n       RBridges or a pseudonode)
      in the Report state [RFC7177], report\n       the adjacency cost as 2**24 -
      1.  As specified in IS-IS\n       [RFC5305], that cost will stop the adjacency
      from being used in\n       least-cost path calculations, including distribution
      tree\n       construction (see Section 2.1 of [RFC7180]) but will still leave\n
      \      it visible in the topology and usable, for example, by any\n       traffic
      engineered path mechanism.\n   (C) The roots for all distribution trees used
      for FGL TRILL Data\n       packets must be nicknames held by an FGL-safe TRILL
      switch or by\n       a pseudonode representing an FGL link.  As provided in\n
      \      Section 4.5, there will always be such a distribution tree.\n   Using
      the increased adjacency cost specified in part A2 of Step (A)\n   above, VL
      links will be avoided unless no other path is available for\n   typical data
      center link speeds using the default link cost\n   determination method specified
      in Item 1 of Section 4.2.4.4 of\n   [RFC6325].  However, if links have low speed
      (such as about\n   100 megabits/second or less) or some non-default method is
      used for\n   determining link costs, then link costs MUST be adjusted such that
      no\n   adjacency between FGL-safe TRILL switches has a cost greater than\n   200,000.\n
      \  To summarize, for a mixed TRILL campus to be safe once FGL-edges are\n   introduced,
      it is essential that the steps above be followed by\n   FGL-safe RBridges, to
      ensure that paths between such RBridges do not\n   include VL RBridges, and
      to ensure that FGL packets are never\n   forwarded to VL RBridges.  That is,
      all FGL-safe switches MUST do\n   Step (A) or (B) for any port out of which
      they observe a VL RBridge\n   neighbor.  Also, for full FGL connectivity, all
      FGL-safe TRILL\n   switches MUST do Step (C) and be connected in a single FGL
      contiguous\n   area.\n"
    title: 5.1.  FGL and VL Mixed Campus
  - contents:
    - "5.2.  FGL and VL Mixed Links\n   The usual DRB election operates on a link
      with mixed FGL and VL\n   ports.  If an FGL TRILL switch port is a DRB, it can
      handle all\n   native traffic.  It MUST appoint only other FGL TRILL switch
      ports as\n   Appointed Forwarder for any VLANs that are to be mapped to FGL.\n
      \  For VLANs that are not being mapped to FGL, if Step (A) is being\n   followed
      (see Section 5.1), it can appoint either a VL or FGL TRILL\n   switch for a
      VLAN on the link to be handled by a VL.  If Step (B) is\n   being followed,
      an FGL DRB MUST only appoint FGL Appointed\n   Forwarders, so that all end stations
      will get service to the FGL\n   campus.  If a VL RBridge is a DRB, it will not
      understand that FGL\n   TRILL switch ports are different.  To the extent that
      Step (B) is in\n   effect and a VL DRB handles native frames or appoints other
      VL TRILL\n   switch ports on a link to handle native frames for one or more
      VLANs,\n   the end stations sending and receiving those native frames may be\n
      \  isolated from the FGL campus.  When a VL DRB happens to appoint an\n   FGL
      port as Appointed Forwarder for one or more VLANs, the end\n   stations sending
      and receiving native frames in those VLANs will get\n   service to the FGL campus.\n"
    title: 5.2.  FGL and VL Mixed Links
  - contents:
    - "5.3.  Summary of FGL-Safe Requirements\n   The list below summarizes the requirements
      for a TRILL switch to be\n   FGL-safe.\n   1. For both unicast and multi-destination
      data, RB1 MUST NOT forward\n      an FGL packet to a VL neighbor RB2.  This
      is accomplished as\n      specified in Section 5.1.\n   2. For both unicast
      and multi-destination data, RB1 MUST NOT egress a\n      packet onto a link
      that does not belong in that FGL.\n   3. For unicast data, RB1 must forward
      the FGL packet properly to the\n      egress nickname in the TRILL Header.  This
      means that it MUST NOT\n      delete the packet because of not having the expected
      VLAN tag, it\n      MUST NOT insert a VLAN tag, and it MUST NOT misclassify
      a flow so\n      as to persistently misorder packets, because the TRILL fields
      are\n      now 4 bytes longer than in VL TRILL packets.\n   4. For multi-destination
      data, RB1 must forward the packet properly\n      along the specified tree.
      \ This means that RB1 MUST NOT falsely\n      prune the packet.  RB1 is allowed
      not to prune at all, but it MUST\n      NOT prevent an FGL packet from reaching
      all the links with that\n      FGL by incorrectly refusing to forward the FGL
      packet along a\n      branch in the tree.\n   5. RB1 must advertise, in its
      LSP, that it is FGL-safe.\n   Point 1 above, for a TRILL switch to correctly
      support ECMP, and\n   point 2, for a TRILL switch to correctly prune distribution
      trees,\n   require that the TRILL switch properly recognize and distinguish\n
      \  between the two Ethertypes that can occur immediately after the\n   Inner.MacSA
      in a TRILL Data packet.\n"
    title: 5.3.  Summary of FGL-Safe Requirements
  title: 5.  FGL TRILL Interaction with VL TRILL
- contents:
  - "6.  IS-IS Extensions\n   Extensions related to TRILL's use of IS-IS are required
    to support\n   FGL and must include the following:\n   1. A method for a TRILL
    switch to announce itself in its LSP as\n      FGL-safe (see Section 8.2).\n   2.
    A sub-TLV analogous to the Interested VLANs and Spanning Tree\n      Roots sub-TLV
    of the Router Capabilities TLV but indicating FGLs\n      rather than VLs.  This
    is called the Interested Labels and\n      Spanning Tree Roots (INT-LABEL) sub-TLV
    in [RFC7176].\n   3. Sub-TLVs analogous to the GMAC-ADDR sub-TLV of the Group
    Address\n      TLV that specifies an FGL rather than a VL.  These are called the\n
    \     GLMAC-ADDR, GLIP-ADDR, and GLIPV6-ADDR sub-TLVs in [RFC7176].\n"
  title: 6.  IS-IS Extensions
- contents:
  - "7.  Comparison with Goals\n   Comparing TRILL FGL, as specified in this document,
    with the goals\n   given in Section 2.1, we find the following:\n   1. Fine-Grained:
    FGL provides 2**24 labels, vastly more than the\n      4094 (4K) VLAN labels supported
    in TRILL as specified in\n      [RFC6325].\n   2. Silicon: Existing TRILL fast
    path silicon chips can perform base\n      TRILL Header insertion and removal
    to support ingress and egress.\n      In addition, it is believed that most such
    silicon chips can also\n      perform the native-frame-to-FGL mapping and the
    encoding of the\n      FGL as specified herein, as well as the inverse decoding
    and\n      mapping.  Some existing silicon chips can perform only one of\n      these
    operations on a frame in one pass through the fast path;\n      however, other
    existing chips are believed to be able to perform\n      both operations on the
    same frame in one pass through their fast\n      path.  It is also believed that
    most FGL TRILL switches will be\n      capable of having their ports configured
    to discard FGL packets.\n      Such a capability makes interoperation with VL
    TRILL switches\n      practical using Step (A) as opposed to Step (B) (see Section
    5.1).\n   3. Base RBridge Interoperation: As described in Section 3, FGL is not\n
    \     generally compatible with TRILL switches conformant to the base\n      specification
    [RFC6325].  In particular, a VL TRILL switch cannot\n      be an FGL TRILL switch
    because there is a risk that it would\n      mishandle FGL packets.  However,
    a contiguous set of VL TRILL\n      switches can exchange VL frames, regardless
    of the presence of FGL\n      TRILL switches in the campus.  The provisions of
    Section 5 support\n      reasonable interoperation and migration scenarios.\n
    \  4. Alternate Priority: The encoding specified in Section 2.3 and the\n      ingress/egress
    processing specified in Section 4 provide for a new\n      priority and DEI in
    the Inner.Label High Part and a place to\n      preserve the original user priority
    and DEI in the Low Part so\n      that it can be restored on egress.\n"
  title: 7.  Comparison with Goals
- contents:
  - "8.  Allocation Considerations\n   Allocations by the IEEE Registration Authority
    and IANA are listed\n   below.\n"
  - contents:
    - "8.1.  IEEE Allocation Considerations\n   The IEEE Registration Authority has
      assigned Ethertype 0x893B for\n   TRILL FGL.\n"
    title: 8.1.  IEEE Allocation Considerations
  - contents:
    - "8.2.  IANA Considerations\n   IANA has allocated capability flag 1 in the TRILL-VER
      sub-TLV\n   capability flags [RFC7176] to indicate that a TRILL switch is\n
      \  FGL-safe.\n"
    title: 8.2.  IANA Considerations
  title: 8.  Allocation Considerations
- contents:
  - "9.  Security Considerations\n   See [RFC6325] for general TRILL security considerations.\n
    \  As with any communications system, end-to-end encryption and\n   authentication
    should be considered for sensitive data.  In this\n   case, that would be encryption
    and authentication extending from a\n   source end station and carried through
    the TRILL campus to a\n   destination end station.\n   Confusion between a packet
    with VL X and a packet with FGL (X.Y) or\n   confusion due to a malformed frame
    is a potential problem if an FGL\n   TRILL switch did not properly check for the
    occurrence of 0x8100 or\n   0x893B immediately after the Inner.MacSA (see Sections
    2.2 and 2.3)\n   and handle the frame appropriately.\n   [RFC6325] requires that
    the Ethertype immediately after the\n   Inner.MacSA be 0x8100.  A VL TRILL switch
    that did not discard a\n   packet with some other value there could cause problems.
    \ If it\n   received a TRILL Data packet with FGL (X.Y) or with junk after the\n
    \  Inner.MacSA that included X where a VLAN ID would appear, then:\n   1. It could
    egress the packet to an end station in VLAN X.  If the\n      packet was a well-formed
    FGL frame, the payload of such an\n      egressed native frame would appear to
    begin with Ethertype 0x893B,\n      which would likely be discarded by an end
    station.  In any case,\n      such an egress would almost certainly be a violation
    of security\n      policy requiring the configurable separation of differently\n
    \     labeled data.\n   2. If the packet was multi-destination and the TRILL switch
    pruned\n      the distribution tree, it would incorrectly prune it on the basis\n
    \     of VLAN X.  For an FGL packet, this would probably lead to the\n      multi-destination
    data packet not being delivered to all of its\n      intended recipients.\n   Possible
    problems with an FGL TRILL switch that (a) received a TRILL\n   Data packet with
    junk after the Inner.MacSA that included X where a\n   VLAN ID would appear and
    (b) did not check the Ethertype immediately\n   after the Inner.MacSA would be
    that it could improperly egress the\n   packet in VLAN X, violating security policy.
    \ If the packet was\n   multi-destination and was improperly forwarded, it should
    be\n   discarded by properly implemented TRILL switches downstream in the\n   distribution
    tree and never egressed, but the propagation of the\n   packet would still waste
    bandwidth.\n   To avoid these problems, all TRILL switches MUST check the Ethertype\n
    \  immediately after the Inner.MacSA and, if it is a value they do not\n   know
    how to handle, either discard the frame or make no decisions\n   based on any
    data after that Ethertype.  In addition, care must be\n   taken to avoid FGL packets
    being sent to or through VL TRILL switches\n   that will discard them if the VL
    TRILL switch is properly implemented\n   or mishandle them if it is not properly
    implemented.  This is\n   accomplished as specified in Section 5.1.\n"
  title: 9.  Security Considerations
- contents:
  - "Appendix A.  Serial Unicast\n   This informational appendix discusses the advantages
    and\n   disadvantages of using serial unicast instead of a distribution tree\n
    \  for multi-destination TRILL Data packets.  See Sections 4.1 and 4.3.\n   This
    document requires that FGL TRILL switches accept serial unicast,\n   but there
    is no requirement that they be able to send serial unicast.\n   Consider a large
    TRILL campus with hundreds of TRILL switches in\n   which, say, 300 end stations
    are in some particular FGL data label.\n   At one extreme, if all 300 end stations
    were on links attached to a\n   single TRILL switch, then no other TRILL switch
    would be advertising\n   interest in that FGL.  As a result, it is likely that
    because of\n   pruning a multi-destination (say, broadcast) frame from one such
    end\n   station would not be sent to any another TRILL switch, even if put on\n
    \  a distribution tree.\n   At the other extreme, assume that the 300 end stations
    are attached,\n   one each, to 300 different TRILL switches; in that case, you
    are\n   almost certainly better off using a distribution tree because if you\n
    \  tried to serially unicast you would have to output 300 copies,\n   probably
    including multiple copies through the same port, and would\n   cause much higher
    link utilization.\n   Now assume that these 300 end stations are connected to
    exactly two\n   TRILL switches, say, 200 to one and 100 to the other.  Using unicast\n
    \  TRILL Data packets between these two TRILL switches is best because\n   the
    frames will follow least-cost paths, possibly with such traffic\n   spread over
    a number of least-cost paths with equal cost.  On the\n   other hand, if distribution
    trees were used, each frame would be\n   constrained to the tree used for that
    frame and would likely follow a\n   higher cost route and only a single path would
    be available per tree.\n   Thus, this document says that unicast SHOULD be used
    if there are\n   exactly two TRILL switches involved.\n   The decision of whether
    to use a distribution tree or serial unicast\n   if the end stations are connected
    to more than two TRILL switches is\n   more complex.  Which would be better would
    depend on many factors,\n   including network topology and application data patterns.
    \ How to\n   make this decision in such cases is beyond the scope of this\n   document.\n"
  title: Appendix A.  Serial Unicast
- contents:
  - "Appendix B.  Mixed Campus Characteristics\n   This informational appendix describes
    the characteristics of a TRILL\n   campus with mixed FGL-safe and VL TRILL switches
    for two cases:\n   Appendix B.1 discusses the case where all FGL adjacencies with
    VL are\n   handled by Step (A) in Section 5.1, and Appendix B.2 discusses the\n
    \  case where all FGL adjacencies with VL are handled by Step (B) in\n   Section
    5.1.\n"
  - contents:
    - "B.1.  Mixed Campus with High Cost Adjacencies\n   If the FGL TRILL switches
      use Step (A) in Section 5.1, then VL and\n   FGL TRILL switches will be able
      to interoperate for VL traffic.\n   Least-cost paths will avoid any FGL -> VL
      TRILL switch hops unless no\n   other reasonable path is available.  In conjunction
      with Section 4.5,\n   there will be at least one distribution tree rooted at
      a nickname\n   held by an FGL TRILL switch or the pseudonode for an FGL link.\n
      \  Furthermore, if the FGL TRILL switches in the campus form a single\n   contiguous
      island, this distribution tree will have a fully connected\n   sub-tree covering
      that island.  Thus, any FGL TRILL Data packets sent\n   on this tree will be
      able to reach any other FGL TRILL switch without\n   attempting to go through
      any VL TRILL switches.  (Such an attempt\n   would cause the FGL packet to be
      discarded as specified in part A1 of\n   Step (A).)\n   If supported, Step (A)
      is particularly effective in a campus with an\n   FGL TRILL switch core and
      VL TRILL switches in one or more islands\n   around that core.  For example,
      consider the campus below.  This\n   campus has an FGL core consisting of FGL01
      to FGL14 and three VL\n   islands consisting of VL01 to VL04, VL05, and VL06
      to VL14.\n                  *VL01--*VL02\n                    |      |\n                  *VL03--*VL04
      \               *VL05\n                    |      |                    |\n                  FGL01--FGL02--FGL03--FGL04--FGL05\n
      \                   |      |      |      |      |\n                  FGL06--FGL07--FGL08--FGL09--FGL10\n
      \                   |      |      |      |      |\n                  FGL11--FGL12--*VL06--*VL07---FGL13\n
      \                          |      |      |      |\n                         *VL08--*VL09--*VL10---FGL14\n
      \                          |      |      |      |\n                         *VL11--*VL12--*VL13--*VL14\n
      \  Assuming that the FGL TRILL switches in this campus all implement\n   Step
      (A), then end stations connected through a VL port can be\n   connected anywhere
      in the campus to VL or FGL TRILL switches and, if\n   in the same VLAN, will
      communicate.  End stations connected through\n   an FGL port on FGL TRILL switches
      will communicate if their local\n   VLANs are mapped to the same FGL.\n   Due
      to the high cost of FGL-to-VL adjacencies used in path\n   computations, VL
      TRILL switches are avoided on paths between FGL\n   TRILL switches.  For example,
      even if the speed and default adjacency\n   cost of all the connections shown
      above were the same, traffic from\n   FGL12 to FGL13 would follow the 5-hop
      path FGL12 - FGL07 - FGL08 -\n   FGL09 - FGL10 - FGL13 rather than the 3-hop
      path FGL12 - VL09 - VL10\n   - FGL14.\n"
    title: B.1.  Mixed Campus with High Cost Adjacencies
  - contents:
    - "B.2.  Mixed Campus with Data Blocked Adjacencies\n   If the FGL TRILL switches
      use Step (B) in Section 5.1, then least-\n   cost and distribution tree TRILL
      Data communication between VL and\n   FGL TRILL switches is blocked, although
      TRILL IS-IS communication is\n   normal.  This data blocking, although implemented
      only by FGL TRILL\n   switches, has relatively symmetric effects.  The following
      paragraphs\n   assume that such data blocking between VL and FGL is in effect\n
      \  throughout the campus.\n   A campus of mostly FGL TRILL switches implementing
      Step (B) with a\n   few isolated VL TRILL switches scattered throughout will
      work well in\n   terms of connectivity for end stations attached to those FGL\n
      \  switches, except that they will be unable to communicate with any end\n   stations
      for which a VL switch is appointed forwarder.  The VL TRILL\n   switches will
      be isolated and will only be able to route TRILL Data\n   to the extent that
      they happen to be contiguously connected to other\n   VL TRILL switches.  Distribution
      trees computed by the FGL switches\n   will not include any VL switches (see
      Section 2.1 of [RFC7180]).\n   A campus of mostly VL TRILL switches with a few
      isolated FGL TRILL\n   switches scattered throughout will also work reasonably
      well as\n   described immediately above but with all occurrences of \"FGL\"
      and\n   \"VL\" swapped.\n   However, a campus so badly misconfigured that it
      consists of a\n   randomly intermingled mixture of VL and FGL TRILL switches
      using\n   Step (B) is likely to offer very poor data service, due to many links\n
      \  being blocked for data.\n"
    title: B.2.  Mixed Campus with Data Blocked Adjacencies
  title: Appendix B.  Mixed Campus Characteristics
- contents:
  - "Acknowledgements\n   The comments and suggestions of the following, listed in
    alphabetic\n   order, are gratefully acknowledged:\n      Stewart Bryant, Spencer
    Dawkins, Adrian Farrel, Anoop Ghanwani,\n      Sujay Gupta, Weiguo Hao, Phanidhar
    Koganti, Yizhou Li, Vishwas\n      Manral, Rajeev Manur, Thomas Narten, Gayle
    Nobel, Erik Nordmark,\n      Pete Resnick, Olen Stokes, Sean Turner, Ilya Varlashkin,
    and\n      Xuxiaohu.\n"
  title: Acknowledgements
- contents:
  - 'References

    '
  title: References
- contents:
  - "Normative References\n   [802.1Q]   IEEE 802.1, \"IEEE Standard for Local and
    metropolitan area\n              networks--Media Access Control (MAC) Bridges
    and Virtual\n              Bridged Local Area Networks\", IEEE Std 802.1Q-2011,\n
    \             August 2011.\n   [IS-IS]    ISO/IEC 10589:2002, Second Edition,
    \"Information\n              technology -- Telecommunications and information
    exchange\n              between systems -- Intermediate System to Intermediate\n
    \             System intra-domain routeing information exchange protocol\n              for
    use in conjunction with the protocol for providing the\n              connectionless-mode
    network service (ISO 8473)\", 2002.\n   [RFC2119]  Bradner, S., \"Key words for
    use in RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119,
    March 1997.\n   [RFC5305]  Li, T. and H. Smit, \"IS-IS Extensions for Traffic\n
    \             Engineering\", RFC 5305, October 2008.\n   [RFC6325]  Perlman, R.,
    Eastlake 3rd, D., Dutt, D., Gai, S., and A.\n              Ghanwani, \"Routing
    Bridges (RBridges): Base Protocol\n              Specification\", RFC 6325, July
    2011.\n   [RFC7176]  Eastlake 3rd, D., Senevirathne, T., Ghanwani, A., Dutt,\n
    \             D., and A. Banerjee, \"Transparent Interconnection of Lots\n              of
    Links (TRILL) Use of IS-IS\", RFC 7176, May 2014.\n   [RFC7177]  Eastlake 3rd,
    D., Perlman, R., Ghanwani, A., Yang, H., and\n              V. Manral, \"Transparent
    Interconnection of Lots of Links\n              (TRILL): Adjacency\", RFC 7177,
    May 2014.\n   [RFC7180]  Eastlake 3rd, D., Zhang, M., Ghanwani, A., Manral, V.,
    and\n              A. Banerjee, \"Transparent Interconnection of Lots of Links\n
    \             (TRILL): Clarifications, Corrections, and Updates\"\n              RFC
    7180, May 2014.\n"
  title: Normative References
- contents:
  - "Informative References\n   [RFC6165]  Banerjee, A. and D. Ward, \"Extensions
    to IS-IS for Layer-2\n              Systems\", RFC 6165, April 2011.\n   [RFC6439]
    \ Perlman, R., Eastlake, D., Li, Y., Banerjee, A., and F.\n              Hu, \"Routing
    Bridges (RBridges): Appointed Forwarders\",\n              RFC 6439, November
    2011.\n   [RFC7174]  Salam, S., Senevirathne, T., Aldrin, S., and D. Eastlake\n
    \             3rd, \"Transparent Interconnection of Lots of Links (TRILL)\n              Operations,
    Administration, and Maintenance (OAM)\n              Framework\", RFC 7174, May
    2014.\n   [RFC7178]  Eastlake 3rd, D., Manral, V., Li, Y., Aldrin, S., and D.\n
    \             Ward, \"Transparent Interconnection of Lots of Links\n              (TRILL):
    RBridge Channel Support\", RFC 7178, May 2014.\n"
  title: Informative References
- contents:
  - "Authors' Addresses\n   Donald Eastlake 3rd\n   Huawei Technologies\n   155 Beaver
    Street\n   Milford, MA  01757\n   USA\n   Phone: +1-508-333-2270\n   EMail: d3e3e3@gmail.com\n
    \  Mingui Zhang\n   Huawei Technologies Co., Ltd\n   Huawei Building, No.156 Beiqing
    Rd.\n   Z-park, Shi-Chuang-Ke-Ji-Shi-Fan-Yuan, Hai-Dian District\n   Beijing 100095\n
    \  P.R. China\n   EMail: zhangmingui@huawei.com\n   Puneet Agarwal\n   Broadcom
    Corporation\n   3151 Zanker Road\n   San Jose, CA  95134\n   USA\n   Phone: +1-949-926-5000\n
    \  EMail: pagarwal@broadcom.com\n   Radia Perlman\n   Intel Labs\n   2200 Mission
    College Blvd.\n   Santa Clara, CA  95054\n   USA\n   Phone: +1-408-765-8080\n
    \  EMail: Radia@alum.mit.edu\n   Dinesh G. Dutt\n   Cumulus Networks\n   1089
    West Evelyn Avenue\n   Sunnyvale, CA  94086\n   USA\n   EMail: ddutt.ietf@hobbesdutt.com\n"
  title: Authors' Addresses
