- title: __initial_text__
  contents:
  - '  Home Agent-Assisted Route Optimization between Mobile IPv4 Networks

    '
- title: Abstract
  contents:
  - "Abstract\n   This document describes a home agent-assisted route optimization\n\
    \   functionality for the IPv4 Network Mobility Protocol.  The function\n   is\
    \ designed to facilitate optimal routing in cases where all nodes\n   are connected\
    \ to a single home agent; thus, the use case is route\n   optimization within\
    \ a single organization or similar entity.  The\n   functionality enables the\
    \ discovery of eligible peer nodes (based on\n   information received from the\
    \ home agent) and their network prefixes,\n   and the establishment of a direct\
    \ tunnel between such nodes.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n   published for examination, experimental implementation, and\n   evaluation.\n\
    \   This document defines an Experimental Protocol for the Internet\n   community.\
    \  This document is a product of the Internet Engineering\n   Task Force (IETF).\
    \  It represents the consensus of the IETF\n   community.  It has received public\
    \ review and has been approved for\n   publication by the Internet Engineering\
    \ Steering Group (IESG).  Not\n   all documents approved by the IESG are a candidate\
    \ for any level of\n   Internet Standard; see Section 2 of RFC 5741.\n   Information\
    \ about the current status of this document, any errata,\n   and how to provide\
    \ feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc6521.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2012 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction and Motivations ....................................3\n\
    \   2. Terms and Definitions ...........................................6\n  \
    \ 3. Mobile IPv4 Route Optimization between Mobile Networks ..........8\n    \
    \  3.1. Maintaining Route Optimization Information .................9\n      \
    \     3.1.1. Advertising Route-Optimizable Prefixes ..............9\n        \
    \   3.1.2. Route Optimization Cache ...........................11\n      3.2.\
    \ Return Routability Procedure ..............................13\n           3.2.1.\
    \ Router Keys ........................................15\n           3.2.2. Nonces\
    \ .............................................15\n           3.2.3. Updating\
    \ Router Keys and Nonces ....................16\n      3.3. Mobile-Correspondent\
    \ Router Operations ....................16\n           3.3.1. Triggering Route\
    \ Optimization ......................17\n           3.3.2. Mobile Router Routing\
    \ Tables .......................17\n           3.3.3. Inter-Mobile Router Registration\
    \ ...................18\n           3.3.4. Inter-Mobile Router Tunnels ........................20\n\
    \           3.3.5. Constructing Route-Optimized Packets ...............21\n  \
    \         3.3.6. Handovers and Mobile Routers Leaving Network .......21\n    \
    \  3.4. Convergence and Synchronization Issues ....................22\n   4. Data\
    \ Compression Schemes .......................................23\n      4.1. Prefix\
    \ Compression ........................................23\n      4.2. Realm Compression\
    \ .........................................25\n           4.2.1. Encoding of Compressed\
    \ Realms ......................25\n           4.2.2. Searching Algorithm ................................27\n\
    \           4.2.3. Encoding Example ...................................27\n  \
    \ 5. New Mobile IPv4 Messages and Extensions ........................30\n    \
    \  5.1. Mobile Router Route Optimization Capability Extension .....30\n      5.2.\
    \ Route Optimization Reply ..................................31\n      5.3. Mobile-Correspondent\
    \ Authentication Extension .............32\n      5.4. Care-of Address Extension\
    \ .................................33\n      5.5. Route Optimization Prefix Advertisement\
    \ Extension .........34\n      5.6. Home Test Init Message ....................................36\n\
    \      5.7. Care-of Test Init Message .................................36\n  \
    \    5.8. Home Test Message .........................................37\n    \
    \  5.9. Care-of Test Message ......................................38\n   6. Special\
    \ Considerations .........................................39\n      6.1. NATs\
    \ and Stateful Firewalls ...............................39\n      6.2. Handling\
    \ of Concurrent Handovers ..........................40\n      6.3. Foreign Agents\
    \ ............................................40\n      6.4. Multiple Home Agents\
    \ ......................................40\n      6.5. Mutualness of Route Optimization\
    \ ..........................41\n      6.6. Extensibility .............................................42\n\
    \      6.7. Load Balancing ............................................43\n  \
    \ 7. Scalability ....................................................43\n   8.\
    \ Example Signaling Scenarios ....................................44\n      8.1.\
    \ Registration Request ......................................44\n      8.2. Route\
    \ Optimization with Return Routability ................45\n      8.3. Handovers\
    \ .................................................46\n   9. Protocol Constants\
    \ .............................................48\n   10. IANA Considerations\
    \ ...........................................48\n   11. Security Considerations\
    \ .......................................50\n      11.1. Return Routability .......................................50\n\
    \      11.2. Trust Relationships ......................................51\n  \
    \ 12. Acknowledgements ..............................................51\n   13.\
    \ References ....................................................51\n      13.1.\
    \ Normative References .....................................51\n      13.2. Informative\
    \ References ...................................52\n"
- title: 1.  Introduction and Motivations
  contents:
  - "1.  Introduction and Motivations\n   Traditionally, there has been no method\
    \ for route optimization in\n   Mobile IPv4 [RFC5944] apart from an early attempt\
    \ [MIP-RO].  Unlike\n   Mobile IPv6 [RFC6275], where route optimization has been\
    \ included\n   from the start, with Mobile IPv4, route optimization hasn't been\n\
    \   addressed in a generalized scope.\n   Even though general route optimization\
    \ may not be of interest in the\n   scope of IPv4, there are still specific applications\
    \ for route\n   optimization in Mobile IPv4.  This document proposes a method\
    \ to\n   optimize routes between networks behind Mobile Routers (MRs), as\n  \
    \ defined by Network Mobility (NEMO) [RFC5177].  Although NAT and the\n   pending\
    \ shortage of IPv4 addresses make widespread deployment of end-\n   to-end route\
    \ optimization infeasible, using route optimization from\n   MR to MR is still\
    \ a practical scenario.  Note that the method\n   specified in this document is\
    \ only for route optimization between\n   MRs; any network prefix not advertised\
    \ by an MR would still be routed\n   via the home agent, although an MR could\
    \ advertise very large address\n   spaces, e.g., by acting as an Internet gateway.\n\
    \   A particular use case concerns setting up redundant yet economical\n   enterprise\
    \ networks.  Recently, a trend has emerged where customers\n   prefer to maintain\
    \ connectivity via multiple service providers.\n   Reasons include redundancy,\
    \ reliability, and availability issues.\n   These kinds of multihoming scenarios\
    \ have traditionally been solved\n   by using such technologies as multihoming\
    \ BGP.  However, a more\n   lightweight and economical solution is desirable.\n\
    \   From a service provider perspective, a common topology for an\n   enterprise\
    \ customer network consists of one to several sites\n   (typically headquarters\
    \ and various branch offices).  These sites are\n   typically connected via various\
    \ Layer 2 technologies (ATM or Frame\n   Relay Permanent Virtual Circuits (PVCs)),\
    \ MPLS VPNs, or Layer 3\n   site-to-site VPNs.  With a Service Level Agreement\
    \ (SLA), a customer\n   can obtain very reliable and well-supported intranet connectivity.\n\
    \   However, compared to the cost of \"consumer-grade\" broadband Internet\n \
    \  access, the SLA-guaranteed version can be considered very expensive.\n   These\
    \ consumer-grade options, however, are not a reliable approach\n   for mission-critical\
    \ applications.\n   Mobile IP, especially MRs, can be used to improve reliability\
    \ of\n   connectivity even when implemented over consumer-grade Internet\n   access.\
    \  The customer becomes a client for a virtual service\n   provider, which does\
    \ not take part in the actual access technology.\n   The service provider has\
    \ a backend system and an IP address pool that\n   it distributes to customers.\
    \  Access is provided by multiple,\n   independent, possibly consumer-grade ISPs,\
    \ with Mobile IP providing\n   seamless handovers if service from a specific ISP\
    \ fails.  The\n   drawback of this solution is that it creates a star topology;\
    \ all\n   Mobile IP tunnels end up at the service provider-hosted home agent,\n\
    \   causing a heavy load at the backend.  Route optimization between\n   mobile\
    \ networks addresses this issue, by taking the network load off\n   of the home\
    \ agent and the backend.\n   An example network is pictured below:\n         \
    \              +----------------------------+\n                       |  Virtual\
    \ Operator Backend  |\n                       +------------+         +-----+\n\
    \                       | Home Agent |         | AAA |\n                     \
    \  +------------+---------+-----+\n                                    |\n   \
    \                               .--.\n                                _(.   `)\n\
    \                              _(   ISP `)_\n                             (  \
    \ Peering  `)\n                            ( `  . Point )  )\n               \
    \              `--(_______)--'\n                       ____ /     |         \\\
    \n                      /           |          \\\n                   .--.   \
    \      .--.         .--.\n                 _(    `.     _(    `.     _(    `.\n\
    \                (  ISP A )   (  ISP B )   (  ISP C )\n               ( `  . \
    \ )  ) ( `  .  )  ) ( `  .  )  )\n                `--(___.-'   `--(___.-'   `--(___.-'\n\
    \                    |     ______/    \\       /\n                    |    / \
    \           \\     /\n                    |   /              \\   /\n        \
    \          +----+               +----+\n                  |MR A|             \
    \  |MR B|\n                  +----+               +----+\n                   \
    \ |                    |\n                   .--.                 .--.\n     \
    \            _(    `.             _(    `.\n                ( Site A )       \
    \    ( Site B )\n               ( `  .  )  )         ( `  .  )  )\n          \
    \      `--(___.-'           `--(___.-'\n            Virtual Service Provider Architecture\
    \ Using NEMOv4\n   In this example case, the organization network consists of\
    \ two sites\n   that are connected via two ISPs for redundancy reasons.  Mobile\
    \ IP\n   allows fast handovers without the problems of multihoming and BGP\n \
    \  peering between each individual ISP and the organization.  The\n   traffic,\
    \ however, takes a non-optimal route through the virtual\n   operator backend.\n\
    \   Route optimization addresses this issue, allowing traffic between\n   Sites\
    \ A and B to flow directly through ISP B's network, or in case of\n   a link failure,\
    \ via the ISP peering point (such as the Metropolitan\n   Area Ethernet (MAE),\
    \ e.g., MAE-West).  The backend will not suffer\n   from heavy loads.\n   The\
    \ specification in this document is meant to be Experimental, with\n   the primary\
    \ design goal of keeping the load on the backend to a\n   minimum.  Additional\
    \ design goals include extensibility to a more\n   generalized scope, such as\
    \ not requiring all MRs to be homed on the\n   same home agent.  Experiences are\
    \ mostly sought regarding\n   applicability to real-world operations, and protocol-specific\
    \ issues\n   such as signaling scalability, interworking with other Mobile IP\n\
    \   extensions not specifically addressed in this document, and behavior\n   of\
    \ end-user applications over route-optimized paths.\n   The aforementioned use\
    \ case is the original application.  Moving this\n   specification to Standards\
    \ Track should be considered after enough\n   deployment experience has been gathered.\
    \  Besides the aforementioned\n   issues, additional elements that might require\
    \ refinement based on\n   real-world experiences are delivery of information on\
    \ networks\n   managed by peer MRs; conducting MR <-> MR authentication; reaction\n\
    \   to, and recovery methods for, connectivity breakdowns and other\n   break-before-make\
    \ topology changes; keepalive timer intervals;\n   formats of signaling extensions;\
    \ behavior in NAT/firewalled\n   environments; and the prefix and realm compression\
    \ algorithms.\n"
- title: 2.  Terms and Definitions
  contents:
  - "2.  Terms and Definitions\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\"\
    , \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"\
    MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described\
    \ in RFC 2119 [RFC2119].\n   Care-of Address (CoA)\n      RFC 5944 [RFC5944] defines\
    \ a care-of address as the termination\n      point of a tunnel toward a mobile\
    \ node, for datagrams forwarded to\n      the mobile node while it is away from\
    \ home.  The protocol can use\n      two different types of CoA: a \"foreign agent\
    \ care-of address\",\n      which is an address of a foreign agent with which\
    \ the mobile node\n      is registered, and a \"co-located care-of address\",\
    \ which is an\n      externally obtained local address that the mobile node has\n\
    \      associated with one of its own network interfaces.  However, in\n     \
    \ the case of Network Mobility, foreign agents are not used, so no\n      foreign\
    \ CoAs are used either.\n   Correspondent Router (CR)\n      RFC 5944 [RFC5944]\
    \ defines a correspondent node as a peer with\n      which a mobile node is communicating.\
    \  A CR is a peer MR that MAY\n      also represent one or more entire networks.\n\
    \   Home Address (HoA)\n      RFC 5944 [RFC5944] defines a home address as an\
    \ IP address that is\n      assigned for an extended period of time to a mobile\
    \ node.  It\n      remains unchanged regardless of where the node is attached\
    \ to the\n      Internet.\n   Home Agent (HA)\n      RFC 5944 [RFC5944] defines\
    \ a home agent as a router on a mobile\n      node's home network that tunnels\
    \ datagrams for delivery to the\n      mobile node when it is away from home and\
    \ maintains current\n      location information for the mobile node.  For this\
    \ application,\n      the \"home network\" sees limited usage.\n   Host Network\
    \ Prefix\n      A host network prefix is a network prefix with a mask of /32,\n\
    \      e.g., 192.0.2.254/32, consisting of a single host.\n   Mobility Binding\n\
    \      RFC 5944 [RFC5944] defines Mobility Binding as the association of\n   \
    \   an HoA with a CoA, along with the lifetime remaining for that\n      association.\n\
    \   Mobile Network Prefix\n      RFC 5177 [RFC5177] defines a mobile network prefix\
    \ as the network\n      prefix of the subnet delegated to an MR as the mobile\
    \ network.\n   Mobile Router (MR)\n      RFC 5177 [RFC5177] and RFC 5944 [RFC5944]\
    \ define a mobile router\n      as a mobile node that can be a router that is\
    \ responsible for the\n      mobility of one or more entire networks moving together,\
    \ perhaps\n      on an airplane, a ship, a train, an automobile, a bicycle, or\
    \ a\n      kayak.\n   Route Optimization Cache\n      A Route Optimization Cache\
    \ is defined as a data structure,\n      maintained by MRs, containing possible\
    \ destinations for route\n      optimization.  The cache contains information\
    \ (HoAs) on potential\n      CRs and their associated mobile networks.\n   Return\
    \ Routability (RR)\n      Return routability is defined as a procedure to bind\
    \ an MR's HoA\n      to a CoA on a CR with a degree of trust.\n   | (Concatenation)\n\
    \      Some formulas in this specification use the symbol \"|\" to indicate\n\
    \      bytewise concatenation, as in A | B.  This concatenation requires\n   \
    \   that all of the octets of the datum A appear first in the result,\n      followed\
    \ by all of the octets of the datum B.\n   First (size, input)\n      Some formulas\
    \ in this specification use a functional form \"First\n      (size, input)\" to\
    \ indicate truncation of the \"input\" data so that\n      only the first \"size\"\
    \ bits remain to be used.\n"
- title: 3.  Mobile IPv4 Route Optimization between Mobile Networks
  contents:
  - "3.  Mobile IPv4 Route Optimization between Mobile Networks\n   This section describes\
    \ the changed functionality of the HA and the MR\n   compared to the base NEMOv4\
    \ operation defined in [RFC5177].  The\n   basic premise is still the same; MRs,\
    \ when registering with the HA,\n   may inform the HA of the mobile network prefixes\
    \ they are managing\n   (explicit mode), or the HA already knows the prefix assignments.\n\
    \   However, instead of prefix <-> MR mapping information only remaining\n   on\
    \ the HA and the single MR, this information will now be distributed\n   to the\
    \ other MRs as well.\n   Home agent-assisted route optimization is primarily intended\
    \ for\n   helping to optimize traffic patterns between multiple sites in a\n \
    \  single organization or administrative domain; however, extranets can\n   also\
    \ be reached with optimized routes, as long as all MRs connect to\n   the same\
    \ HA.  The procedure aims to maintain backward compatibility;\n   with legacy\
    \ nodes or routers, full connectivity is always preserved,\n   even though optimal\
    \ routing cannot be guaranteed.\n   The scheme requires an MR to be able to receive\
    \ messages from other\n   MRs unsolicited -- that is, without first initiating\
    \ a request.  This\n   behavior -- accepting unsolicited messages -- is similar\
    \ to the\n   registration revocation procedure [RFC3543].  Many of the mechanisms\n\
    \   are the same, including the fact that advertising route optimization\n   support\
    \ upon registration implies the capability to receive\n   Registration Requests\
    \ and Return Routability messages from other MRs.\n   Compared to IPv6, where\
    \ mobile node <-> correspondent node bindings\n   are maintained via Mobility\
    \ Routing header and home address options,\n   Mobile IPv4 always requires the\
    \ use of tunnels.  Therefore,\n   inter-mobile-router tunnel establishment has\
    \ to be conducted.\n"
- title: 3.1.  Maintaining Route Optimization Information
  contents:
  - "3.1.  Maintaining Route Optimization Information\n   During registration, a registering\
    \ MR MAY request information on\n   route-optimizable network prefixes.  The MR\
    \ MAY also allow\n   redistribution of information on its managed network prefixes\n\
    \   regardless of whether they are explicitly registered or already\n   configured.\
    \  These are indicated with a Mobile Router Route\n   Optimization Capability\
    \ Extension; see Section 5.1.  If the HA\n   accepts the request for route optimization,\
    \ this is indicated with a\n   Route Optimization Reply Extension (Section 5.2)\
    \ in the Registration\n   Reply.\n   Note that the redistribution of network prefix\
    \ information from the\n   HA happens only during the registration signaling.\
    \  There are no\n   \"routing updates\" from the HA except during re-registrations\n\
    \   triggered by handovers, registration timeouts, and specific\n   solicitation.\
    \  The solicitation re-registration MAY occur if a CR\n   receives a Registration\
    \ Request from an unknown MR (see\n   Section 3.3.3).\n"
- title: 3.1.1.  Advertising Route-Optimizable Prefixes
  contents:
  - "3.1.1.  Advertising Route-Optimizable Prefixes\n   As noted, an HA that supports\
    \ NEMO already maintains information on\n   which network prefixes are reachable\
    \ behind specific MRs.  The only\n   change to this functionality is that this\
    \ information can now be\n   distributed to other MRs upon request.  This request\
    \ is implied by\n   including a Route Optimization Capability Extension (Section\
    \ 5.1) and\n   setting the 'R' bit.\n   When an HA receives a Registration Request,\
    \ standard authentication\n   and authorization procedures are conducted.\n  \
    \ If registration is successful and the Route Optimization Capability\n   Extension\
    \ was present in the Registration Request, the reply message\n   MUST include\
    \ the Route Optimization Reply Extension (Section 5.2) to\n   indicate that the\
    \ Route Optimization Capability Extension was\n   understood.  Furthermore, the\
    \ extension also informs the MR whether\n   NAT was detected between the HA and\
    \ the MR using the procedure in\n   RFC 3519 [RFC3519], which is based on the\
    \ discrepancy between the\n   requester's indicated CoA and the packet's source\
    \ address.\n   The reply message MAY also include one Route Optimization Prefix\n\
    \   Advertisement Extension, which informs the MR of existing mobile\n   network\
    \ prefixes and the MRs that manage them, if eligible for\n   redistribution. \
    \ The networks SHOULD be included in order of\n   priority, with the prefixes\
    \ determined, by policy, as most desirable\n   targets for route optimization\
    \ listed first.  The extension is\n   constructed as shown in Section 5.5.  The\
    \ extension consists of a\n   list where each MR, identified by its HoA, is listed\
    \ with\n   corresponding prefix(es) and their respective realm(s).\n   Each network\
    \ prefix can be associated with a realm [RFC4282], usually\n   in the form 'organization.example.com'.\
    \  Besides the routers in the\n   customer's own organization, the prefix list\
    \ may also include other\n   MRs, e.g., a default prefix (0.0.0.0/0) pointing\
    \ toward an Internet\n   gateway for Internet connectivity or additional prefixes\
    \ belonging to\n   possible extranets.  The realm information can be used to make\
    \ policy\n   decisions on the MR, such as preferring optimization within a\n \
    \  specific realm only.  Furthermore, the unique realm information can\n   be\
    \ used to differentiate between overlapping address spaces utilized\n   by the\
    \ same or different organizations concurrently and adjusting\n   forwarding policies\
    \ accordingly.\n   In a typical scenario, where network prefixes are allocated\
    \ to MRs\n   connecting to a single HA, the prefixes are usually either continuous\n\
    \   or at least very close to each other.  Due to these characteristics,\n   an\
    \ optional prefix compression mechanism is provided.  Another\n   optional compression\
    \ scheme is in use for realm information, where\n   realms often share the same\
    \ higher-level domains.  These compression\n   mechanisms are further explained\
    \ in Section 4.\n   Upon receiving a Registration Reply with a Route Optimization\
    \ Prefix\n   Advertisement Extension, the MR SHALL insert the MR HoAs included\
    \ in\n   the extension as host-prefixes to the local Route Optimization Cache\n\
    \   if they do not already exist.  If present, any additional prefix\n   information\
    \ SHALL also be inserted into the Route Optimization Cache.\n   The MR MAY discard\
    \ entries from a desired starting point onward, due\n   to memory or other policy-related\
    \ constraints.  The intention of\n   listing the prefixes in order of priority\
    \ is to provide implicit\n   guidance for this decision.  If the capacity of the\
    \ device allows,\n   the MR SHOULD use information on all advertised prefixes.\n"
- title: 3.1.2.  Route Optimization Cache
  contents:
  - "3.1.2.  Route Optimization Cache\n   MRs supporting route optimization will maintain\
    \ a Route Optimization\n   Cache.\n   The Route Optimization Cache contains mappings\
    \ between potential CR\n   HoAs, network(s) associated with each HoA, information\
    \ on\n   reachability related to NAT and other divisions, and information\n  \
    \ related to the RR procedure.  The cache is populated based on\n   information\
    \ received from the HA in Route Optimization Prefix\n   Advertisement Extensions\
    \ and in registration messages from CRs.\n   Portions of the cache may also be\
    \ configured statically.\n   The Route Optimization Cache contains the following\
    \ information for\n   all known CRs.  Note that some fields may contain multiple\
    \ entries.\n   For example, during handovers, there may be both old and new CoAs\n\
    \   listed.\n   CR-HoA\n      Correspondent router's home address.  Primary key\
    \ identifying\n      each CR.\n   CR-CoA(s)\n      Correspondent router's care-of\
    \ address(es).  May be empty if none\n      known.  Potential tunnel's destination\
    \ address(es).\n   MR-CoA\n      Mobile router's care-of address currently used\
    \ with this CR.\n      Tunnel's source address.\n   Tunnels\n      Tunnel interface(s)\
    \ associated with this CR.  The tunnel interface\n      itself handles all the\
    \ necessary operations to keep the tunnel\n      operational, e.g., sending keepalive\
    \ messages required by UDP\n      encapsulation.\n   NAT states\n      A table\
    \ of booleans.  Contains entries for all pairs of potential\n      MR-CoAs and\
    \ CR-CoAs that are known to require NAT awareness.  The\n      table is populated\
    \ either statically or based on information\n      received during operation.\
    \  A setting of true indicates that the\n      MR can establish a UDP tunnel toward\
    \ the CR, using this pair of\n      CoAs.  A received advertisement can indicate\
    \ that the value should\n      be set to false for all of the respective CR's\
    \ CoAs.  Settings in\n      this table affect tunnel establishment direction;\
    \ see\n      Section 3.3.4 and the registration procedure when deciding which\n\
    \      CoAs to include in the Care-of Address Extension in the\n      Registration\
    \ Reply.  The existence of an entry mandates the use of\n      UDP encapsulation.\n\
    \   RRSTATEs\n      Return routability state for each CR-HoA - MR-CoA pair.  States\n\
    \      are INACTIVE, IN PROGRESS, and ACTIVE.  If state is INACTIVE, the\n   \
    \   RR procedure must be completed before forwarding route-optimized\n      traffic.\
    \  If state is IN PROGRESS or ACTIVE, the information\n      concerning this CR\
    \ MUST NOT be removed from the Route Optimization\n      Cache as long as a tunnel\
    \ to the CR is established.\n   KRms\n      Registration management key for each\
    \ CR-HoA - MR-CoA pair.  This\n      field is only used if configured statically\
    \ -- if the KRm was\n      computed using the RR procedure, it is calculated in\
    \ situ based on\n      nonces and the router key.  If configured statically, RRSTATE\
    \ is\n      permanently set to ACTIVE.\n   Care-of nonce indices\n      If the\
    \ KRm was established with the RR procedure, contains the\n      care-of nonce\
    \ index for each MR-CoA - CR-HoA pair.\n   Care-of keygen token\n      If the\
    \ KRm was established with the RR procedure, contains the\n      care-of keygen\
    \ token for each MR-CoA - CR-HoA pair.\n   Home nonce indices\n      If the KRm\
    \ was established with the RR procedure, contains the\n      Home nonce index\
    \ for each CR-HoA.\n   Home keygen token\n      If the KRm was established with\
    \ the RR procedure, contains the\n      home keygen token for each CR-HoA.\n \
    \  Network prefixes\n      A list of destination network prefixes reachable via\
    \ this CR.\n      Includes network and prefix length, e.g., 192.0.2.0/25.  Always\n\
    \      contains at least a single entry: the CR-HoA host network prefix\n    \
    \  in the form of 192.0.2.1/32.\n   Realms\n      Each prefix may be associated\
    \ with a realm.  May also be empty, if\n      the realm is not provided by advertisement\
    \ or configuration.\n   Prefix_Valid\n      Boolean field for each prefix - CR-HoA\
    \ pair, which is set to true\n      if this prefix's owner has been confirmed.\
    \  The host network\n      prefix consisting of the CR itself does not need validation\
    \ beyond\n      the RR procedure.  For other prefixes, the confirmation is done\
    \ by\n      soliciting the information from the HA.  Traffic for prefixes that\n\
    \      have unconfirmed ownership should not be routed through the\n      tunnel.\n\
    \   Information that is no longer valid due to expirations or topology\n   changes\
    \ MAY be removed from the Route Optimization Cache as desired\n   by the MR.\n"
- title: 3.2.  Return Routability Procedure
  contents:
  - "3.2.  Return Routability Procedure\n   The purpose of the RR procedure is to\
    \ establish CoA <-> HoA bindings\n   in a trusted manner.  The RR procedure for\
    \ Mobile IPv6 is described\n   in [RFC6275].  The same principles apply to the\
    \ Mobile IPv4 version:\n   two messages are sent to the CR's HoA -- one via the\
    \ HA using the\n   MR's HoA, and the other directly from the MR's CoA, with two\n\
    \   responses coming through the same routes.  The registration\n   management\
    \ key is derived from token information carried on these\n   messages.  This registration\
    \ management key (KRm) can then be used to\n   authenticate Registration Requests\
    \ (comparable to Binding Updates in\n   Mobile IPv6).\n   The RR procedure is\
    \ a method provided by Mobile IP to establish the\n   KRm in a relatively lightweight\
    \ fashion.  If desired, the KRms can be\n   configured on MRs statically, or by\
    \ using a desired external secure\n   key provisioning mechanism.  If KRms are\
    \ known to the MRs via some\n   other mechanism, the RR procedure can be skipped.\
    \  Such provisioning\n   mechanisms are out of scope for this document.\n   The\
    \ main assumption on traffic patterns is that the MR that initiates\n   the RR\
    \ procedure can always send outbound messages, even when behind\n   a NAT or firewall.\
    \  This basic assumption made for NAT Traversal in\n   [RFC3519] is also applicable\
    \ here.  In the case where the CR is\n   behind such obstacles, it receives these\
    \ messages via the reverse\n   tunnel to the CR's HoA; thus, any problem regarding\
    \ the CR's\n   connectivity is addressed during registration with the HA.\n  \
    \ The RR procedure consists of four Mobile IP messages: Home Test Init\n   (HoTI),\
    \ Care-of Test Init (CoTI), Home Test (HoT), and Care-of Test\n   (CoT).  They\
    \ are constructed as shown in Sections 5.6 through 5.9.\n   If the MR has included\
    \ the Mobile Router Route Optimization\n   Capability Extension in its Registration\
    \ Request, it MUST be able to\n   accept Return Routability messages.  The messages\
    \ are delivered as\n   Mobile IP signaling packets.  The destination address of\
    \ the HoTI and\n   CoTI messages is set to the CR's HoA, with the sources being\
    \ the MR's\n   HoA and CoA, respectively.\n   The RR procedure begins with the\
    \ MR sending HoTI and CoTI messages,\n   each containing a (different) 64-bit\
    \ random value -- the cookie.  The\n   cookie is used to bind a specific signaling\
    \ exchange together.\n   Upon receiving the HoTI or CoTI message, the CR MUST\
    \ have a secret\n   correspondent router key (Kcr) and nonce.  If it does not\
    \ have this\n   material yet, it MUST produce it before continuing with the RR\n\
    \   procedure.\n   The CR responds to HoTI and CoTI messages by constructing HoT\
    \ and CoT\n   messages, respectively, as replies.  The HoT message contains a\
    \ home\n   init cookie, current home nonce index, and home keygen token.  The\n\
    \   CoT message contains a care-of init cookie, current care-of nonce\n   index,\
    \ and care-of keygen token.\n   The home keygen token is constructed as follows:\n\
    \   Home keygen token = First (64, HMAC_SHA1 (Kcr, (home address |\n      nonce\
    \ | 0)))\n   The care-of keygen token is constructed as follows:\n   Care-of keygen\
    \ token = First (64, HMAC_SHA1 (Kcr, (care-of address |\n      nonce | 1)))\n\
    \   Note that the CoA in this case is the source address of the received\n   CoTI\
    \ message packet.  The address may have changed in transit due to\n   network\
    \ address translation.  This does not affect the registration\n   process; subsequent\
    \ Registration Requests are expected to arrive from\n   the same translated address.\n\
    \   The RR procedure SHOULD be initiated when the Route Optimization\n   Cache's\
    \ RRSTATE field for the desired CoA with the target CR is\n   INACTIVE.  If the\
    \ state was INACTIVE, the state MUST be set to IN\n   PROGRESS when the RR procedure\
    \ is initiated.  In the case of a\n   handover occurring, the MR SHOULD only send\
    \ a CoTI message to obtain\n   a new care-of keygen token; the home keygen token\
    \ may still be valid.\n   If the reply to a registration indicates that one or\
    \ both of the\n   tokens have expired, the RRSTATE MUST be set to INACTIVE.  The\
    \ RR\n   procedure may then be restarted as needed.\n   Upon completion of the\
    \ RR procedure, the Route Optimization Cache's\n   RRSTATE field is set to ACTIVE,\
    \ allowing for Registration Requests to\n   be sent.  The MR will establish a\
    \ KRm.  By default, this will be done\n   using the SHA1 hash algorithm, as follows:\n\
    \   KRm = SHA1 (home keygen token | care-of keygen token)\n   When de-registering\
    \ (by setting the Registration Request's lifetime\n   to zero), the care-of keygen\
    \ token is not used.  Instead, the KRm is\n   generated as follows:\n   KRm =\
    \ SHA1 (home keygen token)\n   As in Mobile IPv6, the CR does not maintain any\
    \ state for the MR\n   until after receiving a Registration Request.\n"
- title: 3.2.1.  Router Keys
  contents:
  - "3.2.1.  Router Keys\n   Each MR maintains a Kcr, which MUST NOT be shared with\
    \ any other\n   entity.  The Kcr is used for authenticating peer MRs in the situation\n\
    \   where an MR is acting as a CR.  This is analogous to the node key\n   (Kcn)\
    \ in Mobile IPv6.  A CR uses its router key to verify that the\n   keygen tokens\
    \ sent by a peer MR in a Registration Request are the\n   CR's own.  The router\
    \ key MUST be a random number, 16 octets in\n   length, generated with a good\
    \ random number generator [RFC4086].\n   The MR MAY generate a new key at any\
    \ time to avoid persistent key\n   storage.  If desired, it is RECOMMENDED that\
    \ the keys be expired in\n   conjunction with nonces; see Section 3.2.3.\n"
- title: 3.2.2.  Nonces
  contents:
  - "3.2.2.  Nonces\n   Each MR also maintains one or more indexed nonces.  Nonces\
    \ SHOULD be\n   generated periodically with a good random number generator [RFC4086].\n\
    \   The MR may use the same nonces with all MRs.  Nonces MAY be of any\n   length,\
    \ with the RECOMMENDED length being 64 bits.\n"
- title: 3.2.3.  Updating Router Keys and Nonces
  contents:
  - "3.2.3.  Updating Router Keys and Nonces\n   The router keys and nonce updating\
    \ guidelines are similar to those\n   for Mobile IPv6.  MRs keep both the current\
    \ nonce and the small set\n   of valid previous nonces whose lifetimes have not\
    \ expired yet.  A\n   nonce should remain valid for at least MAX_TOKEN_LIFETIME\
    \ seconds\n   (see Section 9) after it has first been used in constructing an\
    \ RR\n   response.  However, the CR MUST NOT accept nonces beyond\n   MAX_NONCE_LIFETIME\
    \ seconds (see Section 9) after the first use.  As\n   the difference between\
    \ these two constants is 30 seconds, a\n   convenient way to enforce the above\
    \ lifetimes is to generate a new\n   nonce every 30 seconds.  The node can then\
    \ continue to accept keygen\n   tokens that have been based on the last 8 (MAX_NONCE_LIFETIME\
    \ / 30)\n   nonces.  This results in keygen tokens being acceptable\n   MAX_TOKEN_LIFETIME\
    \ to MAX_NONCE_LIFETIME seconds after they have been\n   sent to the mobile node,\
    \ depending on whether the token was sent at\n   the beginning or end of the first\
    \ 30-second period.  Note that the\n   correspondent node may also attempt to\
    \ generate new nonces on demand,\n   or only if the old nonces have been used.\
    \  This is possible as long\n   as the correspondent node keeps track of how long\
    \ ago the nonces were\n   used for the first time and does not generate new nonces\
    \ on every\n   return routability request.\n   If the Kcr is being updated, the\
    \ update SHOULD be done at the same\n   time as the nonce is updated.  This way,\
    \ nonce indexes can be used to\n   refer to both Kcrs and nonces.\n"
- title: 3.3.  Mobile-Correspondent Router Operations
  contents:
  - "3.3.  Mobile-Correspondent Router Operations\n   This section deals with the\
    \ operation of mobile and correspondent\n   routers performing route optimization.\
    \  Note that in the context of\n   this document, all routers work as both MR\
    \ and CR.  The term \"mobile\n   router\" applies to the router initiating the\
    \ route optimization\n   procedure, and \"correspondent router\" indicates the\
    \ peer router.\n   There are two issues regarding IPv4 that are different when\
    \ compared\n   to Mobile IPv6 route optimization.  First of all, since Mobile\
    \ IPv4\n   always uses tunnels, there must be a tunnel established between the\n\
    \   MR's and the CR's CoAs.  The CR learns of the MR's CoA, because it is\n  \
    \ included in the Registration Request.  The MR learns the CR's CoA via\n   a\
    \ new extension, \"Care-of Address\", in the Registration Reply.  The\n   second\
    \ issue is a security consideration: In a Registration Request,\n   the MR claims\
    \ to represent an arbitrary IPv4 network.  If the CR has\n   not yet received\
    \ this information (HoA <-> network prefix), it SHOULD\n   perform a re-registration\
    \ with the HA to verify the claim.\n   An additional aspect is that the MR MAY\
    \ use a different CoA for\n   different CRs (and the HA).  This is useful in situations\
    \ where the\n   network provides only partial-mesh connectivity and specific\n\
    \   interfaces must be used to reach specific destinations.  In addition,\n  \
    \ this allows for load balancing.\n"
- title: 3.3.1.  Triggering Route Optimization
  contents:
  - "3.3.1.  Triggering Route Optimization\n   Since each MR knows the eligible route-optimizable\
    \ networks, the\n   route optimization between all CRs can be established at any\
    \ time;\n   however, a better general practice is to conduct route optimization\n\
    \   only on demand.  It is RECOMMENDED that route optimization be started\n  \
    \ only when sending a packet that originates from a local managed\n   network\
    \ (and if the network is registered as route optimizable) and\n   whose destination\
    \ address falls within the network prefixes of the\n   Route Optimization Cache.\
    \  With a small number of MRs, such on-demand\n   behavior may not be necessary,\
    \ and full-mesh route optimization may\n   be in place constantly.\n"
- title: 3.3.2.  Mobile Router Routing Tables
  contents:
  - "3.3.2.  Mobile Router Routing Tables\n   Each MR maintains a routing table. \
    \ In a typical situation, the MR\n   has one or more interface(s) to the local\
    \ networks, one or more\n   interface(s) to wide-area networks (such as those\
    \ provided by ISPs),\n   and a tunnel interface to the HA.  Additional tunnel\
    \ interfaces\n   become activated as route optimization is being performed.\n\
    \   The routing table SHOULD typically contain network prefixes managed\n   by\
    \ CRs associated with established route-optimized tunnel interfaces.\n   A default\
    \ route MAY point to the reverse tunnel to the HA if not\n   overridden by prefix\
    \ information.  The routing table MAY also include\n   additional routes if required\
    \ by the tunneling implementation.\n   The routes for the HoAs of any CRs SHOULD\
    \ also be pointing toward\n   their respective tunnels that are using the optimized\
    \ path.\n   If two prefixes overlap each other, e.g., 192.0.2.128/25 and\n   192.0.2.128/29,\
    \ the standard longest-match rule for routing is in\n   effect.  However, overlapping\
    \ private addresses SHOULD be considered\n   an error situation.  Any aggregation\
    \ for routes in private address\n   space SHOULD be conducted only at the HA.\n"
- title: 3.3.3.  Inter-Mobile Router Registration
  contents:
  - "3.3.3.  Inter-Mobile Router Registration\n   If route optimization between an\
    \ MR and a CR is desired, either the\n   RR procedure must have been performed\
    \ (see Section 3.2), or the KRm\n   must be pre-shared between the MR and the\
    \ CR.  If either condition\n   applies, an MR MAY send a Registration Request\
    \ to the CR's HoA from\n   the desired interface.\n   The Registration Request's\
    \ Source Address and Care-of Address fields\n   are set to the address of the\
    \ desired outgoing interface on the MR.\n   The address MAY be the same as the\
    \ CoA used with the HA.  The Home\n   Agent field is set to the HA of the MR.\
    \  The Registration Request\n   MUST be sent to (have a destination address of)\
    \ the HoA of the CR.\n   The Registration Request MUST include a Mobile-Correspondent\n\
    \   Authentication Extension (defined in Section 5.3) and SHOULD include\n   a\
    \ Mobile Network Request Extension (defined in [RFC5177]).  If\n   present, the\
    \ Mobile Network Request Extension MUST contain the\n   network prefixes, as if\
    \ registering in explicit mode.  If timestamps\n   are used, the CR MUST check\
    \ the Identification field for validity.\n   The Authenticator field is hashed\
    \ with the KRm.\n   The CR replies to the request with a Registration Reply. \
    \ The\n   Registration Reply MUST include a Mobile-Correspondent Authentication\n\
    \   Extension (defined in Section 5.3) and, if a Mobile Network Request\n   Extension\
    \ was present in the request, a Mobile Network\n   Acknowledgement Extension.\n\
    \   The encapsulation can be set as desired, except in the case where the\n  \
    \ Route Optimization Cache Entry has NAT entries for the CR, or the MR\n   itself\
    \ is known to be behind a NAT or firewall.  If either condition\n   applies, the\
    \ Registration Request MUST specify UDP encapsulation.  It\n   is RECOMMENDED\
    \ that UDP encapsulation always be used to facilitate\n   detection of path failures\
    \ via a keepalive mechanism.\n   The CR first checks the Registration Request's\
    \ authentication against\n   Kcr and nonce indexes negotiated during the RR procedure.\
    \  This\n   ensures that the Registration Request is coming from a valid MR. \
    \ If\n   the check fails, an appropriate Registration Reply code is sent (see\n\
    \   Section 10).  If the failure is due to the nonce index expiring, the\n   MR\
    \ sets RRSTATE for the CR to INACTIVE.  The RR procedure MAY then be\n   initiated\
    \ again.\n   If the check passes, the CR MUST then check its Route Optimization\n\
    \   Cache to determine whether the MR exists and is associated with the\n   prefixes\
    \ included in the request (i.e., whether prefixes are present\n   and the 'HA'\
    \ flag is true for each prefix).  Note that the viewpoint\n   is always local;\
    \ the CR compares CR-HoA entries against the MR's HoA\n   -- from the CR's perspective,\
    \ the MR is also a \"correspondent\n   router\".\n   If the check against the\
    \ cache fails, the CR SHOULD send a\n   re-Registration Request to the HA with\
    \ the 'S' (solicitation) bit\n   set, thus obtaining the latest information on\
    \ network prefixes\n   managed by the incoming MR.  If, even after this update,\
    \ the prefixes\n   still don't match, the reply's Mobile Network Acknowledgement\
    \ code\n   MUST be set to \"MOBNET_UNAUTHORIZED\".  The registration MAY also\
    \ be\n   rejected completely.  This verification is done to protect against\n\
    \   MRs claiming to represent arbitrary networks; however, since the HA\n   is\
    \ assumed to provide trusted information, it can authorize the MR's\n   claim.\
    \  If the environment itself is considered trusted, the CR can,\n   as a policy,\
    \ accept registrations without this check; however, this\n   is NOT RECOMMENDED\
    \ as a general practice.\n   If the prefixes match, the CR MAY accept the registration.\
    \  If the CR\n   chooses to accept, the CR MUST check to determine if a tunnel\
    \ to the\n   MR already exists.  If the tunnel does NOT exist or has wrong\n \
    \  endpoints (CoAs), a new tunnel MUST be established and the Route\n   Optimization\
    \ Cache updated.  The reply MUST include a list of\n   eligible CoAs (see Section\
    \ 5.4) with which the MR may establish a\n   tunnel.  The reply MUST also include\
    \ the Mobile-Correspondent\n   Authentication Extension (see Section 5.3).\n \
    \  Upon receiving the Registration Reply, the MR MUST check to determine\n   if\
    \ a tunnel to the CR already exists.  If the tunnel does NOT exist\n   or has\
    \ wrong endpoints (CoAs), a new tunnel MUST be established and\n   the Route Optimization\
    \ Cache updated.  This is covered in detail in\n   Section 3.3.4.\n   The CR's\
    \ routing table MUST be updated to indicate that the MR's\n   networks are reachable\
    \ via the direct tunnel to the MR.\n   After the tunnel is established, the MR\
    \ MAY update its routing tables\n   to reach all of the CR's Prefixes via the\
    \ tunnel, although it is\n   RECOMMENDED that time be given for the CR to perform\
    \ its own,\n   explicit registration.  This is primarily a policy decision,\n\
    \   depending on the network environment.  See Section 6.5.\n   Due to the fact\
    \ that the route optimization procedures may occur\n   concurrently at both MRs,\
    \ each working as each other's CR, there may\n   be a situation where two routers\
    \ are attempting to establish separate\n   tunnels between them at the same time.\
    \  If a router with a smaller\n   HoA (meaning a normal 32-bit integer comparison\
    \ treating IPv4\n   addresses as 32-bit unsigned integers) receives a Registration\n\
    \   Request (in the CR role) while its own Registration Request (sent in\n   the\
    \ MR role) is pending, the attempt should be accepted with reply\n   code \"concurrent\
    \ registration\" (Value 2).  If receiving such an\n   indication, the recipient\
    \ SHOULD consider the registration a success\n   but only act on it once the peer\
    \ has completed its own registration.\n"
- title: 3.3.4.  Inter-Mobile Router Tunnels
  contents:
  - "3.3.4.  Inter-Mobile Router Tunnels\n   Inter-MR tunnel establishment follows\
    \ establishing standard reverse\n   tunnels to the HA.  The Registration Request\
    \ to the CR includes\n   information on the desired encapsulation.  It is RECOMMENDED\
    \ that UDP\n   encapsulation be used.  In the cases of Generic Router Encapsulation\n\
    \   (GRE) [RFC2784], IP over IP [RFC2003], or minimal encapsulation\n   [RFC2004],\
    \ no special considerations regarding reachability are\n   necessary.  The tunnel\
    \ has no stateful information; the packets are\n   simply encapsulated within\
    \ the GRE, IP, or minimal header.\n   The tunnel origination point for the CR\
    \ is its CoA, not the HoA where\n   the Registration Requests were sent.  This\
    \ is different from the\n   creation of the reverse tunnel to the HA, which reuses\
    \ the channel\n   from registration signaling.\n   Special considerations rise\
    \ from using UDP encapsulation, especially\n   in cases where one of the MRs is\
    \ located behind a NAT or firewall.  A\n   deviation from RFC 3519 [RFC3519] is\
    \ that keepalives should be sent\n   from both ends of the tunnel to detect path\
    \ failures after the\n   initial keepalive has been sent -- this allows both the\
    \ MR and CR to\n   detect path failures.\n   The initial UDP keepalive SHOULD\
    \ be sent by the MR.  Only after the\n   first keepalive is successfully completed\
    \ SHOULD the tunnel be\n   considered eligible for traffic.  If a reply to the\
    \ initial keepalive\n   is not received, the MR may opt to attempt sending the\
    \ keepalive to\n   other CoAs provided by the Registration Reply to check whether\
    \ they\n   provide better connectivity; or, if all of these fail, the MR may\n\
    \   perform a re-registration via an alternative interface, or deregister\n  \
    \ completely.  See Section 6.1.  Once the initial keepalive packet has\n   reached\
    \ the CR and a reply has been sent, the CR MAY start sending\n   its own keepalives.\n\
    \   The original specification for UDP encapsulation suggests a keepalive\n  \
    \ interval default of 110 seconds.  However, to provide fast response\n   time\
    \ and switching to alternate paths, it is RECOMMENDED, if power\n   and other\
    \ constraints allow, that considerably shorter periods be\n   used, adapting to\
    \ the perceived latency as needed.  However, the\n   maximum amount of keepalives\
    \ SHOULD at no point exceed\n   MAX_UPDATE_RATE times per second.  The purpose\
    \ of the keepalive is\n   not to keep NAT or firewall mappings in place but to\
    \ serve as a\n   mechanism to provide fast response in case of path failures.\n\
    \   If both the MR and the CR are behind separate NATs, route\n   optimization\
    \ cannot be performed between them.  Possible ways to set\n   up mutual tunneling\
    \ when both routers are behind NATs are outside the\n   scope of this document.\
    \  However, some of these issues are addressed\n   in Section 6.1.\n   The designations\
    \ \"MR\" and \"CR\" only apply to the initial tunnel\n   establishment phase.\
    \  Once a tunnel is established between two\n   routers, either of them can opt\
    \ to either tear down the tunnel or\n   perform a handover.  Signaling messages\
    \ have to be authenticated with\n   a valid KRm.\n"
- title: 3.3.5.  Constructing Route-Optimized Packets
  contents:
  - "3.3.5.  Constructing Route-Optimized Packets\n   All packets received by the\
    \ MR are forwarded using normal routing\n   rules according to the routing table.\
    \  There are no special\n   considerations when constructing the packets; the\
    \ tunnel interface's\n   own processes will encapsulate any packet automatically.\n"
- title: 3.3.6.  Handovers and Mobile Routers Leaving Network
  contents:
  - "3.3.6.  Handovers and Mobile Routers Leaving Network\n   Handovers and connection\
    \ breakdowns can be categorized as either\n   ungraceful or graceful, also known\
    \ as \"break-before-make\" (bbm) and\n   \"make-before-break\" (mbb) situations.\n\
    \   As with establishment, the \"mobile router\" discussed here is the\n   router\
    \ wishing to change connectivity state, with the \"correspondent\n   router\"\
    \ being the peer.\n   When an MR wishes to join its home link, it SHOULD, in addition\
    \ to\n   sending the Registration Request to the HA with lifetime set to zero,\n\
    \   also send such a request to all known CRs, to their HoAs.  The CR(s),\n  \
    \ upon accepting this request and sending the reply, will check whether\n   the\
    \ Route Optimization Cache contains any prefixes associated with\n   the requesting\
    \ MR.  These entries should be removed and the routing\n   table updated accordingly\
    \ (traffic for the prefixes will be forwarded\n   via the HA again).  The tunnel\
    \ MUST then be destroyed.  A short grace\n   period SHOULD be used to allow possible\
    \ in-transit packets to be\n   received correctly.\n   In the case of a handover,\
    \ the CR simply needs to update the tunnel's\n   destination to the MR's new CoA.\
    \  The MR SHOULD keep accepting\n   packets from both old and new CoAs for a short\
    \ grace period,\n   typically on the order of ten seconds.  In the case of UDP\n\
    \   encapsulation, it is RECOMMENDED that the same port numbers be used\n   for\
    \ both registration signaling and tunneled traffic, if possible.\n   The initial\
    \ keepalive message sent by the MR will verify that direct\n   connectivity exists\
    \ between the MR and CR -- if the keepalive fails,\n   the MR SHOULD attempt alternate\
    \ paths.\n   If the MR was unable to send the re-Registration Request before\n\
    \   handover, it MUST send it immediately after handover has been\n   completed\
    \ and a tunnel with the HA is established.  Since the\n   changing of CoA(s) invalidates\
    \ the KRm, it is RECOMMENDED that\n   partial return routability be conducted\
    \ by sending a CoTI message via\n   the new CoA and obtaining a new care-of keygen\
    \ token.  In all cases,\n   necessary tokens also have to be acquired if the existing\
    \ tokens have\n   expired.\n   If a reply is not received for a Registration Request\
    \ to a CR, any\n   routes to the network prefixes managed by the CR MUST be removed\
    \ from\n   the routing table, thus causing the user traffic to be forwarded via\n\
    \   the HA.\n"
- title: 3.4.  Convergence and Synchronization Issues
  contents:
  - "3.4.  Convergence and Synchronization Issues\n   The information the HA maintains\
    \ on mobile network prefixes and the\n   MRs' Route Optimization Caches does not\
    \ need to be explicitly\n   synchronized.  This is based on the assumption that\
    \ at least some of\n   the traffic between nodes inside mobile networks is always\n\
    \   bidirectional.  If using on-demand route optimization, this also\n   implies\
    \ that when a node in a mobile network talks to a node in\n   another mobile network,\
    \ if the initial packet does not trigger route\n   optimization, the reply packet\
    \ will.\n   Consider a situation with three mobile networks, A, B, and C, handled\n\
    \   by three mobile routers, MR A, MR B, and MR C, respectively.  If they\n  \
    \ register with an HA in this order, the situation goes as follows:\n   MR A registers\
    \ and receives no information on other networks from the\n   HA, as no other MR\
    \ has registered yet.\n   MR B registers and receives information on mobile network\
    \ A being\n   reachable via MR A.\n   MR C registers and receives information\
    \ on both of the other mobile\n   networks.\n   If a node in mobile network C\
    \ is about to send traffic to mobile\n   network A, the route optimization is\
    \ straightforward; MR C already\n   has network A in its Route Optimization Cache.\
    \  Thus, packet\n   transmission triggers route optimization toward MR A.  When\
    \ MR C\n   registers with MR A (after the RR procedure is completed), MR A does\n\
    \   not have information on mobile network C; thus, it will perform a\n   re-registration\
    \ with the HA on demand.  This allows MR A to verify\n   that MR C is indeed managing\
    \ network C.\n   If a node in mobile network B sends traffic to mobile network\
    \ C, MR B\n   has no information on network C.  No route optimization is triggered.\n\
    \   However, when the node in network C replies and the reply reaches MR\n   C,\
    \ route optimization happens as above.  Further examples of\n   signaling are\
    \ in Section 8.\n   Even in the very rare case of completely unidirectional traffic\
    \ from\n   an entire network, re-registrations with the HA caused by timeouts\n\
    \   will eventually cause convergence.  However, this should be treated\n   as\
    \ a special case.\n   Note that all MRs are connected to the same HA.  For possibilities\n\
    \   concerning multiple HAs, see Section 6.4.\n"
- title: 4.  Data Compression Schemes
  contents:
  - "4.  Data Compression Schemes\n   This section defines the two compression formats\
    \ used in Route\n   Optimization Prefix Advertisement Extensions.\n"
- title: 4.1.  Prefix Compression
  contents:
  - "4.1.  Prefix Compression\n   Prefix compression is based on the idea that prefixes\
    \ usually share\n   common properties.  The scheme is simple delta compression.\
    \  In the\n   prefix information advertisement (Section 5.5), the 'D' bit indicates\n\
    \   whether receiving a \"master\" or a \"delta\" prefix.  This, combined\n  \
    \ with the Prefix Length information, allows for compression and\n   decompression\
    \ of prefix information.\n   If D = 0, what follows in the \"Prefix\" field are\
    \ bits 1..n of the new\n   master prefix, where n is PLen.  This is rounded up\
    \ to the nearest\n   full octet.  Thus, prefix lengths of /4 and /8 take 1 octet,\
    \ /12 and\n   /16 take 2 octets, /20 and /24 take 3 octets, and longer prefix\n\
    \   lengths take a full 4 octets.\n   If D = 1, what follows in the \"Prefix\"\
    \ field are bits m..PLen of the\n   prefix, where m is the first changed bit of\
    \ the previous master\n   prefix, with padding from the master prefix filling\
    \ the field to a\n   full octet.  The maximum value of PLen - m is 8 (that is,\
    \ the delta\n   MUST fit into one octet).  If this is not possible, a new master\n\
    \   prefix has to be declared.  If the prefixes are equal -- for example,\n  \
    \ in the case where the same prefix appears in multiple realms -- then\n   one\
    \ octet is still encoded, consisting completely of padding from the\n   master\
    \ prefix.\n   Determining the order of prefix transmission should be based on\n\
    \   saving maximum space during transmission.\n   An example of compression and\
    \ transmitted data, where network\n   prefixes 192.0.2.0/28, 192.0.2.64/26, and\
    \ 192.0.2.128/25 are\n   transmitted, is illustrated in Figure 1.  Because of\
    \ the padding to\n   full octets, redundant information is also sent.  The bit\
    \ patterns\n   being transmitted are as follows:\n  =+= shows the prefix mask\n\
    \  --- shows the master prefix for delta coded prefixes\n  192.0.2.0/28, D = 0\n\
    \  0                   1                     2                     3\n  1 2 3\
    \ 4 5 6 7 8   9 0 1 2 3 4 5 6   7 8 9 0 1 2 3 4   5 6 7 8 9 0 1 2\n +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \ |1|1|0|0|0|0|0|0|.|0|0|0|0|0|0|0|0|.|0|0|0|0|0|0|1|0|.|0|0|0|0|0|0|0|0|\n +=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+-+-+-+-+\n\
    \  ^                                                                   ^\n  +----------------------------\
    \ encoded ------------------------------+\n                                  \
    \                              ^     ^\n                                     \
    \                           +-pad-+\n  192.0.2.64/26, D = 1\n  0             \
    \      1                     2                     3\n  1 2 3 4 5 6 7 8   9 0\
    \ 1 2 3 4 5 6   7 8 9 0 1 2 3 4   5 6 7 8 9 0 1 2\n +-------------------------------------------------------------+-+-+-+-+\n\
    \ |1|1|0|0|0|0|0|0|.|0|0|0|0|0|0|0|0|.|0|0|0|0|0|0|1|0|.|0|1|0|0|0|0|0|0|\n +=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+-+-+-+-+-+-+\n\
    \                                          ^               ^\n               \
    \                           +--- encoded ---+\n                              \
    \            ^             ^\n                                          +-- padding\
    \ --+\n  192.0.2.128/25, D = 1\n  0                   1                     2\
    \                     3\n  1 2 3 4 5 6 7 8   9 0 1 2 3 4 5 6   7 8 9 0 1 2 3 4\
    \   5 6 7 8 9 0 1 2\n +-------------------------------------------------------------+-+-+-+-+\n\
    \ |1|1|0|0|0|0|0|0|.|0|0|0|0|0|0|0|0|.|0|0|0|0|0|0|1|0|.|1|0|0|0|0|0|0|0|\n +=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+-+-+-+-+-+-+-+\n\
    \                                        ^               ^\n                 \
    \                       +--- encoded ---+\n                                  \
    \      ^           ^\n                                        +- padding -+\n\
    \                   Figure 1: Prefix Compression Example\n   The first prefix,\
    \ 192.0.2.0/28, is considered a master prefix and is\n   transmitted in full.\
    \  The PLen of 28 bits determines that all four\n   octets must be transmitted.\
    \  If the prefix would have been, e.g.,\n   192.0.2.0/24, three octets would have\
    \ sufficed, since 24 bits fit\n   into 3 octets.\n   For the following prefixes,\
    \ D = 1.  Thus, they are deltas of the\n   previous prefix, where D was zero.\n\
    \   192.0.2.64/26 includes bits 19-26 (full octet).  Bits 19-25 are\n   copied\
    \ from the master prefix, but bit 26 is changed to 1.  The final\n   notation\
    \ in binary is \"1001\", or 0x09.\n   192.0.2.128/25 includes bits 18-25 (full\
    \ octet).  Bits 18-24 are\n   copied from the master prefix, but bit 25 is changed\
    \ to 1.  The final\n   notation in binary is \"101\", or 0x05.\n   The final encoding\
    \ thus becomes\n   +----------------+--------+-+---------------------+\n   | \
    \    Prefix     |  PLen  |D| Transmitted Prefix  |\n   +----------------+--------+-+---------------------+\n\
    \   | 192.0.2.0/28   |  28    |0| 0xc0 0x00 0x02 0x00 |\n   | 192.0.2.64/26  |\
    \  26    |1| 0x09                |\n   | 192.0.2.128/25 |  25    |1| 0x05    \
    \            |\n   +----------------+--------+-+---------------------+\n   It\
    \ should be noted that in this case the order of prefix transmission\n   would\
    \ not affect compression efficiency.  If prefix 192.0.2.128/25\n   would have\
    \ been considered the master prefix and the others as deltas\n   instead, the\
    \ resulting encoding still fits into one octet for the\n   subsequent prefixes.\
    \  There would be no need to declare a new master\n   prefix.\n"
- title: 4.2.  Realm Compression
  contents:
  - '4.2.  Realm Compression

    '
- title: 4.2.1.  Encoding of Compressed Realms
  contents:
  - "4.2.1.  Encoding of Compressed Realms\n   In order to reduce the size of messages,\
    \ the system introduces a\n   realm compression scheme, which reduces the size\
    \ of realms in a\n   message.  The compression scheme is a simple dynamically\
    \ updated\n   dictionary-based algorithm, which is designed to compress text\n\
    \   strings of arbitrary length.  In this scheme, an entire realm, a\n   single\
    \ label, or a list of labels may be replaced with an index to a\n   previous occurrence\
    \ of the same string stored in the dictionary.  The\n   realm compression defined\
    \ in this specification was inspired by the\n   RFC 1035 [RFC1035] DNS domain\
    \ name label compression scheme.  Our\n   algorithm is, however, improved to gain\
    \ more compression.\n   When compressing realms, the dictionary is first reset\
    \ and does not\n   contain a single string.  The realms are processed one by one,\
    \ so the\n   algorithm does not expect to see them all or the whole message at\n\
    \   once.  The state of the compressor is the current content of the\n   dictionary.\
    \  The realms are compressed label by label or as a list of\n   labels.  The dictionary\
    \ can hold a maximum of 128 strings; after\n   that, a rollover MUST occur, and\
    \ existing contents will be\n   overwritten.  Thus, when adding the 129th string\
    \ into the dictionary,\n   the first entry of the dictionary MUST be overwritten,\
    \ and the index\n   of the new string will become 0.\n   The encoding of an index\
    \ to the dictionary or an uncompressed run of\n   octets representing a single\
    \ label has purposely been made simple,\n   and the whole encoding works on an\
    \ octet granularity.  The encoding\n   of an uncompressed label takes the form\
    \ of one octet as follows:\n    0\n    0 1 2 3 4 5 6 7\n   +-+-+-+-+-+-+-+-+-+-+-+-=================-+-+-+-+\n\
    \   |0|   LENGTH    | 'length' octets long string.. |\n   +-+-+-+-+-+-+-+-+-+-+-+-=================-+-+-+-+\n\
    \   This encoding allows label lengths from 1 to 127 octets.  A label\n   length\
    \ of zero (0) is not allowed.  The \"label length\" tag octet is\n   then followed\
    \ by up to 127 octets of the actual encoded label string.\n   The index to the\
    \ dictionary (the \"label index\" tag octet) takes the\n   form of one octet as\
    \ follows:\n    0\n    0 1 2 3 4 5 6 7\n   +-+-+-+-+-+-+-+-+\n   |1|   INDEX \
    \    |\n   +-+-+-+-+-+-+-+-+\n   The above encodings do not allow generating an\
    \ output octet value of\n   zero (0).  The encapsulating Mobile IPv4 extension\
    \ makes use of this\n   property and uses the value of zero (0) to mark the end\
    \ of the\n   compressed realm or to indicate an empty realm.  It is also possible\n\
    \   to encode the complete realm using only \"label length\" tags.  In this\n\
    \   case, no compression takes place.  This allows the sender to skip\n   compression\
    \ -- for example, to reduce computation requirements when\n   generating messages.\
    \  However, the receiver MUST always be prepared\n   to receive compressed realms.\n"
- title: 4.2.2.  Searching Algorithm
  contents:
  - "4.2.2.  Searching Algorithm\n   When compressing the input realm, the dictionary\
    \ is searched for a\n   matching string.  If no match could be found, the last\
    \ label is\n   removed from the right-hand side of the used input realm.  The\
    \ search\n   is repeated until the whole input realm has been processed.  If no\n\
    \   match was found at all, then the first label of the original input\n   realm\
    \ is encoded using the \"label length\" tag, and the label is\n   inserted into\
    \ the dictionary.  The previously described search is\n   repeated with the remaining\
    \ part of the input realm, if any.  If\n   nothing remains, the realm encoding\
    \ is complete.\n   When a matching string is found in the dictionary, the matching\
    \ part\n   of the input realm is encoded using the \"label index\" tag.  The\n\
    \   matching part of the input realm is removed, and the search is\n   repeated\
    \ with the remaining part of the input realm, if any.  If\n   nothing remains,\
    \ the octet value of zero (0) is inserted to mark the\n   end of the encoded realm.\n\
    \   The search algorithm also maintains the \"longest non-matching string\"\n\
    \   for each input realm.  Each time the search in the dictionary fails\n   and\
    \ a new label gets encoded using the \"label length\" tag and\n   inserted into\
    \ the dictionary, the \"longest non-matching string\" is\n   concatenated by this\
    \ label, including the separating \".\" (dot, i.e.,\n   hexadecimal 0x2e).  When\
    \ a match is found in the dictionary, the\n   \"longest non-matching string\"\
    \ is reset (i.e., emptied).  Once the\n   whole input realm has been processed\
    \ and encoded, all possible\n   suffixes longer than one label are taken from\
    \ the string and inserted\n   into the dictionary.\n"
- title: 4.2.3.  Encoding Example
  contents:
  - "4.2.3.  Encoding Example\n   This section shows an example of how to encode a\
    \ set of realms using\n   the specified realm compression algorithm.  For example,\
    \ a message\n   might need to compress the realms \"foo.example.com\",\n   \"\
    bar.foo.example.com\", \"buz.foo.example.org\", \"example.com\", and\n   \"bar.example.com.org\"\
    .  The following example shows the processing of\n   input realms on the left-hand\
    \ side and the contents of the dictionary\n   on the right-hand side.  The example\
    \ uses hexadecimal representation\n   of numbers.\n   COMPRESSOR:            \
    \                     DICTIONARY:\n   1) Input \"foo.example.com\"\n   Search(\"\
    foo.example.com\")\n   Search(\"foo.example\")\n   Search(\"foo\")\n   Encode(0x03,'f','o','o')\
    \                    0x00 \"foo\"\n     +-> \"longest non-matching string\" =\
    \ \"foo\"\n   Search(\"example.com\")\n   Search(\"example\")\n   Encode(0x07,'e','x','a','m','p','l','e')\
    \    0x01 \"example\"\n     +-> \"longest non-matching string\" = \"foo.example\"\
    \n   Search(\"com\")\n   Encode(0x03,'c','o','m')                    0x02 \"com\"\
    \n     +-> \"longest non-matching string\" = \"foo.example.com\"\n           \
    \                                    0x03 \"foo.example.com\"\n              \
    \                                 0x04 \"example.com\"\n   Encode(0x00)\n   2)\
    \ Input \"bar.foo.example.com\"\n   Search(\"bar.foo.example.com\")\n   Search(\"\
    bar.foo.example\")\n   Search(\"bar.foo\")\n   Search(\"bar\")\n   Encode(0x03,'b','a','r')\
    \                    0x05 \"bar\"\n     +-> \"longest non-matching string\" =\
    \ \"bar\"\n   Search(\"foo.example.com\") -> match to 0x03\n   Encode(0x83)\n\
    \     +-> \"longest non-matching string\" = NUL\n   Encode(0x00)\n   3) Input\
    \ \"buz.foo.example.org\"\n   Search(\"buz.foo.example.org\")\n   Search(\"buz.foo.example\"\
    )\n   Search(\"buz.foo\")\n   Search(\"buz\")\n   Encode(0x03,'b','u','z')   \
    \                 0x06 \"buz\"\n     +-> \"longest non-matching string\" = \"\
    buz\"\n   Search(\"foo.example.org\")\n   Search(\"foo.example\")\n   Search(\"\
    foo\") -> match to 0x00\n   Encode(0x80)\n     +-> \"longest non-matching string\"\
    \ = NUL\n   Search(\"example.org\")\n   Search(\"example\") -> match to 0x01\n\
    \   Encode(0x81)\n     +-> \"longest non-matching string\" = NUL\n   Search(\"\
    org\")\n   Encode(0x03,'o','r','g')                    0x07 \"org\"\n     +->\
    \ \"longest non-matching string\" = \"org\"\n   Encode(0x00)\n   4) Input \"example.com\"\
    \n   Search(\"example.com\") -> match to 0x04\n   Encode(0x84)\n   Encode(0x00)\n\
    \   5) Input \"bar.example.com.org\"\n   Search(\"bar.example.com.org\")\n   Search(\"\
    bar.example.com\")\n   Search(\"bar.example\")\n   Search(\"bar\") -> match to\
    \ 0x05\n   Encode(0x85)\n   Search(\"example.com.org\")\n   Search(\"example.com\"\
    ) -> match to 0x04\n   Encode(0x84)\n   Search(\"org\") -> match to 0x07\n   Encode(0x87)\n\
    \   Encode(0x00)\n   As can be seen from the example, due to the greedy approach\
    \ of\n   encoding matches, the search algorithm and the dictionary update\n  \
    \ function are not the most optimal.  However, we do not claim that the\n   algorithm\
    \ would be the most efficient.  It functions efficiently\n   enough for most inputs.\
    \  In this example, the original input realm\n   data was 79 octets, and the compressed\
    \ output, excluding the end\n   mark, is 35 octets.\n"
- title: 5.  New Mobile IPv4 Messages and Extensions
  contents:
  - "5.  New Mobile IPv4 Messages and Extensions\n   This section describes the construction\
    \ of all new information\n   elements.\n"
- title: 5.1.  Mobile Router Route Optimization Capability Extension
  contents:
  - "5.1.  Mobile Router Route Optimization Capability Extension\n   This skippable\
    \ extension MAY be sent by an MR to an HA in the\n   Registration Request message.\n\
    \     0               1               2               3\n     0 1 2 3 4 5 6 7\
    \ 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |     Type      |    Length     |    Subtype    |A|R|S|O| Rsvd  |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    ~                 Optional Mobile Router HoA                    ~\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Type      153 (skippable); if the HA does not support route\n            \
    \ optimization advertisements, it can ignore this request and\n             simply\
    \ not include any information in the reply. \"short\"\n             extension\
    \ format.\n   Subtype   1\n   Reserved  Set to zero; MUST be ignored on reception.\n\
    \   A         Advertise my networks.  If the 'A' bit is set, the HA is\n     \
    \        allowed to advertise the networks managed by this MR to\n           \
    \  other MRs.  This also indicates that the MR is capable of\n             receiving\
    \ route optimization Registration Requests.  In\n             effect, this allows\
    \ the MR to work in the CR role.\n   R         Request mobile network information.\
    \  If the 'R' bit is set,\n             the HA MAY respond with information about\
    \ mobile networks\n             in the same domain.\n   S         Solicit prefixes\
    \ managed by a specific MR.  The MR is\n             specified in the Optional\
    \ Mobile Router HoA field.\n   O         Explicitly specify that the requesting\
    \ router is only able\n             to initiate outgoing connections and not accept\
    \ any\n             incoming connections, due to a NAT device, stateful\n    \
    \         firewall, or similar issue on any interface.  This is\n            \
    \ reflected by the HA in the reply and distributed in Prefix\n             Advertisements\
    \ to other MRs.\n   Optional Mobile Router HoA\n             Solicited mobile\
    \ router's home address.  This field is only\n             included if the 'S'\
    \ flag is set.\n"
- title: 5.2.  Route Optimization Reply
  contents:
  - "5.2.  Route Optimization Reply\n   This non-skippable extension MUST be sent\
    \ by an HA to an MR in the\n   Registration Reply message, if the MR indicated\
    \ support for route\n   optimization in the registration message and the HA supports\
    \ route\n   optimization.\n     0               1               2            \
    \   3\n     0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n\
    \    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n    |\
    \     Type      |    Length     |    Subtype    |O|N|S|   Code  |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Type      49 (non-skippable); \"short\" extension format.\n   Subtype   1\n\
    \   O         The 'O' flag in the Mobile Router Route Optimization\n         \
    \    Capability Extension was set during registration.\n   N         NAT was detected\
    \ by the HA.  This informs the MR that it is\n             located behind a NAT.\
    \  The detection procedure is specified\n             in RFC 3519 [RFC3519] and\
    \ is based on the discrepancy\n             between the registration packet's\
    \ source address and\n             indicated CoA.  The MR can use this information\
    \ to make\n             decisions about route optimization strategy.\n   S   \
    \      Responding to a solicitation.  If the 'S' bit was present\n           \
    \  in the MR's Route Optimization Capability Extension\n             (Section\
    \ 5.1), this bit is set; otherwise, it is unset.\n   The Reply code indicates\
    \ whether route optimization has been\n   accepted.  Values of 0..15 indicate\
    \ assent, and values 16..63\n   indicate that route optimization is not done.\n\
    \   0         Will do route optimization.\n   16        Route optimization declined;\
    \ reason unspecified.\n"
- title: 5.3.  Mobile-Correspondent Authentication Extension
  contents:
  - "5.3.  Mobile-Correspondent Authentication Extension\n   The Mobile-Correspondent\
    \ Authentication Extension is included in\n   Registration Requests sent from\
    \ the MR to the CR.  The existence of\n   this extension indicates that the message\
    \ is not destined to an HA,\n   but another MR.  The format is similar to the\
    \ other authentication\n   extensions defined in [RFC5944], with Security Parameter\
    \ Indexes\n   (SPIs) replaced by nonce indexes.\n     0               1      \
    \         2               3\n     0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\
    \ 2 3 4 5 6 7 8 9 0 1\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |     Type      |    Length     |    Subtype    |    Reserved   |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |      Home Nonce Index         |     Care-of Nonce Index       |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |                      Authenticator...                         ~\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   The Home Nonce Index field tells the CR which nonce value to use when\n  \
    \ producing the home keygen token.  The Care-of Nonce Index field is\n   ignored\
    \ in requests to remove a binding.  Otherwise, it tells the CR\n   which nonce\
    \ value to use when producing the care-of keygen token.  If\n   using a pre-shared\
    \ key (KRm), the indexes may be set to zero and are\n   ignored on reception.\n\
    \   Type      49 (non-skippable); \"short\" extension format.\n   Subtype   2\n\
    \   Reserved  Set to zero; MUST be ignored on reception.\n   Home Nonce Index\n\
    \             Home Nonce Index in use.  If using a pre-shared KRm, set to\n  \
    \           zero and ignored on reception.\n   Care-of Nonce Index\n         \
    \    Care-of Nonce Index in use.  If using a pre-shared KRm, set\n           \
    \  to zero and ignored on reception.\n   Authenticator\n             Authenticator\
    \ field, by default constructed with\n             First (128, HMAC_SHA1 (KRm,\
    \ Protected Data)).\n   The protected data, just like in other cases where the\
    \ Authenticator\n   field is used, consists of\n   o  the UDP payload (i.e., the\
    \ Registration Request or Registration\n      Reply data),\n   o  all prior extensions\
    \ in their entirety, and\n   o  the Type, Length, Home Nonce Index, and Care-of\
    \ Nonce Index of\n      this extension.\n"
- title: 5.4.  Care-of Address Extension
  contents:
  - "5.4.  Care-of Address Extension\n   The Care-of Address Extension is added to\
    \ a Registration Reply sent\n   by the CR to inform the MR of the upcoming tunnel\
    \ endpoint.\n     0               1               2               3\n     0 1\
    \ 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |     Type      |    Length     |    Subtype    |   Reserved    |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \       1..n times the following information structure\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |                        Care-of Address                        |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Type      49 (non-skippable); \"short\" extension format.\n   Length    Total\
    \ length of the packet.  When processing the\n             information structures,\
    \ if Length octets have been reached,\n             this is an indication that\
    \ the final information structure\n             was reached as well.\n   Subtype\
    \   3\n   Care-of Address\n             Care-of address(es) that may be used for\
    \ a tunnel with the\n             MR, in order of priority.  Multiple CoAs MAY\
    \ be listed to\n             facilitate faster NAT traversal processing.\n"
- title: 5.5.  Route Optimization Prefix Advertisement Extension
  contents:
  - "5.5.  Route Optimization Prefix Advertisement Extension\n   This non-skippable\
    \ extension MAY be sent by an HA to an MR in the\n   Registration Reply message.\
    \  This extension is only included when\n   explicitly requested by the MR in\
    \ the Registration Request message,\n   setting the 'R' flag of the Mobile Router\
    \ Route Optimization\n   Capability Extension.  Implicit prioritization of prefixes\
    \ is caused\n   by the order of extensions.\n   The extension contains a sequence\
    \ of information structures.  An\n   information structure may consist of either\
    \ an MR HoA or a network\n   prefix.  Any network prefixes following an MR HoA\
    \ are owned by that\n   MR.  An MR HoA MUST be first in the sequence, since one\
    \ cannot have\n   prefixes without an MR.\n     0               1            \
    \   2               3\n     0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4\
    \ 5 6 7 8 9 0 1\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |     Type      |    Subtype    |             Length            |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \     1..n times the following information structure\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |D|M| PLen/Info |  Optional Mobile Router HoA (4 octets)        ~\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    ~               |  Optional Prefix (1, 2, 3, or 4 octets)       ~\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    ~                   Realm (1..n characters)                     ~\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Type      50 (non-skippable); \"long\" extension format.\n   Subtype   1\n\
    \   Length    Total length of the packet.  When processing the\n             information\
    \ structures, if Length octets have been reached,\n             this is an indication\
    \ that the final information structure\n             was reached as well.\n  \
    \ D         Delta.  If D = 1, the prefix is a delta from the last\n          \
    \   Prefix, where D = 0.  MUST be zero on the first information\n            \
    \ structure containing a Prefix; MAY be zero or one on\n             subsequent\
    \ information structures.  If D = 1, the Prefix\n             field is one octet\
    \ in length.  See Section 4.1 for details.\n   M         Mobile Router HoA bit.\
    \  If M = 1, the next field is Mobile\n             Router HoA, and Prefix and\
    \ Realm are omitted.  If M = 0,\n             the next field is Prefix followed\
    \ by Realm, and Mobile\n             Router HoA is omitted.  For the first information\n\
    \             structure, M MUST be set to 1.  If M = 1, the 'D' bit is\n     \
    \        set to zero and ignored upon reception.\n   PLen/Info\n             This\
    \ field is interpreted differently, depending on whether\n             the 'M'\
    \ bit is set or not.  If M = 0, the field is\n             considered to be the\
    \ PLen field, and the contents indicate\n             the length of the advertised\
    \ prefix.  The 6 bits allow for\n             values from 0 to 63, of which 33-63\
    \ are illegal.  If M = 1,\n             the field is considered to be the Info\
    \ field.  Permissible\n             values are 0 to indicate no specific information,\
    \ or 1 to\n             indicate \"outbound connections only\".  This indicates\
    \ that\n             the target MR can only initiate, not receive, connections\n\
    \             on any of its interfaces (apart from the reverse tunnel to\n   \
    \          the HA).  This is set if the MR has explicitly requested it\n     \
    \        via the 'O' flag in the Mobile Router Route Optimization\n          \
    \   Capability Extension (Section 5.1).\n   Mobile Router HoA\n             The\
    \ mobile router's home address.  All prefixes in the\n             following information\
    \ structures where M = 0 are maintained\n             by this MR.  This field\
    \ is present only when M = 1.\n   Prefix    The IPv4 prefix advertised.  If D\
    \ = 0, the field length is\n             PLen bits, rounded up to the nearest\
    \ full octet.  Least-\n             significant bits starting off PLen (and that\
    \ are zeros) are\n             omitted.  If D = 1, the field length is one octet.\
    \  This\n             field is present only when M = 0.\n   Realm     The Realm\
    \ that is associated with the advertised Mobile\n             Router HoA and prefix.\
    \  If empty, MUST be set to '\\0'.  For\n             realm encoding and an optional\
    \ compression scheme, refer to\n             Section 4.2.  This field is present\
    \ only when M = 0.\n"
- title: 5.6.  Home Test Init Message
  contents:
  - "5.6.  Home Test Init Message\n   This message is sent from the MR to the CR when\
    \ performing the RR\n   procedure.  The source and destination IP addresses are\
    \ set to the\n   MR's HoA and the CR's HoA, respectively.  The UDP source port\
    \ MAY be\n   randomly chosen.  The UDP destination port is 434.\n     0      \
    \         1               2               3\n     0 1 2 3 4 5 6 7 8 9 0 1 2 3\
    \ 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |     Type      |   Reserved    |                               |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\
    \                               +\n    |                          Home Init Cookie\
    \                     |\n    +                               +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |                               |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Type      24\n   Reserved  Set to zero; MUST be ignored on reception.\n  \
    \ Home Init Cookie\n             64-bit field that contains a random value, the\
    \ Home Init\n             Cookie.\n"
- title: 5.7.  Care-of Test Init Message
  contents:
  - "5.7.  Care-of Test Init Message\n   This message is sent from the MR to the CR\
    \ when performing the RR\n   procedure.  The source and destination IP addresses\
    \ are set to the\n   MR's CoA and the CR's HoA, respectively.  The UDP source\
    \ port MAY be\n   randomly chosen.  The UDP destination port is 434.\n     0 \
    \              1               2               3\n     0 1 2 3 4 5 6 7 8 9 0 1\
    \ 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |     Type      |   Reserved    |                               |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\
    \                               +\n    |                       Care-of Init Cookie\
    \                     |\n    +                               +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |                               |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Type      25\n   Reserved  Set to zero; MUST be ignored on reception.\n  \
    \ Care-of Init Cookie\n             64-bit field that contains a random value,\
    \ the Care-of Init\n             Cookie.\n"
- title: 5.8.  Home Test Message
  contents:
  - "5.8.  Home Test Message\n   This message is sent from the CR to the MR when performing\
    \ the RR\n   procedure as a reply to the Home Test Init message.  The source and\n\
    \   destination IP addresses, as well as UDP ports, are the reverse of\n   those\
    \ in the Home Test Init message for which this message is\n   constructed.  As\
    \ such, the UDP source port is always 434.\n     0               1           \
    \    2               3\n     0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4\
    \ 5 6 7 8 9 0 1\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |     Type      |   Reserved    |         Nonce Index           |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |                                                               |\n    +\
    \                    Home Init Cookie                           +\n    |     \
    \                                                          |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |                                                               |\n    +\
    \                    Home Keygen Token                          +\n    |     \
    \                                                          |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Type      26\n   Reserved  Set to zero; MUST be ignored on reception.\n  \
    \ Nonce Index\n             This field will be echoed back by the MR to the CR\
    \ in a\n             subsequent Registration Request's authentication extension.\n\
    \   Home Init Cookie\n             64-bit field that contains a random value,\
    \ the Home Init\n             Cookie.\n   Home Keygen Token\n             This\
    \ field contains the 64-bit home keygen token used in\n             the RR procedure.\
    \  Generated from cookie + nonce.\n"
- title: 5.9.  Care-of Test Message
  contents:
  - "5.9.  Care-of Test Message\n   This message is sent from the CR to the MR when\
    \ performing the RR\n   procedure as a reply to the Care-of Test Init message.\
    \  The source\n   and destination IP addresses, as well as UDP ports, are the\
    \ reverse\n   of those in the Care-of Test Init message for which this message\
    \ is\n   constructed.  As such, the UDP source port is always 434.\n     0   \
    \            1               2               3\n     0 1 2 3 4 5 6 7 8 9 0 1 2\
    \ 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |     Type      |   Reserved    |         Nonce Index           |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |                                                               |\n    +\
    \                    Care-of Init Cookie                        +\n    |     \
    \                                                          |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |                                                               |\n    +\
    \                    Care-of Keygen Token                       +\n    |     \
    \                                                          |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Type      27\n   Reserved  Set to zero; MUST be ignored on reception.\n  \
    \ Care-of Nonce Index\n             This field will be echoed back by the MR to\
    \ the CR in a\n             subsequent Registration Request's authentication extension.\n\
    \   Care-of Init Cookie\n             64-bit field that contains a random value,\
    \ the Care-of Init\n             Cookie.\n   Care-of Keygen Token\n          \
    \   This field contains the 64-bit care-of keygen token used in\n            \
    \ the RR procedure.  Generated from cookie + nonce.\n"
- title: 6.  Special Considerations
  contents:
  - '6.  Special Considerations

    '
- title: 6.1.  NATs and Stateful Firewalls
  contents:
  - "6.1.  NATs and Stateful Firewalls\n   Mechanisms described in Mobile IP NAT traversal\
    \ [RFC3519] allow the\n   HA to work with MRs situated behind a NAT device or\
    \ a stateful\n   firewall.  Furthermore, the HA may also detect whether a NAT\
    \ device\n   is located between the mobile node and the HA.  The MR may also\n\
    \   explicitly state that it is behind a NAT or firewall on all\n   interfaces,\
    \ and this information is passed on to the other MRs with\n   the Info field in\
    \ the Route Optimization Prefix Advertisement\n   Extension (Section 5.5).  The\
    \ HA may also detect NAT and inform the\n   registering MR via the 'N' flag in\
    \ the Route Optimization Reply\n   Extension (Section 5.2).  In the case where\
    \ one or both of the\n   routers is known to be behind a NAT or is similarly impaired\
    \ (not\n   able to accept incoming connections), the tunnel establishment\n  \
    \ procedure needs to take this into account.\n   In the case where the MR is behind\
    \ a NAT (or firewall) and the CR is\n   not, the MR will, when the tunnel has\
    \ been established, send\n   keepalive messages (ICMP echo requests) through the\
    \ tunnel.  Until a\n   reply has been received, the tunnel SHOULD NOT be considered\
    \ active.\n   Once a reply has been received, NAT mapping is in place, and traffic\n\
    \   can be sent.\n   The source address may change due to NAT in CoTI and Registration\n\
    \   Request messages.  This does not affect the process -- the hash\n   values\
    \ are calculated by the translated address, and the Registration\n   Request will\
    \ also appear from the same translated address.\n   Unlike communication with\
    \ the HA, in the case of route optimization,\n   the path used for signaling is\
    \ not used for tunneled packets, as\n   signaling always uses HoAs, and the MR\
    \ <-> CR tunnel is from CoA to\n   CoA.  It is assumed that even though port numbers\
    \ may change, NAT\n   processing rarely allocates more than one external IP address\
    \ to a\n   single internal address; thus, the IP address seen in the\n   Registration\
    \ Request and tunnel packets remains the same.  However,\n   the UDP source port\
    \ number may be different in the Registration\n   Request and incoming tunnel\
    \ packets, due to port translation.  This\n   must not cause an error situation\
    \ -- the CR MUST be able to accept\n   tunneling packets from a different UDP\
    \ source port than what was used\n   in the Registration Request.\n   Since MRs\
    \ may have multiple interfaces connecting to several\n   different networks, it\
    \ might be possible that specific MRs may only\n   be able to perform route optimization\
    \ using specific CoA pairs,\n   obtained from specific networks -- for example,\
    \ in a case where two\n   MRs have an interface behind the same NAT.  A similar\
    \ case may be\n   applicable to nested NATs.  In such cases, the MR MAY attempt\
    \ to\n   detect eligible CoA pairs by performing a registration and attempting\n\
    \   to establish a tunnel (sending keepalives) with each CoA listed in\n   the\
    \ Registration Reply's Care-of Address Extension.  The eligible\n   pairs should\
    \ be recorded in the Route Optimization Cache.  If a\n   tunnel cannot be established\
    \ with any CoAs, the MR MAY attempt to\n   repeat the procedure with alternative\
    \ interfaces.  The above\n   information on network topology can also be configured\
    \ on the MRs\n   either statically or via some external feedback mechanism.\n\
    \   If both the MR and the CR are behind two separate NATs, some sort of\n   proxy\
    \ or hole-punching technique may be applicable.  This is out of\n   scope for\
    \ this document.\n"
- title: 6.2.  Handling of Concurrent Handovers
  contents:
  - "6.2.  Handling of Concurrent Handovers\n   If both the MR and the CR move at\
    \ the same time, this causes no\n   issues from the signaling perspective, as\
    \ all requests are always\n   sent from a CoA to HoAs.  Thus, the recipient will\
    \ always receive the\n   request and can send the reply.  This applies even in\
    \ break-before-\n   make situations where both the MR and the CR get disconnected\
    \ at the\n   same time -- once the connectivity is restored, one endpoint of the\n\
    \   signaling messages is always the HoA of the respective router, and it\n  \
    \ is up to the HA to provide reachability.\n"
- title: 6.3.  Foreign Agents
  contents:
  - "6.3.  Foreign Agents\n   Since foreign agents have been dropped from work related\
    \ to Network\n   Mobility for Mobile IPv4, they are not considered here.\n"
- title: 6.4.  Multiple Home Agents
  contents:
  - "6.4.  Multiple Home Agents\n   MRs can negotiate and perform route optimization\
    \ without the\n   assistance of an HA -- if they can discover each other's existence\n\
    \   and thus know where to send registration messages.  This document\n   only\
    \ addresses a logically single HA that distributes network prefix\n   information\
    \ to the MRs.  Problems arise from possible trust\n   relationships; in this document,\
    \ the HA serves as a way to provide\n   verification that a specific network is\
    \ managed by a specific router.\n   If route optimization is desired between nodes\
    \ attached to separate\n   HAs, there are several possibilities.  Note that standard\
    \ high-\n   availability redundancy protocols, such as the Virtual Router\n  \
    \ Redundancy Protocol (VRRP), can be utilized; however, in such a case,\n   the\
    \ HA is still a single logical entity, even if it consists of more\n   than a\
    \ single node.\n   Several possibilities exist for achieving route optimization\
    \ between\n   MRs attached to separate HAs, such as a new discovery/probing\n\
    \   protocol or routing protocol between HAs or DNS SRV records, or a\n   common\
    \ Authentication, Authorization, and Accounting (AAA)\n   architecture.  There\
    \ is already a framework for HA to retrieve\n   information from AAA, so it can\
    \ be considered the most viable\n   possibility.  See Section 6.6 for information\
    \ on a possible way to\n   generalize the method.\n   Any discovery/probing protocols\
    \ are out of scope for this document.\n"
- title: 6.5.  Mutualness of Route Optimization
  contents:
  - "6.5.  Mutualness of Route Optimization\n   The procedure as specified is asymmetric;\
    \ that is, if bidirectional\n   route optimization is desired while maintaining\
    \ consistency, the\n   route optimization (RR check and registration) has to be\
    \ performed in\n   both directions, but this is not strictly necessary.  This\
    \ is\n   primarily a policy decision, depending on how often the mobile\n   prefixes\
    \ are reconfigured.\n   Consider the case where two networks, A and B, are handled\
    \ by MRs A\n   and B, respectively.  If the routers are set up in such a fashion\n\
    \   that route optimization is triggered when the router is forwarding a\n   packet\
    \ destined to a network prefix in the Route Optimization Cache,\n   the following\
    \ occurs if a node in network A starts sending ICMP echo\n   requests (ping packets)\
    \ to a node in network B.\n   MR A sees the incoming ICMP echo request packet\
    \ from the local\n   network destined to network B. Since network B exists in\
    \ MR A's Route\n   Optimization Cache, the route optimization process is triggered.\
    \  The\n   original packet is forwarded via the reverse tunnel toward the HA as\n\
    \   normal.\n   MR A completes the RR procedure and registration with MR B, which\n\
    \   thus becomes a CR for MR A.  A tunnel is created between the routers.\n  \
    \ MR B updates its routing tables so that network A is reachable via\n   the MR\
    \ A <-> MR B tunnel.\n   The traffic pattern is now such that packets from network\
    \ B to\n   network A are sent over the direct tunnel, but the packets from A to\n\
    \   B are transmitted via the HA and reverse tunnels.  The echo reply\n   that\
    \ the node in network B sends toward network A triggers the route\n   optimization\
    \ at MR B in similar fashion.  As such, MR B now performs\n   its own registration\
    \ toward MR A.  Upon completion, MR B notices that\n   a tunnel to MR A already\
    \ exists, and updates its routing table so\n   that network A is now reachable\
    \ via the (existing) MR A <-> MR B\n   tunnel.  From this point onward, traffic\
    \ is bidirectional.\n   In this scenario, if MR A does NOT wait for a separate\
    \ route\n   optimization process (RR check and registration) from MR B, but\n\
    \   instead simply updates its routing table to reach network B via the\n   tunnel,\
    \ problems may arise if MR B has started to manage another\n   network, B', before\
    \ the information has been propagated to MR A.  The\n   end result is that MR\
    \ B starts to receive packets from network A to\n   network B' via the HA and\
    \ to network B via the direct tunnel.  If\n   reverse path checking or a similar\
    \ mechanism is in use on MR B, some\n   of the packets from network A could be\
    \ black-holed.\n   Whether to perform this mutual registration or not thus depends\
    \ on\n   the situation, and whether MRs are going to start managing additional\n\
    \   network prefixes during operation.\n"
- title: 6.6.  Extensibility
  contents:
  - "6.6.  Extensibility\n   The design considerations include several mechanisms\
    \ that might not\n   be strictly necessary if route optimization were only desired\
    \ between\n   individual customer sites in a managed network.  The registration\n\
    \   procedure (with the optional return routability part), which allows\n   CRs\
    \ to learn an MR's CoAs, is not strictly necessary; the CoAs could\n   have been\
    \ provided by the HA directly.\n   However, this approach allows the method to\
    \ be extended to a more\n   generic route optimization.  The primary driver for\
    \ having an HA to\n   work as a centralized information distributer is to provide\
    \ MRs with\n   not only the knowledge of the other routers, but with information\
    \ on\n   which networks are managed by which routers.\n   The HA provides the\
    \ information on all feasible nodes with which it\n   is possible to establish\
    \ route optimization.  If representing a whole\n   mobile network is not necessary\
    \ -- in effect, the typical mobile node\n   <-> correspondent node situation --\
    \ the mechanisms in this document\n   work just as well; the only problem is discovering\
    \ whether the target\n   correspondent node can provide route optimization capability.\
    \  This\n   can be performed by not including any prefixes in the information\n\
    \   extension -- just the HoA of the MR.\n   In addition, with route optimization\
    \ for a single node, checks for\n   whether an MR is allowed to represent specific\
    \ networks are\n   unnecessary, since there are none.\n   Correspondent node/router\
    \ discovery protocols (whether they are based\n   on probing or a centralized\
    \ directory beyond the single HA) are\n   outside the scope of this document.\n"
- title: 6.7.  Load Balancing
  contents:
  - "6.7.  Load Balancing\n   This design simply provides the possibility of creating\
    \ optimal paths\n   between MRs; it doesn't dictate what the user traffic using\
    \ these\n   paths should be.  One possible approach in helping facilitate load\n\
    \   balancing and utilizing all available paths is presented in\n   [MIPv4FLOW],\
    \ which effectively allows for multiple CoAs for a single\n   HoA.  In addition,\
    \ per-tunnel load balancing is possible by using\n   separate CoAs for separate\
    \ tunnels.\n"
- title: 7.  Scalability
  contents:
  - "7.  Scalability\n   Home agent-assisted route optimization scalability issues\
    \ stem from\n   the general Mobile IPv4 architecture, which is based on tunnels.\n\
    \   Creating, maintaining, and destroying tunnel interfaces can cause\n   load\
    \ on the MRs.  However, the MRs can always fall back to normal,\n   reverse-tunneled\
    \ routing if resource constraints are apparent.\n   If there are a large number\
    \ of optimization-capable prefixes,\n   maintaining state for all of these may\
    \ be an issue also, due to\n   limits on routing table sizes.\n   Registration\
    \ responses from the HA to the MR may provide information\n   on a large number\
    \ of network prefixes.  If thousands of networks are\n   involved, the Registration\
    \ Reply messages are bound to grow very\n   large.  The prefix and realm compression\
    \ mechanisms defined in\n   Section 4 mitigate this problem to an extent.  There\
    \ will, however,\n   be some practical upper limit, after which some other delivery\n\
    \   mechanism for the prefix information will be needed.\n"
- title: 8.  Example Signaling Scenarios
  contents:
  - '8.  Example Signaling Scenarios

    '
- title: 8.1.  Registration Request
  contents:
  - "8.1.  Registration Request\n   The following example assumes that there are three\
    \ mobile routers --\n   MR A, MR B, and MR C -- each managing network prefixes\
    \ A, B, and C.\n   At the beginning, no networks are registered with the HA. \
    \ Any AAA\n   processing at the HA is omitted from the diagram.\n  +--------+\
    \ +--------+ +--------+ +--------------+\n  | [MR A] | | [MR B] | | [MR C] | |\
    \ [Home Agent] |\n  +--------+ +--------+ +--------+ +--------------+\n     |\
    \          |          |          |\n     x------------------------------->|  Registration\
    \ Request\n     |          |          |          |  includes Mobile Router\n \
    \    |          |          |          |  Route Optimization\n     |          |\
    \          |          |  Capability Extension\n     |          |          |  \
    \        |\n     |<-------------------------------x  Registration response;\n\
    \     |          |          |          |  no known networks from HA\n     |  \
    \        |          |          |  in response\n     |          |          |  \
    \        |\n     |          x-------------------->|  Registration Request similar\n\
    \     |          |          |          |  to the one sent by MR A\n     |    \
    \      |          |          |\n     |          |<--------------------x  Registration\
    \ Reply includes\n     |          |          |          |  network A in Route\
    \ Optimization\n     |          |          |          |  Prefix Advertisement\
    \ Extension\n     |          |          |          |\n     |          |      \
    \    x--------->|  Registration Request similar\n     |          |          |\
    \          |  to the one sent by MR A\n     |          |          |          |\n\
    \     |          |          |<---------x  Registration Reply includes\n     |\
    \          |          |          |  networks A and B in Route\n     |        \
    \  |          |          |  Optimization Prefix\n     |          |          |\
    \          |  Advertisement Extension.\n     |          |          |         \
    \ |  Network B is sent in\n     |          |          |          |  compressed\
    \ form.\n     |          |          |          |\n"
- title: 8.2.  Route Optimization with Return Routability
  contents:
  - "8.2.  Route Optimization with Return Routability\n   The following example has\
    \ the same network setup as that in\n   Section 8.1 -- three MRs, each corresponding\
    \ to their respective\n   network.  Node A is in network A, and Node C is in network\
    \ C.\n   At the beginning, none of the MRs know each other's KRms.  If the\n \
    \  KRms were pre-shared or provisioned with some other method, the\n   Return\
    \ Routability messages could be omitted.  Signaling as described\n   in Section\
    \ 8.1 has occurred; thus, MR A is not aware of the other\n   networks, and MR\
    \ C is aware of networks A and B.\n  ======= Traffic inside Mobile IP tunnel to/from\
    \ HA\n  =-=-=-= Traffic inside Mobile IP tunnel between MRs\n  ------- Traffic\
    \ outside Mobile IP tunnel\n"
- title: +----------+ +--------+ +------+ +--------+ +----------+
  contents:
  - '+----------+ +--------+ +------+ +--------+ +----------+

    '
- title: '| [Node A] | | [MR A] | | [HA] | | [MR C] | | [Node C] |'
  contents:
  - '| [Node A] | | [MR A] | | [HA] | | [MR C] | | [Node C] |

    '
- title: +----------+ +--------+ +------+ +--------+ +----------+
  contents:
  - "+----------+ +--------+ +------+ +--------+ +----------+\n   |            | \
    \         |         |       |\n   x------------O==========O=========O------>|\
    \ Mobile Router A is\n   |            |          |         |       | unaware of\
    \ network C;\n   |            |          |         |       | thus, nothing happens\n\
    \   |            |          |         |       |\n   |<-----------O==========O=========O-------x\
    \ Mobile Router C\n   |            |          |         |       | notices packet\
    \ to\n   |            |          |         |       | network A - begins\n   |\
    \            |          |         |       | route optimization\n   |         \
    \   |          |         |       |\n   |            |          |         |   \
    \    | Return Routability (if\n   |            |          |         |       |\
    \ no pre-shared KRms)\n   |            |          |         |       |\n   |  \
    \          |<=========O---------x       | CoTI\n   |            |<=========O=========x\
    \       | HoTI\n   |            |          |         |       |\n   |         \
    \   x==========O-------->|       | CoT\n   |            x==========O========>|\
    \       | HoT\n   |            |          |         |       |\n   |          \
    \  |          |         |       | KRm between MR A <-> C\n   |            |  \
    \        |         |       | established\n   |            |          |       \
    \  |       |\n   |            |<=========O---------x       | Registration Request\n\
    \   |            |          |         |       |\n   |            x--------->|\
    \         |       | Registration Request\n   |            |          |       \
    \  |       | to HA due to MR A\n   |            |          |         |       |\
    \ being unaware of\n   |            |          |         |       | network C.\n\
    \   |            |          |         |       | Solicit bit set.\n   |       \
    \     |          |         |       |\n   |            |<---------x         | \
    \      | Registration Reply\n   |            |          |         |       | contains\
    \ info on\n   |            |          |         |       | network A\n   |    \
    \        |          |         |       |\n   |            x==========O-------->|\
    \       | Registration Reply\n   |            |          |         |       | includes\
    \ MR A's CoA in\n   |            |          |         |       | Care-of Address\n\
    \   |            |          |         |       | Extension\n   |            | \
    \         |         |       |\n   |            |<= = = = =O= = = ==>|       |\
    \ Optional mutual\n   |            |          |         |       | registration\
    \ from\n   |            |          |         |       | MR A to MR C\n   |    \
    \        |          |         |       | (same procedure as above,\n   |      \
    \      |          |         |       | multiple packets);\n   |            |  \
    \        |         |       | possible keepalive checks\n   |            |    \
    \      |         |       |\n   |<-----------O=-=-=-==-=-=-=-==-=-O-------x Packet\
    \ from Node C -> A\n   |            |          |         |       | routed to direct\
    \ tunnel\n   |            |          |         |       | at MR C, based on\n \
    \  |            |          |         |       | MR C now knowing MR A's\n   | \
    \           |          |         |       | CoA and tunnel being up\n   |     \
    \       |          |         |       |\n   x------------O=-=-=-==-=-=-=-==-=-O------>|\
    \ Packet from Node A -> C\n   |            |          |         |       | routed\
    \ to direct tunnel\n   |            |          |         |       | at MR A, based\
    \ on MR A\n   |            |          |         |       | now knowing MR C's CoA\n\
    \   |            |          |         |       | and tunnel being up\n"
- title: 8.3.  Handovers
  contents:
  - "8.3.  Handovers\n   In this signaling example, MR C changes its CoA while route\n\
    \   optimization between MR A and MR C is operating and data is being\n   transferred.\
    \  Cases where the handover is graceful (\"make before\n   break\") and ungraceful\
    \ (\"break before make\") both occur in similar\n   fashion, except that in the\
    \ graceful version no packets are lost.\n   This diagram considers the case where\
    \ MR C gets immediate\n   notification of lost connectivity, e.g., due to a link\
    \ status\n   indication.  MR A would eventually notice the breakdown, due to\n\
    \   keepalive messages failing.\n   ======= Traffic inside Mobile IP tunnel to/from\
    \ HA\n   =-=-=-= Traffic inside Mobile IP tunnel between MRs\n   ------- Traffic\
    \ outside Mobile IP tunnel\n +----------+ +--------+ +------+ +--------+ +----------+\n\
    \ | [Node A] | | [MR A] | | [HA] | | [MR C] | | [Node C] |\n +----------+ +--------+\
    \ +------+ +--------+ +----------+\n    |            |          |         |  \
    \     |\n    x------------O=-=-=-==-=-=-=-==-=-O------>| Nodes A and C are\n \
    \   |<-----------O=-=-=-==-=-=-=-==-=-O-------x exchanging traffic\n    |    \
    \        |          |         |       |\n    |            |          xxxxxxxxxxx\
    \       | Break occurs: MR C\n    |            |          |         |       |\
    \ loses connectivity to\n    |            |          |         |       | current\
    \ attachment point\n    |            |          |         |       |\n    x------------O=-=-=-==-=-=-=->x\
    \   |       | Traffic from A -> C\n    |            |          |         |   \
    \    | lost, and\n    |            |          |   x<=-=-O-------x vice versa\n\
    \    |            |          |         |       |\n    |            |         \
    \ |<--------x       | MR C finds a new\n    |            |          |        \
    \ |       | point of attachment,\n    |            |          |         |    \
    \   | registers with the HA,\n    |            |          |         |       |\
    \ clears routing tables\n    |            |          |         |       |\n   \
    \ |            |          x-------->|       | Registration Reply\n    |      \
    \      |          |         |       |\n    x------------O=-=-=-==-=-=-=->x   |\
    \       | Traffic from A -> C lost\n    |            |          |         |  \
    \     | (reverts to routing via\n    |            |          |         |     \
    \  | HA if enough keepalives\n    |            |          |         |       |\
    \ fail)\n    |            |          |         |       |\n    |<-----------O==========O=========O-------|\
    \ Traffic from C -> A\n    |            |          |         |       | sent via\
    \ HA\n    |            |          |         |       |\n    |            O<=========O---------x\
    \       | CoTI message\n    |            |          |         |       | (partial\
    \ RR check)\n    |            |          |         |       |\n    |          \
    \  x==========O-------->|       | CoT message\n    |            |          | \
    \        |       |\n    |            |<=========O---------x       | Registration\
    \ Request\n    |            |          |         |       | reusing newly calculated\n\
    \    |            |          |         |       | KRm\n    |            |     \
    \     |         |       |\n    |            x==========O-------->|       | Registration\
    \ Reply\n    |            |          |         |       |\n    |            O<=-=-=-=-=-=-=-=-=-=x\
    \       | First keepalive check if\n    |            |          |         |  \
    \     | using UDP encapsulation;\n    |            |          |         |    \
    \   | also creates holes in\n    |            x=-=-=-=-=-=-=-=-=-=>|       | firewalls\n\
    \    |            |          |         |       |\n    |            |         \
    \ |         |       |\n    x------------O=-=-=-==-=-=-=-==-=-O------>| Traffic\
    \ from A -> C\n    |            |          |         |       | forwarded directly\
    \ again\n    |            |          |         |       |\n    |<-----------O=-=-=-==-=-=-=-==-=-O-------x\
    \ Traffic from C -> A\n    |            |          |         |       | switches\
    \ back to direct\n    |            |          |         |       | tunnel\n   \
    \ |            |          |         |       |\n"
- title: 9.  Protocol Constants
  contents:
  - "9.  Protocol Constants\n      MAX_NONCE_LIFETIME              240 seconds\n \
    \     MAX_TOKEN_LIFETIME              210 seconds\n      MAX_UPDATE_RATE     \
    \            5 times\n"
- title: 10.  IANA Considerations
  contents:
  - "10.  IANA Considerations\n   IANA has assigned rules for the existing registries\
    \ \"Mobile IP\n   Message Types\" and \"Extensions to Mobile IP Registration Messages\"\
    ,\n   specified in RFC 5944 [RFC5944].  New Mobile IP message types and\n   extension\
    \ code allocations have been made for the messages and\n   extensions listed in\
    \ Section 5.\n   The route optimization authentication processing requires four\
    \ new\n   message type numbers.  The new Mobile IP Message types are listed\n\
    \   below, in Table 1.\n                   +-------+---------------------------+\n\
    \                   | Value | Name                      |\n                  \
    \ +-------+---------------------------+\n                   | 24    | Home Test\
    \ Init message    |\n                   | 25    | Care-of Test Init message |\n\
    \                   | 26    | Home Test message         |\n                  \
    \ | 27    | Care-of Test message      |\n                   +-------+---------------------------+\n\
    \         Table 1: New Values and Names for Mobile IP Message Types\n   Three\
    \ new registration message extension types are required and\n   listed in Table\
    \ 2.  The first type, 153, is skippable and has been\n   allocated from range\
    \ 128-255.  The other two, 49 and 50, are\n   non-skippable and have been allocated\
    \ from range 0-127, with 49 being\n   of the \"short\" format and 50 being of\
    \ the \"long\" format.  None of the\n   messages are permitted for notification\
    \ messages.\n      +--------------+---------------------------------------------+\n\
    \      | Value        | Name                                        |\n      +--------------+---------------------------------------------+\n\
    \      | 153, 128-255 | Mobile Router Route Optimization Indication |\n      |\
    \ 49, 0-127    | Route Optimization Extensions               |\n      | 50, 0-127\
    \    | Route Optimization Data                     |\n      +--------------+---------------------------------------------+\n\
    \         Table 2: New Values and Names for Extensions in Mobile IP\n        \
    \                   Registration Messages\n   In addition, the registry \"Code\
    \ Values for Mobile IP Registration\n   Reply Messages\" has been modified.  A\
    \ new success code, 2, should be\n   allocated as follows:\n   2         Concurrent\
    \ registration (pre-accept)\n   In addition, a new allocation range has been created\
    \ as \"Error Codes\n   from the Correspondent Node\", subject to the policy of\
    \ Expert Review\n   [RFC5226].  The range is 201-210.  Three new Registration\
    \ Reply codes\n   have been allocated from this range.  They are specified in\
    \ Table 3,\n   below:\n                  +-------+-----------------------------+\n\
    \                  | Value | Name                        |\n                 \
    \ +-------+-----------------------------+\n                  | 201   | Expired\
    \ Home nonce Index    |\n                  | 202   | Expired Care-of nonce Index\
    \ |\n                  | 203   | Expired nonces              |\n             \
    \     +-------+-----------------------------+\n             Table 3: New Code\
    \ Values and Names for Mobile IP\n                        Registration Reply Messages\n\
    \   Three new number spaces were required for the subtypes of the\n   extensions\
    \ in Table 2.  A new registry, named \"Route Optimization\n   Types and Subtypes\"\
    , has been created with an allocation policy of\n   RFC Required [RFC5226].  The\
    \ registration entries include Type,\n   Subtype, and Name.  Type and Subtype\
    \ have a range of 0-255.  Types\n   are references to registration message extension\
    \ types.  Subtypes are\n   allocated initially as in Table 4, below:\n   +------+---------+--------------------------------------------------+\n\
    \   | Type | Subtype | Name                                             |\n  \
    \ +------+---------+--------------------------------------------------+\n   |\
    \ 153  | 0       | Reserved                                         |\n   | 153\
    \  | 1       | Mobile Router Route Optimization Capability      |\n   |      |\
    \         | Extension                                        |\n   | 49   | 0\
    \       | Reserved                                         |\n   | 49   | 1  \
    \     | Route Optimization Reply                         |\n   | 49   | 2    \
    \   | Mobile-Correspondent Authentication Extension    |\n   | 49   | 3      \
    \ | Care-of Address Extension                        |\n   | 50   | 0       |\
    \ Reserved                                         |\n   | 50   | 1       | Route\
    \ Optimization Prefix Advertisement          |\n   |      |         | Extension\
    \                                        |\n   +------+---------+--------------------------------------------------+\n\
    \     Table 4: Initial Values and Names for Registry Route Optimization\n    \
    \                        Types and Subtypes\n"
- title: 11.  Security Considerations
  contents:
  - "11.  Security Considerations\n   There are two primary security issues: One issue\
    \ relates to the RR\n   check, which establishes that a specific CoA is, indeed,\
    \ managed by a\n   specific HoA.  The other issue is trust relationships and an\n\
    \   arbitrary router claiming to represent an arbitrary network.\n   The end-user\
    \ traffic can be protected using normal IPsec mechanisms.\n"
- title: 11.1.  Return Routability
  contents:
  - "11.1.  Return Routability\n   The RR check's security has been vetted with Mobile\
    \ IPv6.  There are\n   no major differences, apart from two issues: connectivity\
    \ check and\n   replay attack protection.  The connectivity check is conducted\
    \ with a\n   separate ICMP message exchange.  Replay attack protection is achieved\n\
    \   with Mobile IPv4 timestamps in the Registration Request's\n   Identification\
    \ field, in contrast to the sequence numbers used in\n   Mobile IPv6.\n   The\
    \ RR procedure does not establish any kind of state information on\n   the CR;\
    \ this mitigates denial-of-service attacks.  State information\n   is only maintained\
    \ after a Registration Request has been accepted.\n"
- title: 11.2.  Trust Relationships
  contents:
  - "11.2.  Trust Relationships\n   The network of trust relationships in home agent-assisted\
    \ route\n   optimization solves possible trust issues: An arbitrary CR can trust\n\
    \   an arbitrary MR that it is indeed the proper route to reach an\n   arbitrary\
    \ mobile network.\n   It is assumed that all MRs have a trust relationship with\
    \ the HA.\n   Thus, they trust information provided by the HA.\n   The HA provides\
    \ information matching HoAs and network prefixes.  Each\n   MR trusts this information.\n\
    \   MRs may perform the RR procedure between each other.  This creates a\n   trusted\
    \ association between the MR's HoA and CoA.  The MR also claims\n   to represent\
    \ a specific network.  This information is not trustworthy\n   as such.\n   The\
    \ claim can be verified by checking the HoA <-> network prefix\n   information\
    \ received, either earlier, or due to an on-demand request,\n   from the HA. \
    \ If they match, the MR's claim is authentic.  If the\n   network is considered\
    \ trusted, a policy decision can be made to skip\n   this check.  Exact definitions\
    \ on situations where such decisions can\n   be made are out of scope for this\
    \ document.  The RECOMMENDED general\n   practice is to perform the check.\n"
- title: 12.  Acknowledgements
  contents:
  - "12.  Acknowledgements\n   Thanks to Alexandru Petrescu for constructive comments\
    \ and support.\n   Thanks to Jyrki Soini and Kari Laihonen for initial reviews.\
    \  This\n   work was supported by TEKES as part of the Future Internet program\
    \ of\n   TIVIT (Finnish Strategic Centre for Science, Technology and\n   Innovation\
    \ in the field of ICT).\n"
- title: 13.  References
  contents:
  - '13.  References

    '
- title: 13.1.  Normative References
  contents:
  - "13.1.  Normative References\n   [RFC2003]    Perkins, C., \"IP Encapsulation\
    \ within IP\", RFC 2003,\n                October 1996.\n   [RFC2004]    Perkins,\
    \ C., \"Minimal Encapsulation within IP\",\n                RFC 2004, October\
    \ 1996.\n   [RFC2119]    Bradner, S., \"Key words for use in RFCs to Indicate\n\
    \                Requirement Levels\", BCP 14, RFC 2119, March 1997.\n   [RFC2784]\
    \    Farinacci, D., Li, T., Hanks, S., Meyer, D., and P.\n                Traina,\
    \ \"Generic Routing Encapsulation (GRE)\", RFC 2784,\n                March 2000.\n\
    \   [RFC3519]    Levkowetz, H. and S. Vaarala, \"Mobile IP Traversal of\n    \
    \            Network Address Translation (NAT) Devices\", RFC 3519,\n        \
    \        April 2003.\n   [RFC5177]    Leung, K., Dommety, G., Narayanan, V., and\
    \ A. Petrescu,\n                \"Network Mobility (NEMO) Extensions for Mobile\
    \ IPv4\",\n                RFC 5177, April 2008.\n   [RFC5226]    Narten, T. and\
    \ H. Alvestrand, \"Guidelines for Writing an\n                IANA Considerations\
    \ Section in RFCs\", BCP 26, RFC 5226,\n                May 2008.\n   [RFC5944]\
    \    Perkins, C., Ed., \"IP Mobility Support for IPv4,\n                Revised\"\
    , RFC 5944, November 2010.\n"
- title: 13.2.  Informative References
  contents:
  - "13.2.  Informative References\n   [MIP-RO]     Perkins, C. and D. Johnson, \"\
    Route Optimization in\n                Mobile IP\", Work in Progress, September\
    \ 2001.\n   [MIPv4FLOW]  Gundavelli, S., Ed., Leung, K., Tsirtsis, G., Soliman,\n\
    \                H., and A. Petrescu, \"Flow Binding Support for Mobile\n    \
    \            IPv4\", Work in Progress, February 2012.\n   [RFC1035]    Mockapetris,\
    \ P., \"Domain names - implementation and\n                specification\", STD\
    \ 13, RFC 1035, November 1987.\n   [RFC3543]    Glass, S. and M. Chandra, \"Registration\
    \ Revocation in\n                Mobile IPv4\", RFC 3543, August 2003.\n   [RFC4086]\
    \    Eastlake 3rd, D., Schiller, J., and S. Crocker,\n                \"Randomness\
    \ Requirements for Security\", BCP 106,\n                RFC 4086, June 2005.\n\
    \   [RFC4282]    Aboba, B., Beadles, M., Arkko, J., and P. Eronen, \"The\n   \
    \             Network Access Identifier\", RFC 4282, December 2005.\n   [RFC6275]\
    \    Perkins, C., Ed., Johnson, D., and J. Arkko, \"Mobility\n               \
    \ Support in IPv6\", RFC 6275, July 2011.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Antti Makela\n   Aalto University\n   Department of Communications\
    \ and Networking (Comnet)\n   P.O. Box 13000\n   FIN-00076 Aalto\n   FINLAND\n\
    \   EMail: antti.t.makela@iki.fi\n   Jouni Korhonen\n   Nokia Siemens Networks\n\
    \   Linnoitustie 6\n   FI-02600 Espoo\n   FINLAND\n   EMail: jouni.nospam@gmail.com\n"
