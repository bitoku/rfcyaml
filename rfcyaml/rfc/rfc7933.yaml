- title: __initial_text__
  contents:
  - ''
- title: Internet Research Task Force (IRTF)                     C. Westphal, Ed.
  contents:
  - "Internet Research Task Force (IRTF)                     C. Westphal, Ed.\n  \
    \ Adaptive Video Streaming over Information-Centric Networking (ICN)\n"
- title: Abstract
  contents:
  - "Abstract\n   This document considers the consequences of moving the underlying\n\
    \   network architecture from the current Internet to an Information-\n   Centric\
    \ Networking (ICN) architecture on video distribution.  As most\n   of the traffic\
    \ in future networks is expected to be video, we\n   consider how to modify the\
    \ existing video streaming mechanisms.\n   Several important topics related to\
    \ video distribution over ICN are\n   presented.  The wide range of scenarios\
    \ covered includes the\n   following: evolving Dynamic Adaptive Streaming over\
    \ HTTP (DASH) to\n   work over ICN and leverage the recent ISO/IEC Moving Picture\
    \ Experts\n   Group (MPEG) standard, layering encoding over ICN, introducing\n\
    \   distinct requirements for video using Peer-to-Peer (P2P) mechanisms,\n   adapting\
    \ the Peer-to-Peer Streaming Protocol (PPSP) for ICN, creating\n   more stringent\
    \ requirements over ICN because of delay constraints\n   added by Internet Protocol\
    \ Television (IPTV), and managing digital\n   rights in ICN.  Finally, in addition\
    \ to considering how existing\n   mechanisms would be impacted by ICN, this document\
    \ lists some\n   research issues to design ICN-specific video streaming mechanisms.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n   published for informational purposes.\n   This document is a product\
    \ of the Internet Research Task Force\n   (IRTF).  The IRTF publishes the results\
    \ of Internet-related research\n   and development activities.  These results\
    \ might not be suitable for\n   deployment.  This RFC represents the consensus\
    \ of the Information-\n   Centric Networking Research Group of the Internet Research\
    \ Task Force\n   (IRTF).  Documents approved for publication by the IRSG are not\
    \ a\n   candidate for any level of Internet Standard; see Section 2 of\n   RFC\
    \ 7841.\n   Information about the current status of this document, any errata,\n\
    \   and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc7933.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2016 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction  . . . . . . . . . . . . . . . . . . .\
    \ . . . . .   4\n   2.  Conventions Used in This Document . . . . . . . . . .\
    \ . . . .   4\n   3.  Use Case Scenarios for ICN and Video Streaming  . . . .\
    \ . . .   5\n   4.  Video Download  . . . . . . . . . . . . . . . . . . . . .\
    \ . .   6\n   5.  Video Streaming and ICN . . . . . . . . . . . . . . . . . .\
    \ .   7\n     5.1.  Introduction to Client-Driven Streaming and DASH  . . . .\
    \   7\n     5.2.  Layered Encoding  . . . . . . . . . . . . . . . . . . . .  \
    \ 8\n     5.3.  Interactions of Video Streaming with ICN  . . . . . . . .   8\n\
    \       5.3.1.  Interactions of DASH with ICN . . . . . . . . . . . .   8\n  \
    \     5.3.2.  Interaction of ICN with Layered Encoding  . . . . . .  10\n    \
    \ 5.4.  Possible Integration of Video Streaming and ICN\n           Architecture\
    \  . . . . . . . . . . . . . . . . . . . . . .  11\n       5.4.1.  DASH over CCN\
    \ . . . . . . . . . . . . . . . . . . . .  11\n       5.4.2.  Testbed, Open-Source\
    \ Tools, and Dataset . . . . . . .  13\n   6.  P2P Video Distribution and ICN\
    \  . . . . . . . . . . . . . . .  14\n     6.1.  Introduction to PPSP  . . . .\
    \ . . . . . . . . . . . . . .  14\n     6.2.  PPSP over ICN: Deployment Concepts\
    \  . . . . . . . . . . .  16\n       6.2.1.  PPSP Short Background . . . . . .\
    \ . . . . . . . . . .  16\n       6.2.2.  From PPSP Messages to ICN Named-Data\
    \  . . . . . . . .  16\n       6.2.3.  Support of PPSP Interaction through a Pull-Based\
    \ ICN\n               API . . . . . . . . . . . . . . . . . . . . . . . . .  17\n\
    \       6.2.4.  Abstract Layering for PPSP over ICN . . . . . . . . .  18\n  \
    \     6.2.5.  PPSP Interaction with the ICN Routing Plane . . . . .  19\n    \
    \   6.2.6.  ICN Deployment for PPSP . . . . . . . . . . . . . . .  19\n     6.3.\
    \  Impact of MPEG-DASH Coding Schemes  . . . . . . . . . . .  20\n   7.  IPTV\
    \ and ICN  . . . . . . . . . . . . . . . . . . . . . . . .  21\n     7.1.  IPTV\
    \ Challenges . . . . . . . . . . . . . . . . . . . . .  21\n     7.2.  ICN Benefits\
    \ for IPTV Delivery  . . . . . . . . . . . . .  22\n   8.  Digital Rights Management\
    \ in ICN  . . . . . . . . . . . . . .  24\n     8.1.  Broadcast Encryption for\
    \ DRM in ICN . . . . . . . . . . .  24\n     8.2.  AAA-Based DRM for ICN Networks\
    \  . . . . . . . . . . . . .  27\n       8.2.1.  Overview  . . . . . . . . . .\
    \ . . . . . . . . . . . .  27\n       8.2.2.  Implementation  . . . . . . . .\
    \ . . . . . . . . . . .  28\n   9.  Future Steps for Video in ICN . . . . . .\
    \ . . . . . . . . . .  28\n     9.1.  Large-Scale Live Events . . . . . . . .\
    \ . . . . . . . . .  29\n     9.2.  Video Conferencing and Real-Time Communications\
    \ . . . . .  29\n     9.3.  Store-and-Forward Optimized  Rate Adaptation  . .\
    \ . . . .  29\n     9.4.  Heterogeneous  Wireless Environment Dynamics  . . .\
    \ . . .  30\n     9.5.  Network Coding for Video Distribution in ICN  . . . .\
    \ . .  32\n     9.6.  Synchronization Issues for Video Distribution in ICN  .\
    \ .  32\n   10. Security  Considerations  . . . . . . . . . . . . . . . . . .\
    \  33\n   11. Conclusions . . . . . . . . . . . . . . . . . . . . . . . . .  33\n\
    \   12. References  . . . . . . . . . . . . . . . . . . . . . . . . .  34\n  \
    \   12.1.  Normative References . . . . . . . . . . . . . . . . . .  34\n    \
    \ 12.2.  Informative References . . . . . . . . . . . . . . . . .  34\n   Acknowledgments\
    \ . . . . . . . . . . . . . . . . . . . . . . . . .  38\n   Authors' Addresses\
    \  . . . . . . . . . . . . . . . . . . . . . . .  39\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   The unprecedented growth of video traffic has triggered\
    \ a rethinking\n   of how content is distributed, both in terms of the underlying\n\
    \   Internet architecture and in terms of the streaming mechanisms to\n   deliver\
    \ video objects.\n   In particular, the IRTF ICNRG research group has been chartered\
    \ to\n   study new architectures centered upon information; the main\n   contributor\
    \ to Internet traffic (and information dissemination) is\n   video, and this is\
    \ expected to stay the same in the near future.  If\n   ICN is expected to become\
    \ prominent, it will have to support video\n   streaming efficiently.\n   As such,\
    \ it is necessary to discuss going in two separate directions:\n      Can the\
    \ current video streaming mechanisms be leveraged and\n      adapted to an ICN\
    \ architecture?\n      Can (and should) new, ICN-specific video streaming mechanisms\
    \ be\n      designed to fully take advantage of the new abstractions exposed\n\
    \      by the ICN architecture?\n   This document focuses on the first question\
    \ in an attempt to define\n   the use cases for video streaming and some requirements.\
    \  It also\n   focuses on a few scenarios (namely, Netflix-like video streaming,\
    \ P2P\n   video sharing, and IPTV) and identifies how the existing protocols\n\
    \   can be adapted to an ICN architecture.  In doing so, it also\n   identifies\
    \ the main issues with these protocols in this ICN context.\n   In addition to\
    \ this document, other works have considered specific\n   aspects of dynamic adaptive\
    \ streaming in ICN [Lederer13b]\n   [Lederer13a] [Grandl13] [Detti12].  This document\
    \ is informed by\n   these works, as well as others.\n   In this document, we\
    \ give a brief overview of the existing solutions\n   for the selected scenarios.\
    \  We then examine the interactions of such\n   existing mechanisms with the ICN\
    \ architecture and list some of the\n   interactions any video streaming mechanism\
    \ will have to consider.\n   Finally, we identify some areas for future research.\n"
- title: 2.  Conventions Used in This Document
  contents:
  - "2.  Conventions Used in This Document\n   In examples, \"C:\" and \"S:\" indicate\
    \ lines sent by the client and\n   server, respectively.\n"
- title: 3.  Use Case Scenarios for ICN and Video Streaming
  contents:
  - "3.  Use Case Scenarios for ICN and Video Streaming\n   For ICN-specific descriptions,\
    \ we refer to the other research group\n   documents [RFC7476].  For our purpose,\
    \ we assume here that \"ICN\"\n   refers to an architecture where content is retrieved\
    \ by name and with\n   no binding of content to a specific network location.\n\
    \   Both live and on-demand consumption of multimedia content come with\n   timing\
    \ requirements for the delivery of the content.  Additionally,\n   real-time use\
    \ cases (such as audio-video conferencing [Jacobson09a],\n   game streaming, etc.)\
    \ come with stricter timing requirements.  Long\n   startup delays, buffering\
    \ periods, poor video quality, etc., should\n   be avoided to achieve a better\
    \ Quality of Experience (QoE) for the\n   consumer of the content.  For a definition\
    \ of QoE in the context of\n   video distribution, please refer to [LeCallet13].\
    \  The working\n   definition is as follows:\n      Quality of Experience (QoE)\
    \ is the degree of delight or annoyance\n      of the user of an application or\
    \ service.  It results from the\n      fulfillment of his or her expectations\
    \ with respect to the utility\n      and/or enjoyment of the application or service\
    \ in the light of the\n      user's personality and current state.\n   Of course,\
    \ these requirements are heavily influenced by routing\n   decisions and caching,\
    \ which are central parts of ICN and that have\n   to be considered when streaming\
    \ video in such infrastructures.\n   Due to this range of requirements, we find\
    \ it useful to narrow the\n   focus to four scenarios (more can be included later):\n\
    \   o  a video download architecture similar to that of Apple iTunes,\n      where\
    \ the whole file is being downloaded to the client and can be\n      replayed\
    \ there multiple times;\n   o  a video streaming architecture for playing back\
    \ movies, which is\n      relevant for the naming and caching aspects of ICN as\
    \ well as the\n      interaction with the rate adaptation mechanism necessary\
    \ to\n      deliver the best QoE to the end user;\n   o  a P2P architecture for\
    \ sharing videos, which introduces more\n      stringent routing requirements\
    \ in terms of locating copies of the\n      content as the location of the peers\
    \ evolves and peers join and\n      leave the swarm they use to exchange video\
    \ chunks (for P2P\n      definitions and taxonomy, please refer to RFC 5694; and\n\
    \   o  IPTV, which introduces requirements for multicasting and adds\n      stronger\
    \ delay constraints.\n   Other scenarios, such as video conferencing and real-time\
    \ video\n   communications, are not explicitly discussed in this document even\n\
    \   though they are in scope.  Also, events of mass-media distribution,\n   such\
    \ as a large crowd at a live event, add new requirements to be\n   included in\
    \ later versions.\n   The current state-of-the-art protocols in an IP context\
    \ can be\n   modified for the ICN architecture.  The remainder of this document\
    \ is\n   organized as follows: Section 4 discusses video download; Section 5\n\
    \   briefly describes DASH [ISO-DASH] and Layered Encoding (Modification\n   Detection\
    \ Code (MDC), Scalable Video Coding (SVC)); Section 6 focuses\n   on P2P and PPSP;\
    \ Section 7 highlights the requirements of IPTV;\n   Section 8 describes the issues\
    \ of DRM; and Section 9 lists some\n   research issues to be solved for ICN-specific\
    \ video delivery\n   mechanisms.\n   Video-conferencing and real-time-video communications\
    \ will be\n   described in further detail in future works.  Mass distribution\
    \ of\n   content at live, large-scale events (stadiums, concert halls, etc.)\n\
    \   for which there is no clearly adopted existing protocol is another\n   topic\
    \ for further research.\n"
- title: 4.  Video Download
  contents:
  - "4.  Video Download\n   Video download, namely the fetching of a video file from\
    \ a server or\n   a cache down to the user's local storage, is a natural application\
    \ of\n   ICN.  It should be supported natively without requiring any specific\n\
    \   considerations.\n   This is supported now by a host of protocols (say, Secure\
    \ Copy (SCP),\n   FTP, or over HTTP), which would need to be replaced by new ICN-\n\
    \   specific protocols to retrieve content in ICNs.\n   However, current mechanisms\
    \ are built atop existing transport\n   protocols.  Some ICN proposals (Context-Centric\
    \ Network (CCN) or\n   Named Data Networking (NDN), for instance) attempt to leverage\
    \ the\n   work done upon these transport protocols.  One proposal is to use the\n\
    \   TCP congestion window (and the associated Adaptive Increase,\n   Multiplicative\
    \ Decrease (AIMD)) to decide how many object requests\n   (\"Interests\" in CCN/NDN\
    \ terminology) should be in flight at any point\n   in time.\n   It should be\
    \ noted that ICN intrinsically supports different\n   transport mechanisms, which\
    \ could achieve better performance than\n   TCP, as they subsume TCP into a special\
    \ case.  For instance, one\n   could imagine a link-by-link transport coupled\
    \ with caching.  This is\n   enabled by the ICN architecture and would facilitate\
    \ the point-to-\n   point download of video files.\n"
- title: 5.  Video Streaming and ICN
  contents:
  - '5.  Video Streaming and ICN

    '
- title: 5.1.  Introduction to Client-Driven Streaming and DASH
  contents:
  - "5.1.  Introduction to Client-Driven Streaming and DASH\n   Media streaming over\
    \ HTTP and, in a further consequence, streaming\n   over the TCP, has become omnipresent\
    \ in today's Internet.  Content\n   providers such as Netflix, Hulu, and Vudu\
    \ do not deploy their own\n   streaming equipment: they use the existing Internet\
    \ infrastructure as\n   it is and simply deploy their own services Over The Top\
    \ (OTT).  This\n   streaming approach works surprisingly well without any particular\n\
    \   support from the underlying network due to the use of efficient video\n  \
    \ compression, Content Delivery Networks (CDNs), and adaptive video\n   players.\
    \  Earlier video streaming research mostly recommended use of\n   the User Datagram\
    \ Protocol (UDP) combined with the Real-time\n   Transport Protocol (RTP).  It\
    \ assumed it would not be possible to\n   transfer multimedia data smoothly with\
    \ TCP, because of its throughput\n   variations and large retransmission delays.\
    \  This point of view has\n   significantly evolved today.  HTTP streaming, and\
    \ especially its most\n   simple form known as progressive download, has become\
    \ very popular\n   over the past few years because it has some major benefits\
    \ compared\n   to RTP streaming.  As a consequence of the consistent use of HTTP\
    \ for\n   this streaming method, the existing Internet infrastructure\n   consisting\
    \ of proxies, caches, and CDNs could be used.  Originally,\n   this architecture\
    \ was designed to support best-effort delivery of\n   files and not real-time\
    \ transport of multimedia data.  Nevertheless,\n   real-time streaming based on\
    \ HTTP could also take advantage of this\n   architecture, in comparison to RTP,\
    \ which could not leverage any of\n   the aforementioned components.  Another\
    \ benefit that results from the\n   use of HTTP is that the media stream could\
    \ easily pass firewalls or\n   Network Address Translation (NAT) gateways, which\
    \ was definitely a\n   key for the success of HTTP streaming.  However, HTTP streaming\
    \ is\n   not the holy grail of streaming as it also introduces some drawbacks\n\
    \   compared to RTP.  Nevertheless, in an ICN-based video streaming\n   architecture\
    \ these aspects also have to be considered.\n   The basic concept of DASH [ISO-DASH]\
    \ is to use segments of media\n   content, which can be encoded at different resolutions,\
    \ bit rates,\n   etc., as so-called representations.  These segments are served\
    \ by\n   conventional HTTP web servers and can be addressed via HTTP GET\n   requests\
    \ from the client.  As a consequence, the streaming system is\n   pull-based and\
    \ the entire streaming logic is located on the client,\n   which makes it scalable\
    \ and allows for adaptation of the media stream\n   to the client's capabilities.\n\
    \   In addition to this, the content can be distributed using\n   conventional\
    \ CDNs and their HTTP infrastructure, which also scales\n   very well.  In order\
    \ to specify the relationship between the\n   contents' media segments and the\
    \ associated bit rate, resolution, and\n   timeline, the Media Presentation Description\
    \ (MPD) is used, which is\n   an XML document.  The MPD refers to the available\
    \ media segments\n   using HTTP URLs, which can be used by the client for retrieving\
    \ them.\n"
- title: 5.2.  Layered Encoding
  contents:
  - "5.2.  Layered Encoding\n   Another approach for video streaming consists in using\
    \ layered\n   encoding.  Namely, scalable video coding formats the video stream\n\
    \   into different layers: a base layer that can be decoded to provide\n   the\
    \ lowest bit rate for the specific stream and enhancement layers\n   that can\
    \ be transmitted separately if network conditions allow.  The\n   higher layers\
    \ offer higher resolutions and enhancement of the video\n   quality, while the\
    \ layered approach allows for adaptation to the\n   network conditions.  This\
    \ is used in an MPEG-4 scalable profile or\n   H.263+.  H264SVC is available but\
    \ not much deployed.  JPEG2000 has a\n   wavelet transform approach for layered\
    \ encoding but has not been\n   deployed much either.  It is not clear if the\
    \ layered approach is\n   fine-grained enough for rate control.\n"
- title: 5.3.  Interactions of Video Streaming with ICN
  contents:
  - '5.3.  Interactions of Video Streaming with ICN

    '
- title: 5.3.1.  Interactions of DASH with ICN
  contents:
  - "5.3.1.  Interactions of DASH with ICN\n   Video streaming (DASH in particular)\
    \ has been designed with a goal\n   that is aligned with that of most ICN proposals:\
    \ it is a client-based\n   mechanism that requests items (in this case, chunks\
    \ of a video\n   stream) by name.\n   ICN and MPEG-DASH [ISO-DASH] have several\
    \ elements in common:\n   o  the client-initiated pull approach;\n   o  the content\
    \ being dealt with in pieces (or chunks);\n   o  the support of efficient replication\
    \ and distribution of content\n      pieces within the network;\n   o  the scalable,\
    \ session-free nature of the exchange between the\n      client and the server\
    \ at the streaming layer: the client is free\n      to request any chunk from\
    \ any location; and\n   o  the support for potentially multiple source locations.\n\
    \   For the last point, DASH may list multiple source URLs in a manifest,\n  \
    \ and ICN is agnostic to the location of a copy it is receiving.  We do\n   not\
    \ imply that current video streaming mechanisms attempt to draw the\n   content\
    \ from multiple sources concurrently.  This is a potential\n   benefit of ICN\
    \ but is not considered in the current approaches\n   mentioned in this document.\n\
    \   As ICN is a promising candidate for the Future Internet (FI)\n   architecture,\
    \ it is useful to investigate its suitability in\n   combination with multimedia\
    \ streaming standards like MPEG-DASH.  In\n   this context, the purpose of this\
    \ section is to present the usage of\n   ICN instead of HTTP in MPEG-DASH.\n \
    \  However, there are some issues that arise from using a dynamic rate\n   adaptation\
    \ mechanism in an ICN architecture (note that some of the\n   issues are related\
    \ to caching and are not necessarily unique to ICN):\n   o  Naming of the data\
    \ in DASH does not necessarily follow the ICN\n      convention of any of the\
    \ ICN proposals.  Several chunks of the\n      same video stream might currently\
    \ go by different names that, for\n      instance, do not share a common prefix.\
    \  There is a need to\n      harmonize the naming of the chunks in DASH with the\
    \ naming\n      conventions of the ICN.  The naming convention of using a\n  \
    \    filename/time/encoding format could, for instance, be made\n      compatible\
    \ with the convention of CCN.\n   o  While chunks can be retrieved from any server,\
    \ the rate adaptation\n      mechanism attempts to estimate the available network\
    \ bandwidth so\n      as to select the proper playback rate and keep its playback\
    \ buffer\n      at the proper level.  Therefore, there is a need to either include\n\
    \      some location semantics in the data chunks so as to properly\n      assess\
    \ the throughput to a specific location or to design a\n      different mechanism\
    \ to evaluate the available network bandwidth.\n   o  The typical issue of access\
    \ control and accounting happens in this\n      context, where chunks can be cached\
    \ in the network outside of the\n      administrative control of the content publisher.\
    \  It might be a\n      requirement from the owner of the video stream that access\
    \ to\n      these data chunks needs to be accounted/billed/monitored.\n   o  Dynamic\
    \ streaming multiplies the representations of a given video\n      stream, therefore\
    \ diminishing the effectiveness of caching:\n      namely, to get a hit for a\
    \ chunk in the cache, it has to be for\n      the same format and encoding values.\
    \  Alternatively, to get the\n      same hit rate as a stream using a single encoding,\
    \ the cache size\n      must be scaled up to include all the possible representations.\n\
    \   o  Caching introduces oscillatory dynamics as it may modify the\n      estimation\
    \ of the available bandwidth between the end user and the\n      repository from\
    \ which it is getting the chunks.  For instance, if\n      an edge cache holds\
    \ a low resolution representation near the user,\n      the user getting these\
    \ low resolution chunks will observe a good\n      performance and will then request\
    \ higher resolution chunks.  If\n      those are hosted on a server with poor\
    \ performance, then the\n      client would have to switch back to the low representation.\
    \  This\n      oscillation may be detrimental to the perceived QoE of the user.\n\
    \   o  The ICN transport mechanism needs to be compatible to some extent\n   \
    \   with DASH.  To take a CCN example, the rate at which interests are\n     \
    \ issued should be such that the chunks received in return arrive\n      fast\
    \ enough and with the proper encoding to keep the playback\n      buffer above\
    \ some threshold.\n   o  The usage of multiple network interfaces is possible\
    \ in ICN,\n      enabling a seamless handover between them.  For the combination\n\
    \      with DASH, an intelligent strategy that should focus on traffic\n     \
    \ load-balancing between the available links may be necessary.  This\n      would\
    \ increase the effective media throughput of DASH by\n      leveraging the combined\
    \ available bandwidth of all links; however,\n      it could potentially lead\
    \ to high variations of the media\n      throughput.\n   o  DASH does not define\
    \ how the MPD is retrieved; hence, this is\n      compatible with CCN.  However,\
    \ the current profiles defined within\n      MPEG-DASH require the MPD to contain\
    \ HTTP URLs (including HTTP and\n      HTTPS URI schemes) to identify segments.\
    \  To enable a more\n      integrated approach as described in this document,\
    \ an additional\n      profile for DASH over CCN has to be defined, enabling ICN/CCN-\n\
    \      based URIs to identify and request the media segments.\n   We describe\
    \ in Section 5.4 a potential implementation of a dynamic\n   adaptive video stream\
    \ over ICN, based upon DASH and CCN\n   [Jacobson09b].\n"
- title: 5.3.2.  Interaction of ICN with Layered Encoding
  contents:
  - "5.3.2.  Interaction of ICN with Layered Encoding\n   Issues of interest to an\
    \ ICN architecture in the context of layered\n   video streaming include:\n  \
    \ o  Caching of the multiple layers.  The caching priority should go to\n    \
    \  the base layer and to defining caching policy in order to decide\n      when\
    \ to cache enhancement layers;\n   o  Synchronization of multiple content streams,\
    \ as the multiple\n      layers may come from different sources in the network\
    \ (for\n      instance, the base layer might be cached locally while the\n   \
    \   enhancement layers may be stored in the origin server).  Video and\n     \
    \ audio-video streams must be synchronized, and this includes both\n      intra-layer\
    \ synchronization (for the layers of the same video or\n      audio stream) and\
    \ inter-stream synchronization (see Section 9 for\n      other synchronization\
    \ aspects to be included in the \"Future Steps\n      for Video in ICN\"); and\n\
    \   o  Naming of the different layers: when the client requests an\n      object,\
    \ the request can be satisfied with the base layer alone,\n      aggregated with\
    \ enhancement layers.  Should one request be\n      sufficient to provide different\
    \ streams?  In a CCN architecture,\n      for instance, this would violate a \"\
    one Interest, one Data packet\"\n      principle and the client would need to\
    \ specify each layer it would\n      like to receive.  In a Pub/Sub architecture,\
    \ the Rendezvous Point\n      would have to make a decision as to which layers\
    \ (or which pointer\n      to which layer's location) to return.\n"
- title: 5.4.  Possible Integration of Video Streaming and ICN Architecture
  contents:
  - '5.4.  Possible Integration of Video Streaming and ICN Architecture

    '
- title: 5.4.1.  DASH over CCN
  contents:
  - "5.4.1.  DASH over CCN\n   DASH is intended to enable adaptive streaming, i.e.,\
    \ each content\n   piece can be provided in different qualities, formats, languages,\n\
    \   etc., to cope with the diversity of today's networks and devices.  As\n  \
    \ this is an important requirement for Future Internet proposals like\n   CCN,\
    \ the combination of those two technologies seems to be obvious.\n   Since those\
    \ two proposals are located at different protocol layers --\n   DASH at the application\
    \ and CCN at the network layer -- they can be\n   combined very efficiently to\
    \ leverage the advantages of both and\n   potentially eliminate existing disadvantages.\
    \  As CCN is not based on\n   classical host-to-host connections, it is possible\
    \ to consume content\n   from different origin nodes as well as over different\
    \ network links\n   in parallel, which can be seen as an intrinsic error resilience\n\
    \   feature with respect to the network.  This is a useful feature of CCN\n  \
    \ for adaptive multimedia streaming within mobile environments since\n   most\
    \ mobile devices are equipped with multiple network links like 3G\n   and Wi-Fi.\
    \  CCN offers this functionality out of the box, which is\n   beneficial when\
    \ used for DASH-based services.  In particular, it is\n   possible to enable adaptive\
    \ video streaming handling both bandwidth\n   and network link changes.  That\
    \ is, CCN handles the network link\n   decision and DASH is implemented on top\
    \ of CCN to adapt the video\n   stream to the available bandwidth.\n   In principle,\
    \ there are two options to integrate DASH and CCN: a\n   proxy service acting\
    \ as a broker between HTTP and CCN as proposed in\n   [Detti12], and the DASH\
    \ client implementing a native CCN interface.\n   The former transforms an HTTP\
    \ request to a corresponding Interest\n   packet as well as a Data packet back\
    \ to an HTTP response, including\n   reliable transport as offered by TCP.  This\
    \ may be a good compromise\n   to implement CCN in a managed network and to support\
    \ legacy devices.\n   Since such a proxy is already described in [Detti12], this\
    \ document\n   focuses on a more integrated approach, aiming at fully exploiting\
    \ the\n   potential of a CCN DASH client.  That is, we describe a native CCN\n\
    \   interface within the DASH client, which adopts a CCN naming scheme\n   (CCN\
    \ URIs) to denote segments in the MPD.  In this architecture, only\n   the network\
    \ access component on the client has to be modified and the\n   segment URIs within\
    \ MPD have to be updated according to the CCN\n   naming scheme.\n   Initially,\
    \ the DASH client retrieves the MPD containing the CCN URIs\n   of the content\
    \ representations including the media segments.  The\n   naming scheme of the\
    \ segments may reflect intrinsic features of CCN\n   like versioning and segmentation\
    \ support.  Such segmentation support\n   is already compulsory for multimedia\
    \ streaming in CCN; thus, it can\n   also be leveraged for DASH-based streaming\
    \ over CCN.  The CCN\n   versioning can be adopted in a further step to signal\
    \ different\n   representations of the DASH-based content, which enables an implicit\n\
    \   adaptation of the requested content to the clients' bandwidth\n   conditions.\
    \  That is, the Interest packet already provides the\n   desired characteristics\
    \ of a segment (such as bit rate, resolution,\n   etc.) within the content name\
    \ (or potentially within parameters\n   defined as extra types in the packet formats).\
    \  Additionally, if\n   bandwidth conditions of the corresponding interfaces or\
    \ routing paths\n   allow so, DASH media segments could be aggregated automatically\
    \ by\n   the CCN nodes, which reduces the amount of Interest packets needed to\n\
    \   request the content.  However, such approaches need further research,\n  \
    \ specifically in terms of additional intelligence and processing power\n   needed\
    \ at the CCN nodes.\n   After requesting the MPD, the DASH client will start to\
    \ request\n   particular segments.  Therefore, CCN Interest packets are generated\n\
    \   by the CCN access component and forwarded to the available\n   interfaces.\
    \  Within the CCN, these Interest packets leverage the\n   efficient interest\
    \ aggregation for, e.g., popular content, as well as\n   the implicit multicast\
    \ support.  Finally, the Interest packets are\n   satisfied by the corresponding\
    \ Data packets containing the video\n   segment data, which are stored on the\
    \ origin server or any CCN node,\n   respectively.  With an increasing popularity\
    \ of the content, it will\n   be distributed across the network resulting in lower\
    \ transmission\n   delays and reduced bandwidth requirements for origin servers\
    \ and\n   content providers, respectively.\n   With the extensive usage of in-network\
    \ caching, new drawbacks are\n   introduced since the streaming logic is located\
    \ at the client, i.e.,\n   clients are not aware of each other and the network\
    \ infrastructure\n   and cache states.  Furthermore, negative effects are introduced\
    \ when\n   multiple clients compete in a bottleneck and when caching influences\n\
    \   this bandwidth competition.  As mentioned above, the clients request\n   individual\
    \ portions of the content based on available bandwidth,\n   which is calculated\
    \ using throughput estimations.  This uncontrolled\n   distribution of the content\
    \ influences the adaptation process of\n   adaptive streaming clients.  The impact\
    \ of this falsified throughput\n   estimation could be tremendous and leads to\
    \ a wrong adaptation\n   decision that may impact the QoE at the client, as shown\
    \ in\n   [Mueller12].  In ICN, the client does not have the knowledge from\n \
    \  which source the requested content is actually served or how many\n   origin\
    \ servers of the content are available, as this is transparent\n   and depends\
    \ on the name-based routing.  This introduces the challenge\n   that the adaptation\
    \ logic of the adaptive streaming client is not\n   aware of the event when the\
    \ ICN routing decides to switch to a\n   different origin server or content is\
    \ coming through a different\n   link/interface.  As most algorithms implementing\
    \ the adaption logic\n   use bandwidth measurements and related heuristics, the\
    \ adaptation\n   decisions are no longer valid when changing origin servers (or\n\
    \   links), and these decisions potentially cause playback interruptions\n   and,\
    \ consequently, stalling.  Additionally, ICN supports the usage of\n   multiple\
    \ interfaces.  A seamless handover between these interfaces\n   (and different\
    \ sources for the content) comes together with changes\n   in performance, e.g.,\
    \ due to switching between fixed and wireless,\n   3G/4G and Wi-Fi networks, different\
    \ types of servers (say with/\n   without Shared Secret Data (SSD) or hardware\
    \ acceleration), etc.\n   Considering these characteristics of ICN, adaptation\
    \ algorithms\n   merely based on bandwidth measurements are not appropriate anymore,\n\
    \   as potentially each segment can be transferred from another ICN node\n   or\
    \ interface, all with different bandwidth conditions.  Thus,\n   adaptation algorithms\
    \ taking into account these intrinsic\n   characteristics of ICN are preferred\
    \ over algorithms based on mere\n   bandwidth measurements.\n"
- title: 5.4.2.  Testbed, Open-Source Tools, and Dataset
  contents:
  - "5.4.2.  Testbed, Open-Source Tools, and Dataset\n   For the evaluations of DASH\
    \ over CCN, a testbed with open-source\n   tools and datasets is provided in [ITEC-DASH].\
    \  In particular, it\n   provides two client-player implementations, (i) a libdash\
    \ extension\n   for DASH over CCN and (ii) a VLC plugin implementing DASH over\
    \ CCN.\n   For both implementations, the CCNx implementation has been used as\
    \ a\n   basis.\n   The general architecture of libdash is organized in modules\
    \ so that\n   the library implements a MPD parser and an extensible connection\n\
    \   manager.  The library provides object-oriented interfaces for these\n   modules\
    \ to access the MPD and the downloadable segments.  These\n   components are extended\
    \ to support DASH over CCN and are located in a\n   separate development branch\
    \ of the GitHub project available at\n   <http://www.github.com/bitmovin/libdash>.\
    \ libdash comes together with\n   a fully featured DASH player with a QT-based\
    \ front end, demonstrating\n   the usage of libdash and providing a scientific\
    \ evaluation platform.\n   As an alternative, patches for the DASH plugin of the\
    \ VLC player are\n   provided.  These patches can be applied to the latest source\
    \ code\n   checkout of VLC resulting in a DASH-over-CCN-enabled VLC player.\n\
    \   Finally, a DASH-over-CCN dataset is provided in the form of a CCNx\n   repository.\
    \  It includes 15 different quality representation of the\n   well-known Big Buck\
    \ Bunny Movie, ranging from 100 kbps to 4500 kbps.\n   The content is split into\
    \ segments of two seconds and is described by\n   an associated MPD using the\
    \ presented naming scheme in Section 5.1.\n   This repository can be downloaded\
    \ from [ITEC-DASH] and is also\n   provided by a publicly accessible CCNx node.\
    \  Associated routing\n   commands for the CCNx namespaces of the content are\
    \ provided via\n   scripts coming together with the dataset and can be used as\
    \ a public\n   testbed.\n"
- title: 6.  P2P Video Distribution and ICN
  contents:
  - "6.  P2P Video Distribution and ICN\n   Peer-to-Peer distribution is another form\
    \ of distributing content --\n   and video in particular -- that ICNs need to\
    \ support.  We see now how\n   an existing protocol such as PPSP can be modified\
    \ to work in an ICN\n   environment.\n"
- title: 6.1.  Introduction to PPSP
  contents:
  - "6.1.  Introduction to PPSP\n   P2P Video Streaming (P2PVS) is a popular approach\
    \ to redistribute\n   live media over the Internet.  The proposed P2PVS solutions\
    \ can be\n   roughly classified in two classes:\n   o  Push/Tree-based\n   o \
    \ Pull/Mesh-based\n   The Push/Tree-based solution creates an overlay network\
    \ among Peers\n   that has a tree shape [Castro03].  Using a progressive encoding\n\
    \   (e.g., Multiple Description Coding or H.264 Scalable Video Coding),\n   multiple\
    \ trees could be set up to support video rate adaptation.  On\n   each tree, an\
    \ enhancement stream is sent.  The higher the number of\n   received streams,\
    \ the higher the video quality.  A peer controls the\n   video rate by either\
    \ fetching or not fetching the streams delivered\n   over the distribution trees.\n\
    \   The Pull/Mesh-based solution is inspired by the BitTorrent file\n   sharing\
    \ mechanism.  A tracker collects information about the state of\n   the swarm\
    \ (i.e., the set of participating peers).  A peer forms a\n   mesh overlay network\
    \ with a subset of peers and exchanges data with\n   them.  A peer announces what\
    \ data items it disposes and requests\n   missing data items that are announced\
    \ by connected peers.  In case of\n   live streaming, the involved data set includes\
    \ only a recent window\n   of data items published by the source.  Also, in this\
    \ case, the use\n   of a progressive encoding can be exploited for video rate\
    \ adaptation.\n   Pull/Mesh-based P2PVS solutions are the more promising candidate\
    \ for\n   the ICN deployment, since most of ICN approach provides a pull-based\n\
    \   API [Jacobson09b] [Detti11] [Chai11] [NETINF].  In addition,\n   Pull/Mesh-based\
    \ P2PVS are more robust than the Push/Tree-based one\n   [Magharei07], and the\
    \ PPSP working group [IETF-PPSP] is also\n   proposing a Pull/Mesh-based solution.\n\
    \            +------------------------------------------------+\n            |\
    \                                                |\n            |     +--------------------------------+\
    \         |\n            |     |            Tracker             |         |\n\
    \            |     +--------------------------------+         |\n            |\
    \        |     ^                   ^             |\n            |Tracker |   \
    \  | Tracker           |Tracker      |\n            |Protocol|     | Protocol\
    \          |Protocol     |\n            |        |     |                   | \
    \            |\n            |        V     |                   |             |\n\
    \            |     +---------+    Peer     +---------+        |\n            |\
    \     |   Peer  |<----------->|   Peer  |        |\n            |     +---------+\
    \   Protocol  +---------+        |\n            |       | ^                  \
    \                    |\n            |       | |Peer                          \
    \        |\n            |       | |Protocol                              |\n \
    \           |       V |                                      |\n            |\
    \     +---------------+                          |\n            |     |      Peer\
    \     |                          |\n            |     +---------------+      \
    \                    |\n            |                                        \
    \        |\n            +------------------------------------------------+\n \
    \              Figure 1: PPSP System Architecture [RFC6972]\n   Figure 1 reports\
    \ the PPSP architecture presented in [RFC6972].  PEERs\n   announce and share\
    \ video chunks and a TRACKER maintains a list of\n   PEERs participating in a\
    \ specific audio-video channel or in the\n   distribution of a streaming file.\
    \  The TRACKER functionality may be\n   centralized in a server or distributed\
    \ over the PEERs.  PPSP\n   standardizes the peer and Tracker Protocols, which\
    \ can run directly\n   over UDP or TCP.\n   This document discusses some preliminary\
    \ concepts about the\n   deployment of PPSP on top of an ICN that exposes a pull-based\
    \ API,\n   meanwhile considering the impact of MPEG-DASH streaming format.\n"
- title: '6.2.  PPSP over ICN: Deployment Concepts'
  contents:
  - '6.2.  PPSP over ICN: Deployment Concepts

    '
- title: 6.2.1.  PPSP Short Background
  contents:
  - "6.2.1.  PPSP Short Background\n   The Peer-to-Peer Streaming Peer Protocol (PPSPP)\
    \ is defined in\n   [Bakker15] and the Peer-to-Peer Streaming Tracker Protocol\
    \ (PPSP-TP)\n   is defined in [RFC7846].\n   Some of the operations carried out\
    \ by the Tracker Protocol are the\n   following: when a peer wishes to join the\
    \ streaming session, it\n   contacts the tracker (CONNECT message), obtains a\
    \ PEER_ID and a list\n   of PEER_IDs (and IP addresses) of other peers that are\
    \ participating\n   to the SWARM and that the tracker has singled out for the\
    \ requesting\n   peer (this may be a subset of the all peers of the SWARM); in\n\
    \   addition to this join operation, a peer may contact the tracker to\n   request\
    \ to renew the list of participating peers (FIND message), to\n   periodically\
    \ update its status to the tracker (STAT_REPORT message),\n   and so on.\n   Some\
    \ of the operations carried out by the Peer Protocol include the\n   following:\
    \ using the list of peers delivered by the tracker, a peer\n   establishes a session\
    \ with them (HANDSHAKE message); a peer\n   periodically announces to neighboring\
    \ peers which chunks it has\n   available for download (HAVE message); using these\
    \ announcements, a\n   peer requests missing chunks from neighboring peers (REQUEST\n\
    \   messages), which will be sent back to them (DATA message).\n"
- title: 6.2.2.  From PPSP Messages to ICN Named-Data
  contents:
  - "6.2.2.  From PPSP Messages to ICN Named-Data\n   An ICN provides users with data\
    \ items exposed by names.  The bundle\n   name and data item is usually referred\
    \ as \"named-data\", \"named-\n   content\", etc.  To transfer PPSP messages through\
    \ an ICN, the\n   messages should be wrapped as named-data items and receivers\
    \ should\n   request them by name.\n   A PPSP entity receives messages from peers\
    \ and/or a tracker.  Some\n   operations require gathering the messages generated\
    \ by another\n   specific host (peer or tracker).  For instance, if Peer A wishes\
    \ to\n   gain information about video chunks available from Peer B, the former\n\
    \   shall fetch the PPSP HAVE messages specifically generated by the\n   latter.\
    \  We refer to these kinds of named-data as \"located-named-\n   data\" since\
    \ they should be gathered from a specific location (e.g.,\n   Peer B).\n   For\
    \ other PPSP operations, such as fetching a DATA message (i.e., a\n   video chunk),\
    \ as long as a peer receives the requested content, it\n   doesn't matter which\
    \ endpoint generated the data.  We refer to this\n   information with the generic\
    \ term \"named-data\".\n   The naming scheme differentiates named-data and located-named-data\n\
    \   items.  In the case of named-data, the naming scheme only includes a\n   content\
    \ identifier (e.g., the name of the video chunk) without any\n   prefix identifying\
    \ who provides the content.  For instance, a DATA\n   message containing the video\
    \ chunk \"#1\" may be named as\n   \"ccnx:/swarmID/chunk/chunkID\", where swarmID\
    \ is a unique identifier\n   of the streaming session, \"chunk\" is a keyword,\
    \ and chunkID is the\n   chunk identifier (e.g., an integer number).\n   In case\
    \ of located-named-data, the naming scheme includes a location-\n   prefix, which\
    \ uniquely identifies the host generating the data item.\n   This prefix may be\
    \ the PEER_ID in case the host was a peer or a\n   tracker identifier in case\
    \ the host was the tracker.  For instance, a\n   HAVE message generated by a Peer\
    \ B may be named as\n   \"ccnx:/swarmID/peer/PEER_ID/HAVE\", where \"peer\" is\
    \ a keyword,\n   PEER_ID_B is the identifier of Peer B, and HAVE is a keyword.\n"
- title: 6.2.3.  Support of PPSP Interaction through a Pull-Based ICN API
  contents:
  - "6.2.3.  Support of PPSP Interaction through a Pull-Based ICN API\n   The PPSP\
    \ procedures are based both on pull and push interactions.\n   For instance, the\
    \ distribution of chunks availability can be\n   classified as a push-based operation\
    \ since a peer sends \"unsolicited\"\n   information (HAVE message) to neighboring\
    \ peers.  Conversely, the\n   procedure used to receive video chunks can be classified\
    \ as pull-\n   based since it is supported by a request/response interaction (i.e.,\n\
    \   REQUEST, DATA messages).\n   As we said, we refer to an ICN architecture that\
    \ provides a pull-\n   based API.  Accordingly, the mapping of PPSP pull-based\
    \ procedure is\n   quite simple.  For instance, using the CCN architecture\n \
    \  [Jacobson09b], a PPSP DATA message may be carried by a CCN DATA\n   message\
    \ and a REQUEST message can be transferred by a CCN Interest.\n   Conversely,\
    \ the support of push-based PPSP operations may be more\n   difficult.  We need\
    \ an adaptation functionality that carries out a\n   push-based operation using\
    \ the underlying pull-based service\n   primitives.  For instance, a possible\
    \ approach is to use the request/\n   response (i.e., Interest/Data) four-way\
    \ handshakes proposed in\n   [Jacobson09a].  Another possibility is that receivers\
    \ periodically\n   send out request messages of the named-data that neighbors\
    \ will push\n   and, when available, the sender inserts the pushed data within\
    \ a\n   response message.\n"
- title: 6.2.4.  Abstract Layering for PPSP over ICN
  contents:
  - "6.2.4.  Abstract Layering for PPSP over ICN\n                   +-----------------------------------+\n\
    \                   |            Application            |\n                  \
    \ +-----------------------------------+\n                   |           PPSP (TCP/IP)\
    \           |\n                   +-----------------------------------+\n    \
    \               |  ICN - PPSP Adaptation Layer (AL) |\n                   +-----------------------------------+\n\
    \                   |         ICN Architecture          |\n                  \
    \ +-----------------------------------+\n                        Figure 2: Mediator\
    \ Approach\n   Figure 2 provides a possible abstract layering for PPSP over ICN.\n\
    \   The Adaptation Layer acts as a mediator (proxy) between legacy PPSP\n   entities\
    \ based on TCP/IP and the ICN architecture.  In fact, the role\n   the mediator\
    \ is to use ICN to transfer PPSP legacy messages.\n   This approach makes it possible\
    \ to merely reuse TCP/IP P2P\n   applications whose software includes also PPSP\
    \ functionality.  This\n   \"all-in-one\" development approach may be rather common\
    \ since the PPSP\n   application interface is not going to be specified.  Moreover,\
    \ if the\n   operating system will provide libraries that expose a PPSP API, these\n\
    \   will be initially based on an underlying TCP/IP API.  Also, in this\n   case,\
    \ the mediator approach would make it possible to easily reuse\n   both the PPSP\
    \ libraries and the Application on top of an ICN.\n                  +-----------------------------------+\n\
    \                  |            Application            |\n                  +-----------------------------------+\n\
    \                  |             ICN-PPSP              |\n                  +-----------------------------------+\n\
    \                  |          ICN Architecture         |\n                  +-----------------------------------+\n\
    \                      Figure 3: Clean-Slate Approach\n   Figure 3 sketches a\
    \ clean-slate layering approach in which the\n   application directly includes\
    \ or interacts with a PPSP version based\n   on ICN.  It's likely such a PPSP_ICN\
    \ integration could yield a\n   simpler development also because it does not require\
    \ implementing a\n   TCP/IP to ICN translation as in the Mediator approach.  However,\
    \ the\n   clean-slate approach requires developing the application (in case of\n\
    \   embedded PPSP functionality) or the PPSP library from scratch without\n  \
    \ exploiting what might already exist for TCP/IP.\n   Overall, the Mediator approach\
    \ may be considered the first step of a\n   migration path towards ICN-native\
    \ PPSP applications.\n"
- title: 6.2.5.  PPSP Interaction with the ICN Routing Plane
  contents:
  - "6.2.5.  PPSP Interaction with the ICN Routing Plane\n   Upon the ICN API, a user\
    \ (peer) requests content and the ICN sends it\n   back.  The content is gathered\
    \ by the ICN from any source, which\n   could be the closest peer that disposes\
    \ of the named-data item, an\n   in-network cache, etc.  Actually, \"where\" to\
    \ gather the content is\n   controlled by an underlying ICN routing plane, which\
    \ sets up the ICN\n   forwarding tables (e.g., CCN FIB [Jacobson09b]).\n   A cross-layer\
    \ interaction between the ICN routing plane and the PPSP\n   may be required to\
    \ support a PPSP session.  Indeed, ICN shall forward\n   request messages (e.g.,\
    \ CCN Interest) towards the proper peer that\n   can handle them.  Depending on\
    \ the layering approach, this cross-\n   layer interaction is controlled either\
    \ by the Adaptation Layer or by\n   the ICN-PPSP.  For example, if a Peer A receives\
    \ a HAVE message\n   indicating that Peer B disposes of the video chunk named\n\
    \   \"ccnx:/swarmID/chunk/chunkID\", then the former should insert in its\n  \
    \ ICN forwarding table an entry for the prefix \"ccnx:/swarmID/chunk/\n   chunkID\"\
    \ whose next hop locator (e.g., IP address) is the network\n   address of Peer\
    \ B [Detti13].\n"
- title: 6.2.6.  ICN Deployment for PPSP
  contents:
  - "6.2.6.  ICN Deployment for PPSP\n   The ICN functionality that supports a PPSP\
    \ session may be \"isolated\"\n   or \"integrated\" with one from a public ICN.\n\
    \   In the isolated case, a PPSP session is supported by an instance of\n   an\
    \ ICN (e.g., deployed on top of an IP) whose functionalities operate\n   only\
    \ on the limited set of nodes participating to the swarm, i.e.,\n   peers and\
    \ the tracker.  This approach resembles the one followed by a\n   current P2P\
    \ application, which usually forms an overlay network among\n   peers of a P2P\
    \ application; intermediate public IP routers do not\n   carry out P2P functionalities.\n\
    \   In the integrated case, the nodes of a public ICN may be involved in\n   the\
    \ forwarding and in-network caching procedures.  In doing so, the\n   swarm may\
    \ benefit from the presence of in-network caches, thus\n   limiting uplink traffic\
    \ on peers and inter-domain traffic, too.\n   These are distinctive advantages\
    \ of using PPSP over a public ICN\n   rather than over TCP/IP.  In addition, such\
    \ advantages aren't likely\n   manifested in the case of isolated deployment.\n\
    \   However, the possible interaction between the PPSP and the routing\n   layer\
    \ of a public ICN may be dramatic, both in terms of explosion of\n   the forwarding\
    \ tables and in terms of security.  These issues\n   specifically take place for\
    \ those ICN architectures for which the\n   name resolution (i.e., name to next\
    \ hop) occurs en route, like the\n   CCN architecture.\n   For instance, using\
    \ the CCN architecture, to fetch a named-data item\n   offered by a Peer A the\
    \ on-path public ICN entities have to route the\n   request messages towards the\
    \ Peer A.  This implies that the ICN\n   forwarding tables of public ICN nodes\
    \ may contain many entries, e.g.,\n   one entry per video chunk, and these entries\
    \ are difficult to be\n   aggregated since peers may have available only sparse\
    \ parts of a big\n   content, whose names have a same prefix (e.g., \"ccnx:/swarmID\"\
    ).\n   Another possibility is to wrap all PPSP messages into a located-\n   named-data.\
    \  In this case, the forwarding tables should contain\n   \"only\" the PEER_ID\
    \ prefixes (e.g., \"ccnx:/swarmID/peer/PEER_ID\"),\n   thus scaling down the number\
    \ of entries from number of chunks to\n   number of peers.  However, in this case,\
    \ the ICN mechanisms recognize\n   the same video chunk offered by different peers\
    \ as different content,\n   thus losing caching and multicasting ICN benefits.\
    \  In any case,\n   routing entries should be updated either on the basis of the\n\
    \   availability of named-data items on peers or on the presence of\n   peers,\
    \ and these events in a P2P session are rapidly changing and\n   possibly hampering\
    \ the convergence of the routing plane.  Finally,\n   since peers have an impact\
    \ on the ICN forwarding table of public\n   nodes, this may open obvious security\
    \ issues.\n"
- title: 6.3.  Impact of MPEG-DASH Coding Schemes
  contents:
  - "6.3.  Impact of MPEG-DASH Coding Schemes\n   The introduction of video rate adaptation\
    \ may significantly decrease\n   the effectiveness of P2P cooperation and of in-network\
    \ caching,\n   depending of the kind of the video coding used by the MPEG-DASH\n\
    \   stream.\n   In case of an MPEG-DASH streaming with MPEG AVC encoding, the\
    \ same\n   video chunk is independently encoded at different rates and the\n \
    \  encoding output is a different file for each rate.  For instance, in\n   case\
    \ of a video encoded at three different rates, R1, R2, and R3; for\n   each segment\
    \ S, we have three distinct files: S.R1, S.R2, and S.R3.\n   These files are independent\
    \ of each other.  To fetch a segment coded\n   at R2 kbps, a peer shall request\
    \ the specific file S.R2.  Receiver-\n   driven algorithms, implemented by the\
    \ video client, usually handle\n   the estimation of the best coding rate.\n \
    \  The independence among files associated with different encoding rates\n   and\
    \ the heterogeneity of peer bandwidths may dramatically reduce the\n   interaction\
    \ among peers, the effectiveness of in-network caching (in\n   case of integrated\
    \ deployment), and consequently, the ability of PPSP\n   to offload the video\
    \ server (i.e., a seeder peer).  Indeed, a Peer A\n   may select a coding rate\
    \ (e.g., R1) different from the one selected\n   by a Peer B (e.g., R2), and this\
    \ prevents the former from fetching\n   video chunks from the latter since Peer\
    \ B only has chunks available\n   that are coded at a rate different from the\
    \ ones needed by Peer A.\n   To overcome this issue, a common distributed rate\
    \ selection algorithm\n   could force peers to select the same coding rate [Detti13];\n\
    \   nevertheless, this approach may be not feasible in the case of many\n   peers.\n\
    \   The use of an SVC encoding (Annex G extension of the H.264/MPEG-4\n   Advanced\
    \ Video Coding (AVC) video compression standard) should make\n   rate adaptation\
    \ possible while neither reducing peer collaborations\n   nor the in-network caching\
    \ effectiveness.  For a single video chunk,\n   an SVC encoder produces different\
    \ files for the different rates\n   (roughly \"layers\"), and these files are\
    \ progressively related to each\n   other.  Starting from a base layer that provides\
    \ the minimum rate\n   encoding, the next rates are encoded as an \"enhancement\
    \ layer\" of the\n   previous one.  For instance, in case the video is coded with\
    \ three\n   rates, R1 (base layer), R2 (enhancement layer n.1), and R3\n   (enhancement\
    \ layer n.2), then for each DASH segment, we have three\n   files: S.R1, S.R2,\
    \ and S.R3.  The file S.R1 is the segment coded at\n   the minimum rate (base\
    \ layer).  The file S.R2 enhances S.R1, so S.R1\n   and S.R2 can be combined to\
    \ obtain a segment coded at rate R2.  To\n   get a segment coded at rate R2, a\
    \ peer shall fetch both S.R1 and\n   S.R2.  This progressive dependence among\
    \ files that encode the same\n   segment at different rates makes peer cooperation\
    \ possible, also in\n   case peers player have autonomously selected different\
    \ coding rates.\n   For instance, if Peer A has selected the rate R1, the downloaded\n\
    \   files S.R1 are useful also for a Peer B that has selected the rate\n   R2,\
    \ and vice versa.\n"
- title: 7.  IPTV and ICN
  contents:
  - '7.  IPTV and ICN

    '
- title: 7.1.  IPTV Challenges
  contents:
  - "7.1.  IPTV Challenges\n   IPTV refers to the delivery of quality content broadcast\
    \ over the\n   Internet and is typically associated with strict quality\n   requirements,\
    \ i.e., with a perceived latency of less than 500 ms and\n   a packet loss rate\
    \ that is multiple orders lower than the current\n   loss rates experienced in\
    \ the most commonly used access networks (see\n   [ATIS-IIF]).  We can summarize\
    \ the major challenges for the delivery\n   of IPTV service as follows.\n   Channel\
    \ change latency represents a major concern for the IPTV\n   service.  Perceived\
    \ latency during channel change should be less than\n   500 ms.  To achieve this\
    \ objective over the IP infrastructure, we\n   have multiple choices:\n   i  \
    \   receive fast unicast streams from a dedicated server (most\n         effective\
    \ but not resource efficient);\n   ii    connect to other peers in the network\
    \ (efficiency depends on\n         peer support, effective and resource efficient,\
    \ if also\n         supported with a dedicated server); and\n   iii   connect\
    \ to multiple multicast sessions at once (effective but\n         not resource\
    \ efficient and depends on the accuracy of the\n         prediction model used\
    \ to track user activity).\n   The second major challenge is the error recovery.\
    \  Typical IPTV\n   service requirements dictate the mean time between artifacts\
    \ to be\n   approximately 2 hours (see [ATIS-IIF]).  This suggests the perceived\n\
    \   loss rate to be less than or equal to 10^-7.  Current IP-based\n   solutions\
    \ rely on the following proactive and reactive recovery\n   techniques: (i) joining\
    \ the Forward Error Correction (FEC) multicast\n   stream corresponding to the\
    \ perceived packet loss rate (not\n   efficient, as the recovery strength is chosen\
    \ based on worst-case\n   loss scenarios); (ii) making unicast recovery requests\
    \ to dedicated\n   servers (requires active support from the service provider);\
    \ (iii)\n   probing peers to acquire repair packets (finding matching peers and\n\
    \   enabling their cooperation is another challenge).\n"
- title: 7.2.  ICN Benefits for IPTV Delivery
  contents:
  - "7.2.  ICN Benefits for IPTV Delivery\n   ICN presents significant advantages\
    \ for the delivery of IPTV traffic.\n   For instance, ICN inherently supports\
    \ multicast and allows for quick\n   recovery from packet losses (with the help\
    \ of in-network caching).\n   Similarly, peer support is also provided in the\
    \ shape of in-network\n   caches that typically act as the middleman between two\
    \ peers,\n   therefore enabling earlier access to IPTV content.\n   However, despite\
    \ these advantages, delivery of IPTV service over ICNs\n   brings forth new challenges.\
    \  We can list some of these challenges as\n   follows:\n   o  Messaging overhead:\
    \ ICN is a pull-based architecture and relies on\n      a unique balance between\
    \ requests and responses.  A user needs to\n      make a request for each Data\
    \ packet.  In the case of IPTV, with\n      rates up to (and likely to be) above\
    \ 15 Mbps, we observe\n      significant traffic upstream to bring those streams.\
    \  As the\n      number of streams increases (including the same session at\n\
    \      different quality levels and other formats), so does the burden on\n  \
    \    the routers.  Even if the majority of requests are aggregated at\n      the\
    \ core, routers close to the edge (where we observe the biggest\n      divergence\
    \ in user requests) will experience a significant\n      increase in overhead\
    \ to process these requests.  The same is true\n      at the user side, as the\
    \ uplink usage multiplies in the number of\n      sessions a user requests (for\
    \ instance, to minimize the impact of\n      bandwidth fluctuations).\n   o  Cache\
    \ control: As the IPTV content expires at a rapid rate (with a\n      likely expiry\
    \ threshold of 1 s), we need solutions to effectively\n      flush out such content\
    \ to also prevent degradation impact on other\n      cached content, with the\
    \ help of intelligently chosen naming\n      conventions.  However, to allow for\
    \ fast recovery and optimize\n      access time to sessions (from current or new\
    \ users), the timing of\n      such expirations needs to be adaptive to network\
    \ load and user\n      demand.  However, we also need to support quick access\
    \ to earlier\n      content, whenever needed; for instance, when the user accesses\
    \ the\n      rewind feature (note that in-network caches will not be of\n    \
    \  significant help in such scenarios due to the overhead required to\n      maintain\
    \ such content).\n   o  Access accuracy: To receive the up-to-date session data,\
    \ users\n      need to be aware of such information at the time of their request.\n\
    \      Unlike IP multicast, since the users join a session indirectly,\n     \
    \ session information is critical to minimize buffering delays and\n      reduce\
    \ the startup latency.  Without such information, and without\n      any active\
    \ cooperation from the intermediate routers, stale data\n      can seriously undermine\
    \ the efficiency of content delivery.\n      Furthermore, finding a cache does\
    \ not necessarily equate to\n      joining a session, as the look-ahead latency\
    \ for the initial\n      content access point may have a shorter lifetime than\
    \ originally\n      intended.  For instance, if the user that has initiated the\n\
    \      indirect multicast leaves the session early, the requests from the\n  \
    \    remaining users need to experience an additional latency of one\n      RTT\
    \ as they travel towards the content source.  If the startup\n      latency is\
    \ chosen depending on the closeness to the intermediate\n      router, going to\
    \ the content source in-session can lead to\n      undesired pauses.\n   It should\
    \ be noted that IPTV includes more than just multicast.  Many\n   implementations\
    \ include \"trick plays\" (fast forward, pause, rewind)\n   that often transform\
    \ a multicast session into multiple unicast\n   sessions.  In this context, ICN\
    \ is beneficial, as the caching offers\n   an implicit multicast but without tight\
    \ synchronization constraints\n   in between two different users.  One user may\
    \ rewind and start\n   playing forward again, thus drawing from a nearby cache\
    \ of the\n   content recently viewed by another user (whereas in a strict\n  \
    \ multicast session, the opportunity of one user lagging off behind\n   would\
    \ be more difficult to implement).\n"
- title: 8.  Digital Rights Management in ICN
  contents:
  - "8.  Digital Rights Management in ICN\n   This section discusses the need for\
    \ DRM functionalities for\n   multimedia streaming over ICN.  It focuses on two\
    \ possible\n   approaches: modifying Authentication, Authorization, and Accounting\n\
    \   (AAA) to support DRM in ICN and using Broadcast Encryption.\n   It is assumed\
    \ that ICN will be used heavily for digital content\n   dissemination.  It is\
    \ vital to consider DRM for digital content\n   distribution.  In today's Internet,\
    \ there are two predominant classes\n   of business models for on-demand video\
    \ streaming.  The first model is\n   based on advertising revenues.  Non-copyright\
    \ protected (usually\n   User-Generated Content (UGC)) content is offered by large\n\
    \   infrastructure providers like Google (YouTube) at no charge.  The\n   infrastructure\
    \ is financed by spliced advertisements into the\n   content.  In this context,\
    \ DRM considerations may not be required,\n   since producers of UGC may only\
    \ strive for the maximum possible\n   dissemination.  Some producers of UGC are\
    \ mainly interested in\n   sharing content with their families, friends, colleges,\
    \ or others and\n   have no intention making a profit.  However, the second class\
    \ of\n   business model requires DRM, because these entities are primarily\n \
    \  profit oriented.  For example, large on-demand streaming platforms\n   (e.g.,\
    \ Netflix) establish business models based on subscriptions.\n   Consumers may\
    \ have to pay a monthly fee in order to get access to\n   copyright-protected\
    \ content like TV series, movies, or music.  This\n   model may be ad supported\
    \ and free to the content consumer, like\n   YouTube Channels or Spotify, but\
    \ the creator of the content expects\n   some remuneration for his work.  From\
    \ the perspective of the service\n   providers and the copyright owners, only\
    \ clients that pay the fee\n   (explicitly or implicitly through ad placement)\
    \ should be able to\n   access and consume the content.  Anyway, the challenge\
    \ is to find an\n   efficient and scalable way of access control to digital content,\n\
    \   which is distributed in ICNs.\n"
- title: 8.1.  Broadcast Encryption for DRM in ICN
  contents:
  - "8.1.  Broadcast Encryption for DRM in ICN\n   This section discusses Broadcast\
    \ Encryption (BE) as a suitable basis\n   for DRM functionalities in conformance\
    \ to the ICN communication\n   paradigm (network-inherent caching, considered\
    \ the advantage of BE,\n   will be highlighted).\n   In ICN, Data packets can\
    \ be cached inherently in the network, and any\n   network participant can request\
    \ a copy of these packets.  This makes\n   it very difficult to implement an access\
    \ control for content that is\n   distributed via ICN.  A naive approach is to\
    \ encrypt the transmitted\n   data for each consumer with a distinct key.  This\
    \ prohibits everyone\n   other than the intended consumers from decrypting and\
    \ consuming the\n   data.  However, this approach is not suitable for ICN's communication\n\
    \   paradigm, since it would reduce the benefits gained from the inherent\n  \
    \ network caching.  Even if multiple consumers request the same\n   content, the\
    \ requested data for each consumer would differ using this\n   approach.  A better,\
    \ but still insufficient, idea is to use a single\n   key for all consumers. \
    \ This does not destruct the benefits of ICN's\n   caching ability.  The drawback\
    \ is that if one of the consumers\n   illegally distributes the key, the system\
    \ is broken; any entity in\n   the network can access the data.  Changing the\
    \ key after such an\n   event is useless since the provider has no possibility\
    \ to identify\n   the illegal distributor.  Therefore, this person cannot be stopped\n\
    \   from distributing the new key again.  In addition to this issue,\n   other\
    \ challenges have to be considered.  Subscriptions expire after a\n   certain\
    \ time, and then it has to be ensured that these consumers\n   cannot access the\
    \ content anymore.  For a provider that serves\n   millions of daily consumers\
    \ (e.g., Netflix), there could be a\n   significant number of expiring subscriptions\
    \ per day.  Publishing a\n   new key every time a subscription expires would require\
    \ an unsuitable\n   amount of computational power just to re-encrypt the collection\
    \ of\n   audio-visual content.\n   A possible approach to solve these challenges\
    \ is BE [Fiat94] as\n   proposed in [Posch13].  From this point on, this section\
    \ will focus\n   only on BE as an enabler for DRM functionality in the use case\
    \ of ICN\n   video streaming.  This subsection continues with the explanation\
    \ of\n   how BE works and shows how BE can be used to implement an access\n  \
    \ control scheme in the context of content distribution in ICN.\n   BE actually\
    \ carries a misleading name.  One might expect a concrete\n   encryption scheme.\
    \  However, it belongs to the family of key\n   management schemes.  These schemes\
    \ are responsible for the\n   generation, exchange, storage, and replacement of\
    \ cryptographic keys.\n   The most interesting characteristics of BE schemes are:\n\
    \   o  BE schemes typically use a global trusted entity called the\n      Licensing\
    \ Agent (LA), which is responsible for spreading a set of\n      pre-generated\
    \ secrets among all participants.  Each participant\n      gets a distinct subset\
    \ of secrets assigned from the LA.\n   o  The participants can agree on a common\
    \ session key, which is\n      chosen by the LA.  The LA broadcasts an encrypted\
    \ message that\n      includes the key.  Participants with a valid set of secrets\
    \ can\n      derive the session key from this message.\n   o  The number of participants\
    \ in the system can change dynamically.\n      Entities may join or leave the\
    \ communication group at any time.\n      If a new entity joins, the LA passes\
    \ on a valid set of secrets to\n      that entity.  If an entity leaves (or is\
    \ forced to leave) the LA\n      revokes the entity's subset of keys, which means\
    \ that it cannot\n      derive the correct session key anymore when the LA distributes\
    \ a\n      new key.\n   o  Traitors (entities that reveal their secrets) can be\
    \ traced and\n      excluded from ongoing communication.  The algorithms and\n\
    \      preconditions to identify a traitor vary between concrete BE\n      schemes.\n\
    \   This listing already illustrates why BE is suitable to control the\n   access\
    \ to data that is distributed via an ICN.  BE enables the usage\n   of a single\
    \ session key for confidential data transmission between a\n   dynamically changing\
    \ subset or network participants.  ICN caches can\n   be utilized since the data\
    \ is encrypted only with a single key known\n   by all legitimate clients.  Furthermore,\
    \ traitors can be identified\n   and removed from the system.  The issue of re-encryption\
    \ still exists\n   because the LA will eventually update the session key when\
    \ a\n   participant should be excluded.  However, this disadvantage can be\n \
    \  relaxed in some way if the following points are considered:\n   o  The updates\
    \ of the session key can be delayed until a set of\n      compromised secrets\
    \ has been gathered.  Note that secrets may\n      become compromised because\
    \ of two reasons: first, a traitor could\n      have illegally revealed the secret;\
    \ second, the subscription of an\n      entity expired.  Delayed revocation temporarily\
    \ enables some\n      illegitimate entities to consume content.  However, this\
    \ should\n      not be a severe problem in home entertainment scenarios.  Updating\n\
    \      the session key in regular (not too short) intervals is a good\n      trade-\
    \ off.  The longer the interval lasts, the less computational\n      resources\
    \ are required for content re-encryption and the better\n      the cache utilization\
    \ in the ICN will be.  To evict old data from\n      ICN caches that have been\
    \ encrypted with the prior session key,\n      the publisher could indicate a\
    \ lifetime for transmitted packets.\n   o  Content should be re-encrypted dynamically\
    \ at request time.  This\n      has the benefit that untapped content is not re-encrypted\
    \ if the\n      content is not requested during two session key update; therefore,\n\
    \      no resources are wasted.  Furthermore, if the updates are\n      triggered\
    \ in non-peak times, the maximum amount of resources\n      needed at one point\
    \ in time can be lowered effectively since in\n      peak times generally more\
    \ diverse content is requested.\n   o  Since the amount of required computational\
    \ resources may vary\n      strongly from time to time, it would be beneficial\
    \ for any\n      streaming provider to use cloud-based services to be able to\n\
    \      dynamically adapt the required resources to the current needs.  In\n  \
    \    regard to a lack of computation time or bandwidth, the cloud\n      service\
    \ could be used to scale up to overcome shortages.\n   Figure 4 shows the potential\
    \ usage of BE in a multimedia delivery\n   framework that builds upon ICN infrastructure\
    \ and uses the concept of\n   dynamic adaptive streaming, e.g., DASH.  BE would\
    \ be implemented on\n   the top to have an efficient and scalable way of access\
    \ control to\n   the multimedia content.\n              +--------Multimedia Delivery\
    \ Framework--------+\n              |                                        \
    \     |\n              |     Technologies            Properties      |\n     \
    \         |  +----------------+     +----------------+  |\n              |  |\
    \   Broadcast    |<--->|   Controlled   |  |\n              |  |   Encryption\
    \   |     |     Access     |  |\n              |  +----------------+     +----------------+\
    \  |\n              |  |Dynamic Adaptive|<--->|   Multimedia   |  |\n        \
    \      |  |   Streaming    |     |   Adaptation   |  |\n              |  +----------------+\
    \     +----------------+  |\n              |  |       ICN      |<--->|   Cacheable\
    \    |  |\n              |  | Infrastructure |     |   Data Chunks  |  |\n   \
    \           |  +----------------+     +----------------+  |\n              +---------------------------------------------+\n\
    \            Figure 4: A Potential Multimedia Framework Using BE\n"
- title: 8.2.  AAA-Based DRM for ICN Networks
  contents:
  - '8.2.  AAA-Based DRM for ICN Networks

    '
- title: 8.2.1.  Overview
  contents:
  - "8.2.1.  Overview\n   Recently, a novel approach to DRM has emerged to link DRM\
    \ to usual\n   network management operations, hence linking DRM to AAA services.\n\
    \   ICN provides the abstraction of an architecture where content is\n   requested\
    \ by name and could be served from anywhere.  In DRM, the\n   content provider\
    \ (the origin of the content) allows the destination\n   (the end-user account)\
    \ to use the content.  The content provider and\n   content storage/cache are\
    \ at two different entities in ITU Carrier\n   Code (ICC); for traditional DRM,\
    \ only source and destination count\n   and not the intermediate storage.  The\
    \ proposed solution allows the\n   provider of the caching to be involved in the\
    \ DRM policies using\n   well-known AAA mechanisms.  It is important to note that\
    \ this\n   solution is compatible with the proposal of the BE, proposed earlier\n\
    \   in this document.  The BE proposes a technology, as this solution is\n   more\
    \ operational.\n"
- title: 8.2.2.  Implementation
  contents:
  - "8.2.2.  Implementation\n   With the proposed AAA-based DRM, when content is requested\
    \ by name\n   from a specific destination, the request could link back to both\
    \ the\n   content provider and the caching provider via traditional AAA\n   mechanisms\
    \ and trigger the appropriate DRM policy independently from\n   where the content\
    \ is stored.  In this approach, the caching, DRM, and\n   AAA remain independent\
    \ entities but can work together through ICN\n   mechanisms.  The proposed solution\
    \ enables extending the traditional\n   DRM done by the content provider to jointly\
    \ being done by content\n   provider and network/caching provider.\n   The solution\
    \ is based on the concept of a \"token\".  The content\n   provider authenticates\
    \ the end user and issues an encrypted token to\n   authenticate the named-content\
    \ ID or IDs that the user can access.\n   The token will be shared with the network\
    \ provider and used as the\n   interface to the AAA protocols.  At this point,\
    \ all content access is\n   under the control of the network provider and the\
    \ ICN.  The\n   controllers and switches can manage the content requests and handle\n\
    \   mobility.  The content can be accessed from anywhere as long as the\n   token\
    \ remains valid or the content is available in the network.  In\n   such a scheme,\
    \ the content provider does not need to be contacted\n   every time a named-content\
    \ is requested.  This reduces the load of\n   the content provider network and\
    \ creates a DRM mechanism that is much\n   more appropriate for the distributed\
    \ caching and Peer-to-Peer storage\n   characteristic of ICN networks.  In particular,\
    \ the content requested\n   by name can be served from anywhere under the only\
    \ condition that the\n   storage/cache can verify that the token is valid for\
    \ content access.\n   The solution is also fully customizable to both content\
    \ and network\n   provider's needs as the tokens can be issued based on user accounts,\n\
    \   location, and hardware (Media Access Control (MAC) address, for\n   example)\
    \ linking it naturally to legacy authentication mechanisms.\n   In addition, since\
    \ both content and network providers are involved in\n   DRM policies, pollution\
    \ attacks and other illegal requests for the\n   content can be more easily detected.\
    \  The proposed AAA-based DRM is\n   currently under full development.\n"
- title: 9.  Future Steps for Video in ICN
  contents:
  - "9.  Future Steps for Video in ICN\n   The explosion of online video services,\
    \ along with their increased\n   consumption by mobile wireless terminals, further\
    \ exacerbates the\n   challenges of ICN mechanisms that leverage Video Adaptation.\
    \  The\n   following sections present a series of research items derived from\n\
    \   these challenges, further introducing next steps for the subject.\n"
- title: 9.1.  Large-Scale Live Events
  contents:
  - "9.1.  Large-Scale Live Events\n   Distributing content, and video in particular,\
    \ using local\n   communications in large-scale events such as sporting events\
    \ in a\n   stadium, a concert, or a large demonstration, is an active area of\n\
    \   investigation and a potential use case where ICN would provide\n   significant\
    \ benefits.\n   Such use cases involve locating content that is generated on the\
    \ fly\n   and requires discovery mechanisms in addition to sharing mechanisms.\n\
    \   The scalability of the distribution becomes important as well.\n"
- title: 9.2.  Video Conferencing and Real-Time Communications
  contents:
  - "9.2.  Video Conferencing and Real-Time Communications\n   Current protocols for\
    \ video conferencing have been designed, and this\n   document takes input from\
    \ them to identify the key research issues.\n   Real-time communications add timing\
    \ constraints (both in terms of\n   delay and in terms of synchronization) to\
    \ the scenario discussed\n   above.\n   An Access Router (AR) and a Virtual Router\
    \ (VR), and immersive\n   multimedia experiences in general, are clearly an area\
    \ of further\n   investigation, as they involve combining multiple streams of\
    \ data\n   from multiple users into a coherent whole.  This raises issues of\n\
    \   multisource, multidestination multimedia streams that ICN may be\n   equipped\
    \ to deal with in a more natural manner than IP, which is\n   inherently unicast.\n"
- title: 9.3.  Store-and-Forward Optimized Rate Adaptation
  contents:
  - "9.3.  Store-and-Forward Optimized Rate Adaptation\n   One of the benefits of\
    \ ICN is to allow the network to insert caching\n   in the middle of the data\
    \ transfer.  This can be used to reduce the\n   overall bandwidth demands over\
    \ the network by caching content for\n   future reuse, but it provides more opportunities\
    \ for optimizing video\n   streams.\n   Consider, for instance, the following\
    \ scenario: a client is connected\n   via an ICN network to a server.  Let's say\
    \ the client is connected\n   wirelessly to a node that has a caching capability,\
    \ which is\n   connected through a WAN to the server.  Further, assume that the\n\
    \   capacity of each of the links (both the wireless and the WAN logical\n   links)\
    \ varies with time.\n   If the rate adaptation is provided in an end-to-end manner,\
    \ as in\n   current mechanisms like DASH, then the maximal rate that can be\n\
    \   supported at the client is that of the minimal bandwidth on each\n   link.\n\
    \   If, for instance, during Time Period 1 the wireless capacity is 1 and\n  \
    \ the wired capacity is 2 and during Time Period 2 the wireless\n   capacity is\
    \ 2 (due to some hotspot) and the wired capacity is 1 (due\n   to some congestion\
    \ in the network), then the best end-to-end rate\n   that can be achieved is 1\
    \ during each period.\n   However, if the cache is used during Time Period 1 to\
    \ pre-fetch 2\n   units of data, then during Time Period 2 there is 1 unit of\
    \ data at\n   the cache and another unit of data that can be streamed from the\n\
    \   server; therefore, the rate that can be achieved is 2 units of data.\n   In\
    \ this case, the average bandwidth rises from 1 to 1.5 over the two\n   periods.\n\
    \   This straw-man example illustrates a) the benefit of ICN for\n   increasing\
    \ the throughput of the network and b) the need for the\n   special rate adaptation\
    \ mechanisms to be designed to take advantage\n   of this gain.  End-to-end rate\
    \ adaptation cannot take advantage of\n   the cache availability.  The authors\
    \ of [Rainer16] showed that\n   buffer-based adaptation mechanisms can be one\
    \ approach to tackle this\n   challenge.  As buffer-based adaptation does not\
    \ estimate the\n   available bandwidth resources (but solely considers the video\
    \ buffer\n   fill state), measured bandwidth fluctuations caused by cache hits\
    \ are\n   not existent.  Therefore, they cannot negatively impact the\n   adaptation\
    \ decisions (e.g., frequent representation switching).\n"
- title: 9.4.  Heterogeneous Wireless Environment Dynamics
  contents:
  - "9.4.  Heterogeneous Wireless Environment Dynamics\n   With the ever-growing increase\
    \ in online services being accessed by\n   mobile devices, operators have been\
    \ deploying different overlapping\n   wireless access networking technologies.\
    \  In this way, in the same\n   area, user terminals are within range of different\
    \ cellular, Wi-Fi,\n   or even Worldwide Interoperability for Microwave Access\
    \ (WiMAX)\n   networks.  Moreover, with the advent of the Internet of Things (e.g.,\n\
    \   surveillance cameras feeding video footage), this list can be further\n  \
    \ complemented with more-specific short-range technologies, such as\n   Bluetooth\
    \ or ZigBee.\n   In order to leverage from this plethora of connectivity\n   opportunities,\
    \ user terminals are coming equipped with different\n   wireless access interfaces,\
    \ providing them with extended connectivity\n   opportunities.  In this way, such\
    \ devices become able to select the\n   type of access that best suits them according\
    \ to different criteria,\n   such as available bandwidth, battery consumption,\
    \ access to different\n   link conditions according to the user profile, or even\
    \ access to\n   different content.  Ultimately, these aspects contribute to the\
    \ QoE\n   perceived by the end user, which is of utmost importance when it\n \
    \  comes to video content.\n   However, the fact that these users are mobile and\
    \ using wireless\n   technologies also provides a very dynamic setting where the\
    \ current\n   optimal link conditions at a specific moment might not last or be\n\
    \   maintained while the user moves.  These aspects have been amply\n   analyzed\
    \ in recently finished projects such as FP7 MEDIEVAL\n   [MEDIEVAL], where link\
    \ events reporting on wireless conditions and\n   available alternative connection\
    \ points were combined with video\n   requirements and traffic optimization mechanisms\
    \ towards the\n   production of a joint network and mobile terminal mobility management\n\
    \   decision.  Concretely, in [Fu13], link information about the\n   deterioration\
    \ of the wireless signal was sent towards a mobility\n   management controller\
    \ in the network.  This input was combined with\n   information about the user\
    \ profile, as well as of the current video\n   service requirements, and used\
    \ to trigger the decrease or increase of\n   scalable video layers (adjusting\
    \ the video to the ongoing link\n   conditions).  Incrementally, the video could\
    \ also be adjusted when a\n   new, better connectivity opportunity presents itself.\n\
    \   In this way, regarding Video Adaptation, ICN mechanisms can leverage\n   from\
    \ their intrinsic multiple source support capability and go beyond\n   the monitoring\
    \ of the status of the current link, thus exploiting the\n   availability of different\
    \ connectivity possibilities (e.g., different\n   \"interfaces\").  Moreover,\
    \ information obtained from the mobile\n   terminal's point of view of its network\
    \ link, as well as information\n   from the network itself (i.e., load, policies,\
    \ and others), can\n   generate scenarios where such information is combined in\
    \ a joint\n   optimization procedure allowing the content to be forward to users\n\
    \   using the best available connectivity option (e.g., exploiting\n   management\
    \ capabilities supported by ICN intrinsic mechanisms as in\n   [Corujo12]).\n\
    \   In fact, ICN base mechanisms can further be exploited in enabling new\n  \
    \ deployment scenarios such as preparing the network for mass requests\n   from\
    \ users attending a large multimedia event (i.e., concert,\n   sports), allowing\
    \ video to be adapted according to content, user and\n   network requirements,\
    \ and operation capabilities in a dynamic way.\n   Enabling such scenarios requires\
    \ further research, with the main\n   points highlighted as follows:\n   o  how\
    \ to develop a generic video services (and obviously content)\n      interface\
    \ allowing the definition and mapping of their\n      requirements (and characteristics)\
    \ into the current capabilities\n      of the network;\n   o  how to define a\
    \ scalable mechanism allowing either the video\n      application at the terminal\
    \ or some kind of network management\n      entity, to adapt the video content\
    \ in a dynamic way;\n   o  how to develop the previous research items using intrinsic\
    \ ICN\n      mechanisms (i.e., naming and strategy layers);\n   o  how to leverage\
    \ intelligent pre-caching of content to prevent\n      stalls and poor quality\
    \ phases, which lead to a worse QoE for the\n      user: this includes, in particular,\
    \ the usage in mobile\n      environments, which are characterized by severe bandwidth\
    \ changes\n      as well as connection outages, as shown in [Crabtree13]; and\n\
    \   o  how to take advantage of the multipath opportunities over the\n      heterogeneous\
    \ wireless interfaces.\n"
- title: 9.5.  Network Coding for Video Distribution in ICN
  contents:
  - "9.5.  Network Coding for Video Distribution in ICN\n   An interesting research\
    \ area for combining heterogeneous sources is\n   to use network coding [Montpetit13b].\
    \  Network coding allows for\n   asynchronous combining of multiple sources by\
    \ having each of them\n   send information that is not duplicated by the other\
    \ but that can be\n   combined to retrieve the video stream.\n   However, this\
    \ creates issues in ICN in terms of defining the proper\n   rate adaptation for\
    \ the video stream, securing the encoded data,\n   caching the encoded data, timeliness\
    \ of the encoded data, overhead of\n   the network coding operations both in network\
    \ resources and in added\n   buffering delay, etc.\n   Network coding has shown\
    \ promise in reducing buffering events in\n   unicast, multicast, and P2P settings.\
    \  [Medard12] considers\n   strategies using network coding to enhance QoE for\
    \ multimedia\n   communications.  Network coding can be applied to multiple streams,\n\
    \   but also within a single stream as an equivalent of a composable\n   erasure\
    \ code.  Clearly, there is a need for further investigation of\n   network coding\
    \ in ICN, potentially as a topic of activity in the\n   research group.\n"
- title: 9.6.  Synchronization Issues for Video Distribution in ICN
  contents:
  - "9.6.  Synchronization Issues for Video Distribution in ICN\n   ICN decouples\
    \ the fetching of video chunks from their locations.\n   This means an audio chunk\
    \ may be received from one network element\n   (cache/storage/server), a video\
    \ chunk may be received from another,\n   while yet another chunk (say, the next\
    \ one, or another layer from the\n   same video stream) may come from a third\
    \ element.  This introduces\n   disparity in the retrieval times and locations\
    \ of the different\n   elements of a video stream that need to be played at the\
    \ same (or\n   almost same) time.  Synchronization of such delivery and playback\
    \ may\n   require specific synchronization tools for video delivery in ICN.\n\
    \   Other aspects involve synchronizing:\n   o  within a single stream, for instance,\
    \ the consecutive chunks of a\n      single stream or the multiple layers of a\
    \ layered scheme when\n      sources and transport layers may be different.\n\
    \   o  re-ordering the packets of a stream distributed over multiple\n      sources\
    \ at the video client, or ensuring that multiple chunks\n      coming from multiple\
    \ sources arrive within an acceptable time\n      window;\n   o  multiple streams,\
    \ such as the audio and video components of a\n      video stream, which can be\
    \ received from independent sources; and\n   o  multiple streams from multiple\
    \ sources to multiple destinations,\n      such as mass distribution of live events.\
    \  For instance, for live\n      video streams or video conferencing, some level\
    \ of synchronization\n      is required so that people watching the stream view\
    \ the same\n      events at the same time.\n   Some of these issues were addressed\
    \ in [Montpetit13a] in the context\n   of social video consumption.  Network coding,\
    \ with traffic\n   engineering, is considered as a potential solution for\n  \
    \ synchronization issues.  Other approaches could be considered that\n   are specific\
    \ to ICN as well.\n   Traffic engineering in ICN [Su14] [Chanda13] may be required\
    \ to\n   provide proper synchronization of multiple streams.\n"
- title: 10.  Security Considerations
  contents:
  - "10.  Security Considerations\n   This is informational.  There are no specific\
    \ security considerations\n   outside of those mentioned in the text.\n"
- title: 11.  Conclusions
  contents:
  - "11.  Conclusions\n   This document proposes adaptive video streaming for ICN,\
    \ identified\n   potential problems, and presents the combination of CCN with\
    \ DASH as\n   a solution.  As both concepts, DASH and CCN, maintain several\n\
    \   elements in common, like, e.g., the content in different versions\n   being\
    \ dealt with in segments, combination of both technologies seems\n   useful. \
    \ Thus, adaptive streaming over CCN can leverage advantages\n   such as, e.g.,\
    \ efficient caching and intrinsic multicast support of\n   CCN, routing based\
    \ on named-data URIs, intrinsic multilink and\n   multisource support, etc.\n\
    \   In this context, the usage of CCN with DASH in mobile environments\n   comes\
    \ together with advantages compared to today's solutions,\n   especially for devices\
    \ equipped with multiple network interfaces.\n   The retrieval of data over multiple\
    \ links in parallel is a useful\n   feature, specifically for adaptive multimedia\
    \ streaming since it\n   offers the possibility to dynamically switch between\
    \ the available\n   links depending on their bandwidth capabilities, which are\n\
    \   transparent to the actual DASH client.\n"
- title: 12.  References
  contents:
  - '12.  References

    '
- title: 12.1.  Normative References
  contents:
  - "12.1.  Normative References\n   [Rainer16] Rainer, B., Posch, D., and H. Hellwagner,\
    \ \"Investigating\n              the Performance of Pull-based Dynamic Adaptive\
    \ Streaming\n              in NDN\", IEEE Journal on Selected Areas in Communications\n\
    \              (J-SAC): Special Issue on Video Distribution over Future\n    \
    \          Internet, Volume 34, Number 8,\n              DOI 10.1109/JSAC.2016.2577365,\
    \ August 2016.\n   [RFC6972]  Zhang, Y. and N. Zong, \"Problem Statement and Requirements\n\
    \              of the Peer-to-Peer Streaming Protocol (PPSP)\", RFC 6972,\n  \
    \            DOI 10.17487/RFC6972, July 2013,\n              <http://www.rfc-editor.org/info/rfc6972>.\n"
- title: 12.2.  Informative References
  contents:
  - "12.2.  Informative References\n   [ATIS-IIF] \"ATIS: IIF, IPTV Interoperability\
    \ Forum\", 2015,\n              <http://www.atis.org/iif/deliv.asp>.\n   [Bakker15]\
    \ Bakker, A., Petrocco, R., and V. Grishchenko, \"Peer-to-\n              Peer\
    \ Streaming Peer Protocol (PPSPP)\", RFC 7574,\n              DOI 10.17487/RFC7574,\
    \ July 2015,\n              <http://www.rfc-editor.org/info/rfc7574>.\n   [Castro03]\
    \ Castro, M., Druschel, P., Kermarrec, A., Nandi, A., and A.\n              Rowstron,\
    \ \"SplitStream: High-Bandwidth Multicast in\n              Cooperative Environments\"\
    , Proceedings of the 19th ACM\n              Symposium on Operating Systems Principles\
    \ (SOSP '03),\n              DOI 10.1145/945445.945474, October 2003.\n   [Chai11]\
    \   Chai, W., Wang, N., Psaras, I., Pavlou, G., Wang, C.,\n              de Blas,\
    \ G., Ramon-Salguero, F., Liang, L., Spirou, S.,\n              Blefari-Melazzi,\
    \ N., Beben, A., and E. Hadjioannou,\n              \"CURLING: Content-Ubiquitous\
    \ Resolution and Delivery\n              Infrastructure for Next Generation Services\"\
    , IEEE\n              Communications Magazine, Volume 49, Issue 3,\n         \
    \     DOI 10.1109/MCOM.2011.5723808, March 2011.\n   [Chanda13] Chanda, A., Westphal,\
    \ C., and D. Raychaudhuri, \"Content\n              Based Traffic Engineering\
    \ in Software Defined Information\n              Centric Networks\", 2013 IEEE\
    \ Conference on Computer\n              Communications Workshops (INFOCOM WKSHPS),\n\
    \              DOI 10.1109/INFCOMW.2013.6970717, April 2013.\n   [Corujo12] Corujo,\
    \ D., Vidal, I., Garcia-Reinoso, J., and R. Aguiar,\n              \"A Named Data\
    \ Networking Flexible Framework for Management\n              Communications\"\
    , IEEE Communications Magazine, Volume 50,\n              Issue 12, DOI 10.1109/MCOM.2012.6384449,\
    \ December 2012.\n   [Crabtree13]\n              Crabtree, B., Stevens, T., Allan,\
    \ B., Lederer, S., Posch,\n              D., Mueller, C., and C. Timmerer, \"\
    Video Adaptation in\n              Limited/Zero Network Coverage\", CCNxCon 2013,\
    \ Palo Alto\n              Research Center (PARC), September 2013.\n   [Detti11]\
    \  Detti, A., Blefari-Melazzi, N., Salsano, S., and M.\n              Pomposini,\
    \ \"CONET: A Content Centric Inter-Networking\n              Architecture\", Proceedings\
    \ of the ACM SIGCOMM Workshop on\n              Information-Centric Networking,\n\
    \              DOI 10.1145/2018584.2018598, August 2011.\n   [Detti12]  Detti,\
    \ A., Pomposini, M., Blefari-Melazzi, N., Salsano,\n              S., and A. Bragagnini,\
    \ \"Offloading cellular networks with\n              Information-Centric Networking:\
    \ the case of video\n              streaming\", 2013 IEEE 14th International Symposium\
    \ on A\n              World of Wireless, Mobile and Multimedia Networks\n    \
    \          (WoWMoM), DOI 10.1109/WoWMoM.2012.6263734, June 2012.\n   [Detti13]\
    \  Detti, A., Ricci, B., and N. Blefari-Melazzi, \"Peer-To-\n              Peer\
    \ Live Adaptive Video Streaming for Information Centric\n              Cellular\
    \ Networks\", 2013 IEEE 24th Annual International\n              Symposium on\
    \ Personal, Indoor, and Mobile Radio\n              Communications (PIMRC), DOI\
    \ 10.1109/PIMRC.2013.6666771,\n              September 2013.\n   [Fiat94]   Fiat,\
    \ A. and M. Naor, \"Broadcast Encryption\", Advances in\n              Cryptology\
    \ - CRYPTO '93 Proceedings, Lecture Notes in\n              Computer Science,\
    \ Volume 773, pp. 480-491, 1994.\n   [Fu13]     Fu, B., Kunzmann, G., Wetterwald,\
    \ M., Corujo, D., and R.\n              Costa, \"QoE-aware traffic management\
    \ for mobile video\n              delivery\", 2013 IEEE International Conference\
    \ on\n              Communications Workshops (ICC),\n              DOI 10.1109/ICCW.2013.6649314,\
    \ June 2013.\n   [Grandl13] Grandl, R., Su, K., and C. Westphal, \"On the Interaction\n\
    \              of Adaptive Video Streaming with Content-Centric\n            \
    \  Networks\", 2013 IEEE International Conference on\n              Multimedia\
    \ and Expo (ICME), DOI 10.1109/ICME.2013.6607500,\n              July 2013.\n\
    \   [IETF-PPSP]\n              IETF, \"Peer to Peer Streaming Protocol (ppsp)\"\
    ,\n              <https://datatracker.ietf.org/wg/ppsp/>.\n   [ISO-DASH] ISO,\
    \ \"Information technology -- Dynamic adaptive streaming\n              over HTTP\
    \ (DASH) -- Part 1: Media presentation description\n              and segment\
    \ formats\", ISO/IEC 23009-1:2014, May 2014.\n   [ITEC-DASH]\n              \"\
    ITEC - Dynamic Adaptive Streaming over HTTP\", DASH\n              Research at\
    \ the Institute of Information\n              Technology, Multimedia Communication\
    \ Group, Alpen-Adria\n              Universitaet Klagenfurt, <http://dash.itec.aau.at>.\n\
    \   [Jacobson09a]\n              Jacobson, V., Smetters, D., Briggs, N., Plass,\
    \ M.,\n              Stewart, P., Thornton, J., and R. Braynard, \"VoCCN: Voice-\n\
    \              over Content-Centric Networks\", Proceedings of the 2009\n    \
    \          Workshop on Re-architecting the Internet,\n              DOI 10.1145/1658978.1658980,\
    \ December 2009.\n   [Jacobson09b]\n              Jacobson, V., Smetters, D.,\
    \ Thornton, J., Plass, M.,\n              Briggs, N., and R. Braynard, \"Networking\
    \ Named Content\",\n              Proceedings of the 5th International Conference\
    \ on\n              Emerging Networking Experiments and Technologies (CoNEXT),\n\
    \              DOI 10.1145/1658939.1658941, December 2009.\n   [LeCallet13]\n\
    \              Le Callet, P., Moeller, S., and A. Perkis, \"Qualinet White\n \
    \             Paper on Definitions of Quality of Experience\", European\n    \
    \          Network on Quality of Experience in Multimedia Systems and\n      \
    \        Services, COST Action IC 1003, Version 1.2, March 2013.\n   [Lederer13a]\n\
    \              Lederer, S., Liu, Y., Geurts, J., Point, J., Lederer, S.,\n   \
    \           Mueller, C., Rainer, B., Timmerer, C., and H. Hellwagner,\n      \
    \        \"Dynamic Adaptive Streaming over CCN: A Caching and\n              Overhead\
    \ Analysis\", 2013 IEEE International Conference on\n              Communication\
    \ (ICC), DOI 10.1109/ICC.2013.6655116, June\n              2013.\n   [Lederer13b]\n\
    \              Lederer, S., Mueller, C., Rainer, B., Timmerer, C., and H.\n  \
    \            Hellwagner, \"An Experimental Analysis of Dynamic Adaptive\n    \
    \          Streaming over HTTP in Content Centric Networks\", 2013\n         \
    \     IEEE International Conference on Multimedia and Expo\n              (ICME),\
    \ DOI 10.1109/ICME.2013.6607500, July 2013.\n   [Magharei07]\n              Magharei,\
    \ N., Rejaie, R., and Y. Guo, \"Mesh or Multiple-\n              Tree: A Comparative\
    \ Study of Live P2P Streaming\n              Approaches\", IEEE INFOCOM 2007 -\
    \ 26th IEEE International\n              Conference on Computer Communications,\n\
    \              DOI 10.1109/INFCOM.2007.168, May 2007.\n   [Medard12] Medard, M.,\
    \ Kim, M., Parandeh-Gheibi, M., Zeng, W., and M.\n              Montpetit, \"\
    Quality of Experience for Multimedia\n              Communications: Network Coding\
    \ Strategies\", Laboratory of\n              Electronics, Massachusetts Institute\
    \ of Technology, March\n              2012.\n   [MEDIEVAL] \"MEDIEVAL: MultiMEDia\
    \ transport for mobIlE Video\n              AppLications\", 2010, <http://www.ict-medieval.eu>.\n\
    \   [Montpetit13a]\n              Montpetit, M., Holtzman, H., Chakrabarti, K.,\
    \ and M.\n              Matijasevic, \"Social video consumption: Synchronized\n\
    \              viewing experiences across devices and networks\", 2013\n     \
    \         IEEE International Conference on Communications Workshops\n        \
    \      (ICC), pp. 286-290, DOI 10.1109/ICCW.2013.6649245, 2013.\n   [Montpetit13b]\n\
    \              Montpetit, M., Westphal, C., and D. Trossen, \"Network\n      \
    \        Coding Meets Information-Centric Networking: An\n              Architectural\
    \ Case for Information Dispersion Through\n              Native Network Coding\"\
    , Proceedings of the 1st ACM\n              Workshop on Emerging Name-Oriented\
    \ Mobile Networking\n              Design-Architecture, Algorithms, and Applications,\n\
    \              DOI 10.1145/2248361.2248370, June 2013.\n   [Mueller12]\n     \
    \         Mueller, C., Lederer, S., and C. Timmerer, \"A Proxy Effect\n      \
    \        Analysis and Fair Adaptation Algorithm for Multiple\n              Competing\
    \ Dynamic Adaptive Streaming over HTTP Clients\",\n              2012 IEEE Visual\
    \ Communications and Image Processing\n              (VCIP), DOI 10.1109/VCIP.2012.6410799,\
    \ November 2012.\n   [NETINF]   \"NetInf: Network of Information\", <http://www.netinf.org>.\n\
    \   [Posch13]  Posch, D., Hellwagner, H., and P. Schartner, \"On-Demand\n    \
    \          Video Streaming based on Dynamic Adaptive Encrypted\n             \
    \ Content Chunks\", Proceedings of the 8th International\n              Workshop\
    \ on Secure Network Protocols (NPSec '13),\n              DOI 10.1109/ICNP.2013.6733673,\
    \ October 2013.\n   [RFC7476]  Pentikousis, K., Ed., Ohlman, B., Corujo, D., Boggia,\
    \ G.,\n              Tyson, G., Davies, E., Molinaro, A., and S. Eum,\n      \
    \        \"Information-Centric Networking: Baseline Scenarios\",\n           \
    \   RFC 7476, DOI 10.17487/RFC7476, March 2015,\n              <http://www.rfc-editor.org/info/rfc7476>.\n\
    \   [RFC7846]  Cruz, R., Nunes, M., Xia, J., Huang, R., Ed., Taveira, J.,\n  \
    \            and D. Lingli, \"Peer-to-Peer Streaming Tracker Protocol\n      \
    \        (PPSTP)\", RFC 7846, DOI 10.17487/RFC7846, May 2016,\n              <http://www.rfc-editor.org/info/rfc7846>.\n\
    \   [Su14]     Su, K. and C. Westphal, \"On the Benefit of Information\n     \
    \         Centric Networks for Traffic Engineering\", 2014 IEEE\n            \
    \  International Conference on Communications (ICC),\n              DOI 10.1109/ICC.2014.6883810,\
    \ June 2014.\n"
- title: Acknowledgments
  contents:
  - "Acknowledgments\n   This work was supported in part by the European Community\
    \ in the\n   context of the SocialSensor (FP7-ICT-287975) project and partly\n\
    \   performed in the Lakeside Labs research cluster at AAU.  SocialSensor\n  \
    \ receives research funding from the European Community's Seventh\n   Framework\
    \ Programme.  The work for this document was also partially\n   performed in the\
    \ context of the FP7/NICT EU-JAPAN GreenICN project,\n   <http://www.greenicn.org>.\
    \  Apart from this, the European Commission\n   has no responsibility for the\
    \ content of this document.  The\n   information in this document is provided\
    \ as is and no guarantee or\n   warranty is given that the information is fit\
    \ for any particular\n   purpose.  The user, thereof, uses the information at\
    \ its sole risk\n   and liability.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Cedric Westphal (editor)\n   Huawei\n   Email: Cedric.Westphal@huawei.com\n\
    \   Stefan Lederer\n   Alpen-Adria University Klagenfurt\n   Email: stefan.lederer@itec.aau.at\n\
    \   Daniel Posch\n   Alpen-Adria University Klagenfurt\n   Email: daniel.posch@itec.aau.at\n\
    \   Christian Timmerer\n   Alpen-Adria University Klagenfurt\n   Email: christian.timmerer@itec.aau.at\n\
    \   Aytac Azgin\n   Huawei\n   Email: aytac.azgin@huawei.com\n   Will (Shucheng)\
    \ Liu\n   Huawei\n   Email: liushucheng@huawei.com\n   Christopher Mueller\n \
    \  BitMovin\n   Email: christopher.mueller@bitmovin.net\n   Andrea Detti\n   University\
    \ of Rome Tor Vergata\n   Email: andrea.detti@uniroma2.it\n   Daniel Corujo\n\
    \   Instituto de Telecomunicacoes Aveiro\n   Email: dcorujo@av.it.pt\n   Jianping\
    \ Wang\n   City University of Hong Kong\n   Email: jianwang@cityu.edu.hk\n   Marie-Jose\
    \ Montpetit\n   MIT\n   Email: marie@mjmontpetit.com\n   Niall Murray\n   Athlone\
    \ Institute of Technology\n   Email: nmurray@research.ait.ie\n"
