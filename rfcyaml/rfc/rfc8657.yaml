- contents:
  - "   Certification Authority Authorization (CAA) Record Extensions for\n  Account
    URI and Automatic Certificate Management Environment (ACME)\n                             Method
    Binding\n"
  title: __initial_text__
- contents:
  - "Abstract\n   The Certification Authority Authorization (CAA) DNS record allows
    a\n   domain to communicate an issuance policy to Certification Authorities\n
    \  (CAs) but only allows a domain to define a policy with CA-level\n   granularity.
    \ However, the CAA specification (RFC 8659) also provides\n   facilities for an
    extension to admit a more granular, CA-specific\n   policy.  This specification
    defines two such parameters: one allowing\n   specific accounts of a CA to be
    identified by URIs and one allowing\n   specific methods of domain control validation
    as defined by the\n   Automatic Certificate Management Environment (ACME) protocol
    to be\n   required.\n"
  title: Abstract
- contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This
    document is a product of the Internet Engineering Task Force\n   (IETF).  It represents
    the consensus of the IETF community.  It has\n   received public review and has
    been approved for publication by the\n   Internet Engineering Steering Group (IESG).
    \ Further information on\n   Internet Standards is available in Section 2 of RFC
    7841.\n   Information about the current status of this document, any errata,\n
    \  and how to provide feedback on it may be obtained at\n   https://www.rfc-editor.org/info/rfc8657.\n"
  title: Status of This Memo
- contents:
  - "Copyright Notice\n   Copyright (c) 2019 IETF Trust and the persons identified
    as the\n   document authors.  All rights reserved.\n   This document is subject
    to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n
    \  (https://trustee.ietf.org/license-info) in effect on the date of\n   publication
    of this document.  Please review these documents\n   carefully, as they describe
    your rights and restrictions with respect\n   to this document.  Code Components
    extracted from this document must\n   include Simplified BSD License text as described
    in Section 4.e of\n   the Trust Legal Provisions and are provided without warranty
    as\n   described in the Simplified BSD License.\n"
  title: Copyright Notice
- contents:
  - "Table of Contents\n   1.  Introduction\n   2.  Terminology\n   3.  Extensions
    to the CAA Record: The \"accounturi\" Parameter\n     3.1.  Use with ACME\n     3.2.
    \ Use without ACME\n   4.  Extensions to the CAA Record: The \"validationmethods\"
    Parameter\n   5.  Security Considerations\n     5.1.  Limited to CAs Processing
    CAA Records\n     5.2.  Restrictions Ineffective without CA Recognition\n     5.3.
    \ Mandatory Consistency in CA Recognition\n     5.4.  URI Ambiguity\n     5.5.
    \ Authorization Freshness\n     5.6.  Use with and without DNSSEC\n     5.7.  Restrictions
    Supersedable by DNS Delegation\n     5.8.  Misconfiguration Hazards\n     5.9.
    \ Revelation of Account URIs\n   6.  IANA Considerations\n   7.  Normative References\n
    \  Appendix A.  Examples\n   Author's Address\n"
  title: Table of Contents
- contents:
  - "1.  Introduction\n   This specification defines two parameters for the \"issue\"
    and\n   \"issuewild\" Properties of the Certification Authority Authorization\n
    \  (CAA) DNS resource record [RFC8659].  The first, \"accounturi\", allows\n   authorization
    conferred by a CAA policy to be restricted to specific\n   accounts of a Certification
    Authority (CA), which are identified by\n   URIs.  The second, \"validationmethods\",
    allows the set of validation\n   methods supported by a CA to validate domain
    control to be limited to\n   a subset of the full set of methods that it supports.\n"
  title: 1.  Introduction
- contents:
  - "2.  Terminology\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\",
    \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"NOT RECOMMENDED\",
    \"MAY\", and\n   \"OPTIONAL\" in this document are to be interpreted as described
    in\n   BCP 14 [RFC2119] [RFC8174] when, and only when, they appear in all\n   capitals,
    as shown here.\n"
  title: 2.  Terminology
- contents:
  - "3.  Extensions to the CAA Record: The \"accounturi\" Parameter\n   This document
    defines the \"accounturi\" CAA parameter for the \"issue\"\n   and \"issuewild\"
    Properties defined by [RFC8659].  The value of this\n   parameter, if specified,
    MUST be a URI [RFC3986] identifying a\n   specific CA account.\n   \"CA account\"
    means an object that is maintained by a specific CA,\n   that may request the
    issuance of certificates, and that represents a\n   specific entity or group of
    related entities.\n   The presence of this parameter constrains the Property to
    which it is\n   attached.  Where a CAA Property has an \"accounturi\" parameter,
    a CA\n   MUST only consider that Property to authorize issuance in the context\n
    \  of a given certificate issuance request if the CA recognizes the URI\n   specified
    in the value portion of that parameter as identifying the\n   account making that
    request.\n   A Property without an \"accounturi\" parameter matches any account.
    \ A\n   Property with an invalid or unrecognized \"accounturi\" parameter is\n
    \  unsatisfiable.  A Property with multiple \"accounturi\" parameters is\n   unsatisfiable.\n
    \  The presence of an \"accounturi\" parameter does not replace or\n   supersede
    the need to validate the domain name specified in an\n   \"issue\" or \"issuewild\"
    record in the manner described in the CAA\n   specification [RFC8659].  CAs MUST
    still perform such validation.\n   For example, a CAA \"issue\" Property that
    specifies a domain name\n   belonging to CA A and an \"accounturi\" parameter
    identifying an\n   account at CA B is unsatisfiable.\n"
  - contents:
    - "3.1.  Use with ACME\n   An Automatic Certificate Management Environment (ACME)
      [RFC8555]\n   account object MAY be identified by setting the \"accounturi\"\n
      \  parameter to the URI of the ACME account object.\n   Implementations of this
      specification that also implement ACME MUST\n   recognize such URIs.\n"
    title: 3.1.  Use with ACME
  - contents:
    - "3.2.  Use without ACME\n   The \"accounturi\" specification provides a general
      mechanism to\n   identify entities that may request certificate issuance via
      URIs.\n   The use of specific kinds of URIs may be specified in future RFCs,\n
      \  and CAs not implementing ACME MAY assign and recognize their own URIs\n   arbitrarily.\n"
    title: 3.2.  Use without ACME
  title: '3.  Extensions to the CAA Record: The "accounturi" Parameter'
- contents:
  - "4.  Extensions to the CAA Record: The \"validationmethods\" Parameter\n   This
    document also defines the \"validationmethods\" CAA parameter for\n   the \"issue\"
    and \"issuewild\" Properties.  The value of this parameter,\n   if specified,
    MUST be a comma-separated string of zero or more\n   validation method labels.\n
    \  A validation method label identifies a validation method.  A\n   validation
    method is a particular way in which a CA can validate\n   control over a domain.\n
    \  The presence of this parameter constrains the Property to which it is\n   attached.
    \ A CA MUST only consider a Property with the\n   \"validationmethods\" parameter
    to authorize issuance where the\n   validation method being used is identified
    by one of the validation\n   method labels listed in the comma-separated list.\n
    \  Each validation method label MUST be either the label of a method\n   defined
    in the \"ACME Validation Methods\" IANA registry [RFC8555] or a\n   CA-specific
    non-ACME validation method label as defined below.\n   Where a CA supports both
    the \"validationmethods\" parameter and one or\n   more non-ACME validation methods,
    it MUST assign labels to those\n   methods.  If appropriate non-ACME labels are
    not present in the \"ACME\n   Validation Methods\" IANA registry, the CA MUST
    use labels beginning\n   with the string \"ca-\", which are defined to have CA-specific
    meaning.\n   The value of the \"validationmethods\" parameter MUST comply with
    the\n   following ABNF [RFC5234]:\n      value = [*(label \",\") label]\n      label
    = 1*(ALPHA / DIGIT / \"-\")\n"
  title: '4.  Extensions to the CAA Record: The "validationmethods" Parameter'
- contents:
  - "5.  Security Considerations\n   This specification describes an extension to
    the CAA record\n   specification, increasing the granularity at which a CAA policy
    can\n   be expressed.  This allows the set of entities capable of\n   successfully
    requesting issuance of certificates for a given domain\n   to be restricted beyond
    the set of entities would otherwise be\n   possible, while still allowing issuance
    for specific accounts of a\n   CA.  This improves the security of issuance for
    domains that choose\n   to employ it, when combined with a CA that implements
    this\n   specification.\n"
  - contents:
    - "5.1.  Limited to CAs Processing CAA Records\n   All of the security considerations
      listed in [RFC8659] are inherited\n   by this document.  This specification
      merely enables a domain with an\n   existing relationship with a CA to further
      constrain that CA in its\n   issuance practices, where that CA implements this
      specification.  In\n   particular, it provides no additional security above
      that provided by\n   using the unextended CAA specification alone as concerns
      matters\n   relating to any other CA.  The capacity of any other CA to issue\n
      \  certificates for the given domain is completely unchanged.\n   As such, a
      domain that, via CAA records, authorizes only CAs adopting\n   this specification
      and that constrains its policy by means of this\n   specification, remains vulnerable
      to unauthorized issuance by CAs\n   that do not honor CAA records or that honor
      them only on an advisory\n   basis.  Where a domain uses DNSSEC, it also remains
      vulnerable to CAs\n   that honor CAA records but that do not validate CAA records
      by means\n   of a trusted DNSSEC-validating resolver.\n"
    title: 5.1.  Limited to CAs Processing CAA Records
  - contents:
    - "5.2.  Restrictions Ineffective without CA Recognition\n   Because the parameters
      of \"issue\" or \"issuewild\" CAA Properties\n   constitute a CA-specific namespace,
      the CA identified by an \"issue\"\n   or \"issuewild\" Property decides what
      parameters to recognize and\n   their semantics.  Accordingly, the CAA parameters
      defined in this\n   specification rely on their being recognized by the CA named
      by an\n   \"issue\" or \"issuewild\" CAA Property and are not an effective means
      of\n   control over issuance unless a CA's support for the parameters is\n   established
      beforehand.\n   CAs that implement this specification SHOULD make available\n
      \  documentation indicating as such, including explicit statements as to\n   which
      parameters are supported.  Domains configuring CAA records for\n   a CA MUST
      NOT assume that the restrictions implied by the\n   \"accounturi\" and \"validationmethods\"
      parameters are effective in the\n   absence of explicit indication as such from
      that CA.\n   CAs SHOULD also document whether they implement DNSSEC validation
      for\n   DNS lookups done for validation purposes, as this affects the\n   security
      of the \"accounturi\" and \"validationmethods\" parameters.\n"
    title: 5.2.  Restrictions Ineffective without CA Recognition
  - contents:
    - "5.3.  Mandatory Consistency in CA Recognition\n   A CA MUST ensure that its
      support for the \"accounturi\" and\n   \"validationmethods\" parameters is fully
      consistent for a given domain\n   name that a CA recognizes as identifying itself
      in a CAA \"issue\" or\n   \"issuewild\" Property.  If a CA has multiple issuance
      systems (for\n   example, an ACME-based issuance system and a non-ACME-based
      issuance\n   system, or two different issuance systems resulting from a corporate\n
      \  merger), it MUST ensure that all issuance systems recognize the same\n   parameters.\n
      \  A CA that is unable to do this MAY still implement the parameters by\n   splitting
      the CA into two domain names for the purposes of CAA\n   processing.  For example,
      a CA \"example.com\" with an ACME-based\n   issuance system and a non-ACME-based
      issuance system could recognize\n   only \"acme.example.com\" for the former
      and \"example.com\" for the\n   latter, and then implement support for the \"accounturi\"
      and\n   \"validationmethods\" parameters for \"acme.example.com\" only.\n   A
      CA that is unable to ensure consistent processing of the\n   \"accounturi\"
      parameter or the \"validationmethods\" parameter for a\n   given CA domain name
      as specifiable in CAA \"issue\" or \"issuewild\"\n   Properties MUST NOT implement
      support for these parameters.  Failure\n   to do so would result in an implementation
      of these parameters that\n   does not provide effective security.\n"
    title: 5.3.  Mandatory Consistency in CA Recognition
  - contents:
    - "5.4.  URI Ambiguity\n   Suppose that CA A recognizes \"a.example.com\" as identifying
      itself\n   and CA B is a subsidiary of CA A that recognizes both \"a.example.com\"\n
      \  and \"b.example.com\" as identifying itself.\n   Suppose that both CA A and
      CA B issue account URIs of the form:\n      \"urn:example:account-id:1234\"\n
      \  If the CA domain name in a CAA record is specified as\n   \"a.example.com\",
      then this could be construed as identifying account\n   number 1234 at CA A
      or at CA B.  These may be different accounts,\n   creating ambiguity.\n   Thus,
      CAs MUST ensure that the URIs they recognize as pertaining to a\n   specific
      account of that CA are unique within the scope of all domain\n   names that
      they recognize as identifying that CA for the purpose of\n   CAA record validation.\n
      \  CAs SHOULD satisfy this requirement by using URIs that include an\n   authority
      (see Section 3.2 of [RFC3986]):\n      \"https://a.example.com/account/1234\"\n"
    title: 5.4.  URI Ambiguity
  - contents:
    - "5.5.  Authorization Freshness\n   The CAA specification [RFC8659] governs the
      act of issuance by a CA.\n   In some cases, a CA may establish authorization
      for an account to\n   request certificate issuance for a specific domain separately
      from\n   the act of issuance itself.  Such authorization may occur\n   substantially
      prior to a certificate issuance request.  The CAA\n   policy expressed by a
      domain may have changed in the meantime,\n   creating the risk that a CA will
      issue certificates in a manner\n   inconsistent with the presently published
      CAA policy.\n   CAs SHOULD adopt practices to reduce the risk of such circumstances.\n
      \  Possible countermeasures include issuing authorizations with very\n   limited
      validity periods, such as an hour, or revalidating the CAA\n   policy for a
      domain at certificate issuance time.\n"
    title: 5.5.  Authorization Freshness
  - contents:
    - "5.6.  Use with and without DNSSEC\n   The \"domain validation\" model of validation
      commonly used for\n   certificate issuance cannot ordinarily protect against
      adversaries\n   who can conduct global man-in-the-middle attacks against a particular\n
      \  domain.  A global man-in-the-middle attack is an attack that can\n   intercept
      traffic to or from a given domain, regardless of the origin\n   or destination
      of that traffic.  Such an adversary can intercept all\n   validation traffic
      initiated by a CA and thus appear to have control\n   of the given domain.\n
      \  Where a domain is signed using DNSSEC, the authenticity of its DNS\n   data
      can be assured, providing that a given CA makes all DNS\n   resolutions via
      a trusted DNSSEC-validating resolver.  A domain can\n   use this Property to
      protect itself from the threat posed by an\n   adversary capable of performing
      a global man-in-the-middle attack\n   against that domain.\n   In order to facilitate
      this, a CA validation process must either rely\n   solely on information obtained
      via DNSSEC or meaningfully bind the\n   other parts of the validation transaction
      using material obtained via\n   DNSSEC.\n   The CAA parameters described in
      this specification can be used to\n   ensure that only validation methods meeting
      these criteria are used.\n   In particular, a domain secured via DNSSEC SHOULD
      either:\n   1.  Use the \"accounturi\" parameter to ensure that only accounts
      that\n       it controls are authorized to obtain certificates, or\n   2.  Exclusively
      use validation methods that rely solely on\n       information obtained via
      DNSSEC and use the \"validationmethods\"\n       parameter to ensure that only
      such methods are used.\n   A CA supporting the \"accounturi\" parameter or the
      \"validationmethods\"\n   parameter MUST perform CAA validation using a trusted\n
      \  DNSSEC-validating resolver.\n   \"Trusted\" in this context means that the
      CA both trusts the resolver\n   itself and ensures that the communications path
      between the resolver\n   and the system performing CAA validation is secure.
      \ It is\n   RECOMMENDED that a CA ensure this by using a DNSSEC-validating\n
      \  resolver running on the same machine as the system performing CAA\n   validation.\n
      \  The use of the \"accounturi\" parameter or the \"validationmethods\"\n   parameter
      does not confer additional security against an attacker\n   capable of performing
      a man-in-the-middle attack against all\n   validation attempts made by a given
      CA that is authorized by CAA\n   where:\n   1.  A domain does not secure its
      nameservers using DNSSEC, or\n   2.  That CA does not perform CAA validation
      using a trusted\n       DNSSEC-validating resolver.\n   Moreover, the use of
      the \"accounturi\" parameter or the\n   \"validationmethods\" parameter does
      not mitigate man-in-the-middle\n   attacks against CAs that do not validate
      CAA records or that do not\n   do so using a trusted DNSSEC-validating resolver,
      regardless of\n   whether or not those CAs are authorized by CAA; see Section
      5.1.\n   In these cases, the \"accounturi\" and \"validationmethods\" parameters\n
      \  still provide an effective means of administrative control over\n   issuance,
      except where control over DNS is subdelegated (see below).\n"
    title: 5.6.  Use with and without DNSSEC
  - contents:
    - "5.7.  Restrictions Supersedable by DNS Delegation\n   CAA records are located
      during validation by walking up the DNS\n   hierarchy until one or more records
      are found.  CAA records are\n   therefore not an effective way of restricting
      or controlling issuance\n   for subdomains of a domain, where control over those
      subdomains is\n   delegated to another party (such as via DNS delegation or
      by\n   providing limited access to manage subdomain DNS records).\n"
    title: 5.7.  Restrictions Supersedable by DNS Delegation
  - contents:
    - "5.8.  Misconfiguration Hazards\n   Because the \"accounturi\" and \"validationmethods\"
      parameters express\n   restrictive security policies, misconfiguration of said
      parameters\n   may result in legitimate issuance requests being refused.\n"
    title: 5.8.  Misconfiguration Hazards
  - contents:
    - "5.9.  Revelation of Account URIs\n   Because CAA records are publicly accessible,
      the use of the\n   \"accounturi\" parameter enables third parties to observe
      the\n   authorized account URIs for a domain.  This may allow third parties\n
      \  to identify a correlation between domains if those domains use the\n   same
      account URIs.\n   CAs are encouraged to select and process account URIs under
      the\n   assumption that untrusted third parties may learn of them.\n"
    title: 5.9.  Revelation of Account URIs
  title: 5.  Security Considerations
- contents:
  - "6.  IANA Considerations\n   This document has no IANA actions.  As per [RFC8659],
    the parameter\n   namespace for the CAA \"issue\" and \"issuewild\" Properties
    has CA-\n   defined semantics, and the identifiers within that namespace may be\n
    \  freely and arbitrarily assigned by a CA.  This document merely\n   specifies
    recommended semantics for parameters of the names\n   \"accounturi\" and \"validationmethods\",
    which CAs may choose to adopt.\n"
  title: 6.  IANA Considerations
- contents:
  - "7.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use in RFCs
    to Indicate\n              Requirement Levels\", BCP 14, RFC 2119,\n              DOI
    10.17487/RFC2119, March 1997,\n              <https://www.rfc-editor.org/info/rfc2119>.\n
    \  [RFC3986]  Berners-Lee, T., Fielding, R., and L. Masinter, \"Uniform\n              Resource
    Identifier (URI): Generic Syntax\", STD 66,\n              RFC 3986, DOI 10.17487/RFC3986,
    January 2005,\n              <https://www.rfc-editor.org/info/rfc3986>.\n   [RFC5234]
    \ Crocker, D., Ed. and P. Overell, \"Augmented BNF for Syntax\n              Specifications:
    ABNF\", STD 68, RFC 5234,\n              DOI 10.17487/RFC5234, January 2008,\n
    \             <https://www.rfc-editor.org/info/rfc5234>.\n   [RFC8174]  Leiba,
    B., \"Ambiguity of Uppercase vs Lowercase in RFC\n              2119 Key Words\",
    BCP 14, RFC 8174, DOI 10.17487/RFC8174,\n              May 2017, <https://www.rfc-editor.org/info/rfc8174>.\n
    \  [RFC8555]  Barnes, R., Hoffman-Andrews, J., McCarney, D., and J.\n              Kasten,
    \"Automatic Certificate Management Environment\n              (ACME)\", RFC 8555,
    DOI 10.17487/RFC8555, March 2019,\n              <https://www.rfc-editor.org/info/rfc8555>.\n
    \  [RFC8659]  Hallam-Baker, P., Stradling, R., and J. Hoffman-Andrews,\n              \"DNS
    Certification Authority Authorization (CAA) Resource\n              Record\",
    RFC 8659, DOI 10.17487/RFC8659, November 2019,\n              <https://www.rfc-editor.org/info/rfc8659>.\n"
  title: 7.  Normative References
- contents:
  - "Appendix A.  Examples\n   The following shows an example DNS zone file fragment
    that nominates\n   two account URIs as authorized to issue certificates for the
    domain\n   \"example.com\".  Issuance is restricted to the CA \"example.net\".\n
    \  example.com. IN CAA 0 issue \"example.net; \\\n     accounturi=https://example.net/account/1234\"\n
    \  example.com. IN CAA 0 issue \"example.net; \\\n     accounturi=https://example.net/account/2345\"\n
    \  The following shows a zone file fragment that restricts the ACME\n   methods
    that can be used; only ACME methods \"dns-01\" and \"xyz-01\" can\n   be used.\n
    \  example.com. IN CAA 0 issue \"example.net; \\\n     validationmethods=dns-01,xyz-01\"\n
    \  The following shows an equivalent way of expressing the same\n   restriction:\n
    \  example.com. IN CAA 0 issue \"example.net; validationmethods=dns-01\"\n   example.com.
    IN CAA 0 issue \"example.net; validationmethods=xyz-01\"\n   The following shows
    a zone file fragment in which one account can be\n   used to issue with the \"dns-01\"
    method and one account can be used to\n   issue with the \"http-01\" method.\n
    \  example.com. IN CAA 0 issue \"example.net; \\\n     accounturi=https://example.net/account/1234;
    \\\n     validationmethods=dns-01\"\n   example.com. IN CAA 0 issue \"example.net;
    \\\n     accounturi=https://example.net/account/2345; \\\n     validationmethods=http-01\"\n
    \  The following shows a zone file fragment in which only ACME method\n   \"dns-01\"
    or a CA-specific method \"ca-foo\" can be used.\n   example.com. IN CAA 0 issue
    \"example.net; \\\n     validationmethods=dns-01,ca-foo\"\n"
  title: Appendix A.  Examples
- contents:
  - 'Author''s Address

    '
  title: Author's Address
