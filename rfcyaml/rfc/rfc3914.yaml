- title: __initial_text__
  contents:
  - "           Open Pluggable Edge Services (OPES) Treatment of\n               \
    \            IAB Considerations\n"
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard of any kind.  Distribution of\
    \ this\n   memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2004).\n"
- title: Abstract
  contents:
  - "Abstract\n   IETF Internet Architecture Board (IAB) expressed nine architecture-\n\
    \   level considerations for the Open Pluggable Edge Services (OPES)\n   framework.\
    \  This document describes how OPES addresses those\n   considerations.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction . . . . . . . . . . . . . . . . . . .\
    \ . . . . . .  2\n   2.  Terminology  . . . . . . . . . . . . . . . . . . . .\
    \ . . . . .  3\n   3.  Consideration (2.1) 'One-party consent'  . . . . . . .\
    \ . . . .  3\n   4.  Consideration (2.2) 'IP-layer communications'  . . . . .\
    \ . . .  4\n   5.  Notification Considerations  . . . . . . . . . . . . . . .\
    \ . .  5\n       5.1.  Notification versus trace. . . . . . . . . . . . . . .\
    \ .  6\n       5.2.  An example of an OPES trace for HTTP . . . . . . . . . .\
    \  8\n       5.3.  Consideration (3.1) 'Notification' . . . . . . . . . . .  9\n\
    \       5.4.  Consideration (3.2) 'Notification' . . . . . . . . . . . 10\n  \
    \ 6.  Consideration (3.3) 'Non-blocking' . . . . . . . . . . . . . . 10\n   7.\
    \  Consideration (4.1) 'URI resolution' . . . . . . . . . . . . . 11\n   8.  Consideration\
    \ (4.2) 'Reference validity' . . . . . . . . . . . 11\n   9.  Consideration (4.3)\
    \ 'Addressing extensions'  . . . . . . . . . 12\n   10. Consideration (5.1) 'Privacy'\
    \  . . . . . . . . . . . . . . . . 12\n   11. Consideration 'Encryption' . . .\
    \ . . . . . . . . . . . . . . . 12\n   12. Security Considerations  . . . . .\
    \ . . . . . . . . . . . . . . 13\n   13. Compliance . . . . . . . . . . . . .\
    \ . . . . . . . . . . . . . 13\n   14. References . . . . . . . . . . . . . .\
    \ . . . . . . . . . . . . 14\n       14.1. Normative References . . . . . . .\
    \ . . . . . . . . . . . 14\n       14.2. Informative References . . . . . . .\
    \ . . . . . . . . . . 14\n   Authors' Addresses . . . . . . . . . . . . . . .\
    \ . . . . . . . . . 15\n   Full Copyright Statement . . . . . . . . . . . . .\
    \ . . . . . . . . 16\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   The Open Pluggable Edge Services (OPES) architecture [RFC3835],\n\
    \   enables cooperative application services (OPES services) between a\n   data\
    \ provider, a data consumer, and zero or more OPES processors.\n   The application\
    \ services under consideration analyze and possibly\n   transform application-level\
    \ messages exchanged between the data\n   provider and the data consumer.\n  \
    \ In the process of chartering OPES, the IAB made recommendations on\n   issues\
    \ that OPES solutions should be required to address.  These\n   recommendations\
    \ were formulated in the form of a specific IAB\n   considerations document [RFC3238].\
    \  In that document, IAB emphasized\n   that its considerations did not recommend\
    \ specific solutions and did\n   not mandate specific functional requirements.\
    \  Addressing an IAB\n   consideration may involve showing appropriate protocol\
    \ mechanisms or\n   demonstrating that the issue does not apply.  Addressing a\n\
    \   consideration does not necessarily mean supporting technology implied\n  \
    \ by the consideration wording.\n   The primary goal of this document is to show\
    \ that all formal IAB\n   recommendations are addressed by OPES, to the extent\
    \ that those\n   considerations can be addressed by an IETF working group.  The\n\
    \   limitations of OPES working group to address certain aspects of IAB\n   considerations\
    \ are also explicitly documented.\n   IAB considerations document [RFC3238] contains\
    \ many informal\n   recommendations.  For example, while the IAB informally requires\
    \ OPES\n   architecture to \"protect end-to-end data integrity by supporting\n\
    \   end-host detection and response to inappropriate behavior by OPES\n   intermediaries\"\
    , the IAB has chosen to formalize these requirements\n   via a set of more specific\
    \ recommendations, such as Notification\n   considerations addressed in Section\
    \ 5.3 and Section 5.4 below.  OPES\n   framework addresses informal IAB recommendations\
    \ by addressing\n   corresponding formal considerations.\n   There are nine formal\
    \ IAB considerations [RFC3238] that OPES has to\n   address.  In the core of this\
    \ document are the corresponding nine\n   \"Consideration\" sections.  For each\
    \ IAB consideration, its section\n   contains general discussion as well as references\
    \ to specific OPES\n   mechanisms relevant to the consideration.\n"
- title: 2.  Terminology
  contents:
  - "2.  Terminology\n   This document does not introduce any new terminology but\
    \ uses\n   terminology from other OPES documents.\n"
- title: 3.  Consideration (2.1) 'One-party consent'
  contents:
  - "3.  Consideration (2.1) 'One-party consent'\n   \"An OPES framework standardized\
    \ in the IETF must require that the use\n   of any OPES service be explicitly\
    \ authorized by one of the\n   application-layer end-hosts (that is, either the\
    \ content provider or\n   the client).\" [RFC3238]\n   OPES architecture requires\
    \ that \"OPES processors MUST be consented to\n   by either the data consumer\
    \ or data provider application\" [RFC3835].\n   While this requirement directly\
    \ satisfies IAB concern, no requirement\n   alone can prevent consent-less introduction\
    \ of OPES processors.  In\n   other words, OPES framework requires one-party consent\
    \ but cannot\n   guarantee it in the presence of incompliant OPES entities.\n\
    \   In [RFC3897], the OPES architecture enables concerned parties to\n   detect\
    \ unwanted OPES processors by examining OPES traces.  While the\n   use of traces\
    \ in OPES is mandatory, a tracing mechanism on its own\n   cannot detect processors\
    \ that are in violation of OPES\n   specifications.  Examples include OPES processors\
    \ operating in\n   stealth mode.  However, the OPES architecture allows the use\
    \ of\n   content signature to verify the authenticity of performed\n   adaptations.\
    \  Content signatures is a strong but expensive mechanism\n   that can detect\
    \ any modifications of signed content provided that the\n   content provider is\
    \ willing to sign the data and that the client is\n   willing to either check\
    \ the signature or relay received content to\n   the content provider for signature\
    \ verification.\n   OPES entities may copy or otherwise access content without\
    \ modifying\n   it.  Such access cannot be detected using content signatures.\
    \  Thus,\n   \"passive\" OPES entities can operate on signed content without the\n\
    \   data consumer or provider consent.  If content privacy is a concern,\n   then\
    \ content encryption can be used.  A passive processor is no\n   different from\
    \ any intermediary operating outside of OPES framework.\n   No OPES mechanism\
    \ (existing or foreseeable) can prevent non-modifying\n   access to content.\n\
    \   In summary, the one-party consent is satisfied by including the\n   corresponding\
    \ requirement in the IAB architecture document.  That\n   requirement alone cannot\
    \ stop incompliant OPES entities to perform\n   consent-less adaptations, but\
    \ OPES framework allows for various means\n   of detecting and/or preventing such\
    \ adaptations.  These means\n   typically introduce overheads and require some\
    \ level of producer-\n   consumer cooperation.\n"
- title: 4.  Consideration (2.2) 'IP-layer communications'
  contents:
  - "4.  Consideration (2.2) 'IP-layer communications'\n   \"For an OPES framework\
    \ standardized in the IETF, the OPES\n   intermediary must be explicitly addressed\
    \ at the IP layer by the end\n   user\" [RFC3238].\n   The OPES architecture requires\
    \ that \"OPES processors MUST be\n   addressable at the IP layer by the end user\
    \ (data consumer\n   application)\" [RFC3835].  The IAB and the architecture documents\n\
    \   mention an important exception: addressing the first OPES processor\n   in\
    \ a chain of processors is sufficient.  That is, a chain of OPES\n   processors\
    \ is viewed as a single OPES \"system\" at the address of the\n   first chain\
    \ element.\n   The notion of a chain is not strictly defined by IAB.  For the\n\
    \   purpose of addressing this consideration, a group of OPES processors\n   working\
    \ on a given application transaction is considered.  Such a\n   group would necessarily\
    \ form a single processing chain, with a single\n   \"exit\" OPES processor (i.e.,\
    \ the processor that adapted the given\n   message last).  The OPES architecture\
    \ essentially requires that last\n   OPES processor to be explicitly addressable\
    \ at the IP layer by the\n   data consumer application.  The chain formation,\
    \ including its exit\n   point may depend on an application message and other\
    \ dynamic factors\n   such as time of the day or system load.\n   Furthermore,\
    \ if OPES processing is an internal processing step at a\n   data consumer or\
    \ a data provider application side, then the last OPES\n   processor may reside\
    \ in a private address space and may not be\n   explicitly addressable from the\
    \ outside.  In such situations, the\n   processing side must designate an addressable\
    \ point on the same\n   processing chain.  That designated point may not be, strictly\n\
    \   speaking, an OPES processor, but it will suffice as such as far as\n   IAB\
    \ considerations are concerned -- the data consumer application\n   will be able\
    \ to address it explicitly at the IP layer and it will\n   represent the OPES\
    \ processing chain to the outside world.\n   Designating an addressable processing\
    \ point avoids the conflict\n   between narrow interpretation of the IAB consideration\
    \ and real\n   system designs.  It is irrational to expect a content provider\
    \ to\n   provide access to internal hosts participating in content generation,\n\
    \   whether OPES processors are involved or not.  Moreover, providing\n   such\
    \ access would serve little practical purpose because internal\n   OPES processors\
    \ are not likely to be able to answer any data consumer\n   queries, being completely\
    \ out of content generation context.  For\n   example, an OPES processor adding\
    \ customer-specific information to\n   XML pages may not understand or be aware\
    \ of any final HTML content\n   that the data consumer application receives and\
    \ may not be able to\n   map end user request to any internal user identification.\
    \  Since OPES\n   requires the end of the message processing chain to be addressable,\n\
    \   the conflict does not exist.  OPES places no requirements on the\n   internal\
    \ architecture of data producer systems while requiring the\n   entire OPES-related\
    \ content production \"system\" to be addressable at\n   the IP layer.\n   Private\
    \ Domain    | Public Domain     | Private Domain\n                     |     \
    \              |\n   +--------------+  |             +-------------+      +--------+\n\
    \   | Data         |  |             | OPES System |      |Data    |\n   | Consumer\
    \     |<--- network -->| with public |<---->|Provider|\n   | Application  |  |\
    \             | IP address  |      |App     |\n   +--------------+  |        \
    \     +-------------+      +--------+\n                     |                \
    \   |\n                     |                   |\n                          \
    \      Figure 1\n"
- title: 5.  Notification Considerations
  contents:
  - "5.  Notification Considerations\n   This section discusses how OPES framework\
    \ addresses IAB Notification\n   considerations 3.1 and 3.2.\n"
- title: 5.1.  Notification versus trace
  contents:
  - "5.1.  Notification versus trace\n   Before specific considerations are discussed,\
    \ the relationship\n   between IAB notifications and OPES tracing has to be explained.\
    \  OPES\n   framework concentrates on tracing rather than notification.  The OPES\n\
    \   Communications specification [RFC3897] defines \"OPES trace\" as\n   application\
    \ message information about OPES entities that adapted the\n   message.  Thus,\
    \ OPES trace follows the application message it traces.\n   The trace is for the\
    \ recipient of the application message.  Traces\n   are implemented as extensions\
    \ of application protocols being adapted\n   and traced.\n   As opposed to an\
    \ OPES trace, provider notification (as implied by\n   IAB) notifies the sender\
    \ of the application message rather than the\n   recipient.  Thus, notifications\
    \ propagate in the opposite direction\n   of traces.  Supporting notifications\
    \ directly would require a new\n   protocol.  Figure 2 illustrates the differences\
    \ between a trace and\n   notification from a single application message point\
    \ of view.\n   sender --[message A]--> OPES --[message A']--> recipient\n    \
    \  ^                       V                             [with trace]\n      |\
    \                       |\n      +-<-- [notification] ---+\n                 \
    \               Figure 2\n   Since notifications cannot be piggy-backed to application\
    \ messages,\n   they create new messages and may double the number of messages\
    \ the\n   sender has to process.  The number of messages that need to be\n   proceed\
    \ is larger if several intermediaries on the message path\n   generate notifications.\
    \  Associating notifications with application\n   messages may require duplicating\
    \ application message information in\n   notifications and may require maintaining\
    \ a sender state until\n   notification is received.  These actions increase the\
    \ performance\n   overhead of notifications.\n   The level of available details\
    \ in notifications versus provider\n   interest in supporting notification is\
    \ another concern.  Experience\n   shows that content providers often require\
    \ very detailed information\n   about user actions to be interested in notifications\
    \ at all.  For\n   example, Hit Metering protocol [RFC2227] has been designed\
    \ to supply\n   content providers with proxy cache hit counts, in an effort to\
    \ reduce\n   cache busting behavior which was caused by content providers desire\n\
    \   to get accurate site \"access counts\".  However, the Hit Metering\n   protocol\
    \ is currently not widely deployed because the protocol does\n   not supply content\
    \ providers with information such as client IP\n   addresses, browser versions,\
    \ or cookies.\n   Hit Metering experience is relevant because Hit Metering protocol\
    \ was\n   designed to do for HTTP caching intermediaries what OPES\n   notifications\
    \ are meant to do for OPES intermediaries.  Performance\n   requirements call\
    \ for state reduction via aggregation of\n   notifications while provider preferences\
    \ call for state preservation\n   or duplication.  Achieving the right balance\
    \ when two sides belong to\n   different organizations and have different optimization\
    \ priorities\n   may be impossible.\n   Thus, instead of explicitly supporting\
    \ notifications at the protocol\n   level, OPES concentrates on tracing facilities.\
    \  In essence, OPES\n   supports notifications indirectly, using tracing facilities.\
    \  In\n   other words, the IAB choice of \"Notification\" label is interpreted\
    \ as\n   \"Notification assistance\" (i.e., making notifications meaningful) and\n\
    \   is not interpreted as a \"Notification protocol\".\n   The above concerns\
    \ call for making notification optional.  The OPES\n   architecture allows for\
    \ an efficient and meaningful notification\n   protocol to be implemented in certain\
    \ OPES environments.  For\n   example, an OPES callout server attached to a gateway\
    \ or firewall may\n   scan outgoing traffic for signs of worm or virus activity\
    \ and notify\n   a local Intrusion Detection System (IDS) of potentially compromised\n\
    \   hosts (e.g., servers or client PCs) inside the network.  Such\n   notifications\
    \ may use OPES tracing information to pinpoint the\n   infected host (which could\
    \ be another OPES entity).  In this example,\n   notifications are essentially\
    \ sent back to the content producer (the\n   local network) and use OPES tracing\
    \ to supply details.\n   Another environment where efficient and meaningful notification\
    \ using\n   OPES tracing is possible are Content Delivery Networks (CDNs).  A\
    \ CDN\n   node may use multiple content adaptation services to customize\n   generic\
    \ content supplied by the content producer (a web site).  For\n   example, a callout\
    \ service may insert advertisements for client-local\n   events.  The CDN node\
    \ itself may not understand specifics of the ad\n   insertion algorithm implemented\
    \ at callout servers.  However, the\n   node may use information in the OPES trace\
    \ (e.g., coming from the\n   callout service) to notify the content producer.\
    \  Such notifications\n   may be about the number of certain advertisements inserted\
    \ (i.e., the\n   number of \"impressions\" delivered to the customer) or even\
    \ the number\n   of ad \"clicks\" the customer made (e.g., if the node hosts content\n\
    \   linked from the ads).  Callout services doing ad insertion may lack\n   details\
    \ (e.g., a customer ID/address or a web server authentication\n   token) to contact\
    \ the content producer directly in this case.  Thus,\n   OPES trace produced by\
    \ an OPES service becomes essential in enabling\n   meaningful notifications that\
    \ the CDN node sends to the content\n   producer.\n"
- title: 5.2.  An example of an OPES trace for HTTP
  contents:
  - "5.2.  An example of an OPES trace for HTTP\n   The example below illustrates\
    \ adaptations done to HTTP request at an\n   OPES processor operated by the client\
    \ ISP.  Both original (as sent by\n   an end user) and adapted (as received by\
    \ the origin web server)\n   requests are shown.  The primary adaptation is the\
    \ modification of\n   HTTP \"Accept\" header.  The secondary adaptation is the\
    \ addition of an\n   OPES-System HTTP extension header [I-D.ietf-opes-http].\n\
    \   GET /pub/WWW/ HTTP/1.1\n   Host: www.w3.org\n   Accept: text/plain\n     \
    \                           Figure 3\n   ... may be adapted by an ISP OPES system\
    \ to become:\n   GET /pub/WWW/ HTTP/1.1\n   Host: www.w3.org\n   Accept: text/plain;\
    \ q=0.5, text/html, text/x-dvi; q=0.8\n   OPES-System: http://www.isp-example.com/opes/?client-hash=1234567\n\
    \                                Figure 4\n   The example below illustrates adaptations\
    \ done to HTTP response at an\n   OPES intermediary operated by a Content Distribution\
    \ Network (CDN).\n   Both original (as sent by the origin web server) and adapted\
    \ (as\n   received by the end user) responses are shown.  The primary\n   adaptation\
    \ is the conversion from HTML markup to plain text.  The\n   secondary adaptation\
    \ is the addition of an OPES-System HTTP extension\n   header.\n   HTTP/1.1 200\
    \ OK\n   Content-Length: 12345\n   Content-Encoding: text/html\n   <html><head><h1>Available\
    \ Documenta...\n                                Figure 5\n   ... may be adapted\
    \ by a CDN OPES system to become:\n   HTTP/1.1 200 OK\n   Content-Length: 2345\n\
    \   Content-Encoding: text/plain\n   OPES-System: http://www.cdn-example.com/opes/?site=7654&svc=h2t\n\
    \   AVAILABLE DOCUMENTA...\n                                Figure 6\n   In the\
    \ above examples, OPES-System header values contain URIs that\n   may point to\
    \ OPES-specific documents such as description of the OPES\n   operator and its\
    \ privacy policy.  Those documents may be\n   parameterized to allow for customizations\
    \ specific to the transaction\n   being traced (e.g., client or even transaction\
    \ identifier may be used\n   to provide more information about performed adaptations).\
    \  An OPES-\n   Via header may be used to provide a more detailed trace of specific\n\
    \   OPES entities within an OPES System that adapted the message.  Traced\n  \
    \ OPES URIs may be later used to request OPES bypass [RFC3897].\n"
- title: 5.3.  Consideration (3.1) 'Notification'
  contents:
  - "5.3.  Consideration (3.1) 'Notification'\n   \"The overall OPES framework needs\
    \ to assist content providers in\n   detecting and responding to client-centric\
    \ actions by OPES\n   intermediaries that are deemed inappropriate by the content\
    \ provider\"\n   [RFC3238].\n   OPES tracing mechanisms assist content providers\
    \ in detecting\n   client-centric actions by OPES intermediaries.  Specifically,\
    \ a\n   compliant OPES intermediary or system notifies a content provider of\n\
    \   its presence by including its tracing information in the application\n   protocol\
    \ requests.  An OPES system MUST leave its trace [RFC3897].\n   Detection assistance\
    \ has its limitations.  Some OPES intermediaries\n   may work exclusively on responses\
    \ and may not have a chance to trace\n   the request.  Moreover, some application\
    \ protocols may not have\n   explicit requests (e.g., a content push service).\n\
    \   OPES tracing mechanisms assist content providers in responding to\n   client-centric\
    \ actions by OPES intermediaries.  Specifically, OPES\n   traces MUST include\
    \ identification of OPES systems and SHOULD include\n   a list of adaptation actions\
    \ performed on provider's content.  This\n   tracing information may be included\
    \ in the application request.\n   Usually, however, this information will be included\
    \ in the\n   application response, an adapted version of which does not reach\
    \ the\n   content provider.  If OPES end points cooperate, then notification\n\
    \   can be assisted with traces.  Content providers that suspect or\n   experience\
    \ difficulties can do any of the following:\n   o  Check whether requests they\
    \ receive pass through OPES\n      intermediaries.  Presence of OPES tracing info\
    \ will determine\n      that.  This check is only possible for request/response\
    \ protocols.\n      For other protocols (e.g., broadcast or push), the provider\
    \ would\n      have to assume that OPES intermediaries are involved until proven\n\
    \      otherwise.\n   o  If OPES intermediaries are suspected, request OPES traces\
    \ from\n      potentially affected user(s).  The trace will be a part of the\n\
    \      application message received by the user software.  If involved\n     \
    \ parties cooperate, the provider(s) may have access to all the\n      needed\
    \ information.  Certainly, lack of cooperation may hinder\n      access to tracing\
    \ information.  To encourage cooperation, data\n      providers might be able\
    \ to deny service to uncooperative users.\n   o  Some traces may indicate that\
    \ more information is available by\n      accessing certain resources on the specified\
    \ OPES intermediary or\n      elsewhere.  Content providers may query for more\
    \ information in\n      this case.\n   o  If everything else fails, providers\
    \ can enforce no-adaptation\n      policy using appropriate OPES bypass mechanisms\
    \ and/or end-to-end\n      encryption mechanisms.\n   OPES detection and response\
    \ assistance is limited to application\n   protocols with support for tracing\
    \ extensions.  For example, HTTP\n   [RFC2616] has such support while DNS over\
    \ UDP does not.\n"
- title: 5.4.  Consideration (3.2) 'Notification'
  contents:
  - "5.4.  Consideration (3.2) 'Notification'\n   \"The overall OPES framework should\
    \ assist end users in detecting the\n   behavior of OPES intermediaries, potentially\
    \ allowing them to\n   identify imperfect or compromised intermediaries\" [RFC3238].\n\
    \   OPES tracing mechanisms assist end users in detecting OPES\n   intermediaries.\
    \  Specifically, a compliant OPES intermediary or\n   system notifies an end user\
    \ of its presence by including its tracing\n   information in the application\
    \ protocol messages sent to the client.\n   An OPES system MUST leave its trace\
    \ [RFC3897].  However, detection\n   assistance has its limitations.  Some OPES\
    \ systems may work\n   exclusively on requests and may not have a chance to trace\
    \ the\n   response.  Moreover, some application protocols may not have explicit\n\
    \   responses (e.g., event logging service).\n   OPES detection assistance is\
    \ limited to application protocols with\n   support for tracing extensions.  For\
    \ example, HTTP [RFC2616] has such\n   support while DNS over UDP does not.\n"
- title: 6.  Consideration (3.3) 'Non-blocking'
  contents:
  - "6.  Consideration (3.3) 'Non-blocking'\n   \"If there exists a \"non-OPES\" version\
    \ of content available from the\n   content provider, the OPES architecture must\
    \ not prevent users from\n   retrieving this \"non-OPES\" version from the content\
    \ provider\"\n   [RFC3238].\n   \"OPES entities MUST support a bypass feature\"\
    \ [RFC3897].  If an\n   application message includes bypass instructions and an\
    \ OPES\n   intermediary is not configured to ignore them, the matching OPES\n\
    \   intermediary will not process the message.  An OPES intermediary may\n   be\
    \ configured to ignore bypass instructions only if no non-OPES\n   version of\
    \ content is available.  Bypass may generate content errors\n   since some OPES\
    \ services may be essential but may not be configured\n   as such.\n   Bypass\
    \ support has limitations similar to the two notification-\n   related considerations\
    \ above.\n"
- title: 7.  Consideration (4.1) 'URI resolution'
  contents:
  - "7.  Consideration (4.1) 'URI resolution'\n   \"OPES documentation must be clear\
    \ in describing these services as\n   being applied to the result of URI resolution,\
    \ not as URI resolution\n   itself\" [RFC3238].\n   \"OPES Scenarios and Use Cases\"\
    \ specification [RFC3752] documents\n   content adaptations that are in scope\
    \ of the OPES framework.\n   Scenarios include content adaptation of requests\
    \ and responses.\n   These documented adaptations do not include URI resolution.\
    \  In some\n   environments, it is technically possible to use documented OPES\n\
    \   mechanisms to resolve URIs (and other kinds of identifiers or\n   addresses).\
    \  The OPES framework cannot effectively prevent any\n   specific kind of adaptation.\n\
    \   For example, a CDN node may substitute domain names in URLs with\n   CDN-chosen\
    \ IP addresses, essentially performing a URI resolution on\n   behalf of the content\
    \ producer (i.e., the web site owner).  An OPES\n   callout service running on\
    \ a user PC may rewrite all HTML-embedded\n   advertisement URLs to point to a\
    \ user-specified local image,\n   essentially performing a URI redirection on\
    \ behalf of the content\n   consumer (i.e., the end user).  Such URI manipulations\
    \ are outside of\n   the OPES framework scope, but cannot be effectively eliminated\
    \ from\n   the real world.\n"
- title: 8.  Consideration (4.2) 'Reference validity'
  contents:
  - "8.  Consideration (4.2) 'Reference validity'\n   \"All proposed services must\
    \ define their impact on inter- and intra-\n   document reference validity\" [RFC3238].\n\
    \   The OPES framework does not propose adaptation services.  However,\n   OPES\
    \ tracing requirements include identification of OPES\n   intermediaries and services\
    \ (for details, see \"Notification\"\n   consideration sections in this document).\
    \  It is required that\n   provided identification can be used to locate information\
    \ about the\n   OPES intermediaries, including the description of impact on reference\n\
    \   validity [RFC3897].\n"
- title: 9.  Consideration (4.3) 'Addressing extensions'
  contents:
  - "9.  Consideration (4.3) 'Addressing extensions'\n   \"Any services that cannot\
    \ be achieved while respecting the above two\n   considerations may be reviewed\
    \ as potential requirements for Internet\n   application addressing architecture\
    \ extensions, but must not be\n   undertaken as ad hoc fixes\" [RFC3238].\n  \
    \ OPES framework does not contain ad hoc fixes.  This document in\n   combination\
    \ with and other OPES documents should be sufficient to\n   inform service creators\
    \ of IAB considerations.  If a service does URI\n   resolution or silently affects\
    \ document reference validity, the\n   authors are requested to review service\
    \ impact on Internet\n   application addressing architecture and work within IETF\
    \ on potential\n   extension requirements.  Such actions would be outside of the\
    \ current\n   OPES framework.\n"
- title: 10.  Consideration (5.1) 'Privacy'
  contents:
  - "10.  Consideration (5.1) 'Privacy'\n   \"The overall OPES framework must provide\
    \ for mechanisms for end users\n   to determine the privacy policies of OPES intermediaries\"\
    \ [RFC3238].\n   OPES tracing mechanisms allow end users to identify OPES\n  \
    \ intermediaries (for details, see \"Notification\" consideration\n   sections\
    \ in this document).  It is required that provided\n   identification can be used\
    \ to locate information about the OPES\n   intermediaries, including their privacy\
    \ policies.\n   The term \"privacy policy\" is not defined in this context (by\
    \ IAB or\n   OPES working group).  OPES tracing mechanisms allow end users and\n\
    \   content providers to identify an OPES system and/or intermediaries.\n   It\
    \ is believed that once an OPES system is identified, it would be\n   possible\
    \ to locate relevant information about that system, including\n   information\
    \ relevant to requesters perception of privacy policy or\n   reference validity.\n"
- title: 11.  Consideration 'Encryption'
  contents:
  - "11.  Consideration 'Encryption'\n   \"If OPES is chartered, the OPES working\
    \ group will also have to\n   explicitly decide and document whether the OPES\
    \ architecture must be\n   compatible with the use of end-to-end encryption by\
    \ one or more ends\n   of an OPES-involved session.  If OPES was compatible with\
    \ end-to-end\n   encryption, this would effectively ensure that OPES boxes would\
    \ be\n   restricted to ones that are known, trusted, explicitly addressed at\n\
    \   the IP layer, and authorized (by the provision of decryption keys) by\n  \
    \ at least one of the ends\" [RFC3238].\n   The above quoted requirement was not\
    \ explicitly listed as on of the\n   IAB considerations, but still needs to be\
    \ addressed.  The context of\n   the quote implies that the phrase \"end-to-end\
    \ encryption\" refers to\n   encryption along all links of the end-to-end path,\
    \ with the OPES\n   intermediaries as encrypting/decrypting participants or hops\
    \ (e.g.,\n   encryption between the provider and the OPES intermediaries, and\n\
    \   between the OPES intermediaries and the client).\n   Since OPES processors\
    \ are regular hops on the application protocol\n   path, OPES architecture allows\
    \ for such encryption, provided the\n   application protocol being adapted supports\
    \ it.  Hop-by-hop\n   encryption would do little good for the overall application\
    \ message\n   path protection if callout services have to receive unencrypted\n\
    \   content.  To allow for complete link encryption coverage, OPES\n   callout\
    \ protocol (OCP) supports encryption of OCP connections between\n   an OPES processor\
    \ and a callout server via optional (negotiated)\n   transport encryption mechanisms\
    \ [I-D.ietf-opes-ocp-core].\n   For example, TLS encryption [RFC2817] can be used\
    \ among HTTP hops\n   (some of which could be OPES processors) and between each\
    \ OPES\n   processor and a callout server.\n"
- title: 12.  Security Considerations
  contents:
  - "12.  Security Considerations\n   This document does not define any mechanisms\
    \ that may be subject to\n   security considerations.  This document scope is\
    \ to address specific\n   IAB considerations.  Security of OPES mechanisms are\
    \ discussed in\n   Security Considerations sections of the corresponding OPES\
    \ framework\n   documents.\n   For example, OPES tracing mechanisms assist content\
    \ providers and\n   consumers in protecting content integrity and confidentiality\
    \ by\n   requiring OPES intermediaries to disclose their presence.  Security\n\
    \   of the tracing mechanism is discussed in the Security Considerations\n   section\
    \ of [RFC3897].\n"
- title: 13.  Compliance
  contents:
  - "13.  Compliance\n   This document may be perceived as a proof of OPES compliance\
    \ with IAB\n   implied recommendations.  However, this document does not introduce\n\
    \   any compliance subjects.  Compliance of OPES implementations is\n   defined\
    \ in other OPES documents discussed above.\n"
- title: 14.  References
  contents:
  - '14.  References

    '
- title: 14.1.  Normative References
  contents:
  - "14.1.  Normative References\n   [RFC3238]                     Floyd, S. and L.\
    \ Daigle, \"IAB\n                                 Architectural and Policy Considerations\n\
    \                                 for Open Pluggable Edge Services\", RFC\n  \
    \                               3238, January 2002.\n   [RFC3752]            \
    \         Barbir, A., Burger, E., Chen, R.,\n                                \
    \ McHenry, S., Orman, H. and R. Penno,\n                                 \"Open\
    \ Pluggable Edge Services (OPES)\n                                 Use Cases and\
    \ Deployment Scenarios\",\n                                 RFC 3752, April 2004.\n\
    \   [RFC3835]                     Barbir, A., Penno, R., Chen, R.,\n         \
    \                        Hofmann, M., and H. Orman, \"An\n                   \
    \              Architecture for Open Pluggable Edge\n                        \
    \         Services (OPES)\", RFC 3835, August\n                              \
    \   2004.\n   [RFC3897]                     Barbir, A., \"Open Pluggable Edge\n\
    \                                 Services (OPES) Entities and End Points\n  \
    \                               Communication\", RFC 3897, September\n       \
    \                          2004.\n"
- title: 14.2.  Informative References
  contents:
  - "14.2.  Informative References\n   [RFC2227]                     Mogul, J. and\
    \ P. Leach, \"Simple\n                                 Hit-Metering and Usage-Limiting\
    \ for\n                                 HTTP\", RFC 2227, October 1997.\n   [RFC2616]\
    \                     Fielding, R., Gettys, J., Mogul, J.,\n                 \
    \                Frystyk, H., Masinter, L., Leach, P.\n                      \
    \           and T. Berners-Lee, \"Hypertext Transfer\n                       \
    \          Protocol -- HTTP/1.1\", RFC 2616, June\n                          \
    \       1999.\n   [RFC2817]                     Khare, R. and S. Lawrence, \"\
    Upgrading\n                                 to TLS Within HTTP/1.1\", RFC 2817,\
    \ May\n                                 2000.\n   [I-D.ietf-opes-http]       \
    \   Rousskov, A. and M. Stecher, \"HTTP\n                                 adaptation\
    \ with OPES\", Work in\n                                 Progress, October 2003.\n\
    \   [I-D.ietf-opes-ocp-core]      Rousskov, A., \"OPES Callout Protocol\n    \
    \                             Core\", Work in Progress, November 2003.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Abbie Barbir\n   Nortel Networks\n   3500 Carling Avenue\n\
    \   Nepean, Ontario\n   CA\n   Phone: +1 613 763 5229\n   EMail: abbieb@nortelnetworks.com\n\
    \   Alex Rousskov\n   The Measurement Factory\n   EMail: rousskov@measurement-factory.com\n\
    \   URI:   http://www.measurement-factory.com/\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2004).\n   This\
    \ document is subject to the rights, licenses and restrictions\n   contained in\
    \ BCP 78, and except as set forth therein, the authors\n   retain all their rights.\n\
    \   This document and the information contained herein are provided on an\n  \
    \ \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/S HE\n   REPRESENTS\
    \ OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY AND THE\n   INTERNET ENGINEERING\
    \ TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR\n   IMPLIED, INCLUDING BUT NOT\
    \ LIMITED TO ANY WARRANTY THAT THE USE OF\n   THE INFORMATION HEREIN WILL NOT\
    \ INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY OR FITNESS\
    \ FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ IETF's procedures with respect to rights in IETF Documents can\n   be found\
    \ in BCP 78 and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat\
    \ and any\n   assurances of licenses to be made available, or the result of an\n\
    \   attempt made to obtain a general license or permission for the use of\n  \
    \ such proprietary rights by implementers or users of this\n   specification can\
    \ be obtained from the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n\
    \   The IETF invites any interested party to bring to its attention any\n   copyrights,\
    \ patents or patent applications, or other proprietary\n   rights that may cover\
    \ technology that may be required to implement\n   this standard.  Please address\
    \ the information to the IETF at ietf-\n   ipr@ietf.org.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
