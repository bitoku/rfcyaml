- title: __initial_text__
  contents:
  - ''
- title: 'RARE Technical Report: 8                                        May 1994'
  contents:
  - "RARE Technical Report: 8                                        May 1994\n  \
    \              Network Access to Multimedia Information\n"
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo provides information for the Internet community.\
    \  This memo\n   does not specify an Internet standard of any kind.  Distribution\
    \ of\n   this memo is unlimited.\n"
- title: Abstract
  contents:
  - "Abstract\n   This report summarises the requirements of research and academic\n\
    \   network users for network access to multimedia information.  It does\n   this\
    \ by investigating some of the projects planned or currently\n   underway in the\
    \ community.  Existing information systems such as\n   Gopher, WAIS and World-Wide\
    \ Web are examined from the point of view\n   of multimedia support, and some\
    \ interesting hypermedia systems\n   emerging from the research community are\
    \ also studied.  Relevant\n   existing and developing standards in this area are\
    \ discussed.  The\n   report identifies the gaps between the capabilities of\n\
    \   currentlydeployed systems and the user requirements, and proposes\n   further\
    \ work centred on the World-Wide Web system to rectify this.\n   The report is\
    \ in some places very detailed, so it is preceded by an\n   extended summary,\
    \ which outlines the findings of the report.\n"
- title: Publication History
  contents:
  - "Publication History\n   The first edition was released on 29 June 1993.  This\
    \ second edition\n   contains minor changes, corrections and updates.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n    Acknowledgements                                     \
    \           2\n    Disclaimer                                                \
    \      2\n    Availability                                                   \
    \ 3\n    0. Extended Summary                                             3\n \
    \   1. Introduction                                                10\n      1.1.\
    \ Background                                              10\n      1.2. Terminology\
    \                                             11\n    2. User Requirements   \
    \                                        13\n      2.1. Applications         \
    \                                   13\n      2.2. Data Characteristics      \
    \                              18\n      2.3. Requirements Definition        \
    \                         19\n    3. Existing Systems                        \
    \                    24\n      3.1. Gopher                                   \
    \               24\n      3.2. Wide Area Information Server                  \
    \          30\n      3.3. World-Wide Web                                     \
    \     34\n      3.4. Evaluating Existing Tools                               42\n\
    \    4. Research                                                    47\n     \
    \ 4.1. Hyper-G                                                 47\n      4.2.\
    \ Microcosm                                               48\n      4.3. AthenaMuse\
    \ 2                                            50\n      4.4. CEC Research Programmes\
    \                                 51\n      4.5. Other                       \
    \                            53\n    5. Standards                            \
    \                       55\n      5.1. Structuring Standards                 \
    \                  55\n      5.2. Access Mechanisms                          \
    \             62\n      5.3. Other Standards                                 \
    \        63\n      5.4. Trade Associations                                   \
    \   66\n    6. Future Directions                                           68\n\
    \      6.1. General Comments on the State-of-the-Art                68\n     \
    \ 6.2. Quality of Service                                      70\n      6.3.\
    \ Recommended Further Work                                71\n    7. References\
    \                                                  76\n    8. Security Considerations\
    \                                     79\n    9. Author's Address            \
    \                                79\n"
- title: Acknowledgements
  contents:
  - "Acknowledgements\n   The following people have (knowingly or unknowingly) helped\
    \ in the\n   preparation of this report: Tim Berners-Lee, John Dyer, Aydin Edguer,\n\
    \   Anton Eliens, Tony Gibbons, Stewart Granger, Wendy Hall, Gary Hill,\n   Brian\
    \ Marquardt, Gunnar Moan, Michael Neuman, Ari Ollikainen, David\n   Pullinger,\
    \ John Smith, Edward Vielmetti, and Jane Williams.  The\n   useful role which\
    \ NCSA's XMosaic information browser tool played in\n   assembling the information\
    \ on which this report was based should also\n   be acknowledged - many thanks\
    \ to its developers.\n   All trademarks are hereby acknowledged as being the property\
    \ of their\n   respective owners.\n"
- title: Disclaimer
  contents:
  - "Disclaimer\n   This report is based on information supplied to or obtained by\n\
    \   Edinburgh University Computing Service (EUCS) in good faith.  Neither\n  \
    \ EUCS nor RARE nor any of their staff may be held liable for any\n   inaccuracies\
    \ or omissions, or any loss or damage arising from or out\n   of the use of this\
    \ report.\n   The opinions expressed in this report are personal opinions of the\n\
    \   author.  They do not necessarily represent the policy either of RARE\n   or\
    \ of ECUS.\n   Mention of a product in this report does not constitute endorsement\n\
    \   either by EUCS or by RARE.\n"
- title: Availability
  contents:
  - "Availability\n   This document is available in various forms (PostScript, text,\n\
    \   Microsoft Word for Windows 2) by anonymous FTP through the following\n   URL:\n\
    \    ftp://ftp.edinburgh.ac.uk/pub/mmaccess/\n    ftp://ftp.rare.nl/rare/pub/rtr/rtr8-rfc.../\n\
    \    Paper copies are available from the RARE Secretariat.\n"
- title: 0. Extended Summary
  contents:
  - "0. Extended Summary\n   Introduction\n   This report is concerned with issues\
    \ in the intersection of\n   networked information retrieval, database and multimedia\n\
    \   technologies.  It aims to establish research and academic user\n   requirements\
    \ for network access to multimedia data, to look at\n   existing systems which\
    \ offer partial solutions, and to identify\n   what needs to be done to satisfy\
    \ the most pressing requirements.\n   User Requirements\n   There are a number\
    \ of reasons why multimedia data may need to be\n   accessed remotely (as opposed\
    \ to physically distributing the data,\n   e.g., on CD-ROM).  These reasons centre\
    \ on the cost of physical\n   distribution, versus the timeliness of network distribution.\
    \  Of\n   course, there is a cost associated with network distribution, but\n\
    \   this tends to be hidden from the end user.\n   User requirements have been\
    \ determined by studying existing and\n   proposed projects involving networked\
    \ multimedia data.  It has\n   proved convenient to divide the applications into\
    \ four classes\n   according to their requirements: multimedia database applications,\n\
    \   academic (particularly scientific) publishing applications, cal\n   (computeraided\
    \ learning), and general multimedia information\n   services.\n   Database applications\
    \ typically involve large collections of\n   monomedia (non-text) data with associated\
    \ textual and numeric\n   fields. They require a range of search and retrieval\
    \ techniques.\n   Publishing applications require a range of media types,\n  \
    \ hyperlinking, and the capability to access the same data using\n   different\
    \ access paradigms (search, browse, hierarchical, links).\n   Authentication and\
    \ charging facilities are required.\n   Cal applications require sophisticated\
    \ presentation and\n   synchronisation capabilities, of the type found in existing\n\
    \   multimedia authoring tools.  Authentication and monitoring\n   facilities\
    \ are required.\n   General multimedia information services include on-line\n\
    \   documentation, campus-wide information systems, and other systems\n   which\
    \ don't conveniently fall into the preceding categories.\n   Hyperlinking is perhaps\
    \ the most common requirement in this area.\n   The analysis of these application\
    \ areas allows a number of\n   important user requirements to be identified:\n\
    \      o    Support for the Apple Macintosh, UNIX and PC/MS Windows\n        \
    \   environments.\n      o    Support for a wide range of media types - text,\
    \ image,\n           graphics and application-specific media being most\n    \
    \       important, followed by video and sound.\n      o    Support for hyperlinking,\
    \ and for multiple access structures\n           to be built on the same underlying\
    \ data.\n      o    Support for sophisticated synchronisation and presentation\n\
    \           facilities.\n      o    Support for a range of database searching\
    \ techniques.\n      o    Support for user annotation of information, and for\
    \ user-\n           controlled display of sequenced media.\n      o    Adequate\
    \ responsiveness - the maximum time taken to retrieve\n           a node should\
    \ not exceed 20s.\n      o    Support for user authentication, a charging mechanism,\
    \ and\n           monitoring facilities.\n      o    The ability to execute scripts.\n\
    \      o    Support for mail-based access to multimedia documents, and\n     \
    \      (where appropriate) for printing multimedia documents.\n      o    Powerful,\
    \ easy-to-use authoring tools.\n   Existing Systems\n   The main information retrieval\
    \ systems in use on the Internet are\n   Gopher, Wais, and the World-Wide Web.\
    \  All work on a client-server\n   paradigm, and all provide some degree of support\
    \ for multimedia data.\n   Gopher presents the user with a hierarchical arrangement\
    \ of nodes\n   which are either directories (menus), leaf nodes (documents\n \
    \  containing text or other media types), or search nodes (allowing some\n   set\
    \ of documents to be searched using keywords, possibly using WAIS).\n   A range\
    \ of media types is supported.  Extensions currently being\n   developed for Gopher\
    \ (Gopher+) provide better support for multimedia\n   data.  Gopher has a very\
    \ high penetration (there are over 1000 Gopher\n   servers on the Internet), but\
    \ it does not provide hyperlinks and is\n   inflexibly hierarchical.\n   Wais\
    \ (Wide Area Information Server) allows users to search for\n   documents in remote\
    \ databases.  Full-text indexing of the databases\n   allows all documents containing\
    \ particular (combinations of) words to\n   be identified and retrieved.  Non-text\
    \ data (principally image data)\n   can be handled, but indexing such documents\
    \ is only performed on the\n   document file name, severely limiting its usefulness.\
    \  However, WAIS\n   is ideally suited to text search applications.\n   World-Wide\
    \ Web (WWW) is a large-scale distributed hypermedia system.\n   The Web consists\
    \ of nodes (also called documents) and links.  Links\n   are connections between\
    \ documents: to follow a link, the user clicks\n   on a highlighted word in the\
    \ source document, which causes the\n   linkedto document to be retrieved and\
    \ displayed.  A document can be\n   one of a variety of media types, or it can\
    \ be a search node in a\n   similar sense to Gopher.  The WWW addressing method\
    \ means that WAIS\n   and Gopher servers may also be accessed from (indeed, form\
    \ part of)\n   the Web.  WWW has a smaller penetration than Gopher, but is growing\n\
    \   faster.  The Web technology is currently being revised to take better\n  \
    \ account of the needs of multimedia information.\n   These systems all go some\
    \ way to meet the user requirements.\n      o    Support for multiple platforms\
    \ and for a wide range of media\n           types (through \"viewer\" software\
    \ external to the client\n           program) is good.\n      o    Only WWW has\
    \ hyperlinks.\n      o    There is little or no support for sophisticated presentation\n\
    \           and synchronisation requirements.\n      o    Support for database\
    \ querying tends to be limited to\n           \"keyword\" searches, but current\
    \ developments in Gopher and\n           WWW should make more sophisticated queries\
    \ possible.\n      o    Some clients support user annotation of documents.\n \
    \     o    Response times for all three systems vary substantially\n         \
    \  depending on the network distance between client and server,\n           and\
    \ there is no support for isochronous data transfer.\n      o    There is little\
    \ in the way of authentication, charging and\n           monitoring facilities,\
    \ although these are planned for WWW.\n      o    Scripting is not supported because\
    \ of security issues\n      o    WWW supports a mail responder.\n      o    The\
    \ only system sufficiently complex to warrant an authoring\n           tool is\
    \ WWW, which has editors to support its hypertext\n           markup language.\n\
    \   Research\n   There are a number of research projects which are of significant\n\
    \   interest.\n   Hyper-G is an ambitious distributed hypermedia research project\
    \ at\n   the University of Graz.  It combines concepts of hypermedia,\n   information\
    \ retrieval systems and documentation systems with aspects\n   of communication\
    \ and collaboration, and computer-supported teaching\n   and learning.  Automatic\
    \ generation of hyperlinks is supported, and\n   there is a concept of generic\
    \ structures which can exist in parallel\n   with the hyperlink structure.  Hyper-G\
    \ is based on UNIX, and is in\n   use as a CWIS at Graz.  Gateways between Hyper-G\
    \ and WWW exist.\n   Microcosm is a PC-based hypermedia system developed at the\
    \ University\n   of Southampton.  It can be viewed as an integrating hypermedia\n\
    \   framework - a layer on top of a range of existing applications which\n   enables\
    \ relationships between different documents to be established.\n   Hyperlinks\
    \ are maintained separately from the data.  Networking\n   support for Microcosm\
    \ is currently under development, as are versions\n   of Microcosm for the Apple\
    \ Macintosh and for UNIX.  Microcosm is\n   currently being \"commercialised\"\
    .\n   AthenaMuse 2 is an ambitious distributed hypermedia authoring and\n   presentation\
    \ system under development by a university/industry\n   consortium based at MIT.\
    \  It will have good facilities for\n   presentation and synchronisation of multimedia\
    \ data, strong authoring\n   support, and will include support for networking\
    \ isochronous data. It\n   will be a commercial product.  Initial versions will\
    \ support UNIX and\n   X windows, with a PC/MS Windows version following.  Apple\
    \ Macintosh\n   support has lower priority.\n   The \"Xanadu\" project is designing\
    \ and building an \"open, social\n   hypermedia\" distributed environment, but\
    \ shows no sign of delivering\n   anything after several years of work.\n   The\
    \ European Commission sponsors a number of peripherally relevant\n   projects\
    \ through its Esprit and RACE research programmes.  These\n   programmes tend\
    \ to be oriented towards commercial markets, and are\n   thus not directly relevant.\
    \  An exception is the Esprit IDOMENEUS\n   project, which brings together workers\
    \ in the database, information\n   retrieval and multimedia fields.  It is recommended\
    \ that RARE\n   establish a liaison with this project.\n   There are a variety\
    \ of other academic and commercial research\n   projects which are also of interest.\
    \  None of them are as directly\n   relevant as those outlined above.\n   Standards\n\
    \   There are a number of existing and emerging standards for structuring\n  \
    \ hypermedia applications.  Of these, the most important are SGML,\n   HyTime,\
    \ MHEG, ODA, PREMO and Acrobat.  All bar the last are de jure\n   standards, while\
    \ Acrobat is a commercial product which is being\n   proposed as a de facto standard.\n\
    \   SGML (Standard Generalized Markup Language) is a markup language for\n   delimiting\
    \ the logical and semantic content of text documents.\n   Because of its flexibility,\
    \ it has become an important tool in\n   hypermedia systems.  HyTime is an ISO\
    \ standardised infrastructure for\n   representing integrated, open hypermedia\
    \ documents, and is based on\n   SGML.  HyTime has great expressive power, but\
    \ is not optimised for\n   run-time efficiency.  It is recommended that future\
    \ RARE work on\n   networked hypermedia should take account of the importance\
    \ of SGML\n   and HyTime.\n   MHEG (Multimedia and Hypermedia information coding\
    \ Experts Group) is\n   a draft ISO standard for representing hypermedia applications\
    \ in a\n   platform-independent form.  It uses an object-oriented approach, and\n\
    \   is optimised for run-time efficiency.  Full IS status for MHEG is\n   expected\
    \ in 1994.  It is recommended that RARE keep a watching brief\n   on MHEG.\n \
    \  The ODA (Open Document Architecture) standard is being enhanced to\n   incorporate\
    \ multimedia and hypermedia features.  However, interest in\n   ODA is perceived\
    \ to be decreasing, and it is recommended that ODA\n   should not form a basis\
    \ for further RARE work in networked\n   hypermedia.\n   PREMO is a new work item\
    \ in the ISO graphics standardisation\n   community, which appears to overlap\
    \ with MHEG and HyTime.  It is not\n   clear that the PREMO work, which is at\
    \ a very early stage, is\n   worthwhile in view of the existence of those standards.\n\
    \   Acrobat PDF is a format for representing multimedia (printable)\n   documents\
    \ in a portable, revisable form.  It is based on Postscript,\n   and is being\
    \ proposed by Adobe Inc (originators of Postscript) as an\n   industry standard.\
    \  RARE should maintain awareness of this technology\n   in view of its potential\
    \ impact on multimedia information systems.\n   There are various standards which\
    \ have relevance to the way\n   multimedia data is accessed across the network.\
    \  Many of these have\n   been described in a previous report [1].  Two further\
    \ access\n   protocols are the proposed multimedia extensions to SQL, and the\n\
    \   Document Filing and Retrieval protocol.  Neither of these are likely\n   to\
    \ have major significance for networked multimedia information\n   systems.\n\
    \   Other standards of importance include:\n      o    MIME, a multimedia email\
    \ standard which defines a range of\n           media types and encoding methods\
    \ for those types which are\n           useful in a wider context.\n      o  \
    \  AVIs (Audio-Visual Interactive services) and the associated\n           multimedia\
    \ scripting language SMSL, which form a\n           standardisation initiative\
    \ within CCITT (now ITU-TSS) to\n           specify interactive multimedia services\
    \ which can be\n           provided across telephone/ISDN networks.\n   There\
    \ are two important trade associations which are involved in\n   standardisation\
    \ work.  The Interactive Multimedia Association (IMA)\n   has a Compatibility\
    \ Project which is developing a specification for\n   platform-independent interactive\
    \ multimedia systems, including\n   networking aspects.  A newly-formed group,\
    \ the Multimedia\n   Communications Forum (MMCF), plans to provide input to the\
    \ standards\n   bodies.  It is recommended that RARE become an Observing Member\
    \ of\n   the MMCF.  A third trade association - the Multimedia Communications\n\
    \   Community of Interest - has also just been formed.\n   Future Directions\n\
    \   Three common design approaches emerge from the variety of systems and\n  \
    \ standards analysed in this report.  They can be described in terms of\n   distinctions\
    \ between different aspects of the system:\n      o    content is distinct from\
    \ hyperstructure\n      o    media type is distinct from media encoding\n    \
    \  o    data is distinct from protocol\n   Distributed hypermedia systems are\
    \ emerging from the\n   research/development phase into the experimental deployment\
    \ phase.\n   However, the existing global information systems (Gopher, WAIS and\n\
    \   WWW) are still largely limited to the use of external viewers for\n   nontextual\
    \ data.  The most significant mismatches between the\n   capabilities of currently-deployed\
    \ systems and user requirements are\n   in the areas of presentation and quality\
    \ of service (i.e.,\n   responsiveness).\n   Improving QOS is significantly more\
    \ difficult than improving\n   presentation capabilities, but there are a number\
    \ of possible ways in\n   which this could be addressed.  Improving feedback to\
    \ the user,\n   greater multi-threading of applications, pre-fetching, caching,\
    \ the\n   use of alternative \"views\" of a node, and the use of isochronous data\n\
    \   streams are all avenues which are worth exploring.\n   In order to address\
    \ these problems, it is recommended that RARE seek\n   to adapt and enhance existing\
    \ tools, rather than develop new ones.\n   In particular, it is recommended that\
    \ RARE select the World-Wide Web\n   to concentrate its efforts on.  The reasons\
    \ for this choice revolve\n   around the flexibility of the WWW design, the availability\
    \ of\n   hyperlinks, the existing effort which is already going into\n   multimedia\
    \ support in WWW, the fact that it is an integrating\n   solution incorporating\
    \ both WAIS and Gopher support, and its high\n   rate of growth compared to Gopher\
    \ (despite Gopher's wider\n   deployment).  Gopher is the main competitor to WWW,\
    \ but its\n   inflexibly hierarchical structure and the absence of hyperlinks\
    \ make\n   it difficult to use for highly-interactive multimedia applications.\n\
    \   It is recommended that RARE should invite proposals for and\n   subsequently\
    \ commission work to:\n      o    Develop conversion tools from commercial multimedia\n\
    \           authoring packages to WWW, and accompanying authoring\n          \
    \ guidelines.\n      o    Implement and evaluate the most promising ways of overcoming\n\
    \           the QOS problem.\n      o    Implement a specific user project using\
    \ these tools, to\n           validate that the facilities being developed are\
    \ truly\n           relevant to real applications.\n      o    Use the experience\
    \ gained to inform and influence the\n           development of the WWW technology.\n\
    \      o    Contribute to the development of PC/MS Windows and Apple\n       \
    \    Macintosh WWW clients, particularly in the multimedia data\n           handling\
    \ area.\n   It is noted that the rapid growth of WWW may in the future lead to\n\
    \   problems through the implementation of multiple, uncoordinated and\n   mutually\
    \ incompatible add-on features.  To guard against this trend,\n   it may be appropriate\
    \ for RARE, in coordination with CERN and other\n   interested parties such as\
    \ NCSA, to:\n      o    Encourage the formation of a consortium to coordinate\
    \ WWW\n           technical development.\n"
- title: 1. Introduction
  contents:
  - '1. Introduction

    '
- title: 1.1. Background
  contents:
  - "1.1. Background\n   This study was inspired by the realisation that while some\
    \ aspects of\n   distributed multimedia technology are being actively introduced\
    \ into\n   the European research community (for instance, audiovisual\n   conferencing,\
    \ through the MICE project), other aspects are receiving\n   less attention. \
    \ In particular, one category in which there seems to\n   be relatively little\
    \ activity is providing solutions to ease remote\n   access to multimedia resources\
    \ (for instance, accessing stored\n   audio/video clips or images, or indeed entire\
    \ multimedia\n   applications, across the network).  Few commercial products address\n\
    \   this, and the relevance of existing standards in this area is\n   unclear.\n\
    \   Of the 50 or so research projects documented in the recent RARE\n   distributed\
    \ multimedia survey [1], only about six have a direct\n   relevance to this application\
    \ area.  Where stated in the survey, the\n   main research effort in these projects\
    \ is often directed towards the\n   \"difficult\" problems, such as the transfer\
    \ of isochronous data and\n   the design and implementation of object-oriented\
    \ multimedia\n   databases, rather than towards user-oriented issues.\n   This\
    \ report is concerned with practical issues in the intersection of\n   networked\
    \ information retrieval, database and multimedia\n   technologies.  It aims to\
    \ establish actual user requirements in this\n   area, to look at existing systems\
    \ which offer partial solutions, and\n   to identify what additional work needs\
    \ to be done to satisfy the most\n   pressing requirements.\n"
- title: 1.2. Terminology
  contents:
  - "1.2. Terminology\n   In order to discuss multimedia information systems, we need\
    \ a\n   consistent terminology.  The vocabulary defined below embodies some\n\
    \   of the concepts of the Dexter hypertext reference model [2].  This\n   model\
    \ is sufficiently general to be useful for describing most of the\n   facilities\
    \ and requirements of the multimedia information systems\n   described in this\
    \ report.  (However, the Dexter model does not\n   describe searchable index objects\
    \ - it is not a database reference\n   model.)\n    anchor             An identified\
    \ portion of a node.  E.g., in a text\n                       node, an anchor\
    \ might be a string of one or more\n                       adjacent characters,\
    \ while in an image node it\n                       might be a rectangular area\
    \ of the image.\n    composite node     A node containing data of multiple media\
    \ types.\n    document           Often used loosely as a synonym for node.\n \
    \   hyperdocument      We refer to a collection of related nodes,\n          \
    \             linked internally with hyperlinks, as a\n                      \
    \ \"hyperdocument\".  Examples are a database of\n                       medical\
    \ images and associated text; a module\n                       from a suite of\
    \ teaching material; or an article\n                       in a scientific journal.\
    \  A hyperdocument may\n                       contain hyperlinks to other data\
    \ which exists in\n                       internally with hyperlinks, as a\n \
    \                      \"hyperdocument\". Examples are a other\n             \
    \          hyperdocuments, but can be viewed as largely\n                    \
    \   self-contained.  It is a highlevel \"unit of\n                       authoring\"\
    , but is not necessarily perceived as\n                       a distinct unit\
    \ by a reader (although it may be\n                       so perceived, particularly\
    \ if it contains few\n                       hyperlinks to outside entities).\n\
    \    hyperlink          Set of one or more source anchors and one or\n       \
    \                more target anchors.  Also known simply as a\n              \
    \         \"link\".\n    isochronous (adjective) Describes a continuous flow of\
    \ data which\n                       is required to be delivered by the network\
    \ under\n                       critical time constraints.\n    leaf node    \
    \      A node which contains no source anchors.\n    media type         An attribute\
    \ of data which describes the general\n                       nature of its expected\
    \ presentation.  The value\n                       of this attribute could be\
    \ one of the following\n                       (not exhaustive) list:\n      \
    \                 o Text\n                       o Sound\n                   \
    \    o Image (e.g., a \"photograph\")\n                       o Graphics (e.g.,\
    \ a \"drawing\")\n                       o Animation (i.e., moving graphics)\n\
    \                       o Movie (i.e., moving image)\n    monomedia (adjective)\
    \   Said of data which is all of the same media\n                       type.\n\
    \    multimedia (adjective)  Said of data which contains different media\n   \
    \                    types.  This definition is stricter than general\n      \
    \                 usage, where \"multimedia\" is often  used as a\n          \
    \             generic term for non-textual data, and where it\n              \
    \         may even be used as a noun.\n    physical media     Magnetic or optical\
    \ storage.  Not to be confused\n                       with media type!\n    [simple]\
    \ node      A monomedia object which may be retrieved and\n                  \
    \     displayed as a single unit.\n    source anchor      An anchor which may\
    \ be \"actioned\" by the user,\n                       causing the node(s) containing\
    \ the target\n                       anchor(s) in the same hyperlink to be retrieved\n\
    \                       and displayed.  This process is called\n             \
    \          \"traversing the link\".\n    target anchor      an anchor forming\
    \ part of a hyperlink, whose\n                       containing node is retrieved\
    \ and displayed when\n                       the hyperlink is traversed.\n"
- title: 2. User Requirements
  contents:
  - "2. User Requirements\n   User requirements in an area such as networking, which\
    \ is subject to\n   rapid technological change, are sometimes difficult to identify.\
    \  To\n   an extent, technology leads applications, and users will exploit what\n\
    \   is possible.\n"
- title: 2.1. Applications
  contents:
  - "2.1. Applications\n   Awareness of the range of networked multimedia applications\
    \ which are\n   currently being envisaged by computer users in the academic and\n\
    \   research community leads to a better understanding of the technical\n   requirements.\
    \  This section outlines some projects which require\n   remote access to multimedia\
    \ information across research networks, and\n   which are currently either at\
    \ a preliminary stage or underway.  The\n   projects are divided into broad categories\
    \ according to their\n   characteristics.\n   Multimedia Databases\n   Here are\
    \ several examples of multimedia projects which have a\n   \"database\" character.\n\
    \   The Peirce Telecommunity Project\n      This project centres on the construction\
    \ of a multimedia (text and\n      image) database of the works of the American\
    \ philosopher Peirce,\n      together with tools to process the data and to make\
    \ it available\n      over the Internet.  A sub-project at Brown University focuses\
    \ on\n      adapting existing client/server network tools for this purpose.\n\
    \      The requirements for network access include facilities for\n      structured\
    \ viewing, intelligent retrieval, navigation, linking,\n      and annotation,\
    \ as well as for domainspecific processing.\n   Museum Object Databases\n    \
    \  The RAMA (Remote Access to Museum Archives) project is funded\n      under\
    \ the EEC RACE II programme.  Its objective is to develop a\n      system which\
    \ allows museums to make multimedia information about\n      their exhibits and\
    \ archived material available over an ISDN\n      network.  The requirements capture\
    \ and technical architecture\n      design phases are now complete, and a prototype\
    \ system will be\n      delivered in June 1993 to link the Ashmolean Museum (Oxford,\
    \ GB),\n      the Musee d'Orsay (Paris, FR) and the Museum Archeological\n   \
    \   National (Madrid, ES).  Image data is the main media type of\n      interest,\
    \ although video and sound may also play a part.\n   The Bristol Biomedical Videodisk\
    \ Project\n      The Bristol Biomedical Videodisc is a collection of Medical,\n\
    \      Veterinary and Dental images.  The collection holds some 24,000\n     \
    \ still images and is continuously growing.  Textual information\n      regarding\
    \ the images is included as part of the database and this\n      can be searched\
    \ on any keyword, number or other data type, or a\n      combination of any of\
    \ these.  The images are currently delivered\n      in analogue form on a videodisc,\
    \ but many institutions are unable\n      to afford the cost of videodisc players.\
    \  Investigations into\n      making this image and text database available across\
    \ the network\n      are underway.\n   ArchiGopher\n      ArchiGopher is a Gopher\
    \ server at the College of Architecture,\n      University of Michigan, dedicated\
    \ to the dissemination of\n      architectural knowledge.  Presently in its infancy,\
    \ ArchiGopher is\n      intended to become a multimedia resource for all architecture\n\
    \      faculty and students world-wide.  Some of the available or planned\n  \
    \    resources are:\n            o The College's image bank.\n            o The\
    \ CAD group's collection of computer models (already\n              started).\n\
    \            o The Doctoral Program's recent dissertation proposals and\n    \
    \          abstracts.\n            o Example archive of Kandinsky paintings.\n\
    \            o Images of 3D CAD projects.\n      The principal media type in ArchiGopher\
    \ is image.  Files are\n      stored in both TIFF and GIF format.\n   Vatican\
    \ Library Exhibit\n      In January 1993, the US Library of Congress mounted an\
    \ electronic\n      version of the exhibition ROME REBORN:  THE VATICAN LIBRARY\
    \ AND\n      RENAISSANCE CULTURE.  The exhibition was subsequently processed by\n\
    \      the University of Virginia Library. The text files were broken\n      into\
    \ individual captions associated directly with each image and a\n      WAIS-searchable\
    \ version of the object index generated.  This has\n      been made available\
    \ on Gopher by the University of Virginia\n      Library.\n      This project\
    \ is particularly interesting, as it demonstrates some\n      limitations of the\
    \ Gopher system.  The principal media types are\n      image and text, and it\
    \ is difficult to associate a caption with\n      its image - each must be fetched\
    \ separately, and using the XMosaic\n      or xgopher client software it is not\
    \ possible to tell which menu\n      entry is the image and which the caption.\
    \ (This may be a\n      consequence of how the data has been configured for the\
    \ Gopher\n      server; if so, a requirement for better publishing tools may be\n\
    \      indicated.)  Furthermore, searching the object index will result\n    \
    \  in a Gopher menu containing references to catalogue entries for\n      relevant\
    \ exhibits, but not to the online images of the exhibits\n      themselves, which\
    \ severely limits the usefulness of the index.\n      It is interesting to note\
    \ that during the preparation of this\n      report, the Vatican Exhibition has\
    \ been mounted on the WorldWide\n      Web (WWW).  The hypermedia presentation\
    \ on the Web is very much\n      more attractive to use than the Gopher version.\n\
    \   Jukebox\n      Jukebox is a project supported by the EEC libraries program.\
    \  The\n      project aims to evaluate a pilot service providing library users\n\
    \      with on-line access to a database of digital sound recordings.\n      The\
    \ database will support multi-user access and use suitable\n      storage media\
    \ to make available sound recordings in a compressed\n      format.  Users will\
    \ access the service with a personal computer\n      connected to a telematic\
    \ network.\n   Scientific Publishing\n   There are several refereed electronic\
    \ academic journals presently\n   distributed on the Internet.  These tend to\
    \ be text-only journals,\n   and have not really addressed the issues of delivering\
    \ and\n   manipulating non-text data.\n   Many scientific publishers have plans\
    \ for electronic publishing of\n   existing academic journals and conference proceedings,\
    \ either on\n   physical media or on the network.  The Journal of Biological\n\
    \   Chemistry is now published on CD-ROM, for instance.  Some publishers\n   view\
    \ CD-ROM as an interim step to the ultimate goal of making\n   journals available\
    \ on-line on the Internet.\n   The main types of non-text data which are envisaged\
    \ are:\n      o    Images.  In many cases, image data (a microphotograph, say)\n\
    \           is central to an article.  Software which recognises that\n      \
    \     the text may be of secondary importance to the image is\n           required.\n\
    \      o    Application-specific data.  The ChemLab and MoleculeLab\n        \
    \   applications are widely used, and the integration of\n           corresponding\
    \ data types with journal articles will enhance\n           readers' ability to\
    \ visualise molecular structures.\n           Similarly, mathematics appearing\
    \ in scientific papers could\n           be represented in a form suitable for\
    \ processing by\n           applications such as Mathematica.  Mathematical content\n\
    \           could then become a much more interactive and dynamic aspect\n   \
    \        of research publications.\n      o    Tabular data.  The ability for\
    \ a reader to extract tabular\n           data from a research paper, to produce\
    \ a graphical\n           representation, to subset the data, and to further process\n\
    \           it in a number of different ways, is viewed as an essential\n    \
    \       part of scientific electronic publishing.\n      o    Movies.  The American\
    \ Astronomical Society regularly\n           publishes videos to go with its academic\
    \ journals.\n           Electronic publishing can improve on this \"hard copy\"\
    \n           publishing by integrating video data much more closely with\n   \
    \        the source article.\n      o    Sound.  There is perhaps slightly less\
    \ demand for audio\n           information in scientific publishing, but the requirement\n\
    \           does exist in particular specialities (such as acoustics and\n   \
    \        zoology journals).\n   Access to academic journals using at least four\
    \ different paradigms\n   is envisaged.  Hierarchical access, perhaps using a\
    \ traditional\n   journal/volume/issue/article model, is perhaps the most obvious.\n\
    \   Keyword searching (or full-text indexing) will be required.  Browsing\n  \
    \ is another useful and often underestimated access model - to support\n   browsing\
    \ it is essential that \"eye-catching\" data (unlikely to be\n   textual) is prominently\
    \ accessible. The final method of access is\n   perhaps the most important - the\
    \ use of interactive viewing tools.\n   Such tools would enable navigation of\
    \ hypermedia links within and\n   between articles, with gateways to special-purpose\
    \ applications as\n   described above.  The use of these disparate access methods\
    \ implies\n   more than one structure being applied to the same underlying data.\n\
    \   Standards, particularly SGML, are becoming important to publishers,\n   and\
    \ it is clear that the SGML-based HyTime standard will be a front\n   runner in\
    \ providing the kind of hypermedia facilities which are being\n   envisaged. \
    \ However, progress towards a common SGML Document Type\n   Definition (DTD) for\
    \ scientific articles, even within individual\n   publishing houses and for text-only\
    \ documents, is slow.\n   A specific initiative involving interested parties will\
    \ be required\n   to formalise detailed requirements and to pilot standards in\
    \ this\n   area.  A preliminary demonstrator project, funded by publishers and\n\
    \   by the British Library Research and Development Department, involves\n   making\
    \ about 30 sample scientific articles available over the\n   SuperJANET network,\
    \ using a range of different software products. The\n   demonstrator project is\
    \ being managed by IOP Publishing and is being\n   carried out at Edinburgh University\
    \ Computing Service.\n   Existing tools, particularly WAIS and WWW, are relevant,\
    \ but adequate\n   security and charging mechanisms are required if commercial\n\
    \   publishers are to use them.  Many research groups are now making the\n   text\
    \ of preprints and published research papers available on Gopher\n   servers.\n\
    \   It is interesting to note that the proceedings of the Multimedia 93\n   conference\
    \ run by the ACM will be published electronically (on CD\n   ROM), using a multimedia\
    \ document format designed specifically for\n   the event.\n   Computer-aided\
    \ Learning\n   The ready availability of user-friendly multimedia authoring tools\n\
    \   such as AuthorWare Professional, Asymmetrix Multimedia Toolbook,\n   Macromind\
    \ Director and many more, has stimulated much interest in\n   multimedia for computer-aided\
    \ learning applications within the user\n   community.  Sophisticated interactive\
    \ multimedia courseware\n   applications are being developed in many disparate\
    \ subjects\n   throughout the European academic community.  Users are now beginning\n\
    \   to ask network technologists, \"how can I make my multimedia\n   application\
    \ available to others across the network?\".\n   There is considerable interest\
    \ in using the network to enhance\n   delivery of multimedia teaching materials\
    \ - for instance to allow\n   students to take courses remotely (distance learning)\
    \ and for their\n   learning process to be supported, monitored and assessed remotely.\n\
    \   The requirements which flow from this type of network application\n   include\
    \ the ability to identify and authenticate the students using\n   the material,\
    \ to monitor their progress, and to supply on-line\n   assessment exercises for\
    \ the student to complete.  Multimedia\n   authoring tools allow very attractive\
    \ presentation environments to be\n   created, which encourages learning; this\
    \ is viewed as essential by\n   course developers.  Easy-to-use authoring tools\
    \ (preferably existing\n   commercial ones) are also essential.\n   Finally, some\
    \ learning applications involve simulations - examples\n   include meteorological\
    \ modelling and economic simulations.  Network\n   delivery of teaching materials\
    \ should cope with this requirement\n   (perhaps by acknowledging that executable\
    \ scripts are just another\n   media type).\n   General Information Services\n\
    \   There are many other possible uses of multimedia data in networked\n   information\
    \ servers which don't conveniently fall into any of the\n   above categories.\
    \ Some examples are given below.\n      o    On-line documentation.  Manuals and\
    \ instruction books often\n           rely heavily on pictorial information, and\
    \ are enhanced by\n           dynamic media types (sound, video).  The ability\
    \ to access\n           centrally-held manuals across a network makes it much\
    \ easier\n           to keep the information up-to-date.\n      o    Campus-wide\
    \ information systems (CWIS) are an important\n           growth area.  The opportunities\
    \ for enhancing such a\n           service with multimedia data (e.g., maps) is\
    \ obvious.\n      o    Multimedia news bulletins (e.g., the Internet Talk Radio,\n\
    \           which is sound only).\n      o    Product information (the multimedia\
    \ equivalent of paper\n           advertising matter).\n      o    Consumer systems\
    \ - e.g., tourist information servers.  The\n           utility of such systems\
    \ in an academic/research environment\n           is perhaps questionable, but\
    \ it is likely that such systems\n           will address problems which will\
    \ also be met in this\n           environment.  We should be prepared to learn\
    \ from such\n           projects.\n"
- title: 2.2. Data Characteristics
  contents:
  - "2.2. Data Characteristics\n   Some of the characteristics which make data more\
    \ appropriate for\n   network publication rather than publication on physical\
    \ media are\n   listed below.\n      o    The data may change frequently.\n  \
    \    o    Implementing corrections and improvements to the data is\n         \
    \  very much easier.\n      o    It is more readily available to the data user\
    \ - no\n           purchase/delivery cycle need exist.\n      o    Publication\
    \ on physical media may not be cost-effective for\n           very large volumes\
    \ of data.  (Of course, there is a cost in\n           networking the data as\
    \ well, but the research/academic user\n           is normally insulated from\
    \ this.)\n      o    Access for large user communities can be established without\n\
    \           requiring each user to purchase a potentially expensive\n        \
    \   physical media peripheral (such as a laser disk player).\n           This\
    \ is particularly helpful in classroom situations.\n      o    It may require\
    \ less effort from the data publisher to make\n           data available over\
    \ a network, rather than set up a manual\n           mechanism for distributing\
    \ physical media.\n      o    If related data from many different sources is to\
    \ be\n           published, it may be more efficient to leave the data in\n  \
    \         situ, and simply publish the network addresses of the data.\n   There\
    \ are counter-reasons which may make physical media distribution\n   more appropriate:\n\
    \      o    Easier to charge for.  (However, charging mechanisms do\n        \
    \   exist in some network information systems.  It may be that\n           potential\
    \ information providers need to be made more aware\n           of this.)\n   \
    \   o    Easier to deter or prevent copyright infringement, using\n          \
    \ traditional copy-protection techniques.\n"
- title: 2.3. Requirements Definition
  contents:
  - "2.3. Requirements Definition\n   From studying the applications described in\
    \ the preceding section,\n   and from discussions with the people involved with\
    \ the applications,\n   it is possible to draw up a list of general requirements\
    \ which a\n   distributed multimedia information system for the academic and\n\
    \   research community should satisfy.  These requirements are informally\n  \
    \ described in the following subsections.  The descriptions are\n   necessarily\
    \ informal and incomplete: every individual application\n   will have its own\
    \ detailed requirements, which would take a great\n   deal of effort to determine\
    \ (and indeed some of the requirements may\n   not become apparent until the application\
    \ is into its development\n   phase).\n   Platforms\n   It is clear that the European\
    \ academic community, in common with\n   other such communities, requires support\
    \ for three main platforms:\n   UNIX, Apple Macintosh, and PC/Windows.  For multimedia\
    \ client/server\n   systems, the latter two are less appropriate as server platforms,\
    \ but\n   client support for all three is vital.  UNIX will be most often used\n\
    \   as the server platform.\n   There are other systems, such as VAX/VMS, which\
    \ are also important in\n   some sectors.\n   Media Types\n   Unsurprisingly,\
    \ all applications require text data to be supported as\n   a basic media type.\
    \  Image and graphic media types are next in\n   importance, followed by \"application-specific\"\
    \ data (such as tabular\n   scientific data, mathematical equations, chemical\
    \ data types, etc).\n   Sound and video media types are becoming more important\
    \ as users\n   discover how these can enhance applications.\n   Many different\
    \ encodings are possible for each media type (e.g.,\n   image data can be encoded\
    \ as TIFF, PCX, GIF, PICT and many more).  An\n   information system should not\
    \ constrain the type of encoding used,\n   and should ideally offer either a range\
    \ of alternative encodings, or\n   conversion facilities between the stored encoding\
    \ and an encoding\n   suitable for display by the client workstation.\n   Hyperlinks\n\
    \   It is clear that many applications require their users to be able to\n   navigate\
    \ through the information base according to relationships\n   determined by the\
    \ information provider - in other words, hyperlinks.\n   Academic publishing,\
    \ CAL, on-line documentation and CWIS systems all\n   require this capability.\
    \  The user should be able, by some action\n   such as clicking on a highlighted\
    \ word in a text node or on a button,\n   to cause another node or nodes to be\
    \ retrieved and displayed.\n   Some \"hypermedia\" systems are in fact simply\
    \ hypertext, in that they\n   require the source anchor of a hyperlink to be in\
    \ a text node.  A\n   true hypermedia system allows hyperlinks to have their source\
    \ anchors\n   in nodes of any media type.  This allows a user to click the mouse\
    \ on\n   a component of a diagram or on part of a video sequence to cause one\n\
    \   or more related nodes to be retrieved and displayed.\n   Some hypermedia systems\
    \ allow target anchors of a hyperlinks to be\n   finer-grained than a whole node\
    \ - e.g., the target anchor could be a\n   word or a paragraph within a text document.\
    \  Without such a\n   capability, it is necessary for target nodes to be quite\
    \ small if\n   precision is required in a hyperlink.  This may be difficult to\n\
    \   manage, and fine-grained target anchors are therefore better.\n   Additional\
    \ structure above or orthogonal to the underlying\n   hyperlinked data is required\
    \ in some applications.  This allows the\n   same (generally non-textual) data\
    \ to be used in several different\n   applications, or the implementation of different\
    \ access paradigms.\n   Presentation\n   Related information of different media\
    \ types must be capable of\n   synchronised display.  Commercial multimedia authoring\
    \ packages\n   provide many different ways of presenting, synchronising and\n\
    \   interacting with media elements.  Some of these are summarised below.\n  \
    \    o    Backdrops.  An application may present all its visual\n           information\
    \ against a single background bitmap - e.g.,\n           a CAL application might\
    \ use a background image of an open\n           textbook, with graphics, text\
    \ and video data all presented\n           on the open pages of the book.\n  \
    \    o    Buttons.  A \"button\" can be defined as an explicitly-\n          \
    \ delimited area of the display, within which a mouse click\n           will cause\
    \ an action to occur.  Typically, the action will\n           be (or can be modelled\
    \ as) a hyperlink traversal.\n           Applications use different styles of\
    \ button - some may use\n           \"tabs\" as in a notebook, or perhaps \"bookmarks\"\
    \ in\n           conjunction with the open textbook backdrop mentioned above.\n\
    \           Others may use plain buttons in a style conforming to the\n      \
    \     conventions of the host platform, or may simply highlight a\n          \
    \ word or phrase in a text display to indicate it is \"active\".\n      o    Synchronisation\
    \ in space.  When two or more nodes are\n           presented together (e.g.,\
    \ because a link with more than one\n           target anchor has been traversed),\
    \ the author of the\n           hyperdocument may wish to specify that they be\
    \ presented in\n           a spatially-related way.  This may involve: x/y\n \
    \          synchronisation - e.g., a video node being displayed\n           immediately\
    \ above its text caption; it may involve\n           contextual synchronisation\
    \ - e.g., an image being displayed in\n           a specific location within a\
    \ text node; or it may involve z-\n           axis synchronisation as well - for\
    \ instance a text node\n           containing a simple title being displayed on\
    \ top of an\n           image, with the text background being transparent so that\n\
    \           the image shows through.\n      o    Synchronisation in time.  Isochronous\
    \ data may require\n           synchronisation - the obvious case being audio\
    \ and video\n           tracks (where these are held separately).  Other examples\n\
    \           are: the synchronisation of an automatically-scrolling text\n    \
    \       panel to a video clip (for subtitling); or to an audio clip\n        \
    \   (e.g., a translation); or synchronising an animation to an\n           explanatory\
    \ audio track.\n   Searching\n   Database-type applications require varying degrees\
    \ of sophistication\n   in retrieval techniques.  For applications addressed in\
    \ this report,\n   non-text nodes form the major data of interest.  Such nodes\
    \ have\n   associated descriptions, which may be plain text, or may be\n   structured\
    \ into fields.  Users need to be able to search the\n   descriptions, obtain a\
    \ list of \"hits\", and select nodes from that\n   list to display.  Searching\
    \ requirements vary from simple keyword\n   searching, via full-text indexing\
    \ (with or without Boolean\n   combinations of search words), to full SQL-style\
    \ database retrieval\n   languages.\n   Interaction\n   The user must be able\
    \ to annotate documents retrieved from the\n   information server.  The annotations\
    \ may be stored locally.\n   Similarly, the user may wish to add his own (locally-held)\
    \ hyperlinks\n   to documents.  (Actual modification of documents in the information\n\
    \   system itself, or shared annotations to documents - i.e., the\n   information\
    \ system as a CSCW environment - is viewed as separate\n   issue which this report\
    \ does not address.)\n   If an information provider has included contact details\
    \ (such as a\n   mail address) in a document, it should be possible for the reader\
    \ to\n   invoke a program (such as a mailer) which initiates communication\n \
    \  with the author.\n   In some applications, it may make sense for a user to\
    \ be able to\n   specify a region of interest in an image or movie clip, and to\n\
    \   request a more detailed view of (or other information about) that\n   region.\n\
    \   Some applications require a sequence of images to be presented under\n   control\
    \ of the user.  For instance, a three-dimensional microscopic\n   structure could\
    \ be represented as a sequence of images taken with the\n   microscope focused\
    \ on a different plane for each image.  For display,\n   the user could control\
    \ which image was displayed using some kind of\n   slider control, giving the\
    \ illusion of focusing a microscope.  (This\n   particular example has been taken\
    \ from the Theseus project at John\n   Moore's University, Liverpool, GB.)\n \
    \  Quality of Service\n   Research has shown [3] that user toleration of delay\
    \ in computer\n   systems depends on user perception of the nature of the requested\n\
    \   action.  If the user believes that no computation is required,\n   tolerable\
    \ delays are of the order of 0.2s.  If the user believes the\n   action he or\
    \ she has requested the computer to perform is \"difficult\"\n   - for instance\
    \ a computation of some form - then a tolerable delay is\n   of the order of 2s.\
    \  Users tend to give up waiting for a response\n   after about 20s.  Networked\
    \ multimedia information systems must be\n   able to provide this level of responsiveness.\n\
    \   Management\n   In order to support applications involving real-money information\n\
    \   services (e.g., academic publishing) and learning/assessment\n   applications,\
    \ there must be a reliable and secure access control\n   mechanism.  A simple\
    \ password is unlikely to suffice - Kerberos\n   authentication procedures are\
    \ a possibility.\n   Users must be able to determine the charge for an item before\n\
    \   retrieving it (assuming that pay-per-item will be a common paradigm\n   alternatives\
    \ such as pay-per-call, pay-per-duration are also\n   possible).  Access records\
    \ must be kept by the information server for\n   charging purposes.\n   Learning\
    \ applications have similar requirements, except that the\n   purpose here is\
    \ not to charge for information retrieved, but to\n   monitor and perhaps assess\
    \ a student's progress.\n   Scripting\n   Many authoring packages provide scripting\
    \ languages.  In most cases,\n   these languages are used to manage the presentation\
    \ environment and\n   control navigation within the hypermedia document.  There\
    \ are other,\n   declarative rather than procedural, methods for achieving this,\
    \ so\n   scripting of this type is not necessarily a requirement.  However,\n\
    \   some application areas require executable scripts for other purposes\n   (e.g.,\
    \ simulations in CAL applications).  Care in providing such a\n   facility is\
    \ required, because of the potential for abuse (the\n   possibility of \"trojan\"\
    \ scripts).  However, there is work going on to\n   produce \"safe\" scripting\
    \ languages - an example is \"safe tcl\", being\n   developed by Borenstein and\
    \ Ousterhout (contact\n   ouster@cs.berkeley.edu).\n   Bytestream Format\n   For\
    \ the easy transfer and handling of a hyperdocument, it must be\n   capable of\
    \ being encoded into a bytestream form, in such a way that\n   the structure of\
    \ the document is preserved and it can be decoded\n   without loss of information.\n\
    \   This facility makes it possible for such documents to be supplied to\n   a\
    \ user over electronic mail, in such a way that he or she can browse\n   them\
    \ at his or her own site.  This may be appropriate where the user\n   does not\
    \ have a direct connection to the Internet.  It will also be\n   useful for printing\
    \ the hyperdocument.\n   Authoring\n   It is essential that a multimedia information\
    \ system should have\n   adequate authoring tools which make it easy to prepare\
    \ and publish\n   hypermedia information.  Such tools need similar power to existing\n\
    \   commercial multimedia authoring software for stand-alone multimedia\n   applications.\n"
- title: 3. Existing Systems
  contents:
  - "3. Existing Systems\n   This chapter describes some existing distributed information\
    \ systems\n   in sufficient detail to reveal how they handle multimedia data,\
    \ and\n   analyses how well they meet the requirements outlined in the\n   preceding\
    \ chapter.\n"
- title: 3.1. Gopher
  contents:
  - "3.1. Gopher\n   The Internet Gopher is a distributed document delivery service.\
    \  It\n   allows a neophyte user to access various types of data residing on\n\
    \   multiple hosts in a seamless fashion.  This is accomplished by\n   presenting\
    \ the user with a hierarchical arrangement of nodes and by\n   using a client-server\
    \ communications model.  The Gopher server\n   accepts simple queries, and responds\
    \ by sending the client a node\n   (usually called a document in this context).\n\
    \   Client software is available for a large number of systems,\n   including:\n\
    \        o UNIX (character terminals)\n        o X windows\n        o Apple Macintosh\n\
    \        o MS DOS\n        o NeXT\n        o VM/CMS\n        o VMS\n        o\
    \ OS/2\n        o MVS/XA\n   Servers are available for systems such as:\n    \
    \    o UNIX\n        o VMS\n        o Apple Macintosh\n        o VM/CMS\n    \
    \    o MVS\n        o MS DOS\n   Gopher was developed at the University of Minnesota.\n\
    \   Gopher User Image\n   A Gopher client offers an interface into \"gopherspace\"\
    , which appears\n   to the user as a hierarchy of menus and document nodes, similar\
    \ in\n   some ways to a file system hierarchy of directories and files.\n   Selecting\
    \ an entry from a menu node causes a further menu to appear,\n   or causes a document\
    \ to be retrieved and displayed.\n   As well as \"ordinary\" document nodes, Gopher\
    \ has \"search nodes\" when\n   one of these is selected from a menu, the user\
    \ is prompted for one or\n   more words to search on.  The result of the search\
    \ is a \"virtual\"\n   menu, containing entries for document nodes (within some\
    \ subset of\n   gopherspace) which match the search.  A special type of Gopher\
    \ search\n   server called \"veronica\" provides access to a database of all\n\
    \   directory nodes in gopherspace.  This allows a user to construct a\n   virtual\
    \ menu of all Gopher menu items containing a particular word.\n   WAIS databases\
    \ may also be located at Gopher search nodes, since some\n   Gopher servers understand\
    \ the format of WAIS index files.\n   Gopher Protocol\n   Gopher uses a client-server\
    \ paradigm.  The Gopher protocol runs over\n   a reliable data stream service,\
    \ typically TCP, and is fully defined\n   in RFC 1436.  The following paragraphs\
    \ give an overview which is\n   sufficient for understanding how multimedia data\
    \ is handled in\n   Gopher.\n   A Gopher client opens a TCP connection to a Gopher\
    \ server (defined by\n   machine name and TCP port number), and sends a line of\
    \ text known as\n   the \"selector\" to request information from the server. \
    \ The server\n   responds with a block of data, and then closes the connection.\
    \  No\n   state is retained by the server.  A null (empty) selector tells the\n\
    \   Gopher server to return its \"root\" menu node, containing pointers to\n \
    \  other information in gopherspace.\n   A menu is returned from a Gopher server\
    \ as a sequence of lines of\n   text, each corresponding to one entry in the menu.\
    \  Each line (which\n   is sometimes called a \"Gopher reference\") contains the\
    \ following\n   data, which can be used by the client software to retrieve and\n\
    \   display the corresponding node in gopherspace.\n      o    A single character\
    \ which identifies the type of the node.\n           Possible values of this type\
    \ ID are given below.\n      o    A human-readable string which is used by the\
    \ client software\n           when it displays the menu entry to the user.\n \
    \     o    The selector which should be used by client software to\n         \
    \  retrieve the node.  It is treated as opaque by the client\n           software.\n\
    \      o    The domain name of the host on which the node is held.\n      o  \
    \  The port number to use for the TCP connection.\n   A document node is sent\
    \ by a Gopher server simply as lines of text\n   terminated by a dot on a line\
    \ by itself, or as raw binary data, with\n   the end of the data indicated by\
    \ the server closing the TCP\n   connection.  The choice depends on the type of\
    \ node.\n   The currently-defined type IDs are as follows:\n        0       Node\
    \ is a file.\n        1       Node is a directory.\n        2       Node is a\
    \ CSO phone book server.\n        3       Error.\n        4       Node is a BinHexed\
    \ Macintosh file.\n        5       Node is DOS binary archive of some sort.\n\
    \        6       Node is a UNIX uuencoded file.\n        7       Node is a search\
    \ server.\n        8       Node points to a text-based telnet session.\n     \
    \   9       Node is a binary file.\n        T       Node points to a TN3270 connection.\n\
    \   Some experimental IDs are also in use:\n        s       Node contains -law\
    \ sound data.\n        g       Node contains GIF data.\n        M       Node contains\
    \ MIME data.\n        h       Node contains HTML data.\n        I       Node contains\
    \ image data of some kind.\n        i       In-line text type.\n   The process\
    \ for defining new data types and corresponding IDs is not\n   clear.\n   Gopher+\
    \ Protocol\n   The Gopher+ protocol is an extension of the Gopher protocol.  Gopher+\n\
    \   is defined informally in [4].  It is designed to be downwards\n   compatible\
    \ with the original protocol, so that old Gopher clients may\n   access Gopher+\
    \ servers (without being able to take advantage of the\n   new facilities), and\
    \ Gopher+ clients may access old Gopher servers.\n   Gopher+ is still at the experimental\
    \ stage, and is liable to change.\n   The most important new feature is the introduction\
    \ of \"attributes\"\n   associated with individual nodes.  The client may retrieve\
    \ the\n   attributes of a node instead of the node contents.  Attributes\n   defined\
    \ so far include:\n    INFO               Contains the Gopher reference of the\
    \ node.\n                       Mandatory.\n    ADMIN              Contains administrative\
    \ information, including\n                       the mail address of the server\
    \ administrator and\n                       the last-modified date of the node.\
    \  Mandatory.\n    VIEWS              Contains a list of one or more \"view\n\
    \                       descriptors\", each of which describes an\n          \
    \             alternate view of the node.  For instance, an\n                \
    \       image node may contain a TIFF view, a GIF view,\n                    \
    \   a JPEG view, etc.  The client software (or the\n                       user)\
    \ may choose which view to retrieve.  The\n                       size of the\
    \ view is also (optionally) available\n                       in this attribute.\
    \  The Gopher+ Attribute\n                       Registry (see below) defines\
    \ the permitted view\n                       types.\n    ABSTRACT           This\
    \ attribute contains a short description of\n                       the item.\
    \  It may also include a Gopher\n                       reference to a longer\
    \ abstract, held in a\n                       separate Gopher node.\n    ASK \
    \               This attribute is used for the interactive query\n           \
    \            extension. The interactive query facility in\n                  \
    \     Gopher+ is used to obtain information from a\n                       user\
    \ before retrieving the contents of a node.\n                       The client\
    \ fetches the ASK attribute, which\n                       contains a list of\
    \ questions for the user. His\n                       or her responses to those\
    \ questions are sent\n                       along with the selector to the server,\
    \ which\n                       then returns the contents of the node.  This\n\
    \                       facility could be used as a very simple way of\n     \
    \                  querying a database, for instance.  Using the\n           \
    \            interactive query facility to supply a password\n               \
    \        for access control purposes is not a good idea -\n                  \
    \     there are too many opportunities for\n                       masquerading.\n\
    \   The University of Minnesota maintains a registry of Gopher+ attribute\n  \
    \ types.  For the VIEWS attribute, the registry contains a list of\n   permitted\
    \ view types.  Note that these view types have a similar\n   function to the type\
    \ identifier described in the preceding section.\n   The general format of a Gopher+\
    \ view descriptor is:\n      xxx/yyy zzz: <nnnK>\n   where xxx is a general type-of-information\
    \ advisory, yyy is what\n   information format you need understand to interpret\
    \ this information,\n   zzz is a language advisory (coded using POSIX definitions),\
    \ and nnn\n   is the approximate size in bytes.  Possible values for xxx include\n\
    \   text, file, image, audio, video, terminal.\n   (It now appears that the University\
    \ of Minnesota Gopher Team accepts\n   the need to be consistent in the use of\
    \ type/encoding attributes with\n   the MIME specification.  The Gopher+ Type\
    \ Registry may thus\n   eventually disappear, together with the set of xxx/yyy\
    \ values it\n   currently contains.)\n   No view descriptors for directory nodes\
    \ are currently registered.\n   In order to make use of the information available\
    \ in attributes, it\n   is necessary to fetch the attributes before fetching the\
    \ contents of\n   a node.  Gopher+ provides a way of fetching the attributes for\
    \ each\n   entry in a menu at the same time as the menu is retrieved.  This\n\
    \   saves having to establish two successive TCP connections to fetch a\n   single\
    \ document, at the expense of some additional client software\n   complexity.\n\
    \   Gopher Publishing\n   The procedure for making data available using the Unix\
    \ Gopher server\n   \"gopherd\" is very straightforward.  The hierarchical nature\
    \ of the\n   Unix file system closely matches the Gopher concept of menus and\n\
    \   documents.  The gopherd program exploits this - Unix directories are\n   represented\
    \ as Gopher menu nodes, and Unix files as Gopher document\n   nodes.  The names\
    \ of directories and files are the entries in Gopher\n   menus.  This can lead\
    \ to awkward file names containing spaces, so\n   gopherd provides an aliasing\
    \ mechanism (the \\.cap directory) to get\n   round this.\n   To represent menu\
    \ entries pointing to Gopher nodes on other servers,\n   special \"link\" files\
    \ (starting with a dot) are used.\n   The type ID for a document node is determined\
    \ from the extension of\n   its Unix filename.  If a client requests a file containing\
    \ a shell\n   script, the script is executed and the output returned to the client.\n\
    \   The Gopher+ version of gopherd is similar, but the .cap directory is\n   replaced\
    \ by a configuration file gopherd.conf.  This file is used to\n   specify administration\
    \ attributes, and the mapping between filename\n   extensions and view descriptors.\
    \  Some limited access control (based\n   on the client's IP address/domain name)\
    \ is also provided by the\n   Gopher+ version of gopherd.\n   Published Non-text\
    \ Data\n   There is already some useful non-text data published on Gopher almost\n\
    \   exclusively image data.  See for example the Vatican Library\n   Exhibition\
    \ at the University of Virginia Library, the ArchiGopher at\n   the University\
    \ of Michigan, the weather machine at the University of\n   Illinois.  Some of\
    \ these are described in the User Requirements\n   chapter of this report.\n \
    \  There seem to be rather fewer sound archives in gopherspace, but\n   interested\
    \ users may access the Edinburgh University Computing\n   Service Gopher server\
    \ on gopher.ed.ac.uk, where the Testing Area\n   contains 20 or 30 short audio\
    \ files in Sun audio format.  Note - the\n   availability of this archive is not\
    \ guaranteed.\n   Advantages\n   The main factor in favour of Gopher is its widespread\
    \ penetration.\n   There are over 1000 Gopher servers world-wide.  This popularity\
    \ is\n   due in part to the ease of setting up a Gopher server and making\n  \
    \ information available on it, particularly on a Unix platform.\n   Limitations\n\
    \   It is unfortunate that the relatively well-defined MIME types were\n   not\
    \ adopted in Gopher+.  As mentioned above, this may yet happen,\n   although there\
    \ appear to be reasons for keeping the set of MIME types\n   small whereas Gopher\
    \ requires a wide range of types to offer to\n   clients.  The latest word is\
    \ that the MIME registry will be expanded\n   to include the types which the Gopher+\
    \ developers want.\n   Gopher is inflexibly hierarchical in nature.  Hypertext\
    \ or hypermedia\n   it is not - links to other nodes from within document nodes\
    \ are not\n   possible.  There is a suggestion in the Gopher+ specification that\n\
    \   alternate views of directory nodes could be used to provide some kind\n  \
    \ of hypermedia capability, but this does not yet exist, and it is\n   unlikely\
    \ that it could be made to work as easily as the WWW hypertext\n   model.\n  \
    \ There is no access control at the user level - anyone can retrieve\n   anything\
    \ on a Gopher server.  There is no provision for charging for\n   information.\n"
- title: 3.2. Wide Area Information Server
  contents:
  - "3.2. Wide Area Information Server\n   The Wide Area Information Server (WAIS)\
    \ system allows users to search\n   for and retrieve information from databases\
    \ anywhere on the Internet.\n   WAIS uses a client-server paradigm, and client\
    \ and server software is\n   available for a wide range of platforms.  Client\
    \ applications are\n   able to retrieve text or other media documents stored on\
    \ the servers,\n   by specifying keywords.  The server software searches a full-text\n\
    \   index of the documents, and returns a list of documents containing\n   the\
    \ keywords (ranked according to a heuristic algorithm).  The client\n   may then\
    \ request the server to send a copy of any of the documents\n   found.  Relevant\
    \ documents can be fed back to a server to refine the\n   search.  Successful\
    \ searches can be automatically re-run, to alert\n   the user when new information\
    \ becomes available.\n   WAIS was developed by Thinking Machines Corporation of\
    \ Cambridge,\n   Massachusetts, in collaboration with Apple Computer Inc., Dow\
    \ Jones\n   and company, and KPMG Peat Marwick.  The WAIS software has been made\n\
    \   freely available; however Thinking Machines has announced that they\n   will\
    \ stop support for their publicly-distributed WAIS as of version\n   8b5.1.  Future\
    \ support and development of the publicly-distributed\n   WAIS has been taken\
    \ over by CNIDR (Clearinghouse for Networked\n   Information Discovery and Retrieval)\
    \ in the USA.  Future CNIDR\n   releases will be called FreeWAIS.  A new company,\
    \ WAIS Inc, has been\n   formed by Thinking Machines to take over commercial exploitation\
    \ of\n   the Thinking Machines WAIS software.\n   WAIS server software is available\
    \ for the following platforms:\n        o       UNIX\n        o       VAX/VMS\n\
    \   Client software is available for the following platforms:\n        o     \
    \  UNIX (versions for X, Motif, Open Look, Sun View)\n        o       NeXT\n \
    \       o       Macintosh\n        o       MS DOS\n        o       MS Windows\n\
    \        o       VAX/VMS\n   There are currently over 400 WAIS databases available\
    \ on the\n   Internet.  WAIS is also the basis of some commercial information\n\
    \   services on private networks.\n   WAIS User Image\n   In order to ask a question,\
    \ the user must first select one or more\n   databases in which to look for the\
    \ answer.  (The list of all\n   available databases is available from a number\
    \ of well-known sites.)\n   The next step is to enter one or more keywords as\
    \ the basis of the\n   search.  The search will return a list of documents (the\
    \ \"result\n   set\") which contain any of the keywords.  Each document is given\
    \ a\n   ranking (a number between 1 and 1000) which indicates how relevant to\n\
    \   the user's question the server believes the document to be.  The size\n  \
    \ of each document is also shown in the list.  The user may limit the\n   size\
    \ of the result set - the default limit is typically 40 documents.\n   The user\
    \ may then choose to retrieve and display one or more\n   documents from the list.\
    \  Alternatively, he or she may designate one\n   or more documents in the list\
    \ as \"relevant\", and perform another\n   search to find \"more documents like\
    \ this\".  This is called \"relevance\n   feedback\".\n   The user may retrieve\
    \ general information about the database, and may\n   examine the catalogue of\
    \ all documents in the database.  There is\n   also a \"database of databases\"\
    , which may be searched to identify\n   WAIS databases which may be relevant to\
    \ a subject.\n   WAIS Protocol\n   The user interface (client) talks to the server\
    \ using an extended\n   version of a standard ANSI protocol called Z39.50.  This\
    \ is now\n   aligned with the ISO SR (Search and Retrieval) protocol for\n   bibliographic\
    \ (library) applications, which is part of OSI.  The\n   present WAIS protocol\
    \ does not utilise a full OSI stack - APDUs are\n   transferred directly over\
    \ a TCP/IP connection.  The WAIS protocol is\n   described in [5].\n   WAIS does\
    \ not, at this time, implement the full Z39.50-1992\n   specification - in particular,\
    \ WAIS does not permit Boolean searches\n   (e.g., \"find all documents containing\
    \ 'chalk' and 'cheese' but not\n   'green'\").  However, Boolean search capability\
    \ is being added to the\n   FreeWAIS implementation.  There are facilities in\
    \ the Z39.50 protocol\n   for access control and charging, but these are not currently\n\
    \   implemented in WAIS.\n   The WAIS extensions to Z39.50 are mainly to provide\
    \ the relevance\n   feedback capability.\n   Note that the Z39.50 protocol is\
    \ not stateless - the result set may\n   in some circumstances be retained by\
    \ the server for the user to\n   further refine or refer to.  However, the subset\
    \ of Z39.50 used by\n   current WAIS implementations mean that server implementations\
    \ may be\n   stateless.\n   Document type is determined by the server from information\
    \ in the\n   database index (see below), and is sent to the client as part of\
    \ the\n   result set.\n   WAIS Publishing\n   The first step in preparing data\
    \ for publishing in a WAIS database is\n   to use the 'waisindex' utility.  This\
    \ takes a set of text files, and\n   produces an index file which contains an\
    \ occurrence list of words of\n   three or more letters in every file.  This index\
    \ file is used by the\n   WAIS server software to resolve search requests from\
    \ clients.\n   The 'waisindex' utility indexes files in a wide range of text\n\
    \   formats, as well as postscript and image files in various encodings\n   (only\
    \ the file name is indexed for image files).  Some of the text\n   formats involve\
    \ a file as being treated as a collection of documents\n   for the purposes of\
    \ WAIS access.  Note that there appears to be no\n   formal \"registry of types\"\
    \ - just whatever the waisindex program\n   supports.  There is no distinction\
    \ between media type and encoding\n   format.\n   Published Non-text Data\n  \
    \ There is relatively little non-text data available in WAIS databases.\n    \
    \  o    URL=wais://quake.think.com:210/CM-images is a database of\n          \
    \ TIFF images from the Connection Machine.\n      o    URL=wais://mpcc3.rpms.ac.uk:210/home/images/pathology/RPMS-\n\
    \           pathology is a database of histo-pathological images and\n       \
    \    documentation on mammalian endocrine tissue.\n      o    URL=wais://starhawk.jpl.nasa.gov:210/pio\
    \ contains GIF images\n           from NASA planetary probe missions, together\
    \ with their\n           captions.  The presence of the caption index information\n\
    \           makes it difficult to construct a search which returns\n         \
    \  images in the result set increasing the maximum result set\n           size\
    \ may help.\n   Advantages\n   WAIS is ideally suited for its intended purpose\
    \ of searching\n   databases of textual information on the basis of keywords.\
    \  It\n   appears to have the potential to satisfy the requirements of some of\n\
    \   the \"database\" category of applications mentioned in Chapter 1.\n   Limitations\n\
    \   WAIS is not (and does not pretend to be) a general-purpose\n   information\
    \ system, as Gopher and WWW are.  WAIS does not have\n   hyperlinking, and offers\
    \ a purely flat structure.\n   A limitation which is particularly apparent is\
    \ the way that the\n   current version of FreeWAIS indexes non-text files - using\
    \ only the\n   filename!  However, it does seem that simply changing the indexing\n\
    \   program to allow a list of keywords to be attached to non-text files\n   would\
    \ suffice to allow sensible indexing of non-text data.  The\n   commercial (WAIS\
    \ Inc) version of WAIS allows several files to be\n   associated together for\
    \ indexing and retrieval purposes.\n   Furthermode, the UCSF Centre for Knowlege\
    \ Management is modifying the\n   FreeWAIS code to support the indexing of multiple\
    \ content types.  The\n   document returned by WAIS will be an HTML document containing\n\
    \   pointers to the multimedia data.  Contact dcmartin@library.ucsf.edu\n   for\
    \ further information.\n   WAIS is not a fully-featured query/response protocol\
    \ such as SQL.  It\n   has no concept of fields, or numeric data types.\n   It\
    \ appears to be impossible to retrieve a document from its catalogue\n   entry\
    \ in many of the existing databases.\n"
- title: 3.3. World-Wide Web
  contents:
  - "3.3. World-Wide Web\n   The World-Wide Web project (also known as WWW or W3),\
    \ started and\n   driven by CERN, is a large-scale distributed hypertext system.\
    \  It\n   uses the standard client-server paradigm, with client \"browser\"\n\
    \   software responsible for fetching and displaying data.  Originally\n   aimed\
    \ at the High Energy Physics community, it has spread to other\n   areas.\n  \
    \ Browser software is available for a large number of systems\n   including:\n\
    \        o       Line-mode dumb terminal.\n        o       Terminal with Curses\
    \ support\n        o       Macintosh\n        o       X/Motif\n        o     \
    \  X11\n        o       PC/MS Windows\n        o       NeXT\n   There is server\
    \ software available for:\n        o       VM mainframes.\n        o       UNIX\n\
    \        o       Macintosh\n        o       VMS\n   WWW User Image\n   The WWW\
    \ world consists of nodes (usually called documents) and links.\n   Links are\
    \ connections between documents: to follow a link, a reader\n   clicks with a\
    \ mouse on a word in the source document, which causes\n   the linked-to document\
    \ to be retrieved and displayed.  (On systems\n   without a mouse, the user types\
    \ a number instead.)\n   Indexes are special documents which, rather than being\
    \ read, may be\n   searched.  To search an index, a reader supplies keywords (or\
    \ other\n   search criteria).  The result of a search is a \"virtual\" document\n\
    \   containing links to the documents found.  All documents, whether\n   real,\
    \ virtual or indexes, look similar to the reader.\n   The WWW addressing mechanism\
    \ means that an interface to Gopher and\n   anonymous FTP information sources\
    \ may be established, in a way which\n   is transparent to the user.  Thus, the\
    \ whole of gopherspace is part\n   of the Web.  Transparent gateways to other\
    \ systems, including Hyper-G\n   and WAIS, are also available.\n   URL\n   All\
    \ nodes on the Web are addressed using the \"Universal [or Uniform]\n   Resource\
    \ Locator\" (URL) syntax, defined in [6].  This is an Internet\n   Draft produced\
    \ by the IETF URL Working Group.\n   A URL is a name for an object (which may\
    \ be a document or an index)\n   on the Internet.  It has the general form:\n\
    \      <scheme> : <path> [ # <anchorid> ]\n   The <scheme> identifies an access\
    \ protocol or method for the object.\n   Some of the schemes are HTTP (the native\
    \ WWW protocol), anonymous\n   FTP, Andrew file system, news, WAIS, Gopher.  The\
    \ <path> component\n   locates the document in a way significant for the access\
    \ method.\n   Thus for instance for anonymous FTP, the path includes the fully\n\
    \   qualified domain name of the host on which the document resides, and\n   the\
    \ directory and file name under which it may be found.  For some\n   schemes,\
    \ the <path> may include a search string (or combination of\n   strings) which\
    \ is used to address a \"virtual\" object formed by\n   searching an index of\
    \ some kind.  The HTTP, WAIS and Gopher schemes\n   can use search strings, which\
    \ usually follow the rest of the path,\n   separated from it by a ?.\n   The optional\
    \ <anchorid> is used for addressing within an object.  Its\n   interpretation\
    \ is not defined in the URL specification.\n   \"Partial\" URLs may be specified.\
    \  These are used within a document on\n   the Web to refer to another \"nearby\"\
    \ document - for instance to a\n   document in another file on the same machine.\
    \  Certain parts of the\n   URL (e.g., the scheme and machine name) may be omitted,\
    \ according to\n   well-defined rules.  This makes it much easier to move groups\
    \ of\n   documents around, while maintaining the links within and between\n  \
    \ them.\n   A URL locates one and only one object on the Internet.  However, more\n\
    \   than one URL may point to the same object.  Given two URLs, it is not\n  \
    \ in general possible to determine whether they refer to the same\n   object.\
    \  Furthermore, there is no guarantee that a single URL will\n   refer to the\
    \ same object at different times (the object may change\n   incrementally, or\
    \ it may be completely replaced with something\n   different, or it may indeed\
    \ be removed).\n   HTTP\n   HTTP (HyperText Transfer Protocol) is the protocol\
    \ employed between\n   server and client.  It is defined in [7].  The protocol\
    \ is currently\n   being revised (see the Future Developments section below),\
    \ and will\n   eventually be proposed as an Internet standard.\n   The original\
    \ protocol is extremely simple, and requires only a\n   reliable connection-oriented\
    \ transport service, typically TCP/IP.\n   The client establishes a connection\
    \ with the server, and sends a\n   request containing the word GET, a space, and\
    \ the partial URL of the\n   node to be retrieved, terminated by CR LF.  The server\
    \ responds with\n   the node contents, comprising a text document in the Hypertext\
    \ Markup\n   Language (HTML).  The end of the contents is indicated by the server\n\
    \   closing the connection.\n   HTML\n   HTML (HyperText Markup Language) is the\
    \ way in which text documents\n   must be structured if they are to contain links\
    \ to other documents.\n   Non-HTML text documents may of course be made available\
    \ on the Web,\n   but they may not contain links to other documents (i.e., they\
    \ are\n   leaf nodes), and they will be displayed by browsers without\n   formatting,\
    \ probably using a fixed-width font.  Like HTTP, HTML is\n   also undergoing enhancement,\
    \ but the original version is defined in\n   [7], and is being submitted as an\
    \ Internet draft.\n   HTML is an application of SGML (Standard Generalized Markup\n\
    \   Language).  It defines a range of useful tags for indicating a node\n   title,\
    \ paragraph boundaries, headings of several different levels,\n   highlighting,\
    \ lists, etc.  Anchors are represented using an <A> tag.\n   For instance, here\
    \ is an example of HTML containing an anchor:\n   The HTTP protocol implements\
    \ the WWW <A NAME=13\n   HREF=\"../../Administration/DataModel.html\">data model</A>\
    \ .\n   The location of the anchor is the text \"data model\".  It is a source\n\
    \   anchor, with a target given by the URL in the HREF attribute, so the\n   text\
    \ would appear highlighted in some way in a client's window, to\n   indicate that\
    \ clicking on it would cause a hyperlink to be traversed.\n   It is also a target\
    \ anchor, with an anchor ID given by the NAME\n   attribute.  A source anchor\
    \ referring to this target would specify\n   #13 at the end of the node's URL.\
    \  Traversing a hyperlink to this\n   node would cause the entire node to be retrieved,\
    \ but the target\n   anchor text would be displayed in some emphasised way - for\
    \ instance\n   if the retrieved text is displayed in a scrolling window, it might\
    \ be\n   positioned such that the target anchor appears at the top of the\n  \
    \ window.\n   Another attribute of the <A> element, TYPE, is also available, which\n\
    \   is intended to describe the nature of the relationship modelled by\n   the\
    \ link.  However, this is not in extensive use, and there appears\n   to be no\
    \ registry of the possible values of such types.\n   Future Developments\n   HTTP\
    \ and HTML are currently being extended in a backward-compatible\n   way to add\
    \ multimedia facilities.  [8] describes the HTTP2 protocol.\n   The revised HTML\
    \ is defined in [9].  Both documents are subject to\n   change (and indeed the\
    \ HTML2 specification has changed substantially\n   during the preparation of\
    \ this report).\n   The revised HTML contains many enhancements which are useful\
    \ for\n   multimedia support.  Some of the most relevant are listed below.\n \
    \     o    \"Universal Resource Numbers\" are a proposed system for\n        \
    \   unique, timeless identifiers of network-accessible files\n           presently\
    \ being designed by IETF Working Groups.  URNs must\n           be distinguished\
    \ from URLs, which contain information\n           sufficient to locate the document.\
    \ URNs may be allocated to\n           nodes and may be represented in source\
    \ anchors.  This saves\n           client software from retrieving a copy of something\
    \ it\n           already has - allowing sensible caching of large video\n    \
    \       clips, for instance.  The disadvantage is that when\n           something\
    \ is changed and given a new URN, the source anchors\n           of all links\
    \ which point to it must be changed (and the URNs\n           of these documents\
    \ must therefore be changed, and so on).\n           Therefore, it makes sense\
    \ to allocate URNs only to very\n           large documents which change rarely,\
    \ and not to the\n           documents which reference them.\n      o    The title\
    \ of a destination document may be included as\n           anattribute of a source\
    \ anchor.  This allows a client to\n           display the title to the user before\
    \ or during retrieval,\n           and also allows data which does not itself\
    \ contain a title\n           (e.g., image data) to be given one.\n      o   \
    \ There is provision for in-line non-text data (e.g., images,\n           video,\
    \ graphics, mathematical equations), which appears in\n           the samewindow\
    \ as the main textual material in the node.\n      o    The concept of the relationship\
    \ expressed by a hyperlink is\n           expanded.  Both source and target anchors\
    \ may contain\n           relation attributes which point forwards and backwards\n\
    \           respectively. Possible relationships include \"is an index\n     \
    \      for\", \"is a glossary for\", \"annotates\", \"is a reply to\", \"is\n\
    \           embedded in\", \"is presented with\".  The last two are useful\n \
    \          for multimedia - for instance, the \"embed\" relationship\n       \
    \    could cause a retrieved image to be fetched and embedded in\n           the\
    \ display of a text node, and the \"present\" relationship\n           could cause\
    \ a sound clip to be automatically retrieved and\n           presented along with\
    \ a text node.\n   The HTTP2 protocol maintains the same stateless\n   connect/request/response/close\
    \ procedure as the current HTTP\n   protocol.  Data is transferred in MIME-shaped\
    \ messages, allowing all\n   MIME data formats (including HTML) to be used.  As\
    \ well as the GET\n   operation, HTTP2 has operations such as:\n    HEAD     \
    \          Fetch attribute information about a node\n                       (including\
    \ the media type and encoding)\n    CHECKOUT/CHECKIN/PUT/POST\n              \
    \         These allow nodes to be checked out for updating\n                 \
    \      and checked back in again, and new nodes to be\n                      \
    \ created.  New node data is supplied in MIME\n                       shape with\
    \ the request.\n   The request from the client can contain a list of formats which\
    \ the\n   client is prepared to accept, user identification, authorisation\n \
    \  information (a placeholder at present), an account name to charge any\n   costs\
    \ to, and identification of the source anchor of the hyperlink\n   through which\
    \ the node was accessed.\n   The response from the server may contain a range\
    \ of useful attributes\n   (e.g., date, cost, length - but only for non-text data).\
    \  The server\n   may redirect the query, indicating a new URL to use instead.\
    \  It may\n   also refuse the request because of authorisation failure or absence\n\
    \   of a charge account in the request.\n   The protocol also contains a mechanism\
    \ which is designed to allow the\n   server to make an intelligent decision about\
    \ the most appropriate\n   format in which to return data, based on information\
    \ supplied in the\n   request by the client.  This may for instance allow a powerful\
    \ server\n   to store the uncompressed bitmap of an image, but to compress it\
    \ on\n   request using an appropriate encoding, according to the decoding\n  \
    \ capabilities announced by the client.\n   An HTTP2 server and client are currently\
    \ under test.  Some HTML2\n   features are already fitted to the XMosaic browser.\n\
    \   Mosaic\n   The Mosaic project, located at the US National Centre for\n   Supercomputing\
    \ Applications (NCSA) at the University of Illinois, is\n   developing a networked\
    \ information system intended for wide-area\n   distributed asynchronous collaboration\
    \ and hypermedia-based\n   information discovery and retrieval.  Mosaic, which\
    \ is specifically\n   oriented towards scientific research workers, has adopted\
    \ the World\n   Wide Web as the core of the system, and the first Mosaic software\
    \ to\n   appear was the XMosaic WWW client for UNIX with X.  Other clients of\n\
    \   similar functionality are under development for the Apple Macintosh\n   and\
    \ the PC with Windows.\n   The capabilities of the XMosaic browser include:\n\
    \      o    Support for NCSA's Data Management Facility (DMF) for\n          \
    \ scientific data.\n      o    Support for transferring data with other NCSA tools\
    \ such\n           asCollage, using NCSA's Data Transfer Mechanism (DTM).\n  \
    \    o    The ability to \"check out\" documents for revision, and to\n      \
    \     check them back in again.\n      o    Local and remote annotation of Web\
    \ documents.\n   Future planned functionality includes:\n      o    In-line non-text\
    \ data (in addition to images).\n      o    Information space graphical representation\
    \ and control.\n      o    Hypermedia document editing.\n      o    Information\
    \ filtering.\n   NCSA intends to make the entire Mosaic system publicly available\
    \ and\n   distributable.\n   The XMosaic browser was used extensively for finding\
    \ and retrieving\n   information used to prepare this report.\n   Web Publishing\n\
    \   Making a web is as simple as writing a few SGML files which point to\n   your\
    \ existing data. Making it public involves running the FTP or HTTP\n   daemon,\
    \ and making at least one link into your web from another. In\n   fact,  any file\
    \ available by anonymous FTP can be immediately linked\n   into a web. The very\
    \ small start-up effort is designed to allow small\n   contributions.\n   At the\
    \ other end of the scale, large information providers may\n   provide an HTTP\
    \ server with full text or keyword indexing. This may\n   allow access to a large\
    \ existing database without changing the way\n   that database is managed. Such\
    \ gateways have already been made into\n   Digital's VMS/Help, Technical University\
    \ of Graz's \"Hyper-G\", and\n   Thinking Machine's WAIS systems.\n   There are\
    \ a few editors which understand HTML - for instance on UNIX\n   and on the NeXT\
    \ platform.\n   Published non-text data\n   See the multimedia demo node on:\n\
    \   http://hoohoo.ncsa.uiuc.edu:80/mosaic-docs/multimedia.html\n   This contains\
    \ links to images, sound, movies and postscript media\n   types.  The media type\
    \ is determined by the filename extension in the\n   URL specification of the\
    \ target node.  The (XMosaic) client uses this\n   to invoke a separate program\
    \ appropriate for displaying the media\n   type, or in some cases it can be displayed\
    \ embedded within the source\n   document.  The latter method uses an <IMG> tag,\
    \ which is part of\n   HTML2.\n   Advantages\n   WWW is a hypertext system and\
    \ its underlying technology is thus\n   richer than Gopher.  The use of SGML,\
    \ which is of increasing\n   importance in hypermedia systems, allows a great\
    \ deal of\n   expressiveness and structure, and enables text to be presented in\
    \ an\n   attractive way.  The facilities for multimedia data in the extended\n\
    \   versions of HTTP and HTML are excellent.  It also seems that QOS and\n   management\
    \ issues identified in Chapter 2 are to some degree catered\n   for in these extensions.\n\
    \   Limitations\n   There is no indication in the source anchor of the media type\
    \ of the\n   destination node, or of its size (this has been ruled out on the\n\
    \   argument that the information is likely to degrade with time).  It is\n  \
    \ necessary to perform a HEAD request (in HTTP2) to deduce this.\n   Link source\
    \ anchors must be in text documents, so non-text nodes must\n   be leaf nodes.\
    \  However, with HTML2 using the <IMG> tag, an embedded\n   bitmap may be used\
    \ as a source anchor, and the position of the mouse\n   click within the image\
    \ is passed to the server, which can then choose\n   to return a different document\
    \ depending on where in the image the\n   mouse was clicked.\n   WWW is much less\
    \ prevalent than Gopher, partly because of an\n   (erroneous?) perception that\
    \ setting up an HTTP server is more\n   complex than setting up a Gopher server.\
    \  There are only about 60\n   servers world-wide; however the growth in the use\
    \ of WWW is much\n   faster than the growth in the use of Gopher.  The availability\
    \ of\n   sophisticated WWW clients such as XMosaic is fuelling this growth.\n"
- title: 3.4. Evaluating Existing Tools
  contents:
  - "3.4. Evaluating Existing Tools\n   This section compares the capabilities of\
    \ the Gopher, WAIS and\n   WorldWide Web systems (abbreviated as GWW) to the informal\n\
    \   requirements defined in section 2.3.\n   Platforms\n   The table below gives\
    \ the names of the most important client software\n   for each of GWW on the three\
    \ most important platforms of interest.\n   WWW is the weakest, with clients for\
    \ the Macintosh and the PC still\n   under development.  The main PC Gopher client\
    \ is \"PC Gopher III\",\n   which is a DOS program, not a Windows program.\n \
    \   CLIENTS      Gopher          WAIS                WWW\n    Macintosh    TurboGopher\
    \     WAIStation          (No name)\n                                        \
    \             (beta version\n                                                \
    \     available)\n    PC with      HGopher (two    WAIS for            Cello (beta\n\
    \    Windows      others also     Windows, WAIS       version\n              \
    \   available)      Manager             available),\n                        \
    \                             Mosaic (beta due\n                             \
    \                        3Q93)\n    UNIX with X  Xgopher,        XWAIS       \
    \        XMosaic\n                 XMosaic\n   At present, multimedia support\
    \ in most of these clients (where it\n   exists) is limited to the invocation\
    \ of external \"viewer\" programs\n   for particular media types.  The exception\
    \ is XMosaic, which supports\n   in-line images in WWW documents.\n   Media Types\n\
    \   The GWW tools can all handle multiple media types well.\n      o    Text is\
    \ very well supported by all three tools.  WWW offers\n           facilities for\
    \ displaying \"richer\" text, supporting\n           headings, lists, emphasised\
    \ text etc., in a standardised way.\n      o    Image data is also well supported,\
    \ using either external\n           viewers (e.g., the TurboGopher client software\
    \ on a Macintosh\n           might invoke the JPEGView program to display an image);\
    \ or\n           in-line display within a text document (WWW with XMosaic on\n\
    \           UNIX).\n      o    There is little direct support for application-specific\n\
    \           data, but most systems allow data of a nominated type to be\n    \
    \       passed to an external viewer or editor program.  This tends\n        \
    \   to be a function of the client software rather than being\n           built\
    \ in to the protocol or server.  There has been\n           discussion in the\
    \ WWW community about using TeX for\n           representing mathematical equations,\
    \ and about providing\n           \"panels\" within a text document where a separate\
    \ application\n           could render its application-specific data (or indeed\
    \ any\n           data which can be represented spatially).  This latter\n   \
    \        suggestion fits well with the OLE (Object Linking and\n           Embedding)\
    \ approach used in Microsoft Windows.\n      o    Sound can be supported through\
    \ the external \"viewer\"\n           concept. Some platforms don't have readily-available\n\
    \           \"viewers\" with \"tape recorder\"-style controls for replaying.\n\
    \           There is no single commonly-accepted sound encoding format.\n    \
    \  o    Video data can be handled using external viewers.  MPEG and\n        \
    \   QuickTime are the most common encodings.\n   One essential capability of a\
    \ client/server protocol is the ability\n   for the client to determine the type\
    \ of a node (and a list of\n   available encodings) before downloading it.  WAIS\
    \ and Gopher transfer\n   this information in the result set and menu respectively.\
    \  WWW\n   clients currently determine this information either from analysing\n\
    \   the URL of a target node, or by the occurrence of the <IMG> tag.  The\n  \
    \ new WWW HTTP2 protocol allows the media type and encoding of a node\n   to be\
    \ determined through a separate interaction with the server.\n   The GWW systems\
    \ all use different methods for expressing type and\n   encoding.  WAIS does not\
    \ distinguish the encoding from the media\n   type.  WWW is moving to the MIME\
    \ type/encoding system.  Gopher does\n   not distinguish type and encoding, but\
    \ Gopher+ does, and is also\n   moving to the MIME type/encoding system.\n   Hyperlinks\n\
    \   Only the WWW system has hyperlinks.  Source anchors may be text,\n   images,\
    \ or points within an image.  Target anchors may be entire\n   nodes of any media\
    \ type, or points within (with HTTP2, portions of)\n   text nodes.\n   Gopher+\
    \ could potentially be enhanced to include hyperlinks, but\n   there seems to\
    \ be no development effort going towards this - those\n   who need hyperlinking\
    \ are using WWW.\n   Gopher menus can be constructed to allow alternative views\
    \ of\n   gopherspace.  For instance, a geographically-organised menu tree of\n\
    \   gopherspace is in place, but a parallel subject-based menu tree could\n  \
    \ be added as an alternative way of access to the same data.  (There\n   are in\
    \ fact moves to set this up.)  Since WWW offers a superset of\n   Gopher functionality,\
    \ these comments also apply to the Web.  In fact,\n   the Web already has a rudimentary\
    \ subject tree.\n   In both Gopher and WWW, non-textual data may be used in different\n\
    \   information structures without having to maintain more than one copy.\n  \
    \ Presentation\n   There is little support in GWW for controlling the presentation\
    \ of\n   non-text data.\n      o    Backdrops are not supported by GWW.\n    \
    \  o    Buttons are supported in a limited way - typically, a node\n         \
    \  is retrieved by clicking on a highlighted text phrase, or on\n           an\
    \ entry in a list.  In XMosaic, bitmap images can be used\n           as buttons.\
    \ However, there is no support for different\n           styles of button.  Client\
    \ software may have generic\n           navigation buttons (e.g., \"Back\", \"\
    Next\", \"Home\") which are\n           always available and don't form part of\
    \ a node.\n      o    Synchronisation in space is not supported by GWW, except\n\
    \           that WWW supports contextual synchronisation of images using\n   \
    \        the <IMG> tag.\n      o    Synchronisation in time is not supported by\
    \ GWW.\n   Searching\n   WAIS supports keyword searching, and is very well suited\
    \ for that\n   task.  The Gopher+ protocol could potentially support multimedia\n\
    \   database querying applications through the ASK attribute, but there\n   is\
    \ as yet no server implementation which supports such database\n   applications.\
    \  In the WWW project, there are ongoing discussions on\n   how best to extend\
    \ HTML to cope with database query applications - an\n   <INPUT> tag has been\
    \ suggested - but no consensus has yet emerged.\n   Both Gopher and WWW can make\
    \ use of WAIS-type keyword searching:\n   either by incorporating WAIS code into\
    \ the server (enabling WAIS\n   index files to be searched); or through WAIS gateways,\
    \ which run\n   searches on remote WAIS servers in response to queries from non-WAIS\n\
    \   clients.\n   Interaction\n   XMosaic allows users to make text (or on some\
    \ platforms, audio)\n   annotations to any text node.  The annotations appear\
    \ at the end of\n   the text display..  They are held locally - other users of\
    \ the node\n   do not see the annotations (but a recently added facility allows\n\
    \   globally-visible annotations held on an \"annotation server\").  Text\n  \
    \ annotations may include hyperlinks to other nodes (provided the user\n   knows\
    \ how to use HTML).  Other clients do not provide such\n   facilities.\n   There\
    \ is a move to add an \"email\" address notation to URL.  This\n   would allow\
    \ WWW client software to invoke a mail program when a user\n   selects an anchor\
    \ with such a URL.\n   There are plans to allow WWW users to delineate a rectangular\
    \ area of\n   interest within an image for use in an HTTP request.\n   There is\
    \ no support in GWW clients for interacting with sequences of\n   images in the\
    \ way described in section 2.3.6.\n   Quality of Service\n   The user expectations\
    \ for responsiveness mentioned in section 2.3.7\n   are difficult to meet with\
    \ currently-deployed wide-area network (or\n   even LAN) technology, particularly\
    \ for voluminous multimedia data.\n   None of the GWW systems currently exploit\
    \ the emerging isochronous\n   data transfer capabilities of protocols such as\
    \ RTP and technologies\n   such as ATM.  None of them make serious attempts to\
    \ alleviate the\n   problem in other ways (except for WWW, which defines some\
    \ mechanisms\n   in HTTP2 for format negotiation based on size and available bandwidth\n\
    \   considerations).\n   Management\n   The following table shows the support\
    \ for three key management\n   facilities in the GWW systems.  The first two facilities\
    \ require\n   support in the client/server protocol, the third requires support\
    \ in\n   the server, but depends on authentication being available.\n        \
    \                Gopher         WAIS          WWW\n    Access control      No\
    \             No1           Yes, in\n    and                                 \
    \             HTTP2\n    authentication\n    Charging support    No          \
    \   No            Yes, in\n                                                  \
    \   HTTP2\n    Monitoring for      No             No            No\n    statistical\
    \ and\n    assessment\n    purposes\n   Note:\n   1. \"Access-control-facility\"\
    \ is a feature of Z39.50 which is not used\n   by the current WAIS implementations.\n\
    \   Scripting Requirements\n   None of the GWW systems have facilities for the\
    \ execution of scripts\n   by the client, because of security issues (it would\
    \ be too easy for a\n   malicious \"trojan\" script to be executed).  Gopher and\
    \ WWW servers\n   have the ability for a UNIX script to be run by the server,\
    \ with the\n   script output returned to the client.  Scripting as understood\
    \ in the\n   context of stand-alone multimedia applications does not exist in\
    \ GWW.\n   Bytestream Format\n   None of the three GWW systems use a bytestream\
    \ format for\n   interchanging collections of material.  There has been some talk\n\
    \   about setting up a system akin to the \"Trickle\" mail server, for\n   retrieving\
    \ single document nodes from GWW using mail.  Such a system\n   has been implemented\
    \ for WWW.\n   Authoring tools\n   Gopher is sufficiently simple to set up that\
    \ no special authoring\n   tools are required.  WAIS requires only an indexing\
    \ program (as\n   discussed in section 3.2) for preparing material for publication.\n\
    \   WWW, because it uses a sophisticated authoring language (HTML),\n   benefits\
    \ from the availability of authoring tools.  There are HTML\n   editors for UNIX\
    \ (using the tk toolkit) and the NeXT system.  There\n   are no authoring tools\
    \ designed specifically for exploiting the\n   multimedia capabilities of WWW,\
    \ mainly because these capabilities are\n   still evolving.\n"
- title: 4. Research
  contents:
  - "4. Research\n   This section describes some current research projects in the\
    \ area of\n   distributed hypermedia information systems.\n"
- title: 4.1. Hyper-G
  contents:
  - "4.1. Hyper-G\n   Hyper-G [10] is an ambitious distributed hypermedia research\
    \ project\n   at a number of institutes of the IIG (Institutes for Information-\n\
    \   Processing Graz), the Computing and Information Services Centre of\n   the\
    \ Graz University of Technology, and the Austrian Computer Society.\n   It is\
    \ funded by the Austrian Ministry of Science. It combines\n   concepts of hypermedia,\
    \ information retrieval systems and\n   documentation systems with aspects of\
    \ communication and\n   collaboration, and computer-supported teaching and learning.\n\
    \   Unlike WWW, Hyper-G supports bi-directional links.  This enables\n   users\
    \ to see which other documents reference the one they are using,\n   and also\
    \ allows the system to avoid dangling pointers when a linkedto\n   document is\
    \ deleted.  Another difference from WWW is that links are\n   kept separately\
    \ from their source and target nodes, to allow easy\n   linking of read-only documents\
    \ and for ease of link maintenance.  In\n   addition to manually defined links,\
    \ Hyper-G supports automatic static\n   and dynamic (i.e., view-time) generation\
    \ and maintenance of links.\n   Hyper-G has a concept of generic \"structures\"\
    \ - an additional layer\n   of relationships imposed on (and orthogonal to) the\
    \ web of documents\n   and links.  A document can be part of more than one structure,\
    \ and\n   structures may be hierarchically related.  Types of structure\n   include:\n\
    \      o    \"Clusters\" are a set of documents which are all\n           presentedtogether.\n\
    \      o    \"Collections\" are unordered sets of documents or other\n       \
    \    structures, and can be used as query domains or to construct\n          \
    \ gopher-like menus.\n      o    \"Paths\" are ordered sets of documents or structures,\
    \ which\n           must be visited sequentially.\n   One application of the structure\
    \ concept is the provision of \"guided\n   tours\" through the information space.\n\
    \   In addition to hypernavigation, the collection hierarchy and guided\n   tours,\
    \ another strategy for interaction with the system is the use of\n   database\
    \ queries.  Two kinds of query are supported: keyword\n   searching in a user-defined\
    \ list of databases; and collection\n   specific form-filling queries.  In the\
    \ latter case, the answer to the\n   query may appear dynamically as the form\
    \ is filled out.\n   Four modes of user identification are supported: \"identified\"\
    , where\n   a userid is publicly associated through name and address information\n\
    \   with a particular individual; \"semi-identified\", where a userid is\n   associated\
    \ by the system with an individual, but the user is only\n   known to other users\
    \ through a pseudonym; \"anonymously identified\",\n   where the userid is not\
    \ associated by the system with any individual;\n   and \"anonymous\", where there\
    \ is no userid (or a generic userid such\n   as \"guest\").  Possible operations\
    \ in the system depend on the user's\n   mode of identification.  Users may access\
    \ the system in any desired\n   mode, and switch to other modes only when necessary.\n\
    \   Hyper-G contains specific support for multilingual documents and\n   document\
    \ clusters.  Users may specify an ordered list of preferred\n   languages, for\
    \ instance.  There are plans to experiment with\n   automatic translation programs.\n\
    \   Integration of other, external, systems such as WWW into Hyper-G in a\n  \
    \ seamless manner is possible.\n   Hyper-G is in use as a CWIS within Graz Technical\
    \ University.  Client\n   software is available for UNIX workstations from DEC,\
    \ HP, SGI, and\n   SUN.  The system is still in an experimental state, but it\
    \ has been\n   used by about 200 students as part of a course on the social impact\n\
    \   of information technology.\n"
- title: 4.2. Microcosm
  contents:
  - "4.2. Microcosm\n   Microcosm [11] is an open hypermedia system developed at the\n\
    \   University of Southampton.  It is implemented on the PC under MS\n   Windows,\
    \ and versions for the Apple Macintosh and for UNIX with X are\n   under development.\n\
    \   Microcosm consists of a number of autonomous processes which\n   communicate\
    \ with each other by a message-passing system.  Information\n   about hyperlinks\
    \ between documents is stored in a link database, or\n   \"linkbase\", and is\
    \ not stored in the documents themselves.  This has\n   the advantages that:\n\
    \      o    Links to and from read-only documents (perhaps stored on CD-\n   \
    \        ROM) are possible.\n      o    Documents need undergo no conversion process\
    \ to be imported\n           into the system - they can still be viewed and edited\
    \ using\n           the original application which created them, without the\n\
    \           link information getting in the way.\n      o    It is as easy to\
    \ establish links to and from non-text\n           documents as text documents.\n\
    \   In Microcosm, the user interacts with a \"viewer\" program for a\n   particular\
    \ media type.  Such programs may be specifically written for\n   use with Microcosm\
    \ (about 10 such viewers have been written for a\n   number of common media types\
    \ and encodings); or they may be a program\n   adapted for use with Microcosm\
    \ (the programmability of Microsoft Word\n   for Windows has allowed it to be\
    \ so adapted); or it may even be a\n   program with no knowledge of Microcosm.\n\
    \   The user selects an object (e.g., a piece of text) in the viewer, and\n  \
    \ requests Microcosm to perform an action with the object - typically\n   to follow\
    \ a link to another document.  This may involve executing\n   another viewer to\
    \ display the target document.\n   Microcosm link source anchors may be specific\
    \ (denoting a unique\n   point in a particular document), local (denoting any\
    \ occurrence of a\n   particular object in a particular document) or generic (denoting\
    \ any\n   occurrence of an object in any document).  Target anchors may specify\n\
    \   specific objects within a document.  Other link styles are\n   textretrieval\
    \ links (looking up a full-text index , as WAIS does),\n   and relevance links\
    \ to a set of documents using similar vocabulary to\n   the source document (again,\
    \ similar to WAIS's relevance feedback).\n   Links may be created by readers as\
    \ well as by authors.  Dynamically\n   computed links may be added to the permanent\
    \ linkbase for later use.\n   A history of link traversal is maintained, and \"\
    guided tours\" may be\n   established through the system which allow the reader\
    \ to stray from\n   and return to the tour.\n   Microcosm viewers operate by sending\
    \ messages to the Microcosm\n   system.  In MS Windows, these messages are transferred\
    \ using DDE\n   (Dynamic Data Exchange); in the Apple Macintosh version Apple\
    \ Events\n   are used, and sockets are used on UNIX.  For viewers which are not\n\
    \   Microcosm aware, the user must transfer the selected object to the\n   system\
    \ clipboard before being able to follow a link from it.\n   Networking support\
    \ in Microcosm is currently under development.\n   Components of Microcosm may\
    \ be distributed to multiple machines there\n   is not necessarily a concept of\
    \ \"client\" and \"server\".\n   There are problems with the Microcosm approach,\
    \ common to systems\n   which maintain link information separately from documents,\
    \ and which\n   use external viewers.\n      o    Documents move and change, thus\
    \ invalidating links.\n           Microcosm datestamps links to help to detect\
    \ (but not\n           correct) such problems.\n      o    It is not always clear\
    \ what links are available to be\n           followed from a document, since the\
    \ viewer program is\n           unaware of the contents of the linkbase.\n   \
    \   o    It is not always possible to indicate the object within a\n         \
    \  document which is the target anchor of a link.  Many viewers\n           automatically\
    \ show the start of the document (e.g., a word\n           processor), or perhaps\
    \ the entire document (e.g., a picture\n           viewer).  The user has no way\
    \ of knowing which part of the\n           target document the link just followed\
    \ points to.\n   Microcosm may be viewed as an integrating hypermedia framework\
    \ - a\n   layer on top of a range of existing applications which enables\n   relationships\
    \ between different documents to be established.\n   Microcosm is currently being\
    \ \"commercialised\".\n"
- title: 4.3. AthenaMuse 2
  contents:
  - "4.3. AthenaMuse 2\n   AthenaMuse 2 (AM2) is an ambitious distributed hypermedia\
    \ authoring\n   and presentation system under development by the AthenaMuse Software\n\
    \   Consortium based at MIT.  It is based on the earlier AM1 system\n   developed\
    \ as part of MIT's Project Athena.  The first version of AM2\n   is scheduled\
    \ for January 1994, and will be \"pre-commercial software\",\n   with a fully-commercialised\
    \ version due about 6 months later.  Both\n   the educational and commercial sectors\
    \ are the intended market.  The\n   system will initially be based on X and UNIX\
    \ workstations, but\n   PC/Windows will also be supported in a second phase. \
    \ Apple Macintosh\n   support has a lower priority.\n   The specifications of\
    \ AM2 are available in [12].  Some of the key\n   points are:\n      o    AM2\
    \ will support import and export of application from and\n           tostandard\
    \ forms.  The project is watching standards such as\n           HyTime, MHEG and\
    \ ODA.\n      o    Several \"application themes\", or frequently-occurring\n \
    \          collections of functionality, are viewed as useful.  These\n      \
    \     are as follows:\n           Application Theme                         Interactive?\n\
    \           Presentation of multimedia data           No\n           Exploration\
    \ of a rich multimedia          Yes\n           environment\n           Simulation\
    \ of a real-world scenario       Partially\n           Communication of real-time\
    \                No\n           information to the user\n           Authoring\
    \                                 Yes\n           Annotation of material     \
    \               Yes\n      o    \"Interface templates\" allow a multimedia application\
    \ to make\n           use of a common format for presenting a range of content.\n\
    \           This is similar to the \"backdrop\" concept mentioned in\n       \
    \    section 2.3.4.\n      o    A range of link types will be supported.\n   \
    \   o    Media content editors and interface/application editors for\n       \
    \    structuring will be provided.  A third class of editor, the\n           \"\
    hypermedia notebook\", will allow readers to excerpt and\n           annotate\
    \ media from AM2 applications.\n   The project is developing multimedia network\
    \ services, including the\n   transmission of digital video, using a client-server\
    \ paradigm.\n"
- title: 4.4. CEC Research Programmes
  contents:
  - "4.4. CEC Research Programmes\n   Some of the research programmes sponsored by\
    \ the Commission for the\n   European Community (CEC) contain apparently relevant\
    \ projects. [1]\n   has further details of some of these projects.\n   RACE programme\n\
    \   The RACE programme is outlined in [13], which should be consulted for\n  \
    \ further information about the projects described below.  The RACE\n   programme\
    \ targets the industrial, commercial and domestic sectors,\n   and results are\
    \ not necessarily directly applicable to the research\n   and academic community.\
    \  RACE project numbers are given.\n    RACE Phase I projects, which have mostly\
    \ completed:\n    R1038  MCPR - Multimedia Communication, Processing and\n   \
    \        Representation. This project developed a demonstrator\n           multimedia\
    \ system with communications capability for travel\n           agents.\n    R1061\
    \  DIMPE - Distributed Integrated Multimedia Publishing\n           Environment.\
    \ The project designed and implemented interim\n           services for compound\
    \ document handling, and defined a\n           distributed publishing architecture.\n\
    \    R1078  European Museums Network. This project aimed to demonstrate\n    \
    \       interactive navigation through a pool of multimedia museum\n         \
    \  objects, using ISDN as the communications network.\n    RACE Phase II projects:\n\
    \    R2008  EuroBridge.\n           Aims to demonstrate multi-point multimedia\
    \ applications\n           running over DQDB, FDDI and ATM test networks.\n  \
    \  R2043  RAMA - Remote Access to Museum Archives\n           This project follows\
    \ on from R1078.\n    R2060  CIO - Coordination, Implementation and Operation\
    \ of\n           Multimedia Services.\n           One aspect of this project is\
    \ JVTOS - a \"Joint Viewing and\n           Teleoperation Service\".  This aims\
    \ to integrate standard\n           multimedia applications running on a range\
    \ of heterogeneous\n           machines into a cooperative working environment,\
    \ allowing\n           individuals to view and interact with multimedia data on\n\
    \           colleague's machines.\n   ESPRIT Programme\n   The ESPRIT research\
    \ programme is outlined in [14], which should be\n   consulted for further information\
    \ about the projects listed below.\n   ESPRIT project numbers are given.\n   \
    \ 28     MULTOS - A Multimedia Filing System\n           This project, which ran\
    \ from 1985 to 1990, developed a\n           client/server system for filing and\
    \ retrieval of multimedia\n           documents using the ODA interchange format\
    \ standard (ODIF).\n    5252   HYTEA - HyperText Authoring\n           This project,\
    \ which runs from 1991 to 1994, aims to develop\n           a set of authoring\
    \ tools for large and complex hypermedia\n           applications.\n    5398 \
    \  SHAPE - Second Generation Hypermedia Application Project\n           This project\
    \ is developing a portable software environment\n           comparable to a CASE\
    \ tool intended to facilitate the\n           realisation of complex hypermedia\
    \ applications.\n    5633   HYTECH - Hypertextual and Hypermedial Technical\n\
    \           Documentation This project, which ran from 1990-1991, was to\n   \
    \        assess the feasibility of hypermedia technology and to\n           devise\
    \ needed extensions to it in order to support\n           applications dealing\
    \ with technical documentation\n           management.\n    6586   PEGASUS - Distributed\
    \ Multimedia Operating System for the\n           1990s This project is aimed\
    \ at the design of an operating\n           system architecture for scalable distributed\
    \ multimedia\n           systems and the development of a validating prototype,\
    \ the\n           design and implementation of a distributed complex-object\n\
    \           service and a global name service, the development of\n          \
    \ mechanisms for the creation, communication and rendering of\n           fully\
    \ digital multimedia documents in real time and in a\n           distributed fashion,\
    \ and the design and implementation of an\n           application for the system:\
    \ a digital TV director.\n    6606   IDOMENEUS - Information and Data on Open\
    \ Media for Networks\n           of Users.  This project, which started January\
    \ 1993, brings\n           together workers in the database, information retrieval,\n\
    \           networking and hypermedia research communities in the\n          \
    \ development of an \"ultimate information machine\".  It \"will\n           coordinate\
    \ and improve European efforts in the development\n           of next-generation\
    \ information environments capable of\n           maintaining and communicating\
    \ a largely extended class of\n           information on an open set of media\"\
    .  Because of the close\n           match between the subject of the IDOMENEUS\
    \ project and the\n           RARE WG-IMM, it is recommended that RARE establish\
    \ a liaison\n           with this project.\n"
- title: 4.5. Other
  contents:
  - "4.5. Other\n   Some other research projects of less immediate relevance are listed\n\
    \   below.  Some of these projects are described further in [1].\n      o    Xanadu\
    \ is a project to develop an \"open, social hypermedia\"\n           distributed\
    \ database server, incorporating CSCW features.\n           It has been in existance\
    \ for many years and has been funded\n           by a number of companies.  The\
    \ current status of this\n           project is not known, and although iminent\
    \ availability of\n           alpha-test versions has been announced more than\
    \ once, no\n           software has been delivered.\n      o    CMIFed [15] is\
    \ an editing and presentation environment for\n           portable hypermedia\
    \ documents being developed at CWI,\n           Amsterdam, NL. It is based on\
    \ the \"Amsterdam Model\" of\n           hypermedia [16], which is an extension\
    \ of the Dexter\n           hypertext reference model incorporating \"channels\"\
    \ for media\n           delivery and synchronisation constraints.\n      o   \
    \ Deja Vu [17] is a proposed \"intelligent\" distributed\n           hypermedia\
    \ application framework.  It is intended as a\n           vehicle for research\
    \ in the areas of: hypermedia systems,\n           object-oriented programming,\
    \ distributed logic programming,\n           and intelligent information systems.\
    \  Proposed techniques\n           for use in the Deja Vu framework include \"\
    inferential\n           links\", defined automatically according to predefined\
    \ rules.\n           A scripting language for use both by information providers\n\
    \           and users is planned.  This project is at a very early\n         \
    \  (proposal) stage, and as yet relatively little software has\n           been\
    \ developed.  Deja Vu is intended principally as a\n           research framework\
    \ rather than as a service tool.\n      o    Demon is a project at Bellcore, US,\
    \  investigating the\n           network requirements of near-term residential\
    \ multimedia\n           services.  The project is designing and implementing\
    \ an\n           experimental application which serves the needs of casual\n \
    \          multimedia users.\n      o    InfoNote is a distributed, multiuser\
    \ hypermedia system from\n           Japan, implemented on a NEC EWS4800 running\
    \ UNIX and X.\n           InfoNote has an editor which can create Japanese texts,\n\
    \           figures, and raster images.  The same windows are used both\n    \
    \       for editors and browsers. The functionality of the window\n          \
    \ can be changed at any time if data is not write-protected.\n      o    MADE\
    \ - Multimedia Application Demonstration Environment - is\n           a project\
    \ at British Telecom's research laboratory which\n           centres on the use\
    \ of the developing MHEG standard to access\n           a multimedia object server.\
    \  The server platform is a Sun\n           SPARCstation with an object-oriented\
    \ database package\n           (ONTOS).  Audio, video, text and graphical media\
    \ types are\n           covered.  The University of Kent is working on a sub-\n\
    \           project: \"Multi-user Indexing in a Distributed Multimedia\n     \
    \      Database\".\n      o    Zenith aimed to establish a set of principles to\
    \ assist\n           designers and developers of object management systems\n \
    \          intended for distributed multimedia design environments.\n        \
    \   The project implemented a prototype generalised multimedia\n           object\
    \ management system.\n"
- title: 5. Standards
  contents:
  - '5. Standards

    '
- title: 5.1. Structuring Standards
  contents:
  - "5.1. Structuring Standards\n   This section describes some of the important standards\
    \ for providing\n   hyperstructure to multimedia data.\n   SGML\n   SGML (Standard\
    \ Generalized Markup Language - ISO 8879) is a\n   metalanguage for defining markup\
    \ notations for text.  SGML is used to\n   write Document Type Definitions or\
    \ DTDs, to which individual document\n   instances must conform.  It finds application\
    \ in a wide and\n   increasing range of text processing applications.\n   The\
    \ relevance of SGML to distributed hypermedia systems is\n   surprisingly high,\
    \ mainly because of the great expressive power of\n   SGML, and its ability to\
    \ handle non-textual data using \"external\n   entities\" and \"notations\".\n\
    \      o    The World-Wide Web is an SGML application with its own DTD.\n    \
    \  o    The important HyTime hypermedia structuring standard (see\n          \
    \ below) is based on SGML.\n      o    The forthcoming MHEG hypermedia structuring\
    \ standard (see\n           below) has an SGML encoding.\n      o    SGML has\
    \ been used in research hypermedia systems - for\n           example Microcosm.\n\
    \      o    SGML is used in some commercial hypermedia systems - for\n       \
    \    example DynaText.\n      o    SGML is of increasing importance for academic\
    \ publishing\n           houses.\n   It was interesting to note that at a recent\
    \ (CEC-sponsored) workshop\n   on Hypertext and Hypermedia standards, most of\
    \ the speakers were\n   conversant with and supportive of the use of SGML for\
    \ such systems.\n   A related standard which may become important for SGML on\
    \ networks is\n   SDIF (SGML Data Interchange Format - ISO 9069).  This standard\n\
    \   specifies how an SGML document, which may exist in a number of\n   separate\
    \ files of different media types, may be encoded using ASN.1\n   into a single\
    \ bytestream.  The entity structure is preserved, so that\n   the bytestream may\
    \ be decoded by the recipient into the same set of\n   files.\n   HyTime\n   HyTime\
    \ (Hypermedia/Time-Based Structuring Language) is a standardised\n   infrastructure\
    \ for the representation of integrated, open hypermedia\n   documents.  It was\
    \ developed principally by ANSI committee X3V1.8M,\n   and was subsequently adopted\
    \ by ISO and published as ISO 10744.\n   HyTime is based on SGML.  It is not itself\
    \ an SGML DTD, but provides\n   constructs and guidelines (\"architectural forms\"\
    ) for making DTDs for\n   describing Hypermedia documents.  For instance, the\
    \ Standard Music\n   Description Language (SMDL: ISO/IEC Committee Draft 10743)\
    \ defines a\n   (meta-)DTD which is an application of HyTime.  In fact, HyTime\n\
    \   started as an attempt to produce a markup scheme for music publishing\n  \
    \ purposes.\n   HyTime specifies how certain concepts common to all hypermedia\n\
    \   documents can be represented using SGML.  These concepts include:\n      o\
    \    association of objects within documents with hyperlinks\n      o    placement\
    \ and interrelation of objects in space and time\n      o    logical structure\
    \ of the document\n      o    inclusion of non-textual data in the document\n\
    \   An \"object\" in HyTime is part of a document, and is unrestricted in\n  \
    \ form - it may be video, audio, text, a program, graphics, etc.  The\n   terminology\
    \ used in HyTime (and in this section) thus differs\n   slightly from the terminology\
    \ used in the rest of this report.  A\n   HyTime object corresponds roughly to\
    \ a node as defined in section\n   1.2, and a HyTime document is a hyperdocument\
    \ in the terminology of\n   this report.\n   HyTime consists of six modules, which\
    \ are very briefly and\n   selectively described below:\n      o    Base module.\
    \  This provides facilities required by other\n           modules, including a\
    \ lexical model for describing element\n           contents; facilities for identifying\
    \ policies for coping\n           with changes to a document, or traversing a\
    \ link (\"activity\n           tracking\"); and the ability to define \"container\
    \ entities\"\n           which can hold multiple data objects.  This last was\
    \ added\n           to the HyTime standard at a late stage, at the instigation\n\
    \           of Apple Computers Inc, as a \"hook\" for their Bento\n          \
    \ specification [18].\n      o    Measurement module.  This allows for an object\
    \ to be located\n           in time and/or space (which HyTime treats equivalently),\
    \ or\n           any other domain which can be represented by a finite\n     \
    \      coordinate space, within a bounding box called an \"event\",\n        \
    \   defined by a set of coordinate points.  Coordinates may be\n           expressed\
    \ in any units (predefined units include\n           femtoseconds, fortnights,\
    \ millenia, angstroms, Northern feet\n           and lightyears!).\n      o  \
    \  Location Address module.  In addition to the fundamental\n           ability\
    \ of SGML to identify and refer to elements, this\n           module provides\
    \ a special \"named location address\"\n           architectural form which can\
    \ be used to refer indirectly to\n           data which spans elements, or which\
    \ is located in external\n           entities.  Data may also be addressed indirectly\
    \ through the\n           use of \"queries\", which return addresses of objects\
    \ within\n           some domain which have properties matching the query.  A\n\
    \           \"HyQ\" notation is provided for defining the query.\n      o    Hyperlinks\
    \ module.  Two basic types of hyperlink are\n           defined: the contextual\
    \ link (clink) has two anchors, one of\n           which is embedded in a document\
    \ to explicitly denote the\n           anchor location; and the independent link\
    \ (ilink) which may\n           have more than two anchors, and which does not\
    \ require the\n           anchors to be embedded in the document. ilinks thus\
    \ allow\n           hyperlink information to be maintained separately from\n \
    \          document content.\n      o    Scheduling module.  This specifies how\
    \ events in a source\n           finite coordinate space (FCS) are to be mapped\
    \ onto a target\n           FCS.  For instance, events on a time axis could be\
    \ projected\n           onto a spatial axis for graphical display purposes, or\
    \ a\n           \"virtual\" time axis as used in music could be projected onto\n\
    \           a physical time axis.\n      o    Rendition module.  This allows for\
    \ individual objects to be\n           modified before rendition, in an object-specific\
    \ way.  One\n           example is modification of colours in image so that it\
    \ can\n           be displayed using the currently-selected colour map on a\n\
    \           graphics terminal, or changing the volume of an audio\n          \
    \ channel according to a user's requirements.\n   It is not envisaged that a hypermedia\
    \ application would need to use\n   the entire range of HyTime facilities.  An\
    \ application designer is\n   able to choose appropriate HyTime architectural\
    \ forms, and to add\n   application-specific constraints to them.  The designer\
    \ may also of\n   course use non-HyTime SGML elements and attributes, but these\
    \ aspects\n   of the application can't be understood by a \"HyTime engine\". \
    \ Even in\n   the absence of a HyTime engine, the HyTime architectural forms\n\
    \   provide a useful base of ideas from which a hypermedia system\n   designer\
    \ may wish to work.\n   The role of a HyTime engine is not specified in the standard,\
    \ but\n   essentially it is a (sub)program which recognises HyTime constructs\n\
    \   in document instances and performs application-independent processing\n  \
    \ on them.  For instance, it could interact with multimedia network\n   servers\
    \ to resolve and access hyperlink anchors.  A commercial HyTime\n   engine (HyMinder)\
    \ is under development by TechnoTeacher in the US,\n   and the Interactive Multimedia\
    \ Group at the University of\n   Massachusetts - Lowell (contact lrutledg@cs.ulowell.edu)\
    \ is also\n   working on a HyTime engine (HyOctane).\n   The Davenport group (a\
    \ loose consortium of interested companies and\n   individuals) is producing a\
    \ series of standards on hypermedia which\n   further constrain the HyTime architectural\
    \ forms.  One example is the\n   SOFABED module [19], which standardises the representation\
    \ of certain\n   kinds of navigational information - tables of contents, indexes\
    \ and\n   glossaries.\n   HyTime was envisaged as an interchange format rather\
    \ than as a format\n   for directly-executable hypermedia applications.  It is\
    \ therefore\n   very expressive, but may be difficult to optimise for run-time\n\
    \   efficiency.\n   An attempt has been made [20] to adapt the hyperlink structure\
    \ in\n   WWW's existing HTML DTD to comply with HyTime's clink architectural\n\
    \   form.  This requires changes to WWW document instances as well as to\n   browser\
    \ software, and in the absence of any immediate benefit it has\n   found little\
    \ favour with the WWW community.  However, it is possible\n   that HTML2 will\
    \ use some aspects of HyTime.\n   It is recommended that any further RARE work\
    \ on networked hypermedia\n   should take account of the importance of SGML and\
    \ HyTime.\n   MHEG\n   MHEG stands for the Multimedia and Hypermedia information\
    \ coding\n   Experts Group, also known as ISO/IEC JTC1/SC29/WG12 (it used to come\n\
    \   under SC2).  This group is developing a standard \"Coded\n   Representation\
    \ of Multimedia and Hypermedia Information Objects\" (ISO\n   CD 13522, or CCITT\
    \ T.171), commonly called MHEG.  The standard is to\n   be published in two parts\
    \ - part 1 being the base notation,\n   representing objects using ASN.1, and\
    \ part 2 being an alternate\n   notation which uses SGML.  Part 1 has nearly (June\
    \ 1993) achieved CD\n   status, and is intended to reach full IS in 1994.  Part\
    \ 2 is intended\n   to reach the CD stage in late 1993.\n   MHEG is suited to\
    \ interactive hypermedia applications such as on-line\n   textbooks and encyclopaedia.\
    \  It is also suited for many of the\n   interactive multimedia applications currently\
    \ available (in\n   platformspecific form) on CD-ROM.  MHEG could for instance\
    \ be used as\n   the data structuring standard for a future home entertainment\n\
    \   interactive multimedia appliance.  Telecommunications operators are\n   interested\
    \ in MHEG for providing interactive multimedia services\n   across ISDN.\n   To\
    \ address such markets, MHEG represents objects in a non-revisable\n   form, and\
    \ is therefore unsuitable as an input format for hypermedia\n   authoring applications:\
    \ its place is perhaps more as an output format\n   for such tools.  MHEG is thus\
    \ not a multimedia document processing\n   format - instead it provides rules\
    \ for the structure of multimedia\n   objects which permits the objects to be\
    \ represented in a convenient\n   \"final\" form with the aim of direct presentation.\n\
    \   The MHEG draft standard is expressed in object-oriented terms.  The\n   main\
    \ object classes are outlined briefly below.\n      o    Content class.  A content\
    \ object contains the encoded\n           (monomedia) information to be presented,\
    \ along with\n           attributes which identify the type of information and\
    \ the\n           encoding method, and mediaspecific attributes such as fonts\n\
    \           used, sampling rate, image size, etc.\n      o    Selection class\
    \ and Modification class.  The user may\n           interact with MHEG objects\
    \ which inherit interactive\n           behaviour from these classes.  (The MHEG\
    \ object model\n           supports multiple inheritance.)\n      o    Action\
    \ class.  Two types of action may be applied to\n           objects: projection,\
    \ which controls how objects are\n           rendered; and status actions which\
    \ affect the state of\n           objects.\n      o    Link class.  MHEG hyperlinks\
    \ connect a \"start\" object with\n           one or more \"end\" objects.  Links\
    \ consist of a set of\n           conditions relating to the state of the start\
    \ object, and a\n           set of actions which are carried out when these conditions\n\
    \           are satisfied.  Links also define the spatio-temporal\n          \
    \ relationships between objects.\n      o    Script class.  Script objects are\
    \ used to describe more\n           complex interobject linkages (e.g., multiple-source\
    \ links).\n           MHEG does not define a scripting language - instead it\n\
    \           provides a formalism for encapsulating scripts which may be\n    \
    \       executed by an external program (see SMSL below).\n      o    Composite\
    \ class.  Related objects may be grouped together\n           into a single composite\
    \ object (recursively).  The\n           relationships between content objects\
    \ within a composite\n           object are determined by link and script objects\
    \ which also\n           are members of the composite object.\n      o    Descriptor\
    \ class.  Descriptor objects contain general\n           information about sets\
    \ of interchanged objects, so that a\n           target system can ensure it has\
    \ adequate resources to run\n           the hypermedia application represented\
    \ by the object set.\n   The relationship between HyTime and MHEG has not yet\
    \ been fully\n   established.  One possible relationship [21] is that an MHEG\n\
    \   application could be the output of a compilation process which used\n   an\
    \ equivalent HyTime document as input.  This approach would benefit\n   both from\
    \ the expressive power of HyTime and the run-time efficiency\n   of MHEG.  However,\
    \ it has yet to be shown that this is feasible,\n   since the capabilities of\
    \ HyTime and MHEG do not completely overlap.\n   There seems to be relatively\
    \ little interest in or awareness of MHEG\n   within the Internet community, which\
    \ is only just beginning to be\n   aware of HyTime.  In view of the draft nature\
    \ of the MHEG standard,\n   this report recommends that RARE should not invest\
    \ substantial effort\n   in MHEG at this time.  However, particularly in view\
    \ of the interest\n   in it shown by PTTs, a watching brief should be kept on\
    \ MHEG, as it\n   may well be relevant in the future.\n   ODA\n   The Open Document\
    \ Architecture standard (ODA - ISO 8613 or T.140) is\n   a compound document interchange\
    \ format designed for transferring\n   documents between open systems.  It is\
    \ able to represent documents in\n   both a formatted form and a processable (i.e.,\
    \ revisable) form, thus\n   allowing both the content and the printed appearance\
    \ of the document\n   to be unambiguously transferred.\n   In addition to text\
    \ data, ODA supports graphics and image data.  A\n   revised version to be published\
    \ in 1993 will support colour.  Future\n   developments include support for audio\
    \ content (underway) and video\n   content (planned).  An interface to MHEG is\
    \ also planned.\n   ODA differs from SGML in that the former concerns itself with\
    \ the\n   physical appearance of the document, while SGML deliberately avoids\n\
    \   doing so.  SGML concerns itself with semantic markup, and can be used\n  \
    \ to describe a wide range of data and document architectures.  ODA has\n   a\
    \ more limited concept of a document.\n   Hypermedia extensions to ODA (HyperODA)\
    \ are underway.  The extensions\n   will support:\n      o    References to data\
    \ held externally to the document (similar\n           to SGML's external entities?).\n\
    \      o    Non-linear structures, using contextual and independent\n        \
    \   hyperlinks based on the HyTime model.\n      o    Temporal relationships between\
    \ document components (e.g.,\n           sequential, parallel, cyclic, duration,\
    \ start delay).\n   HyperODA is not being developed in competition to HyTime or\
    \ MHEG its\n   purpose is to add hypermedia features to ODA rather than to be\
    \ a\n   completely general framework for hypermedia applications.\n   Bearing\
    \ in mind that:\n      o    the HyperODA extensions are still under development;\n\
    \      o    in some senses ODA can be seen as a competitor to SGML,\n        \
    \   which has greater presence in the hypermedia world;\n      o    there seems\
    \ to be a lack of enthusiasm for ODA in the\n           Internet community (the\
    \ IETF WG on piloting ODA has\n           disbanded);\n      o    Adobe's newly-released\
    \ Acrobat technology (described below)\n           will have a significant effect\
    \ on the marketplace;\n   this report recommends that ODA should not form a basis\
    \ for\n   investment in networked hypermedia technology by RARE.\n   PREMO\n \
    \  PREMO (Presentation Environment for Multimedia Objects) is a new work\n   item\
    \ in ISO/IEC JTC1/SC24 (the graphics standards subcommittee).  An\n   initial\
    \ draft [22] exists, and the schedule calls for a CD by June\n   1994, a DIS by\
    \ June 1995, and the final IS by June 1996.\n   PREMO addresses the construction\
    \ of, presentation of, and interaction\n   with multimedia objects.  It specifies\
    \ techniques for creating\n   audiovisual interactive single and multiple media\
    \ applications.  It\n   is consistent with the principles of the Computer Graphics\
    \ Reference\n   Model (CGRM, ISO 11072), and is defined in object-oriented terms.\n\
    \   It is not clear how PREMO relates to HyTime and MHEG.  Although these\n  \
    \ standards are listed in section 2 (References) of the initial draft,\n   they\
    \ appear not to be mentioned in the text.  The wisdom of\n   developing what appears\
    \ to be yet another structuring standard for\n   multimedia data is doubtful.\n\
    \   The PREMO work is not sufficiently advanced to permit a judgement of\n   its\
    \ usefulness in satisfying the requirements under discussion.\n   Acrobat\n  \
    \ Adobe, Inc. has introduced a new format called Acrobat PDF, which it\n   is\
    \ putting forward as a potential de facto standard for portable\n   document representation.\
    \  Based on the Postscript page description\n   language, Acrobat PDF is also\
    \ designed to represent the printed\n   appearance of a document (which may include\
    \ graphics and images as\n   well as text.  Unlike postscript however, Acrobat\
    \ PDF allows data to\n   be extracted from the document.  It is thus a revisable\
    \ format.  It\n   includes support for annotations, hypertext links, bookmarks\
    \ and\n   structured documents in markup languages such as SGML.  PDF files can\n\
    \   represent both the logical and the formatting structure of the\n   document.\n\
    \   Acrobat PFD thus appears to offer very similar functionality to ODA.\n   Adobe's\
    \ successful Postscript de facto standard profoundly influenced\n   information\
    \ technology - it is possible that if successful, Acrobat\n   PDF will be almost\
    \ as important.  RARE should be aware of this\n   technology and its potential\
    \ impact on multimedia information\n   systems.\n"
- title: 5.2. Access Mechanisms
  contents:
  - "5.2. Access Mechanisms\n   This section describes some standards which are useful\
    \ in providing\n   network access to multimedia data.  Of course, there are many\n\
    \   multimedia transport protocols, which this report does not attempt to\n  \
    \ describe (see [1] for further information).  The protocols mentioned\n   below\
    \ are search/retrieve protocols which were not mentioned in [1].\n   Multimedia\
    \ Extensions to SQL\n   A new work item in ISO (ISO/IEC JTC1 N2265) to extend\
    \ the SQL\n   standard to include multimedia data is expected to be approved\n\
    \   shortly.  Initially this work will concentrate on developing a\n   framework,\
    \ and on free text data.  Support for non-text data will be\n   added later, using\
    \ a separate part of the standard for each media\n   type.\n   The expected timescale\
    \ for this standardisation work is lengthy (part\n   1 - the framework - is targeted\
    \ for completion in 1996).\n   There are suggestions that this standard could\
    \ be used as a query\n   language in conjunction with the HyQ query component\
    \ of the HyTime\n   standard.\n   DFR\n   DFR is the Document Filing and Retrieval\
    \ system, specified in ISO\n   10166-1 and ISO 10166-2.  It is intended for office\
    \ automation\n   applications, and falls within the Distributed Office Applications\n\
    \   (DOA) model of ISO 10031-1.  DFR has design similarities to the ISO\n   Directory\
    \ and to the X.400 Message Store, and it is likewise part of\n   OSI.\n   DFR\
    \ defines a Document Store, which provides a service to a DFR User\n   over an\
    \ OSI protocol stack incorporating ROSE (and optionally RTSE).\n   A document\
    \ in the Document Store may have a number of attributes\n   associated with it,\
    \ including pointers to related documents.  There\n   is support for multiple\
    \ versions of the same document, and for\n   hierarchical groups of documents.\
    \  The access protocol supports\n   searching for documents based on their attributes.\
    \  DFR itself does\n   not restrict the content of documents in any way, but the\
    \ natural\n   partner to DFR is the ODA standard for document content.\n   It\
    \ is not clear that DFR offers significantly more useful\n   functionality than\
    \ is available from other, simpler access protocols\n   already in use on the\
    \ Internet.\n"
- title: 5.3. Other Standards
  contents:
  - "5.3. Other Standards\n   This section briefly describes other standards in this\
    \ area and\n   discusses their relevance.\n   MIME\n   MIME (Multipurpose Internet\
    \ Mail Extensions) is a mechanism for\n   transferring multimedia information\
    \ in an RFC822 mail message.  STD\n   11, RFC 822 defines a message representation\
    \ protocol which specifies\n   considerable detail about message headers, but\
    \ which leaves the\n   message content as flat ASCII text.  RFC 1341 redefines\
    \ the format of\n   message bodies to allow multi-part textual and non-textual\
    \ message\n   bodies to be represented and exchanged without loss of information.\n\
    \   Because RFC 822 said very little about message content, RFC 1341 is\n   largely\
    \ orthogonal to (rather than a revision of) RFC 822.\n   MIME provides facilities\
    \ to include multiple objects in a single\n   message, to represent text in character\
    \ sets other than US-ASCII, to\n   represent formatted multi-font text messages,\
    \ to represent non\n   textual material such as images and audio fragments, and\
    \ generally to\n   facilitate later extensions defining new types of Internet\
    \ mail for\n   use by co-operating mail agents.  It does not define any structure\
    \ to\n   allow relationships between body parts within a message to be\n   expressed.\n\
    \   For the purposes of the requirements considered by this report, the\n   relevance\
    \ of MIME is that it separates media type from media\n   encoding, and that it\
    \ defines a procedure for registering values of\n   these attributes.\n   The\
    \ MIME construct of chief interest is the \"Content-Type\" field.\n   This contains\
    \ a MIME \"type\" and \"subtype\", and any \"parameters\" which\n   further qualify\
    \ the subtype.  The register of MIME content-types is\n   maintained by the Internet\
    \ Assigned Numbers Authority (IANA). Content\n   types defined in the MIME standard\
    \ itself include:\n    Type            Subtype       Parameters    Meaning\n \
    \   text            plain         charset       Plain text\n                 \
    \   richtext      charset       Text with SGML-like\n                        \
    \                        markup for\n                                        \
    \        representing\n                                                formatting.\n\
    \    image           jpeg                        JPEG File Interchange\n     \
    \                                           Format\n                    gif  \
    \                       Graphics Interchange\n                               \
    \                 Format\n    audio           basic                       8-bit\
    \ -law 8kHz PCM\n                                                encoding\n  \
    \  video           mpeg\n    application     ODA           profile       Open\
    \ Document\n    (used                         (Document     Architecture\n   \
    \ for                           Application   document.\n    application     \
    \              Profile)\n    -specific\n    data)\n                    octet-\
    \        name (e.g.,   General binary data\n                    stream       \
    \ filename);    such as an arbitrary\n                                  type (for\
    \     binary file.\n                                  human\n                \
    \                  recipient),\n                                  etc.\n     \
    \               postscript                  Document in\n                    \
    \                            postscript.\n   Private experimental values of types\
    \ and subtypes starting with X may\n   be used between consenting adults without\
    \ registration with IANA.\n   MIME also defines a \"Content-Transfer-Encoding\"\
    \ field, which is used\n   to specify an invertible mapping between the \"native\"\
    \ encoding of a\n   media type and a representation that may be readily exchanged\
    \ using\n   7bit mail transfer protocols.\n   WWW's HTTP2 protocol makes use of\
    \ MIME media type and encoding\n   attributes, and also uses MIME's message format\
    \ for retrieving data\n   from the server.  It is the first MIME application to\
    \ utilise the\n   8bit Content-Transfer-Encoding, which essentially means no encoding.\n\
    \   SMSL\n   SMSL is the Standard Multimedia Scripting Language.  It is a proposed\n\
    \   new work item for ISO/IEC JTC1/SC18/WG8 (HyTime) and JTC1/SC29/WG12\n   (MHEG).\
    \  The functional requirements are expected to be completed in\n   1994, and the\
    \ coding scheme completed in 1995.\n   SMSL is designed as an open language with\
    \ a similar purpose to\n   existing vendor-specific scripting languages such as\
    \ Macromind's\n   \"Lingo\", Kaleida's \"Script/X\", and Gain's \"GEL\".  The\
    \ intention is to\n   offer an intermediate open multimedia scripting language\
    \ which could\n   be used both for interchange purposes, and for controlling the\n\
    \   presentation of HyTime or MHEG multimedia structures.  Several\n   different\
    \ approaches to defining SMSL have been suggested, including\n   using the ANDF\
    \ (Architecture-Neutral Distribution Format) approach,\n   and basing SMSL on\
    \ SGML or on the Scheme language.\n   The SMSL work is not sufficiently advanced\
    \ to permit a judgement of\n   its usefulness in satisfying the requirements under\
    \ discussion.\n   However, it is interesting to note that despite the descriptive\
    \ power\n   of HyTime and MHEG, there is still perceived to be a role for\n  \
    \ procedural scripting.\n   AVIs\n   The CCITT is defining a set of Audio Visual\
    \ Interactive Services\n   (AVIs), intended for offering to domestic and business\
    \ consumers over\n   a national network (e.g., by PTTs).  These services will\
    \ be specified\n   as T.17x recommendations, and will include MHEG.  These services\n\
    \   would also make use of the SMSL work.\n   Insufficient information is available\
    \ about this area to allow its\n   relevance to be judged.\n"
- title: 5.4. Trade Associations
  contents:
  - "5.4. Trade Associations\n   This section mentions some trade associations which\
    \ are involved in\n   standards making in the multimedia area.\n   Interactive\
    \ Multimedia Association\n   The Interactive Multimedia Association (IMA) is an\
    \ international\n   trade association with over 250 members, representing a wide\
    \ spectrum\n   of multimedia industry players.  Members include Apple, Microsoft,\n\
    \   MIT CECI (the developers of AthenaMuse 2), 3DO, and many other\n   important\
    \ market actors.\n   In 1989, the IMA initiated a \"Compatibility Project\", tasked\
    \ with\n   developing technical solutions to the cross-platform compatibility\n\
    \   problem.  The Project has published two important documents:\n      o    \"\
    Recommended Practices for Multimedia Portability\" [23]\n           outlines a\
    \ specification for a common interface to be used\n           by interactive video\
    \ delivery systems.  It has been adopted\n           by the US Military as part\
    \ of Military Standard 1379.\n      o    \"Recommended Practices for Enhancing\
    \ Digital Audio\n           Compatibility in Multimedia Systems\" [24] defines\
    \ four\n           standard digital audio data types and four sampling rates\n\
    \           (from low-end -law 8kHz mono encoding, up through ADPCM\n        \
    \   modes to CD-quality 44kHz 16-bit stereo).\n   Work is continuing to produce\
    \ further recommendations on other\n   issues.\n   The Compatibility Project has\
    \ now initiated a procurement process by\n   publishing three Request for Technology\
    \ (RFT) documents, defining the\n   requirements of a platform-independent interactive\
    \ multimedia system,\n   including networking requirements.  The RFTs cover \"\
    Multimedia System\n   Services\", a \"Scripting Language for Interactive Multimedia\
    \ Titles\",\n   and \"Multimedia Data Exchange\".  An \"Architecture Reference\
    \ Model\"\n   for cross-platform desktop and distributed multimedia systems\n\
    \   provides the framework for these RFTs, which are pragmatic documents\n   outlining\
    \ the technical requirements for time-based media handling in\n   detail.  Note\
    \ that relatively little is said about non-time-based\n   data.\n   A first reading\
    \ of the Multimedia Data Exchange RFT reveals that the\n   Apple Bento standard\
    \ [18] and the Microsoft/IBM RIFF format [25] both\n   influenced the development\
    \ of this document.  The selected system may\n   well be based on one or both\
    \ of these technologies.\n   A joint response to the Multimedia System Services\
    \ RFT has been\n   received from HP, IBM and Sun.  Two responses to the Scripting\n\
    \   Languages RFT have been received - from Kaleida (Script-X) and Gain\n   Technology\
    \ (GEL).  Two partial responses to the Multimedia Data\n   Exchange RFT have been\
    \ received from Apple (Bento) and Avid (Open\n   Media Framework).\n   Responses\
    \ to the RFTs are currently being analysed by the IMA, and\n   the result will\
    \ be announced in November 1993.  The specifications\n   which will eventually\
    \ result from this process will be important for\n   future commercial multimedia\
    \ products.  It is important that the\n   community keep a watching brief on the\
    \ IMA Compatibility Project and\n   its possible implications for distributed\
    \ multimedia applications on\n   the Internet.\n   Multimedia Communications Forum\n\
    \   The Multi-Media [sic] Communications Forum (MMCF) is a recently\n   formed\
    \ (June 1993) trade consortium whose initial members include\n   IBM, National\
    \ Semiconductor, Apple, Siemens and AT&T.  Intended to\n   complement the work\
    \ of the IMA, the MMCF plans to develop guidelines\n   and recommendations for\
    \ the industry to help ensure \"end-to-end\n   network interconnectivity of multimedia\
    \ applications, workstations\n   and devices\".  They also plan to provide input\
    \ to standards bodies.\n   It is still too early to say whether this forum will\
    \ succeed.  If the\n   IMA Compatibility Project specifications, when they are\
    \ published,\n   leave networking issues open, then MMCF could have an important\
    \ role\n   to play.  It is recommended that RARE consider becoming an Observing\n\
    \   Member ($350 US pa), entitling it to attend general and annual MMCF\n   meetings\
    \ (but not committee meetings), and to receive minutes and\n   other general papers\
    \ (but not working documents); with the prospect\n   of becoming an Auditing Member\
    \ ($1200 US pa) later if relevant.\n   Multimedia Communications Community of\
    \ Interest\n   This is a very new organisation formed at a meeting in France in\
    \ June\n   1993.  Its charter is to promote the use of applications which let\n\
    \   people in different locations view documents, images, graphics and\n   full-motion\
    \ video on a PC screen.  The remit includes CSCW aspects.\n   Members of the organisation\
    \ include IBM, Intel, Northern Telecom,\n   Telstra (Australia), BT, France Telecom\
    \ and DB Telekom.  The\n   companies plan field trials of multimedia services\
    \ in 1Q94.\n"
- title: 6. Future Directions
  contents:
  - '6. Future Directions

    '
- title: 6.1. General Comments on the State-of-the-Art
  contents:
  - "6.1. General Comments on the State-of-the-Art\n   Distributed hypermedia systems\
    \ are now emerging from the research\n   phase into the experimental deployment\
    \ stage.  Every project team\n   (and standards committee), almost without exception,\
    \ hopes for their\n   system to become the de facto standard for hypermedia.\n\
    \   As we've seen, Gopher and WWW already offer multimedia capability,\n   but\
    \ they are still largely oriented to the use of external viewers\n   for non-text\
    \ nodes.  This \"unintegrated\" approach is in contrast to\n   typical stand-alone\
    \ multimedia applications, where the presentation\n   of related information in\
    \ different media is tightly integrated.  The\n   in-line image feature of XMosaic\
    \ and the new version of HTML\n   currently under development may represent the\
    \ start of a move towards\n   greater integration of different media in such distributed\
    \ hypermedia\n   systems.\n   Three important factors in the design of distributed\
    \ hypermedia\n   systems appear to emerge from the preceding chapters of this\
    \ report.\n   They can each be formulated in terms of distinctions between two\n\
    \   aspects of the system.\n      o    A common and apparently fruitful approach\
    \ to hypermedia\n           systems is to distinguish the content from the\n \
    \          hyperstructure.  Standards work clearly distinguishes\n           between\
    \ these concepts, with standards such as MPEG, JPEG,\n           G.72x, etc, for\
    \ content; and HyTime or MHEG for structure.\n           Currently-deployed systems\
    \ also make this distinction, most\n           obviously in Gopher, where the\
    \ structure/content split maps\n           onto the server filesystem's directory/file\
    \ split.  In a\n           similar way, the ability to maintain hyperlink information\n\
    \           separately from data is perceived in hypermedia research\n       \
    \    circles as a \"good thing\".  Research systems such as\n           Microcosm\
    \ and Hyper-G do this, and HyTime with its ilink\n           element also supports\
    \ it.  WWW does not support this, but\n           requires link anchors to be\
    \ edited into source data.  There\n           are problems with this approach,\
    \ however - see the section\n           on Microcosm for details.\n      o   \
    \ A useful approach to content is to distinguish the media\n           type from\
    \ the media encoding.  The MIME standard (used by\n           HTTP2) illustrates\
    \ how this can be done, and Gopher+ employs\n           a similar system.\n  \
    \    o    The distinction between data and protocol is also important\n      \
    \     for some systems.  WWW for instance has clearly separate\n           protocol\
    \ (HTTP) and data (HTML) specifications.  However,\n           Gopher+ is specified\
    \ without making this distinction.  (The\n           original Gopher system is\
    \ very simple and arguably has no\n           need for such separation.)\n   The\
    \ most significant mismatches between the capabilities of\n   currentlydeployed\
    \ systems and user requirements are in the areas of\n   presentation and quality\
    \ of service.  Adding flexibility in\n   presentation capabilities to WWW or Gopher\
    \ should be possible without\n   any major change to the protocols (although it\
    \ may require changes to\n   data formats).  Such capabilities could result from\
    \ the progress\n   towards greater integration of media types presaged above.\
    \  However,\n   improving QOS is significantly more difficult, as it may require\n\
    \   changes at a more fundamental level.  The following section outlines\n   some\
    \ possible solutions to this problem.\n"
- title: 6.2. Quality of Service
  contents:
  - "6.2. Quality of Service\n   Meeting the responsiveness requirement is certainly\
    \ the key factor\n   for the acceptance of networked multimedia information systems\
    \ in the\n   user community.  To reiterate the requirement given in a previous\n\
    \   section:\n      o    For simple actions such as \"next page\", tolerable delays\
    \ are\n           of the order of 0.2s.\n      o    For more complex actions such\
    \ as \"search for documents\n           containing this word\", then a tolerable\
    \ delay is of the\n           order of 2s.\n      o    Users tend to give up waiting\
    \ for a response after about\n           20s.\n   There are several methods which\
    \ may alleviate the problem of poor\n   responsiveness (or cause the user to revise\
    \ his or her expectations\n   of responsiveness!), some of which are described\
    \ below.\n      1.   Give clues that fetching a particular item might be time-\n\
    \           consuming - simply quoting the size (and/or location) may be\n   \
    \        sufficient. WAIS and some Gopher clients already quote the\n        \
    \   size.\n      2.   Display a \"progress\" indicator while fetching data.\n\
    \      3.   Allow the user to interact with other, previously fetched\n      \
    \     information while waiting for data to be retrieved.  The\n           inability\
    \ to do this is an annoying limitation of XMosaic.\n           It can be difficult\
    \ to implement, except on a multi-threaded\n           operating system such as\
    \ OS/2 or Windows NT.\n      4.   Allow several fetches to be performed in parallel.\
    \  Again,\n           multithreading support makes this easier.  This technique\
    \ is\n           less likely to be useful if all the nodes being requested\n \
    \          come from the same server.\n      5.   Pre-fetch information which\
    \ the client software believes the\n           user will wish to see next.  This\
    \ requires some \"hints\" in\n           the data about which nodes might be good\
    \ candidates for pre-\n           fetching.\n      6.   Cache information locally.\
    \  The use of Universal Resource\n           Numbers (see the section on WWW)\
    \ is relevant for managing\n           this.\n      7.   Where multiple copies\
    \ of the same information are held in\n           different network locations,\
    \ fetch the \"nearest\" copy.  This\n           is sometimes known as \"anycasting\"\
    , and is a more general\n           case of local caching.  The proposed URN-to-URL\
    \ resolution\n           service [26] could be used to support this.\n      8.\
    \   When retrieving a document, the client should be able to\n           display\
    \ the first part of the document to the user.  The\n           user can then start\
    \ to read the document while the system is\n           still downloading it. \
    \ Alternatively, the user may decide\n           that the document is not relevant\
    \ and abort the retrieval.\n      9.   Offer multiple views of image or video\
    \ data at different\n           resolutions and therefore sizes.  This enables\
    \ the user to\n           select a balance between speed of retrieval and data\n\
    \           quality.  Gopher+ and HTML2 both support this.\n      10.  Future\
    \ high-speed networks and protocols (ATM, RTP) will\n           allow real-time\
    \ display of isochronous data.  Information\n           systems should be able\
    \ to take advantage of this.\n   A useful description of the problem is given\
    \ in [27].  This paper\n   rightly contends that the view, held by many hypermedia\
    \ researchers\n   and implementors, that the network is simply a transparent data\n\
    \   highway which needs no special consideration in application design,\n   is\
    \ wrong.  It is argued that:\n               \"the very same structural characteristics\
    \ that may make\n               a multimedia document appealing to the end user\
    \ are the\n               characteristics that are extremely helpful during\n\
    \               dynamic network performance optimisation\".\n   This is a particularly\
    \ relevant statement considered in the light of\n   suggestion 5 above.\n"
- title: 6.3. Recommended Further Work
  contents:
  - "6.3. Recommended Further Work\n   To meet the needs of applications such as those\
    \ described in section\n   2.1, the community must seek where possible to adapt\
    \ and enhance\n   existing tools, not to build new ones.  There is now an opportunity\n\
    \   for RARE to stimulate and encourage this process of adaptation and\n   enhancement,\
    \ and the following subsections outline a strategy for\n   this.\n   Selecting\
    \ a System\n   In order to have the greatest effect, RARE should concentrate its\n\
    \   efforts on only one of the existing tools.  Candidate technologies\n   are\
    \ those already outlined: Gopher, WWW, WAIS, Hyper-G, Microcosm and\n   AthenaMuse\
    \ 2.\n   It is recommended that RARE should select the World-Wide Web to\n   concentrate\
    \ its efforts on.  The reasons for this decision are as\n   follows.\n      o\
    \    Flexibility.  The rich yet straightforward design of WWW,\n           with\
    \ its clearly separable components (HTML, URL and HTTP),\n           means that\
    \ it is a very flexible basis on which to develop\n           distributed multimedia\
    \ applications.\n      o    Existing efforts.  The WWW implementor community is\
    \ already\n           discussing and designing extensions to HTML (HTML2),\n \
    \          intended (among other things) to support multimedia.  There\n     \
    \      is clearly much interest in this area, and RARE efforts\n           could\
    \ complement existing work.\n      o    Hyperlinks.  A clear requirement of many\
    \ applications is the\n           availability of hyperlinking, which WWW supports\
    \ well.\n      o    Integrated solution.  Because WAIS, Gopher and Hyper-G (as\n\
    \           well as anonymous FTP servers) may all be accessed from Web\n    \
    \       clients, WWW serves as an important integrating tool for\n           information\
    \ services. It is important that distributed\n           multimedia applications,\
    \ which require extensive support in\n           the client software, should be\
    \ based on a technology \"close\n           to\" such integrated clients.\n  \
    \    o    Penetration and growth.  Although Gopher far surpasses WWW\n       \
    \    in the number of servers available, the rate of growth in\n           WWW\
    \ usage is greater than that of Gopher.  There is an\n           increasing realisation\
    \ in the community that Gopher is over-\n           simplistic for many purposes,\
    \ and a corresponding increase\n           in interest in WWW.\n      o    Attention\
    \ to QOS issues.  There is already an awareness in\n           the WWW community\
    \ of the need for achieving an appropriate\n           QOS, and a mechanism has\
    \ already been proposed in HTTP2 to\n           alleviate the problem.\n     \
    \ o    Standardisation.  The WWW team is taking standardisation of\n         \
    \  the existing WWW system components seriously.  The URL\n           format has\
    \ already been published as an Internet draft (and\n           has been adopted\
    \ as an important component of the proposed\n           Internet integrated information\
    \ infrastructure), and the\n           current version of HTML is about to follow\
    \ suit.  The use of\n           SGML as the basis of HTML complies with the perceived\n\
    \           importance of SGML for hypermedia in general (and also fits\n    \
    \       in with RARE's approach of adopting appropriate open\n           standards).\n\
    \      o    Software status.  CERN has recently placed the WWW code\n        \
    \   developed by it into the public domain.  This is unlike all\n           the\
    \ other candidate technologies, which all have\n           restrictions on who\
    \ can do what with the code.  In the case\n           of Gopher, these restrictions\
    \ are already causing some\n           commercial users to look at other options.\n\
    \   WWW has two significant disadvantages, both of which are being\n   alleviated:\n\
    \      o    Restricted choice of client software.  At present, Apple\n       \
    \    Macintosh and PC/MS Windows clients are available in beta\n           form\
    \ only.  By contrast, there are more than one well-tested\n           Gopher clients\
    \ available for these platforms.\n           However, other WWW clients for the\
    \ Mac and MS Windows are in\n           the pipeline.\n      o    There is a perception\
    \ in the community that making\n           information available over HTTP is\
    \ difficult, and that it\n           must be put into HTML.\n           However,\
    \ it is possible to put plain-text, non-HTML\n           documents onto the Web.\
    \  Such documents of course cannot\n           contain links.\n           Furthermore,\
    \ WYSIWYG HTML text editors are available, to\n           ease the pain of writing\
    \ HTML.\n   The main disadvantages of the other systems are:\n      o    Gopher\
    \ is designed for simplicity, and therefore lacks the\n           flexibility\
    \ of WWW.  In particular its structure is too\n           inflexibly hierarchical\
    \ and it does not have hyperlinks.\n           Its main advantage is its very\
    \ heavy penetration.  However,\n           because of the WWW approach to accessing\
    \ data using other\n           protocols, all of gopherspace is part of the Web.\
    \  Any Web\n           client should be able to be a gopher client too.\n    \
    \       It is neither envisaged that Gopher will go away, nor that\n         \
    \  it won't be used for multimedia data.  However, Gopher is\n           unlikely\
    \ to be used for more sophisticated multimedia\n           applications such as\
    \ academic publishing, interactive\n           multimedia databases and CAL, because\
    \ of the above-mentioned\n           limitations.\n      o    WAIS is a specialised\
    \ tool, and will certainly form part of\n           the overall solution, particularly\
    \ for database-type\n           applications.  It is not a general solution for\
    \ distributed\n           hypermedia applications.\n      o    AthenaMuse 2 is\
    \ commercially-oriented: it is clear that\n           academic and research users\
    \ will have to pay to use the\n           software.  Its level of use is thus\
    \ very unlikely to be as\n           great as publiclyavailable systems such as\
    \ WWW.  Moreover,\n           it does not support all the required platforms.\n\
    \      o    Microcosm network support is still in early stages, limited\n    \
    \       at present to the PC/Windows platform.  If it can be shown\n         \
    \  to perform adequately over a network, if it is capable of\n           scaling\
    \ to global levels, and if the advantages of\n           maintaining link information\
    \ separately from documents are\n           found clearly to outweigh the consequent\
    \ difficulties, it\n           may become important in the future. Microcosm's\
    \ authors need\n           to ensure that the commercialisation of Microcosm does\
    \ not\n           hinder its adoption by the academic community.\n      o    Hyper-G\
    \ is more difficult to dismiss.  It is still in a\n           relatively early\
    \ stage of development, but appears to have\n           many of the necessary\
    \ features.  Its main disadvantages are:\n           (a) the lack of penetration\
    \ outside the University of Graz -\n           the author is aware of only one\
    \ other site using it; and (b)\n           it is currently limited to UNIX only.\
    \  The author believes\n           that, given WWW's head start in terms of deployment,\
    \ and the\n           current progress in adding multimedia facilities to it,\
    \ WWW\n           stands a much better chance than Hyper-G of being accepted\n\
    \           as the de facto standard for distributed multimedia\n           applications\
    \ on the Internet.\n   Directions for RARE\n   Earlier in this report, it was\
    \ noted that the most important areas\n   where effort was needed were (a) provision\
    \ of facilities for the\n   integrated presentation of multimedia data (including\
    \ synchronisation\n   issues); and (b) ensuring adequate responsiveness.\n   Bearing\
    \ this in mind, it is recommended that RARE should invite\n   proposals and (subject\
    \ to funding being available) subsequently\n   commission work to:\n      1. \
    \  Develop conversion tools from commercial authoring packages\n           to\
    \ WWW, and establish authoring guidelines for authors who\n           wish to\
    \ use the conversion tools.  This is a significant and\n           high-profile\
    \ development aimed at enabling sophisticated\n           multimedia applications\
    \ to run over the network.  (Authoring\n           guidelines will be necessary\
    \ to enable authors to fit in\n           with the Web's way of doing things,\
    \ and to document features\n           of the authoring package which should be\
    \ avoided because of\n           conversion difficulties.)\n      2.   Implement\
    \ and evaluate the most promising ways of overcoming\n           the QOS problem.\
    \  This is an essential task without which\n           interactive distributed\
    \ multimedia applications cannot\n           become a reality.  Some possibilities\
    \ have already been\n           outlined in the preceding chapter.\n      3. \
    \  Implement a specific user project using these tools, in\n           order to\
    \ validate that the facilities being developed are\n           truly relevant\
    \ to actual user requirements.  It may be that\n           partner funding from\
    \ the selected user project would be\n           appropriate.\n      4.   Use\
    \ the experience gained from 1, 2 and 3 to inform and\n           influence the\
    \ further development of HTML2 and HTTP2 to\n           ensure that they provide\
    \ the required facilities.\n      5.   Contribute to the development of the WWW\
    \ clients\n           (particularly the Apple Macintosh and PC/MS Windows clients)\n\
    \           in terms of their multimedia data handling facilities.\n   Although\
    \ it is strictly speaking outside the remit of this report\n   (since it is not\
    \ specifically concerned with multimedia data), it is\n   noted that the rapid\
    \ growth of WWW may in the future lead to problems\n   through the implementation\
    \ of multiple, uncoordinated and mutually\n   incompatible add-on features.  To\
    \ guard against this trend, it may be\n   appropriate for RARE, in coordination\
    \ with CERN and other interested\n   parties such as NCSA, to:\n      6.   Encourage\
    \ the formation of a consortium to coordinate WWW\n           technical development\
    \ (protocol enhancements, etc).\n"
- title: 7. References
  contents:
  - "7. References\n      [1]         \"A Survey of Distributed Multimedia Research,\n\
    \                  Standards and Products\", ed. C. Adie, January 1993\n     \
    \             (RARE Technical Report 5).\n                  URL=ftp://ftp.ed.ac.uk/pub/mmsurvey/\n\
    \      [2]         \"The Dexter Hypertext Reference Model\", F. Halasz and\n \
    \                 M. Schwartz, NIST Hypertext Standardisation Workshop,\n    \
    \              January 1990.\n      [3]         \"Response Time and Display Rate\
    \ in Human Performance\n                  with Computers\", B. Shneiderman, Comp.\
    \ Surveys 16,\n                  1984.\n      [4]         \"Gopher+: Proposed\
    \ Enhancements to the Internet\n                  Gopher Protocol\", B. Alberti,\
    \ F. Anklesaria, P. Linder,\n                  M. McCahill, D. Torrey, Summer\
    \ 1992.\n                  URL=gopher://boombox.micro.umn.edu:70/11/gopher/gop\n\
    \                  her_protocol/Gopher%2b\n      [5]         \"WAIS Interface\
    \ Protocol\", F. Davies, B. Kahle, H.\n                  Morris, J. Salem, T.\
    \ Shen, R. Wang, J. Sui and M.\n                  Grinbaum, April 1990.\n    \
    \              URL=ftp://quake.think.com/wais/doc/protspec.txt\n      [6]    \
    \     \"Uniform Resource Locators\", T. Berners-Lee, March\n                 \
    \ 1993.  URL=ftp://info.cern.ch/pub/ietf/url4.ps\n      [7]         \"The HTTP\
    \ Protocol as Implemented in W3\", T. Berners-\n                  Lee, January\
    \ 1992.\n                  URL=ftp://info.cern.ch/pub/www/doc/http.txt\n     \
    \ [8]         \"Protocol for the Retrieval and Manipulation of\n             \
    \     Textual and Hypermedia Information\", T. Berners-Lee,\n                \
    \  1993.  URL=ftp://info.cern.ch/pub/www/doc/httpspec.ps\n      [9]         \"\
    Hypertext Markup Language (HTML)\", T Berners-Lee,\n                  March 1993.\
    \ URL=ftp://info.cern.ch/pub/www/doc/html-\n                  spec.ps\n      [10]\
    \        \"Hyper-G: A Universal Hypermedia System\", F. Kappe and\n          \
    \        N. Sherbakov, March 1992. URL=ftp://iicm.tu-\n                  graz.ac.at/pub/HyperG/doc/report333.txt.Z\n\
    \      [11]        \"Towards an Integrated Information Environment with\n    \
    \              Open Hypermedia Systems\", H. Davis, W. Hall, I. Heath,\n     \
    \             G. Hill, Proceedings of the ACM Conference on\n                \
    \  Hypertext, Milan 1992, p181-190.\n      [12]        \"The AthenaMuse 2 Functional\
    \ Specification\", L.\n                  Bolduc, J. Culbert T. Harada, J. Harward,\
    \ E.\n                  Schlusselberg, May 1992.\n                  URL=ftp://ceci.mit.edu/pub/AM2/funcspec.txt.Z\n\
    \      [13]        \"Research and Technology Development in Advanced\n       \
    \           Communications Technologies in Europe: RACE '92\",\n             \
    \     CEC, March 1992.  Available from:\n                  raco@postman.dg13.cec.be\n\
    \      [14]        \"Esprit Programme Synopses\", CEC, October 1992.  In\n   \
    \               seven volumes.  Available from\n                  esprit_order_mailbox@eurokom.ie\n\
    \      [15]        \"CMIFed: A Presentation Environment for Portable\n       \
    \           Hypermedia Documents\", G. van Rossum, J. Jansen, K. S.\n        \
    \          Mullender, D. C. A. Bulterman, Amsterdam 1993 (also\n             \
    \     presented at ACM Multimedia 93 conference).\n                  URL=ftp://ftp.cwi.nl/pub/CWIreports/CST/CSR9305.ps.Z\n\
    \      [16]        \"The Amsterdam Hypermedia Model: extending hypertext\n   \
    \               to support real multimedia\", L. Hardman, D. C. A.\n         \
    \         Bulterman, G. van Rossum, Amsterdam 1993\n                  URL=ftp://ftp.cwi.nl/pub/CWIreports/CST/CSR9306.ps.Z\n\
    \      [17]        \"Deja-Vu Distributed Hypermedia Application\n            \
    \      Framework\", A. Eliens.\n                  URL=ftp://ftp.cs.vu.nl/eliens/Deja-Vu-proposal.ps\n\
    \      [18]        \"Bento Specification\", J. Harris and I. Ruben, Apple\n  \
    \                Computer Inc, August 1992.\n                  URL=ftp://ftp.apple.com/apple/standards/Bento_1.0d4.1\n\
    \      [19]        \"Davenport Advisory Standard for Hypermedia (DASH),\n    \
    \              Module I: Standard Open Formal Architecture for\n             \
    \     Browsable Hypermedia Documents (SOFABED)\", ed S. R.\n                 \
    \ Newcomb and V. T. Newcomb.\n                  URL=ftp://sgml1.ex.ac.uk/davenport/sofabed.0.9.6.ps.Z\n\
    \      [20]        Article in comp.text.sgml newsgroup, 24 May 1993, by\n    \
    \              Eliot Kimber (drmacro@vnet.ibm.com).\n                  URL=ftp://ftp.ifi.uio.no/SGML/comp.text.sgml/by.msg\n\
    \                  id/19930524.152345.29@almaden.ibm.com\n      [21]        \"\
    Emerging Hypermedia Standards\" B. Markey, Multimedia\n                  for Now\
    \ and the Future (Usenix Conference\n                  Proceedings), June 1991.\n\
    \      [22]        \"Initial Draft PREMO (Presentation Environment for\n     \
    \             Multimedia Objects\", ISO/IEC JTC1/SC24 N847, November\n       \
    \           1992.\n      [23]        \"Recommended Practices for Multimedia Portability\"\
    ,\n                  Release 1.1 October 1990, Interactive Multimedia\n      \
    \            Association, 3 Church Circle, Suite 800, Annapolis,\n           \
    \       MD 21401-1993, USA.\n      [24]        \"Recommended Practices for Enhancing\
    \ Digital Audio\n                  Compatability in Multimedia Systems\", Release\
    \ 3.00\n                  1992, Interactive Multimedia Association, 3 Church\n\
    \                  Circle, Suite 800, Annapolis, MD 21401-1993, USA.\n      [25]\
    \        \"RIFF Tagged File Format\", Microsoft Inc, 1992.\n      [26]       \
    \ \"A Vision of an Integrated Internet Information\n                  Service\"\
    , C. Weider and P. Deutsch, March 1993,\n                  Work in Progress.\n\
    \      [27]        \"Delivering Interactive Multimedia Documents over\n      \
    \            Networks\", S. Loeb, IEEE Communications Magazine, May\n        \
    \          1992.\n      [28]        \"A Status Report on Networked Information\
    \ Retrieval:\n                  Tools and Groups\", ed. J. Foster, G. Brett and\
    \ P.\n                  Deutsch, March 1993.\n                  URL=ftp://mailbase.ac.uk/pub/nir/nir.status.report\n"
- title: 8. Security Considerations
  contents:
  - "8. Security Considerations\n   Security issues are not discussed in this memo.\n"
- title: 9. Author's Address
  contents:
  - "9. Author's Address\n   Chris Adie\n   Edinburgh University Computing Service\n\
    \   University Library\n   George Square\n   Edinburgh EH8 9LJ\n   United Kingdom\n\
    \   Phone: +44 31 650 3363\n   Fax:   +44 31 662 4809\n   EMail: C.J.Adie@edinburgh.ac.uk\n"
