- title: __initial_text__
  contents:
  - "          Network Working Group                                  J. Case\n  \
    \        Request for Comments: 1444                 SNMP Research, Inc.\n    \
    \                          Conformance Statements\n                          \
    \     for version 2 of the\n                   Simple Network Management Protocol\
    \ (SNMPv2)\n          Status of this Memo\n          This RFC specifes an IAB\
    \ standards track protocol for the\n          Internet community, and requests\
    \ discussion and suggestions\n          for improvements.  Please refer to the\
    \ current edition of the\n          \"IAB Official Protocol Standards\" for the\
    \ standardization\n          state and status of this protocol.  Distribution\
    \ of this memo\n          is unlimited.\n          Table of Contents\n       \
    \   1 Introduction ..........................................    2\n         \
    \ 1.1 A Note on Terminology ...............................    2\n          2\
    \ Definitions ...........................................    3\n          3.1\
    \ The OBJECT-GROUP macro ..............................    3\n          3.2 The\
    \ MODULE-COMPLIANCE macro .........................    4\n          3.3 The AGENT-CAPABILITIES\
    \ macro ........................    7\n          3 Mapping of the OBJECT-GROUP\
    \ macro .....................   10\n          3.1 Mapping of the OBJECTS clause\
    \ .......................   10\n          3.2 Mapping of the STATUS clause ........................\
    \   10\n          3.3 Mapping of the DESCRIPTION clause ...................  \
    \ 10\n          3.4 Mapping of the REFERENCE clause .....................   11\n\
    \          3.5 Mapping of the OBJECT-GROUP value ...................   11\n  \
    \        3.6 Usage Example .......................................   12\n    \
    \      4 Mapping of the MODULE-COMPLIANCE macro ................   13\n      \
    \    4.1 Mapping of the STATUS clause ........................   13\n        \
    \  4.2 Mapping of the DESCRIPTION clause ...................   13\n          4.3\
    \ Mapping of the REFERENCE clause .....................   13\n          4.4 Mapping\
    \ of the MODULE clause ........................   13\n          4.4.1 Mapping\
    \ of the MANDATORY-GROUPS clause ............   14\n          4.4.2 Mapping of\
    \ the GROUP clause .......................   14\n          4.4.3 Mapping of the\
    \ OBJECT clause ......................   14\n          RFC 1444      Conformance\
    \ Statements for SNMPv2     April 1993\n          4.4.3.1 Mapping of the SYNTAX\
    \ clause ....................   15\n          4.4.3.2 Mapping of the WRITE-SYNTAX\
    \ clause ..............   15\n          4.4.3.3 Mapping of the MIN-ACCESS clause\
    \ ................   15\n          4.4.3.4 Mapping of the DESCRIPTION clause ...............\
    \   16\n          4.5 Mapping of the MODULE-COMPLIANCE value ..............  \
    \ 16\n          4.6 Usage Example .......................................   17\n\
    \          5 Mapping of the AGENT-CAPABILITIES macro ...............   19\n  \
    \        5.1 Mapping of the PRODUCT-RELEASE clause ...............   20\n    \
    \      5.2 Mapping of the STATUS clause ........................   20\n      \
    \    5.3 Mapping of the DESCRIPTION clause ...................   20\n        \
    \  5.4 Mapping of the REFERENCE clause .....................   20\n          5.5\
    \ Mapping of the SUPPORTS clause ......................   20\n          5.5.1\
    \ Mapping of the INCLUDES clause ....................   21\n          5.5.2 Mapping\
    \ of the VARIATION clause ...................   21\n          5.5.2.1 Mapping\
    \ of the SYNTAX clause ....................   21\n          5.5.2.2 Mapping of\
    \ the WRITE-SYNTAX clause ..............   21\n          5.5.2.3 Mapping of the\
    \ ACCESS clause ....................   22\n          5.5.2.4 Mapping of the CREATION-REQUIRES\
    \ clause .........   22\n          5.5.2.5 Mapping of the DEFVAL clause ....................\
    \   23\n          5.5.2.6 Mapping of the DESCRIPTION clause ...............  \
    \ 23\n          5.6 Mapping of the AGENT-CAPABILITIES value .............   23\n\
    \          5.7 Usage Example .......................................   24\n  \
    \        6 Extending an Information Module .......................   26\n    \
    \      6.1 Conformance Groups ..................................   26\n      \
    \    6.2 Compliance Definitions ..............................   26\n        \
    \  6.3 Capabilities Definitions ............................   26\n          7\
    \ Acknowledgements ......................................   27\n          8 References\
    \ ............................................   31\n          9 Security Considerations\
    \ ...............................   32\n          10 Authors' Addresses ...................................\
    \   32\n          RFC 1444      Conformance Statements for SNMPv2     April 1993\n\
    \          1.  Introduction\n          A network management system contains: several\
    \ (potentially\n          many) nodes, each with a processing entity, termed an\
    \ agent,\n          which has access to management instrumentation; at least one\n\
    \          management station; and, a management protocol, used to convey\n  \
    \        management information between the agents and management\n          stations.\
    \  Operations of the protocol are carried out under an\n          administrative\
    \ framework which defines both authentication and\n          authorization policies.\n\
    \          Network management stations execute management applications\n     \
    \     which monitor and control network elements.  Network elements\n        \
    \  are devices such as hosts, routers, terminal servers, etc.,\n          which\
    \ are monitored and controlled through access to their\n          management information.\n\
    \          Management information is viewed as a collection of managed\n     \
    \     objects, residing in a virtual information store, termed the\n         \
    \ Management Information Base (MIB).  Collections of related\n          objects\
    \ are defined in MIB modules.  These modules are written\n          using a subset\
    \ of OSI's Abstract Syntax Notation One (ASN.1)\n          [1], termed the Structure\
    \ of Management Information (SMI) [2].\n          It may be useful to define the\
    \ acceptable lower-bounds of\n          implementation, along with the actual\
    \ level of implementation\n          achieved.  It is the purpose of this document\
    \ to define the\n          notation used for these purposes.\n          1.1. \
    \ A Note on Terminology\n          For the purpose of exposition, the original\
    \ Internet-standard\n          Network Management Framework, as described in RFCs\
    \ 1155, 1157,\n          and 1212, is termed the SNMP version 1 framework (SNMPv1).\n\
    \          The current framework is termed the SNMP version 2 framework\n    \
    \      (SNMPv2).\n          RFC 1444      Conformance Statements for SNMPv2  \
    \   April 1993\n          2.  Definitions\n          SNMPv2-CONF DEFINITIONS ::=\
    \ BEGIN\n          -- definitions for conformance groups\n          OBJECT-GROUP\
    \ MACRO ::=\n          BEGIN\n              TYPE NOTATION ::=\n              \
    \              ObjectsPart\n                            \"STATUS\" Status\n  \
    \                          \"DESCRIPTION\" Text\n                            ReferPart\n\
    \              VALUE NOTATION ::=\n                            value(VALUE OBJECT\
    \ IDENTIFIER)\n              ObjectsPart ::=\n                            \"OBJECTS\"\
    \ \"{\" Objects \"}\"\n              Objects ::=\n                           \
    \ Object\n                          | Objects \",\" Object\n              Object\
    \ ::=\n                            value(Name ObjectName)\n              Status\
    \ ::=\n                            \"current\"\n                          | \"\
    obsolete\"\n              ReferPart ::=\n                            \"REFERENCE\"\
    \ Text\n                          | empty\n              -- uses the NVT ASCII\
    \ character set\n              Text ::= \"\"\"\" string \"\"\"\"\n          END\n\
    \          RFC 1444      Conformance Statements for SNMPv2     April 1993\n  \
    \        -- definitions for compliance statements\n          MODULE-COMPLIANCE\
    \ MACRO ::=\n          BEGIN\n              TYPE NOTATION ::=\n              \
    \              \"STATUS\" Status\n                            \"DESCRIPTION\"\
    \ Text\n                            ReferPart\n                            ModulePart\n\
    \              VALUE NOTATION ::=\n                            value(VALUE OBJECT\
    \ IDENTIFIER)\n              Status ::=\n                            \"current\"\
    \n                          | \"obsolete\"\n              ReferPart ::=\n    \
    \                      \"REFERENCE\" Text\n                        | empty\n \
    \             ModulePart ::=\n                            Modules\n          \
    \                | empty\n              Modules ::=\n                        \
    \    Module\n                          | Modules Module\n              Module\
    \ ::=\n                            -- name of module --\n                    \
    \        \"MODULE\" ModuleName\n                            MandatoryPart\n  \
    \                          CompliancePart\n              ModuleName ::=\n    \
    \                        modulereference ModuleIdentifier\n                  \
    \        -- must not be empty unless contained\n                          -- in\
    \ MIB Module\n                          | empty\n              ModuleIdentifier\
    \ ::=\n                            value(ModuleID OBJECT IDENTIFIER)\n       \
    \                   | empty\n              MandatoryPart ::=\n               \
    \             \"MANDATORY-GROUPS\" \"{\" Groups \"}\"\n                      \
    \    | empty\n          RFC 1444      Conformance Statements for SNMPv2     April\
    \ 1993\n              Groups ::=\n                            Group\n        \
    \                  | Groups \",\" Group\n              Group ::=\n           \
    \                 value(Group OBJECT IDENTIFIER)\n              CompliancePart\
    \ ::=\n                            Compliances\n                          | empty\n\
    \              Compliances ::=\n                            Compliance\n     \
    \                     | Compliances Compliance\n              Compliance ::=\n\
    \                            ComplianceGroup\n                          | Object\n\
    \              ComplianceGroup ::=\n                            \"GROUP\" value(Name\
    \ OBJECT IDENTIFIER)\n                            \"DESCRIPTION\" Text\n     \
    \         Object ::=\n                            \"OBJECT\" value(Name ObjectName)\n\
    \                            SyntaxPart\n                            WriteSyntaxPart\n\
    \                            AccessPart\n                            \"DESCRIPTION\"\
    \ Text\n              -- must be a refinement for object's SYNTAX clause\n   \
    \           SyntaxPart ::=\n                            \"SYNTAX\" type(SYNTAX)\n\
    \                          | empty\n              -- must be a refinement for\
    \ object's SYNTAX clause\n              WriteSyntaxPart ::=\n                \
    \            \"WRITE-SYNTAX\" type(WriteSYNTAX)\n                          | empty\n\
    \              AccessPart ::=\n                            \"MIN-ACCESS\" Access\n\
    \                          | empty\n              Access ::=\n               \
    \             \"not-accessible\"\n                          | \"read-only\"\n\
    \                          | \"read-write\"\n          RFC 1444      Conformance\
    \ Statements for SNMPv2     April 1993\n                          | \"read-create\"\
    \n              -- uses the NVT ASCII character set\n              Text ::= \"\
    \"\"\" string \"\"\"\"\n          END\n          RFC 1444      Conformance Statements\
    \ for SNMPv2     April 1993\n          -- definitions for capabilities statements\n\
    \          AGENT-CAPABILITIES MACRO ::=\n          BEGIN\n              TYPE NOTATION\
    \ ::=\n                            \"PRODUCT-RELEASE\" Text\n                \
    \            \"STATUS\" Status\n                            \"DESCRIPTION\" Text\n\
    \                            ReferPart\n                            ModulePart\n\
    \              VALUE NOTATION ::=\n                            -- agent's sysObjectID\
    \ [3] or snmpORID [4]\n                            value(VALUE OBJECT IDENTIFIER)\n\
    \              Status ::=\n                            \"current\"\n         \
    \                 | \"obsolete\"\n              ReferPart ::=\n              \
    \            \"REFERENCE\" Text\n                        | empty\n           \
    \   ModulePart ::=\n                            Modules\n                    \
    \      | empty\n              Modules ::=\n                            Module\n\
    \                          | Modules Module\n              Module ::=\n      \
    \                      -- name of module --\n                            \"SUPPORTS\"\
    \ ModuleName\n                            \"INCLUDES\" \"{\" Groups \"}\"\n  \
    \                          VariationPart\n              ModuleName ::=\n     \
    \                       identifier ModuleIdentifier\n              ModuleIdentifier\
    \ ::=\n                            value(ModuleID OBJECT IDENTIFIER)\n       \
    \                   | empty\n              Groups ::=\n                      \
    \      Group\n                          | Groups \",\" Group\n              Group\
    \ ::=\n          RFC 1444      Conformance Statements for SNMPv2     April 1993\n\
    \                            value(Name OBJECT IDENTIFIER)\n              VariationPart\
    \ ::=\n                            Variations\n                          | empty\n\
    \              Variations ::=\n                            Variation\n       \
    \                   | Variations Variation\n              Variation ::=\n    \
    \                        \"VARIATION\" value(Name ObjectName)\n              \
    \              SyntaxPart\n                            WriteSyntaxPart\n     \
    \                       AccessPart\n                            CreationPart\n\
    \                            DefValPart\n                            \"DESCRIPTION\"\
    \ Text\n              -- must be a refinement for object's SYNTAX clause\n   \
    \           SyntaxPart ::=\n                            \"SYNTAX\" type(SYNTAX)\n\
    \                          | empty\n              -- must be a refinement for\
    \ object's SYNTAX clause\n              WriteSyntaxPart ::=\n                \
    \            \"WRITE-SYNTAX\" type(WriteSYNTAX)\n                          | empty\n\
    \              AccessPart ::=\n                            \"ACCESS\" Access\n\
    \                          | empty\n              Access ::=\n               \
    \             \"not-implemented\"\n                          | \"read-only\"\n\
    \                          | \"read-write\"\n                          | \"read-create\"\
    \n                          -- following is for backward-compatibility only\n\
    \                          | \"write-only\"\n              CreationPart ::=\n\
    \                            \"CREATION-REQUIRES\" \"{\" Cells \"}\"\n       \
    \                   | empty\n              Cells ::=\n          RFC 1444     \
    \ Conformance Statements for SNMPv2     April 1993\n                         \
    \   Cell\n                          | Cells \",\" Cell\n              Cell ::=\n\
    \                            value(Cell ObjectName)\n              DefValPart\
    \ ::=\n                            \"DEFVAL\" \"{\" value(Defval ObjectSyntax)\
    \ \"}\"\n                          | empty\n              -- uses the NVT ASCII\
    \ character set\n              Text ::= \"\"\"\" string \"\"\"\"\n          END\n\
    \          END\n          RFC 1444      Conformance Statements for SNMPv2    \
    \ April 1993\n          3.  Mapping of the OBJECT-GROUP macro\n          For conformance\
    \ purposes, it is useful to define a collection\n          of related managed\
    \ objects.  The OBJECT-GROUP macro is used to\n          define each such collection\
    \ of related objects.  It should be\n          noted that the expansion of the\
    \ OBJECT-GROUP macro is\n          something which conceptually happens during\
    \ implementation and\n          not during run-time.\n          To \"implement\"\
    \ an object, a SNMPv2 entity acting in an agent\n          role must return a\
    \ reasonably accurate value for management\n          protocol retrieval operations;\
    \ similarly, if the object is\n          writable, then in response to a management\
    \ protocol set\n          operation, a SNMPv2 entity must accordingly be able\
    \ to\n          reasonably influence the underlying managed entity.  If a\n  \
    \        SNMPv2 entity acting in an agent role can not implement an\n        \
    \  object, the management protocol provides for the SNMPv2 entity\n          to\
    \ return an exception or error, e.g, noSuchObject [6].  Under\n          no circumstances\
    \ shall a SNMPv2 entity return a value for\n          objects which it does not\
    \ implement -- it must always return\n          the appropriate exception or error,\
    \ as described in the\n          protocol specification [6].\n          3.1. \
    \ Mapping of the OBJECTS clause\n          The OBJECTS clause which must be present,\
    \ is used to name each\n          object contained in the conformance group. \
    \ Each of the named\n          objects must be defined in the same information\
    \ module as the\n          OBJECT-GROUP macro appears, and must have a MAX-ACCESS\
    \ clause\n          value of \"read-only\", \"read-write\", or \"read-create\"\
    .\n          3.2.  Mapping of the STATUS clause\n          The STATUS clause,\
    \ which must be present, indicates whether\n          this definition is current\
    \ or historic.\n          The values \"current\", and \"obsolete\" are self-explanatory.\n\
    \          3.3.  Mapping of the DESCRIPTION clause\n          The DESCRIPTION\
    \ clause, which must be present, contains a\n          textual definition of that\
    \ group, along with a description of\n          RFC 1444      Conformance Statements\
    \ for SNMPv2     April 1993\n          any relations to other groups.  Note that\
    \ generic compliance\n          requirements should not be stated in this clause.\
    \  However,\n          implementation relationships between this group and other\n\
    \          groups may be defined in this clause.\n          3.4.  Mapping of the\
    \ REFERENCE clause\n          The REFERENCE clause, which need not be present,\
    \ contains a\n          textual cross-reference to a group  defined in some other\n\
    \          information module.  This is useful when de-osifying a MIB\n      \
    \    module produced by some other organization.\n          3.5.  Mapping of the\
    \ OBJECT-GROUP value\n          The value of an invocation of the OBJECT-GROUP\
    \ macro is the\n          name of the group, which is an OBJECT IDENTIFIER, an\n\
    \          administratively assigned name.\n          RFC 1444      Conformance\
    \ Statements for SNMPv2     April 1993\n          3.6.  Usage Example\n      \
    \    Consider how the system group from MIB-II [3] might be\n          described:\n\
    \          systemGroup OBJECT-GROUP\n              OBJECTS     { sysDescr, sysObjectID,\
    \ sysUpTime,\n                            sysContact, sysName, sysLocation,\n\
    \                            sysServices }\n              STATUS  current\n  \
    \            DESCRIPTION\n                      \"The system group defines objects\
    \ which are common\n                      to all managed systems.\"\n        \
    \      ::= { mibIIGroups 1 }\n          According to this invocation, the conformance\
    \ group named\n               { mibIIGroups 1 }\n          contains 7 objects.\n\
    \          RFC 1444      Conformance Statements for SNMPv2     April 1993\n  \
    \        4.  Mapping of the MODULE-COMPLIANCE macro\n          The MODULE-COMPLIANCE\
    \ macro is used to convey a minimum set of\n          requirements with respect\
    \ to implementation of one or more MIB\n          modules.  It should be noted\
    \ that the expansion of the\n          MODULE-COMPLIANCE macro is something which\
    \ conceptually\n          happens during implementation and not during run-time.\n\
    \          A requirement on all \"standard\" MIB modules is that a\n         \
    \ corresponding MODULE-COMPLIANCE specification is also defined,\n          either\
    \ in the same information module or in a companion\n          information module.\n\
    \          4.1.  Mapping of the STATUS clause\n          The STATUS clause, which\
    \ must be present, indicates whether\n          this definition is current or\
    \ historic.\n          The values \"current\", and \"obsolete\" are self-explanatory.\n\
    \          The \"deprecated\" value indicates that that object is obsolete,\n\
    \          but that an implementor may wish to support that object to\n      \
    \    foster interoperability with older implementations.\n          4.2.  Mapping\
    \ of the DESCRIPTION clause\n          The DESCRIPTION clause, which must be present,\
    \ contains a\n          textual definition of this compliance statement and should\n\
    \          embody any information which would otherwise be communicated\n    \
    \      in any ASN.1 commentary annotations associated with the\n          statement.\n\
    \          4.3.  Mapping of the REFERENCE clause\n          The REFERENCE clause,\
    \ which need not be present, contains a\n          textual cross-reference to\
    \ a compliance statement defined in\n          some other information module.\n\
    \          4.4.  Mapping of the MODULE clause\n          The MODULE clause, which\
    \ must be present, is repeatedly used\n          to name each MIB module for which\
    \ compliance requirements are\n          RFC 1444      Conformance Statements\
    \ for SNMPv2     April 1993\n          being specified.  Each MIB module is named\
    \ by its module name,\n          and optionally, by its associated OBJECT IDENTIFIER\
    \ as well.\n          The module name can be omitted when the MODULE-COMPLIANCE\n\
    \          invocation occurs inside a MIB module, to refer to the\n          encompassing\
    \ MIB module.\n          4.4.1.  Mapping of the MANDATORY-GROUPS clause\n    \
    \      The MANDATORY-GROUPS clause, which need not be present, names\n       \
    \   the one or more groups within the correspondent MIB module\n          which\
    \ are unconditionally mandatory for implementation.  If a\n          SNMPv2 entity\
    \ acting in an agent role claims compliance to the\n          MIB module, then\
    \ it must implement each and every object\n          within each conformance group\
    \ listed.  That is, if a SNMPv2\n          entity returns a noSuchObject exception\
    \ in response to a\n          management protocol get operation [5] for any object\
    \ within\n          any mandatory conformance group for every MIB view, then that\n\
    \          SNMPv2 entity is not a conformant implementation of the MIB\n     \
    \     module.\n          4.4.2.  Mapping of the GROUP clause\n          The GROUP\
    \ clause which need not be present, is repeatedly used\n          to name each\
    \ MIB group which is conditionally mandatory or\n          unconditionally optional\
    \ for compliance to the MIB module.  A\n          MIB group named in a GROUP clause\
    \ must be absent from the\n          correspondent MANDATORY-GROUPS clause.\n\
    \          Conditionally mandatory groups include those which are\n          mandatory\
    \ only if a particular protocol is implemented, or\n          only if another\
    \ group is implemented.  A GROUP clause's\n          DESCRIPTION specifies the\
    \ conditions under which the group is\n          conditionally mandatory.\n  \
    \        A MIB group which is named in neither a MANDATORY-GROUPS\n          clause\
    \ nor a GROUP clause, is unconditionally optional for\n          compliance to\
    \ the MIB module.\n          4.4.3.  Mapping of the OBJECT clause\n          The\
    \ OBJECT clause which need not be present, is repeatedly\n          used to name\
    \ each MIB object for which compliance has a\n          RFC 1444      Conformance\
    \ Statements for SNMPv2     April 1993\n          refined requirement with respect\
    \ to the MIB module definition.\n          The MIB object must be present in one\
    \ of the conformance\n          groups named in the correspondent MANDATORY-GROUPS\
    \ clause or\n          GROUP clauses.\n          4.4.3.1.  Mapping of the SYNTAX\
    \ clause\n          The SYNTAX clause, which need not be present, is used to\n\
    \          provide a refined SYNTAX for the object named in the\n          correspondent\
    \ OBJECT clause.  Note that if this clause and a\n          WRITE-SYNTAX clause\
    \ are both present, then this clause only\n          applies when instances of\
    \ the object named in the\n          correspondent OBJECT clause are read.\n \
    \         Consult Section 10 of [2] for more information on refined\n        \
    \  syntax.\n          4.4.3.2.  Mapping of the WRITE-SYNTAX clause\n         \
    \ The WRITE-SYNTAX clause, which need not be present, is used to\n          provide\
    \ a refined SYNTAX for the object named in the\n          correspondent OBJECT\
    \ clause when instances of that object are\n          written.\n          Consult\
    \ Section 10 of [2] for more information on refined\n          syntax.\n     \
    \     4.4.3.3.  Mapping of the MIN-ACCESS clause\n          The MIN-ACCESS clause,\
    \ which need not be present, is used to\n          define the minimal level of\
    \ access for the object named in the\n          correspondent OBJECT clause. \
    \ If this clause is absent, the\n          minimal level of access is the same\
    \ as the maximal level\n          specified in the correspondent invocation of\
    \ the OBJECT-TYPE\n          macro.  If present, this clause must not specify\
    \ a greater\n          level of access than is specified in the correspondent\n\
    \          invocation of the OBJECT-TYPE macro.\n          The level of access\
    \ for certain types of objects is fixed\n          according to their syntax definition.\
    \  These types are:\n          conceptual tables and rows, auxiliary objects,\
    \ and objects\n          with the syntax of Counter32, Counter64, or certain types\
    \ of\n          RFC 1444      Conformance Statements for SNMPv2     April 1993\n\
    \          textual conventions (e.g., RowStatus [6]).  A MIN-ACCESS\n        \
    \  clause should not be present for such objects.\n          An implementation\
    \ is compliant if the level of access it\n          provides is greater or equal\
    \ to the minimal level in the\n          MODULE-COMPLIANCE macro and less or equal\
    \ to the maximal level\n          in the OBJECT-TYPE macro.\n          4.4.3.4.\
    \  Mapping of the DESCRIPTION clause\n          The DESCRIPTION clause must be\
    \ present for each use of the\n          GROUP or OBJECT clause.  For an OBJECT\
    \ clause, it contains a\n          textual description of the refined compliance\
    \ requirement.\n          For a GROUP clause, it contains a textual description\
    \ of the\n          conditions under which the group is conditionally mandatory\
    \ or\n          unconditionally optional.\n          4.5.  Mapping of the MODULE-COMPLIANCE\
    \ value\n          The value of an invocation of the MODULE-COMPLIANCE macro is\n\
    \          an OBJECT IDENTIFIER.  As such, this value may be\n          authoritatively\
    \ used when referring to the compliance\n          statement embodied by that\
    \ invocation of the macro.\n          RFC 1444      Conformance Statements for\
    \ SNMPv2     April 1993\n          4.6.  Usage Example\n          Consider how\
    \ a compliance statement might be included at the\n          end of the MIB-II\
    \ document [3], assuming that conformance\n          groups were defined therein:\n\
    \          mibIICompliances\n                         OBJECT IDENTIFIER ::= {\
    \ mibIIConformance 1 }\n          mibIIGroups    OBJECT IDENTIFIER ::= { mibIIConformance\
    \ 2 }\n          mibIICompliance MODULE-COMPLIANCE\n              STATUS  current\n\
    \              DESCRIPTION\n                      \"The compliance statement for\
    \ SNMPv2 entities\n                      residing on systems which implement the\
    \ Internet\n                      suite of protocols.\"\n              MODULE\
    \  -- compliance to the containing MIB module\n                  MANDATORY-GROUPS\
    \   { systemGroup, snmpGroup }\n                  GROUP       interfacesGroup\n\
    \                  DESCRIPTION\n                      \"The interfaces group is\
    \ mandatory for systems\n                      with network interfaces.\"\n  \
    \                GROUP       ipGroup\n                  DESCRIPTION\n        \
    \              \"The ip group is mandatory for systems which\n               \
    \       implement IP.\"\n                  GROUP       icmpGroup\n           \
    \       DESCRIPTION\n                      \"The icmp group is mandatory for systems\
    \ which\n                      implement ICMP.\"\n                  GROUP    \
    \   tcpGroup\n                  DESCRIPTION\n                      \"The tcp group\
    \ is mandatory for systems which\n                      implement TCP.\"\n   \
    \                   OBJECT      tcpConnState\n                      MIN-ACCESS\
    \  read-only\n                      DESCRIPTION\n                          \"\
    A compliant system need not allow\n                           write-access to\
    \ this object.\"\n                  GROUP       udpGroup\n          RFC 1444 \
    \     Conformance Statements for SNMPv2     April 1993\n                  DESCRIPTION\n\
    \                      \"The udp group is mandatory for systems which\n      \
    \                implement UDP.\"\n                  GROUP       egpGroup\n  \
    \                DESCRIPTION\n                      \"The egp group is mandatory\
    \ for systems which\n                      implement EGP.\"\n          ::= { mibIICompliances\
    \ 1 }\n          According to this invocation, to claim alignment with the\n \
    \         compliance statement named\n               { mibIICompliances 1 }\n\
    \          a system must implement RFC1213's systemGroup and snmpGroup\n     \
    \     conformance groups.  If the system implements any network\n          interfaces,\
    \ then RFC1213's interfacesGroup conformance group\n          must be implemented.\
    \  Further, if the system implements any of\n          the IP, ICMP, TCP, UDP,\
    \ or EGP protocols, then the\n          correspondent conformance group in RFC1213\
    \ must be\n          implemented, if compliance is to be claimed.  Finally,\n\
    \          although RFC1213 specifies that it makes \"protocol sense\" for\n \
    \         the tcpConnState object to be writable, this specification\n       \
    \   allows the system to permit only read-only access and still\n          claim\
    \ compliance.\n          RFC 1444      Conformance Statements for SNMPv2     April\
    \ 1993\n          5.  Mapping of the AGENT-CAPABILITIES macro\n          The AGENT-CAPABILITIES\
    \ macro is used to convey the\n          capabilities present in a SNMPv2 entity\
    \ acting in an agent\n          role.  It should be noted that the expansion of\
    \ the AGENT-\n          CAPABILITIES macro is something which conceptually happens\n\
    \          during implementation and not during run-time.\n          When a MIB\
    \ module is written, it is divided into units of\n          conformance termed\
    \ groups.  If a SNMPv2 entity acting in an\n          agent role claims to implement\
    \ a group, then it must implement\n          each and every object within that\
    \ group.  Of course, for\n          whatever reason, a SNMPv2 entity might implement\
    \ only a subset\n          of the groups within a MIB module.  In addition, the\n\
    \          definition of some MIB objects leave some aspects of the\n        \
    \  definition to the discretion of an implementor.\n          Practical experience\
    \ has demonstrated a need for concisely\n          describing the capabilities\
    \ of an agent with respect to one or\n          more MIB modules.  The AGENT-CAPABILITIES\
    \ macro allows an\n          agent implementor to describe the precise level of\
    \ support\n          which an agent claims in regards to a MIB group, and to bind\n\
    \          that description to the value of sysObjectID [3] associated\n     \
    \     with the agent, or to the value of an instance of the snmpORID\n       \
    \   object in the snmpORTable [4].  In particular, some objects\n          may\
    \ have restricted or augmented syntax or access-levels.\n          If the AGENT-CAPABILITIES\
    \ invocation is given to a\n          management-station implementor, then that\
    \ implementor can\n          build management applications which optimize themselves\
    \ when\n          communicating with a particular agent.  For example, the\n \
    \         management-station can maintain a database of these\n          invocations.\
    \  When a management-station interacts with an\n          agent, it retrieves\
    \ the agent's sysObjectID [3].  Based on\n          this, it consults the database.\
    \  If an entry is found, then\n          the management application can optimize\
    \ its behavior\n          accordingly.\n          Note that this binding to sysObjectID\
    \ may not always suffice\n          to define all MIB objects to which an agent\
    \ can provide\n          access.  In particular, this situation occurs where the\
    \ agent\n          dynamically learns of the objects it supports.  In these\n\
    \          cases, the snmpORID column of snmpORTable [4] contains\n          information\
    \ which should be used in addition to sysObjectID.\n          RFC 1444      Conformance\
    \ Statements for SNMPv2     April 1993\n          Note that the AGENT-CAPABILITIES\
    \ macro specifies refinements\n          or variations with respect to OBJECT-TYPE\
    \ macros in MIB\n          modules, NOT with respect to MODULE-COMPLIANCE macros\
    \ in\n          compliance statements.\n          5.1.  Mapping of the PRODUCT-RELEASE\
    \ clause\n          The PRODUCT-RELEASE clause, which must be present, contains\
    \ a\n          textual description of the product release which includes this\n\
    \          agent.\n          5.2.  Mapping of the STATUS clause\n          The\
    \ STATUS clause, which must be present, indicates whether\n          this definition\
    \ is current or historic.\n          The values \"current\", and \"obsolete\"\
    \ are self-explanatory.\n          The \"deprecated\" value indicates that that\
    \ object is obsolete,\n          but that an implementor may wish to support that\
    \ object to\n          foster interoperability with older implementations.\n \
    \         5.3.  Mapping of the DESCRIPTION clause\n          The DESCRIPTION clause,\
    \ which must be present, contains a\n          textual description of this agent.\n\
    \          5.4.  Mapping of the REFERENCE clause\n          The REFERENCE clause,\
    \ which need not be present, contains a\n          textual cross-reference to\
    \ a capability statement defined in\n          some other information module.\n\
    \          5.5.  Mapping of the SUPPORTS clause\n          The SUPPORTS clause,\
    \ which need not be present, is repeatedly\n          used to name each MIB module\
    \ for which the agent claims a\n          complete or partial implementation.\
    \  Each MIB module is named\n          by its module name, and optionally, by\
    \ its associated OBJECT\n          IDENTIFIER as well.\n          RFC 1444   \
    \   Conformance Statements for SNMPv2     April 1993\n          5.5.1.  Mapping\
    \ of the INCLUDES clause\n          The INCLUDES clause, which must be present\
    \ for each use of the\n          SUPPORTS clause, is used to name each MIB group\
    \ associated\n          with the SUPPORT clause, which the agent claims to implement.\n\
    \          5.5.2.  Mapping of the VARIATION clause\n          The VARIATION clause,\
    \ which need not be present, is repeatedly\n          used to name each MIB object\
    \ which the agent implements in\n          some variant or refined fashion with\
    \ respect to the\n          correspondent invocation of the OBJECT-TYPE macro.\n\
    \          Note that the variation concept is meant for generic\n          implementation\
    \ restrictions, e.g., if the variation for an\n          object depends on the\
    \ values of other objects, then this\n          should be noted in the appropriate\
    \ DESCRIPTION clause.\n          5.5.2.1.  Mapping of the SYNTAX clause\n    \
    \      The SYNTAX clause, which need not be present, is used to\n          provide\
    \ a refined SYNTAX for the object named in the\n          correspondent VARIATION\
    \ clause.  Note that if this clause and\n          a WRITE-SYNTAX clause are both\
    \ present, then this clause only\n          applies when instances of the object\
    \ named in the\n          correspondent VARIATION clause are read.\n         \
    \ Consult Section 10 of [2] for more information on refined\n          syntax.\n\
    \          5.5.2.2.  Mapping of the WRITE-SYNTAX clause\n          The WRITE-SYNTAX\
    \ clause, which need not be present, is used to\n          provide a refined SYNTAX\
    \ for the object named in the\n          correspondent VARIATION clause when instances\
    \ of that object\n          are written.\n          Consult Section 10 of [2]\
    \ for more information on refined\n          syntax.\n          RFC 1444     \
    \ Conformance Statements for SNMPv2     April 1993\n          5.5.2.3.  Mapping\
    \ of the ACCESS clause\n          The ACCESS clause, which need not be present,\
    \ is used to\n          indicate the agent provides less than the maximal level\
    \ of\n          access to the object named in the correspondent VARIATION\n  \
    \        clause.\n          The value \"not-implemented\" indicates the agent\
    \ does not\n          implement the object, and in the ordering of possible values\n\
    \          is equivalent to \"not-accessible\".\n          The value \"write-only\"\
    \ is provided solely for backward\n          compatibility, and shall not be used\
    \ for newly-defined object\n          types.  In the ordering of possible values,\
    \ \"write-only\" is\n          less than \"not-accessible\".\n          5.5.2.4.\
    \  Mapping of the CREATION-REQUIRES clause\n          The CREATION-REQUIRES clause,\
    \ which need not be present, is\n          used to name the columnar objects of\
    \ a conceptual row to which\n          values must be explicitly assigned, by\
    \ a management protocol\n          set operation, before the agent will allow\
    \ the instance of the\n          status column of that row to be set to `active'.\
    \  (Consult the\n          definition of RowStatus [6].)\n          If the conceptual\
    \ row does not have a status column (i.e., the\n          objects corresponding\
    \ to the conceptual table were defined\n          using the mechanisms in [7,8]),\
    \ then the CREATION-REQUIRES\n          clause, which need not be present, is\
    \ used to name the\n          columnar objects of a conceptual row to which values\
    \ must be\n          explicitly assigned, by a management protocol set operation,\n\
    \          before the agent will create new instances of objects in that\n   \
    \       row.\n          This clause must not present unless the object named in\
    \ the\n          correspondent VARIATION clause is a conceptual row, i.e., has\n\
    \          a syntax which resolves to a SEQUENCE containing columnar\n       \
    \   objects.  The objects named in the value of this clause\n          usually\
    \ will refer to columnar objects in that row.  However,\n          objects unrelated\
    \ to the conceptual row may also be specified.\n          All objects which are\
    \ named in the CREATION-REQUIRES clause\n          for a conceptual row, and which\
    \ are columnar objects of that\n          row, must have an access level of \"\
    read-create\".\n          RFC 1444      Conformance Statements for SNMPv2    \
    \ April 1993\n          5.5.2.5.  Mapping of the DEFVAL clause\n          The\
    \ DEFVAL clause, which need not be present, is used to\n          provide a refined\
    \ DEFVAL value for the object named in the\n          correspondent VARIATION\
    \ clause.  The semantics of this value\n          are identical to those of the\
    \ OBJECT-TYPE macro's DEFVAL\n          clause.\n          5.5.2.6.  Mapping of\
    \ the DESCRIPTION clause\n          The DESCRIPTION clause, which must be present\
    \ for each use of\n          the VARIATION clause, contains a textual description\
    \ of the\n          variant or refined implementation.\n          5.6.  Mapping\
    \ of the AGENT-CAPABILITIES value\n          The value of an invocation of the\
    \ AGENT-CAPABILITIES macro is\n          an OBJECT IDENTIFIER, which names the\
    \ value of sysObjectID [3]\n          or snmpORID [4] for which this capabilities\
    \ statement is\n          valid.\n          RFC 1444      Conformance Statements\
    \ for SNMPv2     April 1993\n          5.7.  Usage Example\n          Consider\
    \ how a capabilities statement for an agent might be\n          described:\n \
    \         exampleAgent AGENT-CAPABILITIES\n              PRODUCT-RELEASE     \
    \ \"ACME Agent release 1.1 for 4BSD\"\n              STATUS               current\n\
    \              DESCRIPTION          \"ACME agent for 4BSD\"\n              SUPPORTS\
    \             RFC1213-MIB\n                  INCLUDES         { systemGroup, interfacesGroup,\n\
    \                                     atGroup, ipGroup, icmpGroup,\n         \
    \                            tcpGroup, udpGroup, snmpGroup }\n               \
    \   VARIATION        ifAdminStatus\n                      SYNTAX       INTEGER\
    \ { up(1), down(2) }\n                      DESCRIPTION  \"Unable to set test\
    \ mode on 4BSD\"\n                  VARIATION        ifOperStatus\n          \
    \            SYNTAX       INTEGER { up(1), down(2) }\n                      DESCRIPTION\
    \  \"Information limited on 4BSD\"\n                  VARIATION        atEntry\n\
    \                      CREATION-REQUIRES { atPhysAddress }\n                 \
    \     DESCRIPTION  \"Address mappings on 4BSD require\n                      \
    \             both protocol and media addresses\"\n                  VARIATION\
    \        ipDefaultTTL\n                      SYNTAX       INTEGER (255..255)\n\
    \                      DESCRIPTION  \"Hard-wired on 4BSD\"\n                 \
    \ VARIATION        ipInAddrErrors\n                      ACCESS       not-implemented\n\
    \                      DESCRIPTION  \"Information not available on 4BSD\"\n  \
    \                VARIATION        ipRouteType\n                      SYNTAX  \
    \     INTEGER { direct(3), indirect(4) }\n                      WRITE-SYNTAX INTEGER\
    \ { invalid(2), direct(3),\n                                             indirect(4)\
    \ }\n                      DESCRIPTION  \"Information limited on 4BSD\"\n    \
    \              VARIATION        tcpConnState\n                      ACCESS   \
    \    read-only\n                      DESCRIPTION  \"Unable to set this on 4BSD\"\
    \n          RFC 1444      Conformance Statements for SNMPv2     April 1993\n \
    \             SUPPORTS             EVAL-MIB\n                  INCLUDES      \
    \   { functionsGroup, expressionsGroup }\n                  VARIATION        exprEntry\n\
    \                      CREATION-REQUIRES { evalString }\n                    \
    \  DESCRIPTION \"Conceptual row creation supported\"\n              ::= { acmeAgents\
    \ 1 }\n          According to this invocation, an agent with a sysObjectID (or\n\
    \          snmpORID) value of\n               { acmeAgents 1 }\n          supports\
    \ two MIB modules.\n          From MIB-II, all conformance groups except the egpGroup\n\
    \          conformance group are supported.  However, the object\n          ipInAddrErrors\
    \ is not implemented, whilst the objects\n               ifAdminStatus\n     \
    \          ifOperStatus\n               ipDefaultTTL\n               ipRouteType\n\
    \          have a restricted syntax, and the object\n               tcpConnState\n\
    \          is available only for reading.  Note that in the case of the\n    \
    \      object ipRouteType the set of values which may be read is\n          different\
    \ than the set of values which may be written.\n          Finally, when creating\
    \ a new instance in the atTable, the\n          set-request must create an instance\
    \ of atPhysAddress.\n          From the EVAL-MIB, all the objects contained in\
    \ the\n          functionsGroup and expressionsGroup conformance groups are\n\
    \          supported, without variation.  In addition, creation of new\n     \
    \     instances in the expr table is supported.\n          RFC 1444      Conformance\
    \ Statements for SNMPv2     April 1993\n          6.  Extending an Information\
    \ Module\n          As experience is gained with a published information module,\n\
    \          it may be desirable to revise that information module.\n          Section\
    \ 10 of [2] defines the rules for extending an\n          information module.\
    \  The remainder of this section defines how\n          conformance groups, compliance\
    \ statements, and capabilities\n          statements may be extended.\n      \
    \    6.1.  Conformance Groups\n          If any non-editorial change is made to\
    \ any clause of an object\n          group then the OBJECT IDENTIFIER value associated\
    \ with that\n          object group must also be changed, along with its associated\n\
    \          descriptor.\n          6.2.  Compliance Definitions\n          If any\
    \ non-editorial change is made to any clause of a\n          compliance definition,\
    \ then the OBJECT IDENTIFIER value\n          associated with that compliance\
    \ definition must also be\n          changed, along with its associated descriptor.\n\
    \          6.3.  Capabilities Definitions\n          If any non-editorial change\
    \ is made to any clause of a\n          capabilities definition, then the OBJECT\
    \ IDENTIFIER value\n          associated with that capabilities definition must\
    \ also be\n          changed, along with its associated descriptor.\n        \
    \  RFC 1444      Conformance Statements for SNMPv2     April 1993\n          7.\
    \  Acknowledgements\n          The section on compliance statements is based,\
    \ in part, on a\n          conversation with James R. Davin in December, 1990.\n\
    \          The section on capabilities statements is based, in part, on\n    \
    \      RFC 1303.\n          Finally, the comments of the SNMP version 2 working\
    \ group are\n          gratefully acknowledged:\n               Beth Adams, Network\
    \ Management Forum\n               Steve Alexander, INTERACTIVE Systems Corporation\n\
    \               David Arneson, Cabletron Systems\n               Toshiya Asaba\n\
    \               Fred Baker, ACC\n               Jim Barnes, Xylogics, Inc.\n \
    \              Brian Bataille\n               Andy Bierman, SynOptics Communications,\
    \ Inc.\n               Uri Blumenthal, IBM Corporation\n               Fred Bohle,\
    \ Interlink\n               Jack Brown\n               Theodore Brunner, Bellcore\n\
    \               Stephen F. Bush, GE Information Services\n               Jeffrey\
    \ D. Case, University of Tennessee, Knoxville\n               John Chang, IBM\
    \ Corporation\n               Szusin Chen, Sun Microsystems\n               Robert\
    \ Ching\n               Chris Chiotasso, Ungermann-Bass\n               Bobby\
    \ A. Clay, NASA/Boeing\n               John Cooke, Chipcom\n               Tracy\
    \ Cox, Bellcore\n               Juan Cruz, Datability, Inc.\n               David\
    \ Cullerot, Cabletron Systems\n               Cathy Cunningham, Microcom\n   \
    \            James R. (Chuck) Davin, Bellcore\n               Michael Davis, Clearpoint\n\
    \               Mike Davison, FiberCom\n               Cynthia DellaTorre, MITRE\n\
    \               Taso N. Devetzis, Bellcore\n               Manual Diaz, DAVID\
    \ Systems, Inc.\n               Jon Dreyer, Sun Microsystems\n               David\
    \ Engel, Optical Data Systems\n               Mike Erlinger, Lexcel\n        \
    \       Roger Fajman, NIH\n          RFC 1444      Conformance Statements for\
    \ SNMPv2     April 1993\n               Daniel Fauvarque, Sun Microsystems\n \
    \              Karen Frisa, CMU\n               Shari Galitzer, MITRE\n      \
    \         Shawn Gallagher, Digital Equipment Corporation\n               Richard\
    \ Graveman, Bellcore\n               Maria Greene, Xyplex, Inc.\n            \
    \   Michel Guittet, Apple\n               Robert Gutierrez, NASA\n           \
    \    Bill Hagerty, Cabletron Systems\n               Gary W. Haney, Martin Marietta\
    \ Energy Systems\n               Patrick Hanil, Nokia Telecommunications\n   \
    \            Matt Hecht, SNMP Research, Inc.\n               Edward A. Heiner,\
    \ Jr., Synernetics Inc.\n               Susan E. Hicks, Martin Marietta Energy\
    \ Systems\n               Geral Holzhauer, Apple\n               John Hopprich,\
    \ DAVID Systems, Inc.\n               Jeff Hughes, Hewlett-Packard\n         \
    \      Robin Iddon, Axon Networks, Inc.\n               David Itusak\n       \
    \        Kevin M. Jackson, Concord Communications, Inc.\n               Ole J.\
    \ Jacobsen, Interop Company\n               Ronald Jacoby, Silicon Graphics, Inc.\n\
    \               Satish Joshi, SynOptics Communications, Inc.\n               Frank\
    \ Kastenholz, FTP Software\n               Mark Kepke, Hewlett-Packard\n     \
    \          Ken Key, SNMP Research, Inc.\n               Zbiginew Kielczewski,\
    \ Eicon\n               Jongyeoi Kim\n               Andrew Knutsen, The Santa\
    \ Cruz Operation\n               Michael L. Kornegay, VisiSoft\n             \
    \  Deirdre C. Kostik, Bellcore\n               Cheryl Krupczak, Georgia Tech\n\
    \               Mark S. Lewis, Telebit\n               David Lin\n           \
    \    David Lindemulder, AT&T/NCR\n               Ben Lisowski, Sprint\n      \
    \         David Liu, Bell-Northern Research\n               John Lunny, The Wollongong\
    \ Group\n               Robert C. Lushbaugh Martin, Marietta Energy Systems\n\
    \               Michael Luufer, BBN\n               Carl Madison, Star-Tek, Inc.\n\
    \               Keith McCloghrie, Hughes LAN Systems\n               Evan McGinnis,\
    \ 3Com Corporation\n               Bill McKenzie, IBM Corporation\n          \
    \     Donna McMaster, SynOptics Communications, Inc.\n          RFC 1444     \
    \ Conformance Statements for SNMPv2     April 1993\n               John Medicke,\
    \ IBM Corporation\n               Doug Miller, Telebit\n               Dave Minnich,\
    \ FiberCom\n               Mohammad Mirhakkak, MITRE\n               Rohit Mital,\
    \ Protools\n               George Mouradian, AT&T Bell Labs\n               Patrick\
    \ Mullaney, Cabletron Systems\n               Dan Myers, 3Com Corporation\n  \
    \             Rina Nathaniel, Rad Network Devices Ltd.\n               Hien V.\
    \ Nguyen, Sprint\n               Mo Nikain\n               Tom Nisbet\n      \
    \         William B. Norton, MERIT\n               Steve Onishi, Wellfleet Communications,\
    \ Inc.\n               David T. Perkins, SynOptics Communications, Inc.\n    \
    \           Carl Powell, BBN\n               Ilan Raab, SynOptics Communications,\
    \ Inc.\n               Richard Ramons, AT&T\n               Venkat D. Rangan,\
    \ Metric Network Systems, Inc.\n               Louise Reingold, Sprint\n     \
    \          Sam Roberts, Farallon Computing, Inc.\n               Kary Robertson,\
    \ Concord Communications, Inc.\n               Dan Romascanu, Lannet Data Communications\
    \ Ltd.\n               Marshall T. Rose, Dover Beach Consulting, Inc.\n      \
    \         Shawn A. Routhier, Epilogue Technology Corporation\n               Chris\
    \ Rozman\n               Asaf Rubissa, Fibronics\n               Jon Saperia,\
    \ Digital Equipment Corporation\n               Michael Sapich\n             \
    \  Mike Scanlon, Interlan\n               Sam Schaen, MITRE\n               John\
    \ Seligson, Ultra Network Technologies\n               Paul A. Serice, Corporation\
    \ for Open Systems\n               Chris Shaw, Banyan Systems\n              \
    \ Timon Sloane\n               Robert Snyder, Cisco Systems\n               Joo\
    \ Young Song\n               Roy Spitier, Sprint\n               Einar Stefferud,\
    \ Network Management Associates\n               John Stephens, Cayman Systems,\
    \ Inc.\n               Robert L. Stewart, Xyplex, Inc. (chair)\n             \
    \  Kaj Tesink, Bellcore\n               Dean Throop, Data General\n          \
    \     Ahmet Tuncay, France Telecom-CNET\n               Maurice Turcotte, Racal\
    \ Datacom\n          RFC 1444      Conformance Statements for SNMPv2     April\
    \ 1993\n               Warren Vik, INTERACTIVE Systems Corporation\n         \
    \      Yannis Viniotis\n               Steven L. Waldbusser, Carnegie Mellon Universitty\n\
    \               Timothy M. Walden, ACC\n               Alice Wang, Sun Microsystems\n\
    \               James Watt, Newbridge\n               Luanne Waul, Timeplex\n\
    \               Donald E. Westlake III, Digital Equipment Corporation\n      \
    \         Gerry White\n               Bert Wijnen, IBM Corporation\n         \
    \      Peter Wilson, 3Com Corporation\n               Steven Wong, Digital Equipment\
    \ Corporation\n               Randy Worzella, IBM Corporation\n              \
    \ Daniel Woycke, MITRE\n               Honda Wu\n               Jeff Yarnell,\
    \ Protools\n               Chris Young, Cabletron\n               Kiho Yum, 3Com\
    \ Corporation\n          RFC 1444      Conformance Statements for SNMPv2     April\
    \ 1993\n          8.  References\n          [1]  Information processing systems\
    \ - Open Systems\n               Interconnection - Specification of Abstract Syntax\n\
    \               Notation One (ASN.1), International Organization for\n       \
    \        Standardization.  International Standard 8824, (December,\n         \
    \      1987).\n          [2]  Case, J., McCloghrie, K., Rose, M., and Waldbusser,\
    \ S.,\n               \"Structure of Management Information for version 2 of the\n\
    \               Simple Network Management Protocol (SNMPv2)\", RFC 1442,\n   \
    \            SNMP Research, Inc., Hughes LAN Systems, Dover Beach\n          \
    \     Consulting, Inc., Carnegie Mellon University, April 1993.\n          [3]\
    \  McCloghrie, K., and Rose, M., \"Management Information\n               Base\
    \ for Network Management of TCP/IP-based internets:\n               MIB-II\",\
    \ STD 17, RFC 1213, March 1991.\n          [4]  Case, J., McCloghrie, K., Rose,\
    \ M., and Waldbusser, S.,\n               \"Management Information Base for version\
    \ 2 of the Simple\n               Network Management Protocol (SNMPv2)\", RFC\
    \ 1450, SNMP\n               Research, Inc., Hughes LAN Systems, Dover Beach\n\
    \               Consulting, Inc., Carnegie Mellon University, April 1993.\n  \
    \        [5]  Case, J., McCloghrie, K., Rose, M., and Waldbusser, S.,\n      \
    \         \"Protocol Operations for version 2 of the Simple Network\n        \
    \       Management Protocol (SNMPv2)\", RFC 1448, SNMP Research,\n           \
    \    Inc., Hughes LAN Systems, Dover Beach Consulting, Inc.,\n               Carnegie\
    \ Mellon University, April 1993.\n          [6]  Case, J., McCloghrie, K., Rose,\
    \ M., and Waldbusser, S.,\n               \"Textual Conventions for version 2\
    \ of the the Simple\n               Network Management Protocol (SNMPv2)\", RFC\
    \ 1443, SNMP\n               Research, Inc., Hughes LAN Systems, Dover Beach\n\
    \               Consulting, Inc., Carnegie Mellon University, April 1993.\n  \
    \        [7]  Rose, M., and McCloghrie, K., \"Structure and\n               Identification\
    \ of Management Information for TCP/IP-based\n               internets\", STD\
    \ 16, RFC 1155, May 1990.\n          [8]  Rose, M., and McCloghrie, K., \"Concise\
    \ MIB Definitions\",\n               STD 16, RFC 1212, March 1991.\n         \
    \ RFC 1444      Conformance Statements for SNMPv2     April 1993\n          9.\
    \  Security Considerations\n          Security issues are not discussed in this\
    \ memo.\n          10.  Authors' Addresses\n               Jeffrey D. Case\n \
    \              SNMP Research, Inc.\n               3001 Kimberlin Heights Rd.\n\
    \               Knoxville, TN  37920-9716\n               US\n               Phone:\
    \ +1 615 573 1434\n               Email: case@snmp.com\n               Keith McCloghrie\n\
    \               Hughes LAN Systems\n               1225 Charleston Road\n    \
    \           Mountain View, CA  94043\n               US\n               Phone:\
    \ +1 415 966 7934\n               Email: kzm@hls.com\n               Marshall\
    \ T. Rose\n               Dover Beach Consulting, Inc.\n               420 Whisman\
    \ Court\n               Mountain View, CA  94043-2186\n               US\n   \
    \            Phone: +1 415 968 1052\n               Email: mrose@dbc.mtview.ca.us\n\
    \               Steven Waldbusser\n               Carnegie Mellon University\n\
    \               4910 Forbes Ave\n               Pittsburgh, PA  15213\n      \
    \         US\n               Phone: +1 412 268 6628\n               Email: waldbusser@cmu.edu\n"
