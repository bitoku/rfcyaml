Abstract This memo defines a set of extensions that instrument RADIUS accounting server functions.
These extensions represent a portion of the Management Information Base (MIB) for use with network management protocols in the Internet community.
Using these extensions, IP based management stations can manage RADIUS accounting servers.
This memo obsoletes RFC 2621 by deprecating the MIB table containing IPv4 only address formats and defining a new table to add support for version neutral IP address formats.
The remaining MIB objects from RFC 2621 are carried forward into this document.
This memo also adds UNITS and REFERENCE clauses to selected objects.
This memo defines a portion of the Management Information Base (MIB) for use with network management protocols in the Internet community.
The objects defined within this memo relate to the Remote Authentication Dial
Accounting Server as defined in RFC 2866
The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in RFC 2119
This document uses terminology from RFC 2865
[RFC2865] and RFC 2866 [RFC2866].
This document uses the word "malformed" with respect to RADIUS packets, particularly in the context of counters of "malformed packets".
While RFC 2866 does not provide an explicit definition of "malformed", malformed generally means that the implementation has determined the packet does not match the format defined in RFC 2866.
Those implementations are used in deployments today, and thus set the de facto definition of "malformed".
The Internet Standard Management Framework
For a detailed overview of the documents that describe the current Internet Standard Management Framework, please refer to section 7 of RFC 3410 [RFC3410].
Managed objects are accessed via a virtual information store, termed the Management Information Base or MIB.
MIB objects are generally accessed through the Simple Network Management Protocol (SNMP).
Objects in the MIB are defined using the mechanisms defined in the Structure of Management Information (SMI).
This memo specifies a MIB module that is compliant to the SMIv2, which is described in STD 58, RFC 2578 [RFC2578], STD 58
, RFC 2579 [RFC2579] and STD 58, RFC 2580
This document obsoletes RFC 2621
[RFC2621], RADIUS Accounting Server MIB, by deprecating the radiusAccClientTable table and adding a new table, radiusAccClientExtTable, containing radiusAccClientInetAddressType and radiusAccClientInetAddress.
The purpose of these added MIB objects is to support version neutral IP addressing formats.
The existing table containing radiusAccClientAddress is deprecated.
The remaining MIB objects from RFC 2621 are carried forward into this document.
This memo also adds UNITS and REFERENCE clauses to selected objects.
[RFC4001], which defines the SMI Textual Conventions for version neutral IP addresses, contains the following recommendation. '
In particular, when revising a MIB module that contains IPv4 specific tables, it is suggested to define new tables using the textual conventions defined in this memo [RFC4001] that support all versions of IP.
The status of the new tables SHOULD be "current", whereas the status of the old IP version specific tables SHOULD be changed to "deprecated".
The other approach, of having multiple similar tables for different IP versions, is strongly discouraged.'
Structure of the MIB Module
The RADIUS accounting protocol, described in RFC 2866 [RFC2866], distinguishes between the client function and the server function.
In RADIUS accounting, clients send Accounting Requests, and servers reply with Accounting Responses.
Typically, Network Access Server (NAS) devices implement the client function, and thus would be expected to implement the RADIUS accounting client MIB, while RADIUS accounting servers implement the server function, and thus would be expected to implement the RADIUS accounting server MIB.
However, it is possible for a RADIUS accounting entity to perform both client and server functions.
For example, a RADIUS proxy may act as a server to one or more RADIUS accounting clients, while simultaneously acting as an accounting client to one or more accounting servers.
In such situations, it is expected that RADIUS entities combining client and server functionality will support both the client and server MIBs.
The server MIB is defined in this document, and the client MIB is defined in [RFC4670].
This MIB module contains thirteen scalars as well as a single table, the RADIUS Accounting Client Table, which contains one row for each RADIUS accounting client with which the server shares a secret.
Each entry in the RADIUS Accounting Client Table includes twelve columns presenting a view of the activity of the RADIUS accounting server.
This MIB imports from [RFC2578], [RFC2580], [RFC3411], and [RFC4001].
The deprecated table in this MIB is carried forward from RFC 2621
There are two conditions under which it MAY be desirable for managed entities to continue to support the deprecated table: 1.
The managed entity only supports IPv4 address formats.
The managed entity supports both IPv4 and IPv6 address formats, and the deprecated table is supported for backwards compatibility with older management stations.
This option SHOULD only be used when the IP addresses in the new table are in IPv4 format and can accurately be represented in both the new table and the deprecated table.
Managed entities SHOULD NOT instantiate row entries in the deprecated table, containing IPv4 only address objects, when the RADIUS accounting client address represented in such a table row is not an IPv4 address.
Managed entities SHOULD NOT return inaccurate values of IP address or SNMP object access errors for IPv4 only address objects in otherwise populated tables.
When row entries exist in both the deprecated IPv4 only table and the new IP version neutral table that describe the same RADIUS accounting client, the row indexes SHOULD be the same for the corresponding rows in each table, to facilitate correlation of these related rows by management applications.
IMPORTS MODULE IDENTITY, OBJECT TYPE, OBJECT IDENTITY, Counter32, Integer32, IpAddress, TimeTicks, mib 2
INET ADDRESS MIB MODULE COMPLIANCE,
CONTACT INFO " Bernard Aboba Microsoft
One Microsoft Way Redmond, WA  98052 US Phone:  1 425 936 6605 EMail:
The MIB module for entities implementing the server side of the Remote Authentication Dial
In User Service (RADIUS) accounting protocol.
This version of this MIB module is part of RFC 4671; see the RFC itself for full legal notices."
This version obsoletes that of RFC 2621 by deprecating the MIB table containing IPv4 only address formats and defining a new table to add support for version  neutral IP address formats.
The remaining MIB objects from RFC 2621 are carried forward into this version."
11 Jun 1999 DESCRIPTION "Initial version as published in RFC 2621."
The OID assigned to RADIUS MIB work by the IANA."
{ radiusAccServMIBObjects 1 } radiusAccServIdent OBJECT TYPE SYNTAX
The implementation identification string for the RADIUS accounting server software in use on the system, for example, 'FNS 2.1'."
"If the server has a persistent state (e.g., a process), this value will be the time elapsed (in hundredths of a second) since the server process was started.
For software without persistent state, this value will be zero."
"If the server has a persistent state (e.g., a process) and supports a 'reset' operation (e.g., can be told to re read configuration files), this value will be the time elapsed (in hundredths of a second) since the server was 'reset.'
For software that does not have persistence or does not support a 'reset' operation, this value will be zero."
OBJECT TYPE SYNTAX INTEGER { other(1), reset(2), initializing(3), running(4)}
MAX ACCESS  read write STATUS
current DESCRIPTION "Status/action object to reinitialize any persistent server state.
When set to reset(2), any persistent server state (such as a process) is reinitialized as if the server had just been started.
This value will never be returned by a read operation.
When read, one of the following values will be returned:
other(1) server in some unknown state; initializing(3) server (re)initializing; running(4) server currently running."
OBJECT TYPE SYNTAX Counter32 UNITS "packets" MAX ACCESS read only STATUS current DESCRIPTION
} radiusAccServTotalInvalidRequests OBJECT TYPE SYNTAX Counter32 UNITS "packets" MAX ACCESS read only STATUS current DESCRIPTION
"The number of RADIUS Accounting Request packets received from unknown addresses."
radiusAccServTotalDupRequests OBJECT TYPE SYNTAX Counter32 UNITS "packets" MAX ACCESS read only STATUS current DESCRIPTION
"The number of duplicate RADIUS Accounting Request packets received."
OBJECT TYPE SYNTAX Counter32 UNITS "packets" MAX ACCESS read only STATUS current DESCRIPTION
"The number of RADIUS Accounting Response packets sent."
} radiusAccServTotalMalformedRequests OBJECT TYPE SYNTAX Counter32 UNITS "packets" MAX ACCESS read only STATUS current DESCRIPTION
"The number of malformed RADIUS Accounting Request packets received.
Bad authenticators or unknown types are not included as malformed Access Requests."
OBJECT TYPE SYNTAX Counter32 UNITS "packets" MAX ACCESS read only STATUS current DESCRIPTION
"The number of incoming packets silently discarded for a reason other than malformed, bad authenticators, or unknown types."
read only STATUS current DESCRIPTION
MAX ACCESS not accessible STATUS
deprecated DESCRIPTION "The (conceptual) table listing the RADIUS accounting clients with which the server shares a secret."
MAX ACCESS not accessible STATUS
An entry (conceptual row) representing a RADIUS accounting client with which the server shares a secret."
} radiusAccClientIndex OBJECT TYPE SYNTAX
MAX ACCESS not accessible STATUS
The NAS Identifier of the RADIUS accounting client referred to in this table entry.
This is not necessarily the same as sysName in MIB II."
entries logged radiusAccServPacketsDropped OBJECT TYPE SYNTAX Counter32 UNITS "packets" MAX ACCESS read only STATUS deprecated DESCRIPTION
The number of packets received from this client on the accounting port."
read only STATUS deprecated DESCRIPTION
TYPE SYNTAX Counter32 UNITS "packets" MAX ACCESS read only STATUS deprecated DESCRIPTION
"The number of malformed RADIUS Accounting Request packets that were received from this client.
Bad authenticators and unknown types are not included as malformed Accounting Requests."
OBJECT TYPE SYNTAX Counter32 UNITS "packets"
MAX ACCESS read only STATUS deprecated DESCRIPTION
"The number of RADIUS packets of unknown type that were received from this client.
current DESCRIPTION "The (conceptual) table listing the RADIUS accounting clients with which the server shares a secret."
An entry (conceptual row) representing a RADIUS accounting client with which the server shares a secret."
radiusAccServerCounterDiscontinuity   TimeTicks } radiusAccClientExtIndex OBJECT TYPE SYNTAX
MAX ACCESS not accessible STATUS
The type of address format used for the radiusAccClientInetAddress object."
The IP address of the RADIUS accounting client referred to in this table entry, using the IPv6 address format."
The NAS Identifier of the RADIUS accounting client referred to in this table entry.
This is not necessarily the same as sysName in MIB II."
entries logged radiusAccServExtPacketsDropped OBJECT TYPE SYNTAX Counter32 UNITS "packets" MAX ACCESS read only STATUS current DESCRIPTION
"The number of incoming packets received from this client and silently discarded for a reason other than malformed, bad authenticators, or unknown types.
This counter may experience a discontinuity when the RADIUS Accounting Server module within the managed entity is reinitialized, as indicated by the current value of radiusAccServerCounterDiscontinuity."
"The number of packets received from this client on the accounting port.
This counter may experience a discontinuity when the RADIUS Accounting Server module within the managed entity is reinitialized, as indicated by the current value of radiusAccServerCounterDiscontinuity."
OBJECT TYPE SYNTAX Counter32 UNITS "packets" MAX ACCESS read only STATUS current DESCRIPTION
"The number of duplicate RADIUS Accounting Request packets received from this client.
This counter may experience a discontinuity when the RADIUS Accounting Server module within the managed entity is reinitialized, as indicated by the current value of radiusAccServerCounterDiscontinuity."
OBJECT TYPE SYNTAX Counter32 UNITS "packets" MAX ACCESS read only STATUS current DESCRIPTION
"The number of RADIUS Accounting Response packets sent to this client.
This counter may experience a discontinuity when the RADIUS Accounting Server module within the managed entity is reinitialized, as indicated by the current value of radiusAccServerCounterDiscontinuity."
"The number of RADIUS Accounting Request packets that contained invalid authenticators received from this client.
This counter may experience a discontinuity when the RADIUS Accounting Server module within the managed entity is reinitialized, as indicated by the current value of radiusAccServerCounterDiscontinuity."
} radiusAccServExtMalformedRequests OBJECT TYPE SYNTAX Counter32 UNITS "packets" MAX ACCESS read only STATUS current DESCRIPTION
"The number of malformed RADIUS Accounting Request packets that were received from this client.
Bad authenticators and unknown types are not included as malformed Accounting Requests.
This counter may experience a discontinuity when the RADIUS Accounting Server module within the managed entity is reinitialized, as indicated by the current value of radiusAccServerCounterDiscontinuity."
OBJECT TYPE SYNTAX Counter32 UNITS "packets" MAX ACCESS
read only STATUS current DESCRIPTION
"The number of RADIUS Accounting Request packets that were received and responded to but not recorded.
This counter may experience a discontinuity when the RADIUS Accounting Server module within the managed entity is reinitialized, as indicated by the current value of radiusAccServerCounterDiscontinuity."
OBJECT TYPE SYNTAX Counter32 UNITS "packets" MAX ACCESS read only STATUS current DESCRIPTION
"The number of RADIUS packets of unknown type that were received from this client.
This counter may experience a discontinuity when the RADIUS Accounting Server module within the managed entity is reinitialized, as indicated by the current value of radiusAccServerCounterDiscontinuity."
read only STATUS current DESCRIPTION
"The number of centiseconds since the last discontinuity in the RADIUS Accounting Server counters.
A discontinuity may be the result of a reinitialization of the RADIUS Accounting Server module within the managed entity."
MODULE COMPLIANCE STATUS  deprecated DESCRIPTION "The compliance statement for accounting servers implementing the RADIUS Accounting Server MIB.
Implementation of this module is for IPv4 only entities, or for backwards compatibility use with entities that support both IPv4 and IPv6."
"The only SETable value is 'reset' (2)."
Implementation of this module is for entities that support IPv6, or support IPv4 and IPv6."
MODULE    this module MANDATORY GROUPS { radiusAccServExtMIBGroup } OBJECT
"The only SETable value is 'reset' (2)."
OBJECT radiusAccClientInetAddressType SYNTAX InetAddressType { ipv4(1), ipv6(2)
An implementation is only required to support IPv4 and globally unique IPv6 addresses."
OBJECT radiusAccClientInetAddress SYNTAX InetAddress ( SIZE (4 16) ) DESCRIPTION "
An implementation is only required to support IPv4 and globally unique IPv6 addresses."
OBJECT GROUP OBJECTS {radiusAccServIdent, radiusAccServUpTime, radiusAccServResetTime, radiusAccServConfigReset, radiusAccServTotalRequests, radiusAccServTotalInvalidRequests, radiusAccServTotalDupRequests, radiusAccServTotalResponses, radiusAccServTotalMalformedRequests, radiusAccServTotalBadAuthenticators, radiusAccServTotalPacketsDropped, radiusAccServTotalNoRecords, radiusAccServTotalUnknownTypes, radiusAccClientAddress, radiusAccClientID, radiusAccServPacketsDropped, radiusAccServRequests, radiusAccServDupRequests, radiusAccServResponses, radiusAccServBadAuthenticators, radiusAccServMalformedRequests
The collection of objects providing management of a RADIUS Accounting Server."
radiusAccServExtMalformedRequests, radiusAccServExtNoRecords, radiusAccServExtUnknownTypes, radiusAccServerCounterDiscontinuity } STATUS  current DESCRIPTION
Security Considerations There are management objects (radiusAccServConfigReset) defined in this MIB that have a MAX ACCESS clause of read write and/or read  create.
Such objects may be considered sensitive or vulnerable in some network environments.
The support for SET operations in a non  secure environment without proper protection can have a negative effect on network operations.
This object can be used to reinitialize the persistent state of any server.
When set to reset(2), any persistent server state (such as a process) is reinitialized as if the server had just been started.
Depending on the server implementation details, this action may or may not interrupt the processing of pending request in the server.
Abuse of this object may lead to a Denial of Service attack on the server.
There are a number of managed objects in this MIB that may contain sensitive information.
These are: radiusAccClientIPAddress This can be used to determine the address of the RADIUS accounting client with which the server is communicating.
This information could be useful in mounting an attack on the accounting client.
This can be used to determine the address of the RADIUS accounting client with which the server is communicating.
This information could be useful in mounting an attack on the accounting client.
It is thus important to control even GET access to these objects and possibly to even encrypt the values of these object when sending them over the network via SNMP.
Not all versions of SNMP provide features for such a secure environment.
SNMP versions prior to SNMPv3 do not provide a secure environment.
Even if the network itself is secure (for example by using IPsec), there is no control as to who on the secure network is allowed to access and
the objects in this MIB.
It is RECOMMENDED that implementers consider the security features as provided by the SNMPv3 framework (see [RFC3410], section 8), including full support for the SNMPv3 cryptographic mechanisms (for authentication and privacy).
Further, deployment of SNMP versions prior to SNMPv3 is NOT RECOMMENDED.
Instead, it is RECOMMENDED to deploy SNMPv3 and to enable cryptographic security.
It is then a customer/operator responsibility to ensure that the SNMP entity giving access to an instance of this MIB module is properly configured to give access to the objects only to those principals (users) that have legitimate rights to indeed GET or SET
