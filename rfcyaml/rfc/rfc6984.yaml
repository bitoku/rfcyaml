- title: __initial_text__
  contents:
  - "                        Interoperability Report\n         for Forwarding and\
    \ Control Element Separation (ForCES)\n"
- title: Abstract
  contents:
  - "Abstract\n   This document captures the results of the second Forwarding and\n\
    \   Control Element Separation (ForCES) interoperability test that took\n   place\
    \ on February 24-25, 2011, in the Internet Technology Lab (ITL)\n   at Zhejiang\
    \ Gongshang University, China.  The results of the first\n   ForCES interoperability\
    \ test were reported in RFC 6053, and this\n   document updates RFC 6053 by providing\
    \ further interoperability\n   results.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n   published for informational purposes.\n   This document is a product\
    \ of the Internet Engineering Task Force\n   (IETF).  It represents the consensus\
    \ of the IETF community.  It has\n   received public review and has been approved\
    \ for publication by the\n   Internet Engineering Steering Group (IESG).  Not\
    \ all documents\n   approved by the IESG are a candidate for any level of Internet\n\
    \   Standard; see Section 2 of RFC 5741.\n   Information about the current status\
    \ of this document, any errata,\n   and how to provide feedback on it may be obtained\
    \ at\n   http://www.rfc-editor.org/info/rfc6984.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2013 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction . . . . . . . . . . . . . . . . . . .\
    \ . . . . . .  3\n     1.1.  ForCES Protocol  . . . . . . . . . . . . . . . .\
    \ . . . . .  3\n     1.2.  ForCES FE Model  . . . . . . . . . . . . . . . . .\
    \ . . . .  4\n     1.3.  Transport Mapping Layer  . . . . . . . . . . . . . .\
    \ . . .  4\n     1.4.  Definitions  . . . . . . . . . . . . . . . . . . . . .\
    \ . .  4\n   2.  Overview . . . . . . . . . . . . . . . . . . . . . . . . . .\
    \ .  4\n     2.1.  Date, Location, and Participants . . . . . . . . . . . . .\
    \  4\n     2.2.  Testbed Configuration  . . . . . . . . . . . . . . . . . .  5\n\
    \       2.2.1.  Participants' Access . . . . . . . . . . . . . . . . .  5\n  \
    \     2.2.2.  Testbed Configuration  . . . . . . . . . . . . . . . .  6\n   3.\
    \  Scenarios  . . . . . . . . . . . . . . . . . . . . . . . . . .  7\n     3.1.\
    \  Scenario 1 - LFB Operation . . . . . . . . . . . . . . . .  7\n     3.2.  Scenario\
    \ 2 - TML with IPsec  . . . . . . . . . . . . . . .  8\n     3.3.  Scenario 3\
    \ - CE High Availability  . . . . . . . . . . . .  9\n     3.4.  Scenario 4 -\
    \ Packet Forwarding . . . . . . . . . . . . . . 11\n   4.  Test Results . . .\
    \ . . . . . . . . . . . . . . . . . . . . . . 14\n     4.1.  Test of LFB Operation\
    \  . . . . . . . . . . . . . . . . . . 14\n     4.2.  Test of TML with IPsec .\
    \ . . . . . . . . . . . . . . . . . 20\n     4.3.  Test of CE High Availability\
    \ . . . . . . . . . . . . . . . 20\n     4.4.  Test of Packet Forwarding  . .\
    \ . . . . . . . . . . . . . . 21\n   5.  Discussions  . . . . . . . . . . . .\
    \ . . . . . . . . . . . . . 23\n     5.1.  On Data Encapsulation Format . . .\
    \ . . . . . . . . . . . . 23\n   6.  Security Considerations  . . . . . . . .\
    \ . . . . . . . . . . . 26\n   7.  References . . . . . . . . . . . . . . . .\
    \ . . . . . . . . . . 26\n     7.1.  Normative References . . . . . . . . . .\
    \ . . . . . . . . . 26\n     7.2.  Informative References . . . . . . . . . .\
    \ . . . . . . . . 26\n   Appendix A.  Acknowledgements  . . . . . . . . . . .\
    \ . . . . . . . 28\n   Appendix B.  Contributors  . . . . . . . . . . . . . .\
    \ . . . . . . 28\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   This document captures the results of the second interoperability\n\
    \   test of the Forwarding and Control Element Separation (ForCES) that\n   took\
    \ place on February 24-25, 2011, in the Internet Technology Lab\n   (ITL) at Zhejiang\
    \ Gongshang University, China.  The test involved\n   protocol elements described\
    \ in several documents, namely:\n   -  ForCES Protocol [RFC5810]\n   -  ForCES\
    \ Forwarding Element (FE) Model [RFC5812]\n   -  ForCES Transport Mapping Layer\
    \ (TML) [RFC5811]\n   The test also involved protocol elements described in the\
    \ then-\n   current versions of two Internet-Drafts.  Although these documents\n\
    \   have subsequently been revised and advanced, it is important to\n   understand\
    \ which versions of the work were used during this test.\n   The then-current\
    \ Internet-Drafts are:\n   -  \"ForCES Logical Function Block (LFB) Library\"\
    \ (December 2010)\n      [LFB-LIB]\n   -  \"ForCES Intra-NE High Availability\"\
    \ (October 2010) [CEHA]\n   Note: The ForCES Logical Function Block (LFB) Library\
    \ document was\n   published as [RFC6956].\n   Three independent ForCES implementations\
    \ participated in the test.\n   Scenarios of ForCES LFB Operation, TML with IPsec,\
    \ Control Element\n   High Availability (CEHA), and Packet Forwarding were constructed.\n\
    \   Series of testing items for every scenario were carried out and\n   interoperability\
    \ results were achieved.  The popular packet analyzers\n   Ethereal/Wireshark\
    \ [Ethereal] and Tcpdump [Tcpdump] were used to\n   verify the wire results.\n\
    \   This document is an update to [RFC6053], which captured the results\n   of\
    \ the first ForCES interoperability test.  The first test on ForCES\n   was held\
    \ in July 2008 at the University of Patras, Greece.  That test\n   focused on\
    \ validating the basic semantics of the ForCES protocol and\n   ForCES Forwarding\
    \ Element (FE) model.\n"
- title: 1.1.  ForCES Protocol
  contents:
  - "1.1.  ForCES Protocol\n   The ForCES protocol works in a master-slave mode in\
    \ which FEs are\n   slaves and Control Elements (CEs) are masters.  The protocol\
    \ includes\n   commands for transport of Logical Function Block (LFB) configuration\n\
    \   information, association setup, status, event notifications, etc.\n   The\
    \ reader is encouraged to read the ForCES protocol specification\n   [RFC5810]\
    \ for further information.\n"
- title: 1.2.  ForCES FE Model
  contents:
  - "1.2.  ForCES FE Model\n   The ForCES FE model [RFC5812] presents a formal way\
    \ to define FE LFBs\n   using XML.  LFB configuration components, capabilities,\
    \ and\n   associated events are defined when the LFB is formally created.  The\n\
    \   LFBs within the FE are accordingly controlled in a standardized way\n   by\
    \ the ForCES protocol.\n"
- title: 1.3.  Transport Mapping Layer
  contents:
  - "1.3.  Transport Mapping Layer\n   The ForCES Transport Mapping Layer (TML) transports\
    \ the ForCES\n   protocol layer messages.  The TML is where the issues of how\
    \ to\n   achieve transport-level reliability, congestion control, multicast,\n\
    \   ordering, etc., are handled.  It is expected that more than one TML\n   will\
    \ be standardized.  RFC 5811 specifies a TML that is based on the\n   Stream Control\
    \ Transmission Protocol (SCTP) and is a mandated TML for\n   ForCES.  See RFC\
    \ 5811 for more details.\n"
- title: 1.4.  Definitions
  contents:
  - "1.4.  Definitions\n   This document follows the terminology defined by ForCES-related\n\
    \   documents, including [RFC3654], [RFC3746], [RFC5810], [RFC5811],\n   [RFC5812],\
    \ [RFC5813], etc.\n"
- title: 2.  Overview
  contents:
  - '2.  Overview

    '
- title: 2.1.  Date, Location, and Participants
  contents:
  - "2.1.  Date, Location, and Participants\n   The second ForCES interoperability\
    \ test meeting was held by the IETF\n   ForCES Working Group on February 24-25,\
    \ 2011, and was chaired by\n   Jamal Hadi Salim.  Three independent ForCES implementations\n\
    \   participated in the test:\n   o  Zhejiang Gongshang University/Hangzhou BAUD\
    \ Corporation of\n      Information and Networks Technology (Hangzhou BAUD Networks),\n\
    \      China.  This implementation is referred to as \"ZJSU\" or \"Z\" in\n  \
    \    this document for the sake of brevity.\n   o  NTT Corporation, Japan.  This\
    \ implementation is referred to as\n      \"NTT\" or \"N\" in this document for\
    \ the sake of brevity.\n   o  The University of Patras, Greece.  This implementation\
    \ is referred\n      to as \"UoP\" or \"P\" in this document for the sake of brevity.\n\
    \   Two other organizations, Mojatatu Networks and Hangzhou BAUD Networks\n  \
    \ Corporation, which independently extended two different well-known\n   public\
    \ domain protocol analyzers, Ethereal/Wireshark [Ethereal] and\n   Tcpdump [Tcpdump],\
    \ also participated in the interoperability test.\n   During the test, the two\
    \ protocol analyzers were used to verify the\n   validity (and in some cases,\
    \ the semantics) of ForCES protocol\n   messages.\n   Some issues related to interoperability\
    \ among implementations were\n   discovered.  Most of the issues were solved on\
    \ site during the test.\n   The most contentious issue found was on the format\
    \ of encapsulation\n   for the protocol TLVs (refer to Section 5.1).\n   Some\
    \ errata related to the ForCES document were found by the\n   interoperability\
    \ test.  The errata found in related RFCs have also\n   been reported.\n   At\
    \ times, interoperability testing was exercised between two instead\n   of all\
    \ three representative implementations because the third one\n   lacked a specific\
    \ feature; however, in ensuing discussions, all\n   implementers mentioned they\
    \ would be implementing any missing\n   features in the future.\n"
- title: 2.2.  Testbed Configuration
  contents:
  - '2.2.  Testbed Configuration

    '
- title: 2.2.1.  Participants' Access
  contents:
  - "2.2.1.  Participants' Access\n   NTT and ZJSU were physically present for the\
    \ testing at the Internet\n   Technology Lab (ITL) at Zhejiang Gongshang University\
    \ in China.  The\n   implementation team from the University of Patras joined\
    \ remotely\n   from Greece.  The chair, Jamal Hadi Salim, joined remotely from\n\
    \   Canada by using TeamViewer as the monitoring tool [TeamViewer].  The\n   approach\
    \ was as shown in Figure 1.  In the figure, FE/CE refers to\n   the FE or CE that\
    \ the implementer may act as alternatively.\n        +---------+     +----+  \
    \                  +------------+\n        |  FE/CE  |     |    |            \
    \    +---| Monitoring |\n        |  ZJSU   |-----|    |    /\\/\\/\\/\\/\\  |\
    \   |(TeamViewer)|\n        +---------+     |    |    \\Internet/  |   |  Mojatatu\
    \  |\n                        |LAN |----/        \\--|   +------------+\n    \
    \    +---------+     |    |    \\/\\/\\/\\/\\/  |   +------------+\n        |\
    \  FE/CE  |-----|    |                |   |    FE/CE   |\n        |   NTT   |\
    \     |    |                +---|     UoP    |\n        +---------+     +----+\
    \                    +------------+\n                     Figure 1: Access for\
    \ Participants\n   As specified in [RFC5811], all CEs and FEs implemented IPsec\
    \ in the\n   TML.\n   On the Internet boundary, gateways used must allow for IPsec,\
    \ the\n   SCTP protocol, and SCTP ports as defined in the ForCES SCTP-based TML\n\
    \   document [RFC5811].\n"
- title: 2.2.2.  Testbed Configuration
  contents:
  - "2.2.2.  Testbed Configuration\n   The CEs and FEs from ZJSU's and NTT's implementations\
    \ were physically\n   located within the ITL Lab at Zhejiang Gongshang University\
    \ and\n   connected together using Ethernet switches.  The configuration can be\n\
    \   seen in Figure 2.  In the figure, SmartBits [SmartBits] is a third-\n   party\
    \ routing protocol testing machine that acts as a router running\n   Open Shortest\
    \ Path First (OSPF) and RIP, and exchanges routing\n   protocol messages with\
    \ ForCES routers in the network.  Connection to\n   the Internet was via an Asymmetric\
    \ Digital Subscriber Line (ADSL)\n   channel.\n                              /\\\
    /\\/\\/\\/\\\n                              \\Internet/\n                    \
    \          /        \\\n                              \\/\\/\\/\\/\\/\n      \
    \                            |\n                                  |(ADSL)\n  \
    \                                |\n   +-------------------------------------------------------------------+\n\
    \   |                      LAN  (10.20.0.0/24)                          |\n  \
    \ +-------------------------------------------------------------------+\n    \
    \  |        |        |               |               |         |\n      |    \
    \    |        |               |               |         |\n      |.222    |.230\
    \    |.221           |.179           |.231     |.220\n   +-----+  +-----+  +-----+\
    \         +-----+         +-----+ +---------+\n   | CE  |  | CE  |  |     |  \
    \       |     |         |     | | Protocol|\n   |ZJSU |  | NTT |  | FE1 |.1  \
    \   .2| FE  |.1     .2| FE2 | | Analyzer|\n   +-----+  +-----+  |ZJSU |---------|\
    \ NTT |---------|ZJSU | +---------+\n           +---------|     |192.169. |  \
    \   | 192.168.|     |------+\n           |      .2 +-----+ 20.0.24 +-----+  30.0/24+-----+\
    \ .2   |\n           |         .12|                               |.12      |\n\
    \           |            |                               |         |\n     192.168.50.0/24\
    \    |                               |192.168.60.0/24\n           |       192.168.10.0/24\
    \              192.168.40.0/24   |\n        .1 |            |.11             \
    \               |.11      |.1\n      +--------+     +--------------------------------------+\
    \ +--------+\n      |Terminal|     |               SmartBits              | |Terminal|\n\
    \      +--------+     +--------------------------------------+ +--------+\n  \
    \     Figure 2: Testbed Configuration Located in the ITL Lab, China\n   The CE\
    \ and FE from the UoP implementation were located within the\n   University of\
    \ Patras, Greece, and were connected together using LAN,\n   as shown in Figure\
    \ 3.  Connection to the Internet was via a VPN\n   channel.\n                \
    \               /\\/\\/\\/\\/\\\n                               \\Internet/\n\
    \                               /        \\\n                               \\\
    /\\/\\/\\/\\/\n                                       |\n                    \
    \               |(VPN)\n                                   |\n               \
    \ +------------------------------------+\n                |                LAN\
    \                 |\n                +------------------------------------+\n\
    \                     |           |              |\n                     |   \
    \        |              |\n                 +------+    +--------+     +------+\n\
    \                 |  FE  |    |Protocol|     |  CE  |\n                 | UoP\
    \  |    |Analyzer|     |  UoP |\n                 +------+    +--------+     +------+\n\
    \                      Figure 3: Testbed Configuration\n                Located\
    \ in the University of Patras, Greece\n   The testbeds above were then able to\
    \ satisfy the requirements of all\n   interoperability test scenarios in this\
    \ document.\n"
- title: 3.  Scenarios
  contents:
  - '3.  Scenarios

    '
- title: 3.1.  Scenario 1 - LFB Operation
  contents:
  - "3.1.  Scenario 1 - LFB Operation\n   This scenario was designed to test the interoperability\
    \ of LFB\n   operations among the participants.  The connection diagram for the\n\
    \   participants is shown in Figure 4.\n    +------+    +------+    +------+ \
    \   +------+    +------+    +------+\n    |  CE  |    |  CE  |    |  CE  |   \
    \ |  CE  |    |  CE  |    |  CE  |\n    | ZJSU |    | NTT  |    | ZJSU |    |\
    \  UoP |    |  NTT |    |  UoP |\n    +------+    +------+    +------+    +------+\
    \    +------+    +------+\n       |           |           |           |      \
    \     |           |\n       |           |           |           |           |\
    \           |\n    +------+    +------+    +------+    +------+    +------+  \
    \  +------+\n    |  FE  |    |  FE  |    |  FE  |    |  FE  |    |  FE  |    |\
    \  FE  |\n    | NTT  |    | ZJSU |    | UoP  |    | ZJSU |    |  UoP |    |  NTT\
    \ |\n    +------+    +------+    +------+    +------+    +------+    +------+\n\
    \                   Figure 4: Scenario for LFB Operation\n   In order to make\
    \ interoperability more credible, the three\n   implementers were required to\
    \ carry out the test acting as a CE or FE\n   alternatively.  As a result, every\
    \ LFB operation was combined with\n   six scenarios, as shown by Figure 4.\n \
    \  The test scenario was designed with the following purposes.\n   Firstly, the\
    \ scenario was designed to verify all kinds of protocol\n   messages with their\
    \ complex data formats, which were defined in\n   [RFC5810].  Specifically, we\
    \ tried to verify the data format of a\n   PATH-DATA-TLV with nested PATH-DATA-TLVs,\
    \ and the operation (SET,\n   GET, and DEL) of an array or an array with a nested\
    \ array.\n   Secondly, the scenario was designed to verify the definition of\n\
    \   ForCES LFB Library [LFB-LIB], which defined a base set of ForCES LFB\n   classes\
    \ for typical router functions.  Successful tests under this\n   scenario would\
    \ help the validity of the LFB definitions.\n"
- title: 3.2.  Scenario 2 - TML with IPsec
  contents:
  - "3.2.  Scenario 2 - TML with IPsec\n   This scenario was designed to implement\
    \ a TML with IPsec, which was\n   the requirement defined by RFC 5811.  TML with\
    \ IPsec was not\n   implemented and tested in the first ForCES interoperability\
    \ test, as\n   reported in RFC 6053.  For this reason, in this interoperability\n\
    \   test, we specifically designed the test scenario to verify the TML\n   over\
    \ IPsec channel.\n   In this scenario, tests on LFB operations for Scenario 1\
    \ were\n   repeated with the difference that TML was secured via IPsec.  This\n\
    \   setup scenario allowed us to verify whether all interactions between\n   the\
    \ CE and FE could be made correctly under an IPsec TML environment.\n   The connection\
    \ diagram for this scenario is shown in Figure 5.\n   Because an unfortunate problem\
    \ with the test system in the UoP\n   prevented the deployment of IPsec over TML,\
    \ this test only took place\n   between the test systems in ZJSU and NTT.\n  \
    \               +------+                 +------+\n                 |  CE  | \
    \                |  CE  |\n                 | ZJSU |                 |  NTT |\n\
    \                 +------+                 +------+\n                    |   \
    \                     |\n                    |TML over IPsec          |TML over\
    \ IPsec\n                 +------+                 +------+\n                \
    \ |  FE  |                 |  FE  |\n                 | NTT  |               \
    \  | ZJSU |\n                 +------+                 +------+\n         Figure\
    \ 5: Scenario for LFB Operation with TML over IPsec\n   In this scenario, ForCES\
    \ TML was run over the IPsec channel.\n   Implementers joined in this interoperability\
    \ test using the same\n   third-party software 'Racoon' [Racoon] to establish\
    \ the IPsec\n   channel.\n   The Racoon in NetBSD is an Internet Key Exchange\
    \ (IKE) daemon that\n   performs the key exchange with the peers.  Both IKEv1\
    \ and IKEv2 are\n   supported by Racoon in Linux 2.6, and IKEv2 was adopted in\
    \ the\n   interop test.  The Security Association Database (SAD) and Security\n\
    \   Policy Database (SPD) were necessary for the test, setups of which\n   were\
    \ in the Racoon configuration file.  The Encapsulating Security\n   Payload (ESP)\
    \ was specified in the SAD and SPD in the Racoon\n   configuration file.\n   ZJSU\
    \ and NTT conducted a successful test with the scenario, and the\n   IPsec requirement\
    \ items in [RFC5812] were realized.\n"
- title: 3.3.  Scenario 3 - CE High Availability
  contents:
  - "3.3.  Scenario 3 - CE High Availability\n   CE High Availability (CEHA) was tested\
    \ based on the ForCES CEHA\n   document [CEHA].\n   The design of the setup and\
    \ the scenario for the CEHA were simplified\n   so as to focus mostly on the mechanics\
    \ of the CEHA, which were:\n   o  Associating with more than one CE.\n   o  Switching\
    \ to a backup CE on a master CE failure.\n   The connection diagram for the scenario\
    \ is shown in Figure 6.\n            master      standby           master    \
    \  standby\n            +------+    +------+          +------+    +------+\n \
    \           |  CE  |    |  CE  |          |  CE  |    |  CE  |\n            |\
    \ ZJSU |    |  UoP |          | NTT  |    |  UoP |\n            +------+    +------+\
    \          +------+    +------+\n               |          |                 \
    \ |           |\n               +----------+                  +-----------+\n\
    \               |                             |\n            +------+        \
    \              +------+\n            |  FE  |                      |  FE  |\n\
    \            | UoP  |                      | UoP  |\n            +------+    \
    \                  +------+\n                   (a)                          \
    \ (b)\n                Figure 6: Scenario for CE High Availability\n   In this\
    \ scenario, one FE was connected and associated to a master CE\n   and a backup\
    \ CE.  In the pre-association phase, the FE would be\n   configured to have ZJSU's\
    \ or NTT's CE as the master CE and the UoP's\n   CE as the standby CE.  The CEFailoverPolicy\
    \ component of the FE\n   Protocol Object LFB that specified whether the FE was\
    \ in High\n   Availability mode (value 2 or 3) would be set either in the pre-\n\
    \   association phase by the FE interface or in the post-association\n   phase\
    \ by the master CE.\n   If the CEFailoverPolicy value was set to 2 or 3, the FE\
    \ (in the post-\n   association phase) would attempt to connect and associate\
    \ with the\n   standby CE.\n   When the master CE was deemed disconnected, either\
    \ by a TearDown,\n   Loss of Heartbeats, or physically disconnected, the FE would\
    \ assume\n   that the standby CE was now the master CE.  The FE would then send\
    \ an\n   Event Notification, Primary CE Down, to all associated CEs (only the\n\
    \   standby CE in this case) with the value of the new master Control\n   Element\
    \ ID (CEID).  The standby CE would then respond by sending a\n   configuration\
    \ message to the CEID component of the FE Protocol Object\n   with its own ID\
    \ to confirm that the CE considered itself the master\n   as well.\n   The steps\
    \ of the CEHA test scenario were as follows:\n   1.  In the pre-association phase,\
    \ the FE is set up with the master CE\n       and the backup CE.\n   2.  The FE\
    \ connects and associates with the master CE.\n   3.  When CEFailoverPolicy is\
    \ set to 2 or 3, the FE connects and\n       associates with the backup CE.\n\
    \   4.  Once the master CE is considered disconnected, then the FE\n       chooses\
    \ the first associated backup CE.\n   5.  It sends an Event Notification that\
    \ specifies the master CE is\n       down and identifies the new master CE.\n\
    \   6.  The new master CE sends a SET Configuration message to the FE;\n     \
    \  the FE then sets the CEID value to the new master CE completing\n       the\
    \ switch.\n"
- title: 3.4.  Scenario 4 - Packet Forwarding
  contents:
  - "3.4.  Scenario 4 - Packet Forwarding\n   This test scenario was conducted to\
    \ verify LFBs like RedirectIn,\n   RedirectOut, IPv4NextHop, and IPv4UcastLPM,\
    \ which were defined by the\n   ForCES LFB library document [LFB-LIB], and more\
    \ importantly, to\n   verify the combination of the LFBs to implement IP packet\
    \ forwarding.\n   The connection diagram for this scenario is shown in Figure\
    \ 7.\n                               +------+\n                              \
    \ |  CE  |\n                               |  NTT |\n                        \
    \       +------+\n                                  |  ^\n                   \
    \               |  | OSPF\n                                  |  +------->\n  \
    \                             +------+       +------+\n               +--------+\
    \      |  FE  |       | OSPF |      +--------+\n               |Terminal|------|\
    \ ZJSU |-------|Router|------|Terminal|\n               +--------+      +------+\
    \       +------+      +--------+\n                 <-------------------------------------------->\n\
    \                             Packet Forwarding\n                            \
    \        (a)\n                                      +------+\n               \
    \                       |  CE  |\n                                      | ZJSU\
    \ |\n                                      +------+\n                        \
    \               ^  |  ^\n                                  OSPF |  |  | OSPF\n\
    \                                 <-----+  |  +----->\n                      \
    \   +-------+    +------+     +------+\n           +--------+    | OSPF  |   \
    \ |  FE  |     | OSPF |  +--------+\n           |Terminal|----|Router |----| NTT\
    \  |-----|Router|--|Terminal|\n           +--------+    +-------+    +------+\
    \     +------+  +--------+\n                 <-------------------------------------------->\n\
    \                             Packet Forwarding\n                            \
    \        (b)\n                               +------+       +------+\n       \
    \                        |  CE  |       |  CE  |\n                           \
    \    | NTT  |       | ZJSU |\n                               +------+       +------+\n\
    \                                  |  ^          ^ |\n                       \
    \           |  |   OSPF   | |\n                                  |  +----------+\
    \ |\n                               +------+       +------+\n               +--------+\
    \      |  FE  |       |  FE  |      +--------+\n               |Terminal|------|\
    \ ZJSU |-------|  NTT |------|Terminal|\n               +--------+      +------+\
    \       +------+      +--------+\n                 <-------------------------------------------->\n\
    \                             Packet Forwarding\n                            \
    \        (c)\n                Figure 7: Scenario for IP Packet Forwarding\n  \
    \ In case (a), NTT's CE was connected to ZJSU's FE to form a ForCES\n   router.\
    \  A SmartBits [SmartBits] test machine equipped with routing\n   protocol software\
    \ was used to simulate an OSPF router and was\n   connected with the ForCES router\
    \ to try to exchange OSPF Hello\n   packets and Link State Advertisement (LSA)\
    \ packets among them.\n   Terminals were simulated by SmartBits to send and receive\
    \ packets.\n   As a result, the CE in the ForCES router needed to be configured\
    \ to\n   run and support the OSPF routing protocol.\n   In case (b), ZJSU'S CE\
    \ was connected to NTT'S FE to form a ForCES\n   router.  Two routers running\
    \ OSPF were simulated and connected to the\n   ForCES router to test if the ForCES\
    \ router could support the OSPF\n   protocol and support packet forwarding.\n\
    \   In case (c), two ForCES routers were constructed; one was with NTT's\n   CE\
    \ and ZJSU's FE, and the other was with NTT's FE and ZJSU's CE.\n   OSPF and packet\
    \ forwarding were tested in the environment.\n   The testing process for this\
    \ scenario is shown below:\n   1.  Boot terminals and routers, and set the IP\
    \ addresses of their\n       interfaces.\n   2.  Boot the CE and FE.\n   3.  Establish\
    \ an association between the CE and FE, and set the IP\n       addresses of the\
    \ FE interfaces.\n   4.  Start OSPF among the CE and routers, and set the Forwarding\n\
    \       Information Base (FIB) on the FE.\n   5.  Send packets between terminals.\n"
- title: 4.  Test Results
  contents:
  - '4.  Test Results

    '
- title: 4.1.  Test of LFB Operation
  contents:
  - "4.1.  Test of LFB Operation\n   The test results are reported in Figure 8.  As\
    \ mentioned earlier, for\n   convenience, the following abbreviations are used\
    \ in the table: \"Z\"\n   for the implementation from ZJSU, \"N\" for the implementation\
    \ from\n   NTT, and \"P\" for the implementation from the UoP.\n   +-----+----+-----+-----+--------------+-------------------+---------+\n\
    \   |Test#| CE |FE(s)|Oper |      LFB     |     Component     | Result  |\n  \
    \ |     |    |     |     |              |    /Capability    |         |\n   +-----+----+-----+-----+--------------+-------------------+---------+\n\
    \   |  1  | Z  |  N  | GET |   FEObject   |    LFBTopology    | Success |\n  \
    \ |     | N  |  Z  |     |              |                   | Success |\n   |\
    \     | P  |  Z  |     |              |                   | Success |\n   |  \
    \   | N  |  P  |     |              |                   | Success |\n   |    \
    \ | P  |  N  |     |              |                   | Success |\n   |     |\
    \    |     |     |              |                   |         |\n   |  2  | Z\
    \  |  N  | GET |   FEObject   |    LFBSelector    | Success |\n   |     | N  |\
    \  Z  |     |              |                   | Success |\n   |     | Z  |  P\
    \  |     |              |                   | Success |\n   |     | P  |  Z  |\
    \     |              |                   | Success |\n   |     | N  |  P  |  \
    \   |              |                   | Success |\n   |     | P  |  N  |    \
    \ |              |                   | Success |\n   |     |    |     |     |\
    \              |                   |         |\n   |  3  | Z  |  N  | GET |  EtherPHYCop\
    \ |     PHYPortID     | Success |\n   |     | N  |  Z  |     |              |\
    \                   | Success |\n   |     | Z  |  P  |     |              |  \
    \                 | Success |\n   |     | P  |  Z  |     |              |    \
    \               | Success |\n   |     | N  |  P  |     |              |      \
    \             | Success |\n   |     | P  |  N  |     |              |        \
    \           | Success |\n   |     |    |     |     |              |          \
    \         |         |\n   |  4  | Z  |  N  | GET |  EtherPHYCop |    AdminStatus\
    \    | Success |\n   |     | N  |  Z  |     |              |                 \
    \  | Success |\n   |     | Z  |  P  |     |              |                   |\
    \ Success |\n   |     | P  |  Z  |     |              |                   | Success\
    \ |\n   |     | N  |  P  |     |              |                   | Success |\n\
    \   |     | P  |  N  |     |              |                   | Success |\n  \
    \ |     |    |     |     |              |                   |         |\n   |\
    \  5  | Z  |  N  | GET |  EtherPHYCop |     OperStatus    | Success |\n   |  \
    \   | N  |  Z  |     |              |                   | Success |\n   |    \
    \ | Z  |  P  |     |              |                   | Success |\n   |     |\
    \ P  |  Z  |     |              |                   | Success |\n   |     | N\
    \  |  P  |     |              |                   | Success |\n   |     | P  |\
    \  N  |     |              |                   | Success |\n   |     |    |  \
    \   |     |              |                   |         |\n   |  6  | Z  |  N \
    \ | GET |  EtherPHYCop |  AdminLinkSpeed   | Success |\n   |     | N  |  Z  |\
    \     |              |                   | Success |\n   |     | Z  |  P  |  \
    \   |              |                   | Success |\n   |     | P  |  Z  |    \
    \ |              |                   | Success |\n   |     | N  |  P  |     |\
    \              |                   | Success |\n   |     | P  |  N  |     |  \
    \            |                   | Success |\n   |     |    |     |     |    \
    \          |                   |         |\n   |  7  | Z  |  N  | GET |  EtherPHYCop\
    \ |   OperLinkSpeed   | Success |\n   |     | N  |  Z  |     |              |\
    \                   | Success |\n   |     | Z  |  P  |     |              |  \
    \                 | Success |\n   |     | P  |  Z  |     |              |    \
    \               | Success |\n   |     | N  |  P  |     |              |      \
    \             | Success |\n   |     | P  |  N  |     |              |        \
    \           | Success |\n   |     |    |     |     |              |          \
    \         |         |\n   |  8  | Z  |  N  | GET |  EtherPHYCop |  AdminDuplexSpeed\
    \ | Success |\n   |     | N  |  Z  |     |              |                   |\
    \ Success |\n   |     | Z  |  P  |     |              |                   | Success\
    \ |\n   |     | P  |  Z  |     |              |                   | Success |\n\
    \   |     | N  |  P  |     |              |                   | Success |\n  \
    \ |     | P  |  N  |     |              |                   | Success |\n   |\
    \     |    |     |     |              |                   |         |\n   |  9\
    \  | Z  |  N  | GET |  EtherPHYCop |  OperDuplexSpeed  | Success |\n   |     |\
    \ N  |  Z  |     |              |                   | Success |\n   |     | Z\
    \  |  P  |     |              |                   | Success |\n   |     | P  |\
    \  Z  |     |              |                   | Success |\n   |     | N  |  P\
    \  |     |              |                   | Success |\n   |     | P  |  N  |\
    \     |              |                   | Success |\n   |     |    |     |  \
    \   |              |                   |         |\n   |  10 | Z  |  N  | GET\
    \ |  EtherPHYCop |   CarrierStatus   | Success |\n   |     | N  |  Z  |     |\
    \              |                   | Success |\n   |     | Z  |  P  |     |  \
    \            |                   | Success |\n   |     | P  |  Z  |     |    \
    \          |                   | Success |\n   |     | N  |  P  |     |      \
    \        |                   | Success |\n   |     | P  |  N  |     |        \
    \      |                   | Success |\n   |     |    |     |     |          \
    \    |                   |         |\n   |  11 | Z  |  N  | GET |  EtherMACIn\
    \  |    AdminStatus    | Success |\n   |     | N  |  Z  |     |              |\
    \                   | Success |\n   |     | Z  |  P  |     |              |  \
    \                 | Success |\n   |     | P  |  Z  |     |              |    \
    \               | Success |\n   |     | N  |  P  |     |              |      \
    \             | Success |\n   |     | P  |  N  |     |              |        \
    \           | Success |\n   |     |    |     |     |              |          \
    \         |         |\n   |  12 | Z  |  N  | GET |  EtherMACIn  | LocalMacAddresses\
    \ | Success |\n   |     | N  |  Z  |     |              |                   |\
    \ Success |\n   |     | Z  |  P  |     |              |                   | Success\
    \ |\n   |     | P  |  Z  |     |              |                   | Success |\n\
    \   |     | N  |  P  |     |              |                   | Success |\n  \
    \ |     | P  |  N  |     |              |                   | Success |\n   |\
    \     |    |     |     |              |                   |         |\n   |  13\
    \ | Z  |  N  | GET |  EtherMACIn  |    L2Bridging     | Success |\n   |     |\
    \ N  |  Z  |     |              |   PathEnable      | Success |\n   |     | Z\
    \  |  P  |     |              |                   | Success |\n   |     | P  |\
    \  Z  |     |              |                   | Success |\n   |     | N  |  P\
    \  |     |              |                   | Success |\n   |     | P  |  N  |\
    \     |              |                   | Success |\n   |     |    |     |  \
    \   |              |                   |         |\n   |  14 | Z  |  N  | GET\
    \ |  EtherMACIn  |  PromiscuousMode  | Success |\n   |     | N  |  Z  |     |\
    \              |                   | Success |\n   |     | Z  |  P  |     |  \
    \            |                   | Success |\n   |     | P  |  Z  |     |    \
    \          |                   | Success |\n   |     | N  |  P  |     |      \
    \        |                   | Success |\n   |     | P  |  N  |     |        \
    \      |                   | Success |\n   |     |    |     |     |          \
    \    |                   |         |\n   |  15 | Z  |  N  | GET |  EtherMACIn\
    \  |   TxFlowControl   | Success |\n   |     | N  |  Z  |     |              |\
    \                   | Success |\n   |     | Z  |  P  |     |              |  \
    \                 | Success |\n   |     | P  |  Z  |     |              |    \
    \               | Success |\n   |     | N  |  P  |     |              |      \
    \             | Success |\n   |     | P  |  N  |     |              |        \
    \           | Success |\n   |     |    |     |     |              |          \
    \         |         |\n   |  16 | Z  |  N  | GET |  EtherMACIn  |   RxFlowControl\
    \   | Success |\n   |     | N  |  Z  |     |              |                  \
    \ | Success |\n   |     | Z  |  P  |     |              |                   |\
    \ Success |\n   |     | P  |  Z  |     |              |                   | Success\
    \ |\n   |     | N  |  P  |     |              |                   | Success |\n\
    \   |     | P  |  N  |     |              |                   | Success |\n  \
    \ |     |    |     |     |              |                   |         |\n   |\
    \  17 | Z  |  N  | GET |  EtherMACIn  |     MACInStats    | Success |\n   |  \
    \   | N  |  Z  |     |              |                   | Success |\n   |    \
    \ | Z  |  P  |     |              |                   | Success |\n   |     |\
    \ P  |  Z  |     |              |                   | Success |\n   |     | N\
    \  |  P  |     |              |                   | Success |\n   |     | P  |\
    \  N  |     |              |                   | Success |\n   |     |    |  \
    \   |     |              |                   |         |\n   | 18  | Z  |  N \
    \ | GET | EtherMACOut  |     AdminStatus   | Success |\n   |     | N  |  Z  |\
    \     |              |                   | Success |\n   |     | Z  |  P  |  \
    \   |              |                   | Success |\n   |     | P  |  Z  |    \
    \ |              |                   | Success |\n   |     | N  |  P  |     |\
    \              |                   | Success |\n   |     | P  |  N  |     |  \
    \            |                   | Success |\n   |     |    |     |     |    \
    \          |                   |         |\n   | 19  | Z  |  N  | GET |  EtherMACOut\
    \ |          MTU      | Success |\n   |     | N  |  Z  |     |              |\
    \                   | Success |\n   |     | Z  |  P  |     |              |  \
    \                 | Success |\n   |     | P  |  Z  |     |              |    \
    \               | Success |\n   |     | N  |  P  |     |              |      \
    \             | Success |\n   |     | P  |  N  |     |              |        \
    \           | Success |\n   |     |    |     |     |              |          \
    \         |         |\n   |  20 | Z  |  N  | GET |  EtherMACOut |    TxFlowControl\
    \  | Success |\n   |     | N  |  Z  |     |              |                   |\
    \ Success |\n   |     | Z  |  P  |     |              |                   | Success\
    \ |\n   |     | P  |  Z  |     |              |                   | Success |\n\
    \   |     | N  |  P  |     |              |                   | Success |\n  \
    \ |     | P  |  N  |     |              |                   | Success |\n   |\
    \     |    |     |     |              |                   |         |\n   |  21\
    \ | Z  |  N  | GET |  EtherMACOut |    TxFlowControl  | Success |\n   |     |\
    \ N  |  Z  |     |              |                   | Success |\n   |     | Z\
    \  |  P  |     |              |                   | Success |\n   |     | P  |\
    \  Z  |     |              |                   | Success |\n   |     | N  |  P\
    \  |     |              |                   | Success |\n   |     | P  |  N  |\
    \     |              |                   | Success |\n   |     |    |     |  \
    \   |              |                   |         |\n   |  22 | Z  |  N  | GET\
    \ |  EtherMACOut |     MACOutStats   | Success |\n   |     | N  |  Z  |     |\
    \              |                   | Success |\n   |     | Z  |  P  |     |  \
    \            |                   | Success |\n   |     | P  |  Z  |     |    \
    \          |                   | Success |\n   |     | N  |  P  |     |      \
    \        |                   | Success |\n   |     | P  |  N  |     |        \
    \      |                   | Success |\n   |     |    |     |     |          \
    \    |                   |         |\n   |  23 | Z  |  N  | GET |      ARP   \
    \  |PortV4AddrInfoTable| Success |\n   |     | N  |  Z  |     |              |\
    \                   | Success |\n   |     | Z  |  P  |     |              |  \
    \                 | Success |\n   |     | P  |  Z  |     |              |    \
    \               | Success |\n   |     | N  |  P  |     |              |      \
    \             | Success |\n   |     | P  |  N  |     |              |        \
    \           | Success |\n   |     |    |     |     |              |          \
    \         |         |\n   |  24 | Z  |  N  | SET |      ARP     |PortV4AddrInfoTable|\
    \ Success |\n   |     | N  |  Z  |     |              |                   | Success\
    \ |\n   |     | Z  |  P  |     |              |                   | Success |\n\
    \   |     | P  |  Z  |     |              |                   | Success |\n  \
    \ |     | N  |  P  |     |              |                   | Success |\n   |\
    \     | P  |  N  |     |              |                   | Success |\n   |  \
    \   |    |     |     |              |                   |         |\n   |  25\
    \ | Z  |  N  | DEL |      ARP     |PortV4AddrInfoTable| Success |\n   |     |\
    \ N  |  Z  |     |              |                   | Success |\n   |     | Z\
    \  |  P  |     |              |                   | Success |\n   |     | P  |\
    \  Z  |     |              |                   | Success |\n   |     | N  |  P\
    \  |     |              |                   | Success |\n   |     | P  |  N  |\
    \     |              |                   | Success |\n   |     |    |     |  \
    \   |              |                   |         |\n   |  26 | Z  |  N  | SET\
    \ |  EtherMACIn  | LocalMACAddresses | Success |\n   |     | N  |  Z  |     |\
    \              |                   | Success |\n   |     | Z  |  P  |     |  \
    \            |                   | Success |\n   |     | P  |  Z  |     |    \
    \          |                   | Success |\n   |     | N  |  P  |     |      \
    \        |                   | Success |\n   |     | P  |  N  |     |        \
    \      |                   | Success |\n   |     |    |     |     |          \
    \    |                   |         |\n   |  27 | Z  |  N  | SET |  EtherMACIn\
    \  |          MTU      | Success |\n   |     | N  |  Z  |     |              |\
    \                   | Success |\n   |     | Z  |  P  |     |              |  \
    \                 | Success |\n   |     | P  |  Z  |     |              |    \
    \               | Success |\n   |     | N  |  P  |     |              |      \
    \             | Success |\n   |     | P  |  N  |     |              |        \
    \           | Success |\n   |     |    |     |     |              |          \
    \         |         |\n   |  28 | Z  |  N  | SET |  IPv4NextHop |  IPv4NextHopTable\
    \ | Success |\n   |     | N  |  Z  |     |              |                   |\
    \ Success |\n   |     | Z  |  P  |     |              |                   | Success\
    \ |\n   |     | P  |  Z  |     |              |                   | Success |\n\
    \   |     | N  |  P  |     |              |                   | Success |\n  \
    \ |     | P  |  N  |     |              |                   | Success |\n   |\
    \     |    |     |     |              |                   |         |\n   |  29\
    \ | Z  |  N  | SET | IPv4UcastLPM |  IPv4PrefixTable  | Success |\n   |     |\
    \ N  |  Z  |     |              |                   | Success |\n   |     | Z\
    \  |  P  |     |              |                   | Success |\n   |     | P  |\
    \  Z  |     |              |                   | Success |\n   |     | N  |  P\
    \  |     |              |                   | Success |\n   |     | P  |  N  |\
    \     |              |                   | Success |\n   |     |    |     |  \
    \   |              |                   |         |\n   |  30 | Z  |  N  | DEL\
    \ |  IPv4NextHop |  IPv4NextHopTable | Success |\n   |     | N  |  Z  |     |\
    \              |                   | Success |\n   |     | Z  |  P  |     |  \
    \            |                   | Success |\n   |     | P  |  Z  |     |    \
    \          |                   | Success |\n   |     | N  |  P  |     |      \
    \        |                   | Success |\n   |     | P  |  N  |     |        \
    \      |                   | Success |\n   |     |    |     |     |          \
    \    |                   |         |\n   |  31 | Z  |  N  | DEL | IPv4UcastLPM\
    \ |  IPv4PrefixTable  | Success |\n   |     | N  |  Z  |     |              |\
    \                   | Success |\n   |     | Z  |  P  |     |              |  \
    \                 | Success |\n   |     | P  |  Z  |     |              |    \
    \               | Success |\n   |     | N  |  P  |     |              |      \
    \             | Success |\n   |     | P  |  N  |     |              |        \
    \           | Success |\n   |     |    |     |     |              |          \
    \         |         |\n   |  32 | Z  |  N  | SET |  EtherPHYCop |     AdminStatus\
    \   | Success |\n   |     | N  |  Z  |     |              |                  \
    \ | Success |\n   |     | Z  |  P  |     |              |                   |\
    \ Success |\n   |     | P  |  Z  |     |              |                   | Success\
    \ |\n   |     | N  |  P  |     |              |                   | Success |\n\
    \   |     | P  |  N  |     |              |                   | Success |\n  \
    \ |     |    |     |     |              |                   |         |\n   |\
    \  33 | Z  |  N  | SET |     Ether    |   VlanInputTable  | Success |\n   |  \
    \   | N  |  Z  |     |  Classifier  |                   | Success |\n   |    \
    \ | Z  |  P  |     |              |                   | Success |\n   |     |\
    \ P  |  Z  |     |              |                   | Success |\n   |     | N\
    \  |  P  |     |              |                   | Success |\n   |     | P  |\
    \  N  |     |              |                   | Success |\n   |     |    |  \
    \   |     |              |                   |         |\n   |  34 | Z  |  N \
    \ | DEL |     Ether    |   VlanInputTable  | Success |\n   |     | N  |  Z  |\
    \     |  Classifier  |                   | Success |\n   |     | Z  |  P  |  \
    \   |              |                   | Success |\n   |     | P  |  Z  |    \
    \ |              |                   | Success |\n   |     | N  |  P  |     |\
    \              |                   | Success |\n   |     | P  |  N  |     |  \
    \            |                   | Success |\n   |     |    |     |     |    \
    \          |                   |         |\n   |  35 | Z  |  N  | SET |   Ether\
    \      |  VlanOutputTable  | Success |\n   |     | N  |  Z  |     | Encapsulator\
    \ |                   | Success |\n   |     | Z  |  P  |     |              |\
    \                   | Success |\n   |     | P  |  Z  |     |              |  \
    \                 | Success |\n   |     | N  |  P  |     |              |    \
    \               | Success |\n   |     | P  |  N  |     |              |      \
    \             | Success |\n   |     |    |     |     |              |        \
    \           |         |\n   |  36 | Z  |  N  | DEL |    Ether     |   VlanOutputTable\
    \ | Success |\n   |     | N  |  Z  |     | Encapsulator |                   |\
    \ Success |\n   |     | Z  |  P  |     |              |                   | Success\
    \ |\n   |     | P  |  Z  |     |              |                   | Success |\n\
    \   |     | N  |  P  |     |              |                   | Success |\n  \
    \ |     | P  |  N  |     |              |                   | Success |\n   +-----+----+-----+-----+--------------+-------------------+---------+\n\
    \                 Figure 8: Test Results for LFB Operation\n   Note on tests #1\
    \ and #2:\n   On the wire format of encapsulation on array, only the case of\n\
    \   FULLDATA-TLV vs. SPARSEDATA-TLV was tested.\n   When we use the ForCES protocol,\
    \ it is very common for the CE to use\n   the FEobject LFB to get information\
    \ on LFBs and their topology in the\n   FE.  Hence, the two tests were specifically\
    \ made.\n"
- title: 4.2.  Test of TML with IPsec
  contents:
  - "4.2.  Test of TML with IPsec\n   In this scenario, the ForCES TML was run over\
    \ IPsec.  Implementers\n   joined this interoperability test and used the same\
    \ third-party tool\n   software 'Racoon' [Racoon] to establish the IPsec channel.\
    \  Typical\n   LFB operation tests as in Scenario 1 were repeated with the\n \
    \  IPsec-enabled TML.\n   As mentioned, this scenario only took place between\
    \ implementers from\n   ZJSU and NTT.\n   The TML with IPsec test results are\
    \ reported in Figure 9.\n   +-----+----+-----+-----+--------------+-------------------+---------+\n\
    \   |Test#| CE |FE(s)|Oper |     LFB      |     Component/    | Result  |\n  \
    \ |     |    |     |     |              |     Capability    |         |\n   +-----+----+-----+-----+--------------+-------------------+---------+\n\
    \   |  1  | Z  |  N  | GET |   FEObject   |   LFBTopology     | Success |\n  \
    \ |     | N  |  Z  |     |              |                   | Success |\n   |\
    \     |    |     |     |              |                   |         |\n   |  2\
    \  | Z  |  N  | GET |   FEObject   |   LFBSelectors    | Success |\n   |     |\
    \ N  |  Z  |     |              |                   | Success |\n   |     |  \
    \  |     |     |              |                   |         |\n   |  3  | Z  |\
    \  N  | SET |   Ether      |   VlanInputTable  | Success |\n   |     | N  |  Z\
    \  |     |   Classifier |                   | Success |\n   |     |    |     |\
    \     |              |                   |         |\n   |  4  | Z  |  N  | DEL\
    \ |   Ether      |   VlanInputTable  | Success |\n   |     | N  |  Z  |     |\
    \   Classifier |                   | Success |\n   +-----+----+-----+-----+--------------+-------------------+---------+\n\
    \                 Figure 9: Test Results for TML with IPsec\n"
- title: 4.3.  Test of CE High Availability
  contents:
  - "4.3.  Test of CE High Availability\n   In this scenario, one FE connected and\
    \ associated with a master CE\n   and a backup CE.  When the master CE was deemed\
    \ disconnected, the FE\n   attempted to find another associated CE to become the\
    \ master CE.\n   The CEHA scenario, as described in Scenario 3, was completed\n\
    \   successfully for both setups.\n   Due to a bug in one of the FEs, an interesting\
    \ issue was caught: it\n   was observed that the buggy FE took up to a second\
    \ to failover.  It\n   was eventually found that the issue was due to the FE's\n\
    \   prioritization of the different CEs.  All messages from the backup CE\n  \
    \ were being ignored unless the master CE was disconnected.\n   While the bug\
    \ was fixed and the CEHA scenario was completed\n   successfully, the authors\
    \ felt it was important to capture the\n   implementation issue in this document.\
    \  The recommended approach is\n   the following:\n   o  The FE should receive\
    \ and handle messages first from the master CE\n      on all priority channels\
    \ to maintain proper functionality and then\n      receive and handle messages\
    \ from the backup CEs.\n   o  Only when the FE is attempting to associate with\
    \ the backup CEs\n      should the FE receive and handle messages per priority\
    \ channel\n      from all CEs.  When all backup CEs are associated with or deemed\n\
    \      unreachable, then the FE should return to receiving and handling\n    \
    \  messages first from the master CE.\n"
- title: 4.4.  Test of Packet Forwarding
  contents:
  - "4.4.  Test of Packet Forwarding\n   As described in the ForCES LFB library [LFB-LIB],\
    \ packet forwarding\n   is implemented by a set of LFB classes that compose a\
    \ processing path\n   for packets.  In this test scenario, as shown in Figure\
    \ 7, a ForCES\n   router running the OSPF protocol was constructed.  In addition,\
    \ a set\n   of LFBs including RedirectIn, RedirectOut, IPv4UcastLPM, and\n   IPv4NextHop\
    \ were used.  RedirectIn and RedirectOut LFBs redirected\n   OSPF Hello and LSA\
    \ packets from and to the CE.  A SmartBits\n   [SmartBits] test machine was used\
    \ to simulate an OSPF router and\n   exchange the OSPF Hello and LSA packets with\
    \ the CE in the ForCES\n   router.\n   In Figure 7, cases (a) and (b) both need\
    \ a RedirectIn LFB to send\n   OSPF packets generated by the CE to the FE by use\
    \ of ForCES packet\n   redirect messages.  The OSPF packets were further sent\
    \ to an outside\n   OSPF router by the FE via forwarding LFBs, including IPv4NextHop\
    \ and\n   IPv4UcastLPM.  A RedirectOut LFB in the FE was used to send OSPF\n \
    \  packets received from outside the OSPF router to the CE by ForCES\n   packet\
    \ redirect messages.\n   By running OSPF, the CE in the ForCES router could generate\
    \ new\n   routes and load them to the routing table in the FE.  The FE was then\n\
    \   able to forward packets according to the routing table.\n   The test results\
    \ are shown in Figure 10.\n   +-----+----+-----+-------------------------+--------------+---------+\n\
    \   |Test#| CE |FE(s)|           Item          | LFBs Related | Result  |\n  \
    \ +-----+----+-----+-------------------------+--------------+---------+\n   |\
    \  1  | N  |  Z  |  IPv4NextHopTable SET   | IPv4NextHop  | Success |\n   |  \
    \   |    |     |                         |              |         |\n   |  2 \
    \ | N  |  Z  |   IPv4PrefixTable SET   | IPv4UcastLPM | Success |\n   |     |\
    \    |     |                         |              |         |\n   |  3  | N\
    \  |  Z  |Redirect OSPF packet from|  RedirectIn  | Success |\n   |     |    |\
    \     |     CE to SmartBits     |              |         |\n   |     |    |  \
    \   |                         |              |         |\n   |  4  | N  |  Z \
    \ |Redirect OSPF packet from|  RedirectOut | Success |\n   |     |    |     |\
    \     SmartBits to CE     |              |         |\n   |     |    |     |  \
    \                       |              |         |\n   |  5  | N  |  Z  |    \
    \   Metadata in       |  RedirectOut | Success |\n   |     |    |     |     redirect\
    \ message    |  RedirectIn  |         |\n   |     |    |     |               \
    \          |              |         |\n   |  6  | N  |  Z  | OSPF neighbor discovery\
    \ |  RedirectOut | Success |\n   |     |    |     |                         |\
    \  RedirectIn  |         |\n   |     |    |     |                         |  \
    \            |         |\n   |  7  | N  |  Z  |     OSPF DD exchange    |  RedirectOut\
    \ | Success |\n   |     |    |     |                         |  RedirectIn  |\
    \         |\n   |     |    |     |                         |  IPv4NextHop |  \
    \       |\n   |     |    |     |                         |              |    \
    \     |\n   |  8  | N  |  Z  |    OSPF LSA exchange    |  RedirectOut | Success\
    \ |\n   |     |    |     |                         |  RedirectIn  |         |\n\
    \   |     |    |     |                         |  IPv4NextHop |         |\n  \
    \ |     |    |     |                         |  IPv4UcastLPM|         |\n   |\
    \     |    |     |                         |              |         |\n   |  9\
    \  | N  |  Z  |     Data Forwarding     |  RedirectOut | Success |\n   |     |\
    \    |     |                         |  RedirectIn  |         |\n   |     |  \
    \  |     |                         |  IPv4NextHop |         |\n   |     |    |\
    \     |                         |  IPv4UcastLPM|         |\n   |     |    |  \
    \   |                         |              |         |\n   |  10 | Z  |  N \
    \ |  IPv4NextHopTable SET   |  IPv4NextHop | Success |\n   |     |    |     |\
    \                         |              |         |\n   |  11 | Z  |  N  |  \
    \ IPv4PrefixTable SET   |  IPv4UcastLPM| Success |\n   |     |    |     |    \
    \                     |              |         |\n   |  12 | Z  |  N  |Redirect\
    \ OSPF packet from|  RedirectIn  | Success |\n   |     |    |     | CE to other\
    \ OSPF router |              |         |\n   |     |    |     |              \
    \           |              |         |\n   |  13 | Z  |  N  |Redirect OSPF packet\
    \ from|  RedirectOut | Success |\n   |     |    |     |other OSPF router to CE\
    \  |              |         |\n   |     |    |     |                         |\
    \              |         |\n   |  14 | Z  |  N  |       Metadata in       |  RedirectOut\
    \ | Success |\n   |     |    |     |     redirect message    |  RedirectIn  |\
    \         |\n   |     |    |     |                         |              |  \
    \       |\n   |  15 | Z  |  N  |OSPF neighbor discovery  |  RedirectOut | Success\
    \ |\n   |     |    |     |                         |  RedirectIn  |         |\n\
    \   |     |    |     |                         |              |         |\n  \
    \ |  16 | Z  |  N  |    OSPF DD exchange     |  RedirectOut | Failure |\n   |\
    \     |    |     |                         |  RedirectIn  |         |\n   |  \
    \   |    |     |                         |  IPv4NextHop |         |\n   |    \
    \ |    |     |                         |              |         |\n   |  17 |\
    \ Z  |  N  |    OSPF LSA exchange    |  RedirectOut | Failure |\n   |     |  \
    \  |     |                         |  RedirectIn  |         |\n   |     |    |\
    \     |                         |  IPv4NextHop |         |\n   |     |    |  \
    \   |                         |  IPv4UcastLPM|         |\n   +-----+----+-----+-------------------------+--------------+---------+\n\
    \               Figure 10: Test Results for Packet Forwarding\n   Note on tests\
    \ #3 to #9:\n   During the test, OSPF packets received from the CE were found\
    \ by\n   Ethereal/Wireshark to have checksum errors in the FE.  Because the\n\
    \   test time was quite limited, the implementer of the CE did not make\n   an\
    \ effort to find and solve the checksum error; instead, the FE had\n   tried to\
    \ correct the checksum in order to not let the SmartBits drop\n   the packets.\
    \  Note that such a solution does not affect the test\n   results.\n   Comment\
    \ on tests #16 and #17:\n   The two test items failed.  Note that tests #7 and\
    \ #8 were identical\n   to tests #16 and #17, only with CE and FE implementers\
    \ being\n   exchanged.  Moreover, tests #12 and #13 showed that the redirect\n\
    \   channel worked well.  Therefore, it can be reasonably inferred that\n   the\
    \ problem caused by the failure was from the implementations,\n   rather than\
    \ from the ForCES protocol itself or the misunderstanding\n   of implementations\
    \ on the protocol specification.  Although the\n   failure made the OSPF interoperability\
    \ test incomplete, it did not\n   show an interoperability problem.  More test\
    \ work is needed to verify\n   the OSPF interoperability.\n"
- title: 5.  Discussions
  contents:
  - '5.  Discussions

    '
- title: 5.1.  On Data Encapsulation Format
  contents:
  - "5.1.  On Data Encapsulation Format\n   On the first day of the test, it was found\
    \ that the LFB\n   interoperations pertaining to tables all failed.  It was eventually\n\
    \   found that the failure occurred because different data encapsulation\n   methods\
    \ for ForCES protocol messages were used by different\n   implementations.  The\
    \ issue is described in detail below.\n   Assuming that an LFB has two components,\
    \ one is a struct with ID=1\n   and the other is an array with ID=2; in addition,\
    \ both have two\n   components of u32 inside, as shown below:\n   struct1: type\
    \ struct, ID=1\n           components are:\n           a, type u32, ID=1\n   \
    \        b, type u32, ID=2\n   table1: type array, ID=2\n           components\
    \ for each row are (a struct of):\n           x, type u32, ID=1\n           y,\
    \ type u32, ID=2\n   1.  On Response of PATH-DATA-TLV Format\n   When a CE sends\
    \ a config/query ForCES protocol message to an FE from\n   a different implementer,\
    \ the CE probably receives a response from the\n   FE with a different PATH-DATA-TLV\
    \ encapsulation format.  For example,\n   if a CE sends a query message with a\
    \ path of 1 to a third-party FE to\n   manipulate struct1 as defined above, it\
    \ is probable that the FE will\n   generate a response with two different PATH-DATA-TLV\
    \ encapsulation\n   formats: one is the value with FULLDATA-TLV/SPARSEDATA-TLV\
    \ and the\n   other is the value with many parallel PATH-DATA-TLVs and nested\n\
    \   PATH-DATA-TLVs, as shown below:\n   format 1:\n       OPER = GET-RESPONSE-TLV\n\
    \           PATH-DATA-TLV:\n               IDs=1\n               FULLDATA-TLV\
    \ containing valueof(a),valueof(b)\n   format 2:\n       OPER = GET-RESPONSE-TLV\n\
    \           PATH-DATA-TLV:\n               IDs=1\n               PATH-DATA-TLV:\n\
    \                   IDs=1\n                   FULLDATA-TLV containing valueof(a)\n\
    \               PATH-DATA-TLV:\n                   IDs=2\n                   FULLDATA-TLV\
    \ containing valueof(b)\n   The interoperability testers witnessed that a ForCES\
    \ element (CE or\n   FE) sender is free to choose whatever data structure that\
    \ IETF ForCES\n   documents define and best suits the element, while a ForCES\
    \ element\n   (CE or FE) should be able to accept and process information (requests\n\
    \   and responses) that use any legitimate structure defined by IETF\n   ForCES\
    \ documents.  While in the case where a ForCES element is free\n   to choose any\
    \ legitimate data structure as a response, it is\n   preferred that the ForCES\
    \ element responds in the same format that\n   the request was made, as it is\
    \ most likely the data structure that\n   the request sender looks to receive.\n\
    \   2.  On Operation to Array\n   An array operation may also have several different\
    \ data encapsulation\n   formats.  For instance, if a CE sends a config message\
    \ to table1 with\n   a path of (2.1), which refers to the component with ID=2\
    \ (an array),\n   and the second ID is the row, then row 1 may be encapsulated\
    \ with\n   three formats as shown below:\n   format 1:\n       OPER = SET-TLV\n\
    \           PATH-DATA-TLV:\n               IDs=2.1\n               FULLDATA-TLV\
    \ containing valueof(x),valueof(y)\n   format 2:\n       OPER = SET-TLV\n    \
    \       PATH-DATA-TLV:\n               IDs=2.1\n               PATH-DATA-TLV:\n\
    \                   IDs=1\n                   FULLDATA-TLV containing valueof(x)\n\
    \               PATH-DATA-TLV\n                   IDs=2\n                   FULLDATA-TLV\
    \ containing valueof(y)\n   Moreover, if the CE is targeting the whole array,\
    \ for example, if the\n   array is empty and the CE wants to add the first row\
    \ to the table, it\n   could also adopt another format:\n   format 3:\n      \
    \ OPER = SET-TLV\n           PATH-DATA-TLV:\n               IDs=2\n          \
    \     FULLDATA-TLV containing rowindex=1,valueof(x),valueof(y)\n   The interoperability\
    \ test experience has shown that formats 1 and 3,\n   which take full advantage\
    \ of the multiple data elements description\n   in one TLV of FULLDATA-TLV, are\
    \ more efficient, although format 2 can\n   also achieve the same operating goal.\n"
- title: 6.  Security Considerations
  contents:
  - "6.  Security Considerations\n   Developers of ForCES FEs and CEs must take the\
    \ security\n   considerations of the ForCES Framework [RFC3746] and ForCES Protocol\n\
    \   Specification [RFC5810] into account.  Also, as specified in the\n   security\
    \ considerations of SCTP-Based TML for the ForCES Protocol\n   [RFC5811], the\
    \ transport-level security has to be ensured by IPsec.\n   Test results of TML\
    \ with IPsec supported have been shown in\n   Section 4.2 in this document.\n\
    \   The tests described in this document used only simple password\n   security\
    \ mode.  Testing using more sophisticated security is for\n   future study.\n\
    \   Further testing using key agility is encouraged.  The tests reported\n   here\
    \ used SCTP TML running over an IPsec tunnel, which was\n   established by Racoon.\
    \  Key negotiation formed part of this process,\n   but we believe that the SCTP\
    \ TML used does not include key agility or\n   renegotiation.\n"
- title: 7.  References
  contents:
  - '7.  References

    '
- title: 7.1.  Normative References
  contents:
  - "7.1.  Normative References\n   [RFC5810]     Doria, A., Hadi Salim, J., Haas,\
    \ R., Khosravi, H.,\n                 Wang, W., Dong, L., Gopal, R., and J. Halpern,\n\
    \                 \"Forwarding and Control Element Separation (ForCES)\n     \
    \            Protocol Specification\", RFC 5810, March 2010.\n   [RFC5811]   \
    \  Hadi Salim, J. and K. Ogawa, \"SCTP-Based Transport\n                 Mapping\
    \ Layer (TML) for the Forwarding and Control\n                 Element Separation\
    \ (ForCES) Protocol\", RFC 5811,\n                 March 2010.\n   [RFC5812] \
    \    Halpern, J. and J. Hadi Salim, \"Forwarding and Control\n               \
    \  Element Separation (ForCES) Forwarding Element Model\",\n                 RFC\
    \ 5812, March 2010.\n   [RFC5813]     Haas, R., \"Forwarding and Control Element\
    \ Separation\n                 (ForCES) MIB\", RFC 5813, March 2010.\n"
- title: 7.2.  Informative References
  contents:
  - "7.2.  Informative References\n   [CEHA]        Ogawa, K., Wang, W., Haleplidis,\
    \ E., and J. Salim,\n                 \"ForCES Intra-NE High Availability\", Work\
    \ in Progress,\n                 October 2010.\n   [Ethereal]    Fenggen, J.,\
    \ \"Subject: Release of a test version of\n                 ForCES dissector based\
    \ on Ethereal 0.99.0\", message to\n                 the IETF forces mailing list,\
    \ 11 June 2009,\n                 <http://www.ietf.org/mail-archive/web/forces/current/\n\
    \                 msg03687.html>.\n   [LFB-LIB]     Wang, W., Haleplidis, E.,\
    \ Ogawa, K., Li, C., and J.\n                 Halpern, \"ForCES Logical Function\
    \ Block (LFB) Library\",\n                 Work in Progress, December 2010.\n\
    \   [RFC3654]     Khosravi, H. and T. Anderson, \"Requirements for\n         \
    \        Separation of IP Control and Forwarding\", RFC 3654,\n              \
    \   November 2003.\n   [RFC3746]     Yang, L., Dantu, R., Anderson, T., and R.\
    \ Gopal,\n                 \"Forwarding and Control Element Separation (ForCES)\n\
    \                 Framework\", RFC 3746, April 2004.\n   [RFC6053]     Haleplidis,\
    \ E., Ogawa, K., Wang, W., and J. Hadi Salim,\n                 \"Implementation\
    \ Report for Forwarding and Control\n                 Element Separation (ForCES)\"\
    , RFC 6053, November 2010.\n   [RFC6956]     Wang, W., Haleplidis, E., Ogawa,\
    \ K., Li, C., and J.\n                 Halpern, \"Forwarding and Control Element\
    \ Separation\n                 (ForCES) Logical Function Block (LFB) Library\"\
    ,\n                 RFC 6956, June 2013.\n   [Racoon]      The NetBSD Foundation,\
    \ \"How to build a remote user\n                 access VPN with Racoon\",\n \
    \                <http://www.netbsd.org/docs/network/ipsec/rasvpn.html>.\n   [SmartBits]\
    \   Spirent Inc., \"The Highly-Scalable Router Performance\n                 Tester:\
    \ TeraRouting Tester\", 2005,\n                 <http://www.spirent.com/~/media/Datasheets/Broadband/\n\
    \                 Obsolete_SMB-TM/TeraRouting%20Tester.pdf>.\n   [Tcpdump]   \
    \  Hadi Salim, J., \"Subject: tcpdump 4.1.1\", message to\n                 the\
    \ IETF forces mailing list, 20 May 2010,\n                 <http://www.ietf.org/mail-archive/web/forces/current/\n\
    \                 msg03811.html>.\n   [TeamViewer]  TeamViewer Inc., \"TeamViewer\
    \ - the All-In-One Software\n                 for Remote Support and Online Meetings\"\
    ,\n                 <http://www.teamviewer.com/>.\n"
- title: Appendix A.  Acknowledgements
  contents:
  - "Appendix A.  Acknowledgements\n   The authors thank the following test participants:\n\
    \      Chuanhuang Li, Hangzhou BAUD Networks\n      Ligang Dong, Zhejiang Gongshang\
    \ University\n      Bin Zhuge, Zhejiang Gongshang University\n      Jingjing Zhou,\
    \ Zhejiang Gongshang University\n      Liaoyuan Ke, Hangzhou BAUD Networks\n \
    \     Kelei Jin, Hangzhou BAUD Networks\n   The authors also thank very much Adrian\
    \ Farrel, Joel Halpern, Ben\n   Campbell, Nevil Brownlee, and Sean Turner for\
    \ their important help in\n   the document publication process.\n"
- title: Appendix B.  Contributors
  contents:
  - "Appendix B.  Contributors\n   Contributors who have made major contributions\
    \ to the\n   interoperability test are listed below.\n   Hirofumi Yamazaki\n \
    \  NTT Corporation\n   Tokyo\n   Japan\n   EMail: yamazaki.horofumi@lab.ntt.co.jp\n\
    \   Rong Jin\n   Zhejiang Gongshang University\n   Hangzhou\n   P.R. China\n \
    \  EMail: jinrong@zjsu.edu.cn\n   Yuta Watanabe\n   NTT Corporation\n   Tokyo\n\
    \   Japan\n   EMail: yuta.watanabe@ntt-at.co.jp\n   Xiaochun Wu\n   Zhejiang Gongshang\
    \ University\n   Hangzhou\n   P.R. China\n   EMail: spring-403@zjsu.edu.cn\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Weiming Wang\n   Zhejiang Gongshang University\n   18\
    \ Xuezheng Str., Xiasha University Town\n   Hangzhou  310018\n   P.R. China\n\
    \   Phone: +86-571-28877721\n   EMail: wmwang@zjsu.edu.cn\n   Kentaro Ogawa\n\
    \   NTT Corporation\n   Tokyo\n   Japan\n   EMail: ogawa.kentaro@lab.ntt.co.jp\n\
    \   Evangelos Haleplidis\n   University of Patras\n   Department of Electrical\
    \ & Computer Engineering\n   Patras  26500\n   Greece\n   EMail: ehalep@ece.upatras.gr\n\
    \   Ming Gao\n   Hangzhou BAUD Networks\n   408 Wen-San Road\n   Hangzhou  310012\n\
    \   P.R. China\n   EMail: gaoming@mail.zjgsu.edu.cn\n   Jamal Hadi Salim\n   Mojatatu\
    \ Networks\n   Ottawa\n   Canada\n   EMail: hadi@mojatatu.com\n"
