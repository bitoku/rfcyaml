This memo is an official status report on the protocols used in the ARPA Internet community.
Distribution of this memo is unlimited.
INTRODUCTION This RFC identifies the documents specifying the official protocols used in the Internet.
Comments indicate any revisions or changes planned.
To first order, the official protocols are those in the "Internet Protocol Transition Workbook" (IPTW) dated March 1982.
There are several protocols in use that are not in the IPTW.
A few of the protocols in the IPTW have been revised.
Notably, the mail protocols have been revised and issued as a volume titled "Internet Mail Protocols" dated November 1982.
Telnet and the most useful Telnet options have been revised and issued as a volume titled "Internet Telnet Protocol and Options" (ITP) dated June 1983.
Some protocols have not been revised for many years, these are found in the old "ARPANET Protocol Handbook" (APH) dated January 1978.
There is also a volume of protocol related information called the "Internet Protocol Implementers Guide" (IPIG) dated August 1982.
This document is organized as a sketchy outline.
The entries are protocols (e.g., Transmission Control Protocol).
In each entry there are notes on status, specification, comments, other references, dependencies, and contact.
The STATUS is one of: required, recommended, elective, or experimental.
The SPECIFICATION identifies the protocol defining documents.
The COMMENTS describe any differences from the specification or problems with the protocol.
The OTHER REFERENCES identify documents that comment on or expand on the protocol.
The DEPENDENCIES indicate what other protocols are called upon by this protocol.
The CONTACT indicates a person who can answer questions about the protocol.
In particular, the status may be: required all hosts must implement the required protocol, recommended all hosts are encouraged to implement the recommended protocol, elective hosts may implement or not the elective protocol, experimental hosts should not implement the experimental protocol unless they are participating in the experiment and have coordinated their use of this protocol with the contact person, and none this is not a protocol.
For further information about protocols in general, please contact: Joyce Reynolds USC Information Sciences Institute 4676 Admiralty Way
Marina del Rey, California  90292
Phone: (213) 822 1511 ARPA mail:
None SPECIFICATION:  IEN 48 (in IPTW)
Gives an overview of the organization and principles of the Internet.
Could be revised and expanded.
RFC 871 A Perspective on the ARPANET Reference Model Padlipsky, M.A., "
The Elements of Networking Style and other Essays and Animadversions on the Art of Intercomputer Networking", Prentice Hall, New Jersey, 1985.
Leiner, Barry, Robert Cole, Jon Postel and Dave Mills, "The DARPA Protocol Suite", IEEE INFOCOM 85, Washington, D.C., March 1985.
Also in IEEE Communications Magazine, March 1985.
Required SPECIFICATION:  RFC 791 (in IPTW)
This is the universal protocol of the Internet.
This datagram protocol provides the universal addressing of hosts in the Internet.
A few minor problems have been noted in this document.
The most serious is a bit of confusion in the route options.
The route options have a pointer that indicates which octet of the route is the next to be used.
The confusion is between the phrases "the pointer is relative to this option" and "the smallest legal value for the pointer is 4".
If you are confused, forget about the relative part, the pointer begins at 4.
Another important point is the alternate reassembly procedure suggested in RFC 815.
Some changes are in the works for the security option.
Note that ICMP is defined to be an integral part of IP.
You have not completed an implementation of IP if it does not include ICMP.
RFC 815 (in IPIG) IP Datagram Reassembly Algorithms RFC 814 (in IPIG) Names, Addresses, Ports, and Routes RFC 816 (in IPIG)
Fault Isolation and Recovery RFC 817 (in IPIG) Modularity and Efficiency in Protocol Implementation MIL STD 1777 Military Standard Internet Protocol
RFC 944 Internet Control Message Protocol
Required SPECIFICATION:  RFC 792 (in IPTW)
The control messages and error reports that go with the Internet Protocol.
A few minor errors in the document have been noted.
Suggestions have been made for additional types of redirect message and additional destination unreachable messages.
A proposal for two additional ICMP message types is made in RFC 917 "Internet Subnets", Address Format Request (A1 17), and Address Format Reply (A2 18).
The details of these ICMP types are subject to change.
Use of these ICMP types is experimental.
Note that ICMP is defined to be an integral part of IP.
You have not completed an implementation of IP if it does not include ICMP.
RFC 944 HOST LEVEL User Datagram Protocol
Recommended SPECIFICATION:  RFC 768 (in IPTW)
COMMENTS: Provides a datagram service to applications.
Adds port addressing to the IP services.
The only change noted for the UDP specification is a minor clarification that if in computing the checksum a padding octet is used for the computation it is not transmitted or counted in the length.
Recommended SPECIFICATION:  RFC 793 (in IPTW)
COMMENTS: Provides reliable end to end data stream service.
Many comments and corrections have been received for the TCP specification document.
These are primarily document bugs rather than protocol bugs.
There are many minor corrections and clarifications needed in this section.
There are still some phrases in the document that give a "record mark" flavor to the push.
These should be further clarified.
The push is not a record mark.
Urgent:  Page 17 is wrong.
The urgent pointer points to the last octet of urgent data (not to the first octet of non ungent data).
Several comments have been received on difficulties with contacting listening servers.
There should be some discussion of implementation issues for servers, and some notes on alternative models of system and process organization for servers.
The maximum segment size option should be generalized and clarified.
It can be used to either increase or decrease the maximum segment size from the default.
The TCP Maximum Segment Size is the IP Maximum Datagram Size minus forty.
The default IP Maximum Datagram Size
The default TCP Maximum Segment Size is 536.
For further discussion, see RFC 879.
There have been questions about automatically closing idle connections.
Idle connections are ok, and should not be closed.
There are several cases where idle connections arise, for example, in Telnet when a user is thinking for a long time following a message from the server computer before his next input.
There is no TCP "probe" mechanism, and none is needed.
Queued Receive Data on Closing
:  There are several points where it is not clear from the description what to do about data received by the TCP but not yet passed to the user, particularly when the connection is being closed.
In general, the data is to be kept to give to the user if he does a RECV call.
The description says that segments that arrive out of order, that is, are not exactly the next segment to be processed, may be kept on hand.
It should also point out that there is a very large performance penalty for not doing so.
This is the time out started on an open or send call.
If this user time out occurs the user should be notified, but the connection should not be closed or the TCB deleted.
The user should explicitly ABORT the connection if he wants to give up.
RFC 813 (in IPIG) Window and Acknowledgement Strategy in TCP RFC 814 (in IPIG) Names, Addresses, Ports, and Routes RFC 816 (in IPIG)
Fault Isolation and Recovery Official ARPA
Modularity and Efficiency in Protocol Implementation RFC 879 TCP
RFC 889 Internet Delay Experiments RFC 896 TCP/IP Congestion Control MIL STD 1778 Military Standard Transmission Control Protocol DEPENDENCIES:
Postel@USC ISIF.ARPA Host Monitoring Protocol
This is a good tool for debugging protocol implementations in remotely located computers.
This protocol is used to monitor Internet gateways and the TACs.
A debugging protocol, allows debugger like access to remote systems.
This specification should be updated and reissued as an RFC.
ISIF.ARPA "Stub" Exterior Gateway Protocol
Recommended for Gateways SPECIFICATION:  RFC 888,
The protocol used between gateways of different administrations to exchange routing information.
Please discuss any plans for implementation or use of this protocol with the contact.
RFC 827, RFC 890 DEPENDENCIES:
The gateway protocol now used in the core gateways.
Please discuss any plans for implementation or use of this protocol with the contact.
Experimental SPECIFICATION:  IEN 90 COMMENTS:
Defines a capability to combine several segments from different higher level protocols in one IP datagram.
No current experiment in progress.
There is some question as to the extent to which the sharing this protocol envisions can actually take place.
Also, there are some issues about the information captured in the multiplexing header being (a) insufficient, or (b) over specific.
Please discuss any plans for implementation or use of this protocol with the contact.
A gateway resource allocation protocol designed for use in multihost real time applications.
The implementation of this protocol has evolved and may no longer be consistent with this specification.
The document should be updated and issued as an RFC.
Please discuss any plans for implementation or use of this protocol with the contact.
RFC 944 Network Voice Protocol
ISI Internal Memo COMMENTS: Defines the procedures for real time voice conferencing.
The specification is an ISI Internal Memo which should be updated and issued as an RFC.
Please discuss any plans for implementation or use of this protocol with the contact.
RFC 741 DEPENDENCIES:  Internet Protocol,
This protocol is designed to efficiently support the bulk transfer of data for such host monitoring and control applications as loading/dumping and remote debugging.
The protocol is intended to be simple to implement but still be efficient in environments where there may be long transmission delays and loss or non sequential delivery of message segments.
DEPENDENCIES:  Internet Protocol CONTACT:  CWelles@BBN
UNIX.ARPA Official ARPA Internet Protocols
RFC 944 Internet Reliable Transaction Protocol
This protocol is a transport level host to host protocol designed for an internet environment.
While the issues discussed may not be directly relevant to the research problems of the DARPA community, they may be interesting to a number of researchers and implementors.
DEPENDENCIES:  Internet Protocol CONTACT:  Trudy@ACC.ARPA
Recommended SPECIFICATION:  RFC 854 (in "Internet Telnet Protocol and Options")
The protocol for remote terminal access.
This has been revised since the IPTW.
RFC 764 in IPTW is now obsolete.
General description of options:  RFC 855 (in "Internet Telnet Protocol and Options")
The ITP column indicates if the specification is included in the Internet Telnet Protocol and Options.
The APH column indicates if the specification is included in the ARPANET Protocol Handbook.
The USE column of the table above indicates which options are in general use.
The Binary Transmission, Echo, Suppress Go Ahead, Status, Timing Mark, and Extended Options List options have been recently updated and reissued.
These are the most frequently implemented options.
The remaining options should be reviewed and the useful ones should be revised and reissued.
The others should be eliminated.
The following are recommended:  Binary Transmission, Echo,
Suppress Go Ahead, Status, Timing Mark, and Extended Options List.
Recommended SPECIFICATION:  RFC 765 (in IPTW)
The protocol for moving files between Internet hosts.
Provides for access control and negotiation of file parameters.
There are a number of minor corrections to be made.
A major change is the deletion of the mail commands, and a major clarification is needed in the discussion of the management of the data connection.
Also, a suggestion has been made to include some directory manipulation commands (RFC 775).
Even though the MAIL features are defined in this document, they are not to be used.
The SMTP protocol is to be used for all mail service in the Internet.
All FTP implementations must support use of the default data connection ports, and only the User PI may initiate the use of non default ports.
The User PI may request the server side to identify a non default server side data port with the PASV command.
Since a connection is defined by the pair of addresses, either of these actions is enough to get a different data connection, still it is permitted to do both commands to use new ports on both ends of the data connection.
Reuse of the Data Connection:  When using the stream mode of data transfer the end of the file must be indicated by closing the connection.
This causes a problem if multiple files are to be transfered in the session, due to need for TCP to hold the connection record for a time out period to guarantee the reliable communication.
Thus the connection can not be reopened at once.
There are two solutions to this problem.
The first is to negotiate a non default port (as in (b) above).
The second is to use another transfer mode.
A comment on transfer modes.
The stream transfer mode is inherently unreliable, since one can not determine if the connection closed prematurely or not.
The other transfer modes (Block, Compressed) do not close the connection to indicate the end of file.
They have enough FTP encoding that the data connection can be parsed to determine the end of the file.
Thus using these modes one can leave the data connection open for multiple file transfers.
Why this was not a problem with the old NCP FTP: The NCP was designed with only the ARPANET in mind.
The ARPANET provides very reliable service, and the NCP counted on it.
If any packet of data from an NCP connection were lost or damaged by the network the NCP could not recover.
It is a tribute to the ARPANET designers that the NCP FTP worked so well.
The TCP is designed to provide reliable connections over many different types of networks and interconnections of networks.
TCP must cope with a set of networks that can not promise to work as well as the ARPANET.
TCP must make its own provisions for end to end recovery from lost or damaged packets.
This leads to the need for the connection phase down time out.
LIST and NLST: There is some confusion about the LIST an NLST commands, and what is appropriate to return.
Some clarification and motivation for these commands should be added to the specification.
Multiple 1xx Replies: There is some difference of opinion about the use of multiple 1xx responses during command processing.
This issue comes up particularly in processing the RETR and STOR commands.
The two opinions are summarized below.
For Exactly One 1xx Response: When a RETR or SEND command is started, the server is supposed to give an "intermediate reply" of 1xx when it is opening the data connection.
Currently, some FTP servers give two 1xx messages.
This causes problems for single thread FTP user implementations.
After reading the first intermediate reply, they go off to do the transfer.
The second 1xx message is not seen until the end of the transfer.
The RFC gives a state diagram of the form:  Wait
This implies any number of 1xx's (including 0).
There is a suspicion that this is just sloppy diagraming, and that the intent is clear from other parts of the RFC.
The FTP specification states that the reason for intermediate replies is to allow implementations that can't do any better to know when to stop listening to the control channel and switch their attention to the data channel.
Given this intent, it seems clear that there should be exactly one 1xx reply at the start of the transfer.
The FTP specification is ambiguous in this regard.
But the charts before them do not.
And from the intent, it seems obvious that exactly one is the right thing.
Consider an implementation on a PC.
It is fairly hard to do parallel processing there.
It should be possible for a PC implementation to stop paying attention to the control channel and start reading the file from the data channel when he sees the 1xx response.
The only way this can work is if there is only one 1xx response.
Of course, one could make it a requirement that every FTP implementation must be based on good enough interrupt technology so that it can field extra responses during the transfer.
But what would such a constraint buy?
Just the ability to have both a 125 and a 150 response.
It doesn't seem worth the price.
You could just as well combine the information in those responses into a single one.
For Multiple 1xx Responses: The multiple 1xx messages arose because the new TCP specification omitted the 050 spontaneous reply code.
A solution was to change an 050 informational message to a 1xx message, creating both a 125 and a 150.
The state diagrams clearly allow this, and the "Command Reply Sequences" section does not contradict it.
A multiple 1xx implementation is in accord with the formal reply specifications.
A multiple 1xx implementation works with the TOPS 20 FTP's and with a number of different UNIX implementations, and the LOCUS system.
So, a lot of implementors must follow state diagrams in preference to prose.
However, the observation is certainly correct that page 34 of the specification suggests that 1xx replies can be used by single thread user implementations to switch attention to the data connection.
This would allow only a single 1xx message, in contradiction to the state diagrams.
It seems a bit strong, however, to call the one sentence on page 34 "the intent" of the specification, since it is contradicted by the format specification of replies.
RFC 944 A side discussion favoring more status information: One view has always assumed a two thread implementation.
In this view, most user implementations are deficient because they do not allow the user to enter a STATUS command during data transfer.
A cynic might say that is because the Computer Scientists who did these implementations only do "Toy" file transfers, and often use "Toy" operating systems.
There has been some complaints from the Toy systems crowd recently that FTP is too complicated.
Well, it may be too complicated for Toy systems, but in fact it is too simple for many Real file systems.
For example, it has no way to encode a "library" (i.e., a named collection of subfiles).
It is (barely) adequate for shipping around files of text, but not much more.
With the notable exception of Multics and UNIX, many operating systems support complex file structures of which the user must be aware.
One is not doing the user a favor by hiding details that may reach out and bite him.
That is the reason some FTPs put out a large informative message at the beginning of the transfer, specifying the file baroqueness that is involved.
As a Computer Scientist, you may find that message annoying, but if you had to use MVS very much, you would find it helpful, informative, and maybe even reassuring.
Some believe that as DARPA technology moves into the production environment of DDN, there will be user requirements for such informative messages for a variety of vendor operating systems.
To provide important information to the user the specification should either allow multiple 1xx messages, or restore the old spontaneous reply category.
In fact, the latter is preferable; this information should be displayed to the user, but a user FTP might swallow 1xx messages without displaying their text.
The Answer: Following the Robustness Principle (a protocol implementation ought to inflict minimal pain and accept maximal pain) there should be only one 1xx response.
That is, those FTP servers that now issue two 1xx responses should combine them.
RFC 678 Document File Format Standards MIL STD 1780 File Transfer Protocol DEPENDENCIES:
Elective SPECIFICATION:  RFC 783 (in IPTW)
A very simple file moving protocol, no access control is provided.
This is in use in several local networks.
Ambiguities in the interpretation of several of the transfer modes should be  clarified, and additional transfer modes could be defined.
Additional error codes could be defined to more clearly identify problems.
ISIF.ARPA Simple File Transfer Protocol
SFTP is a simple file transfer protocol.
It fills the need of people wanting a protocol that is more useful than TFTP but easier to implement (and less powerful) than FTP.
SFTP supports user access control, file transfers, directory listing, directory changing, file renaming and deleting.
SFTP uses only one TCP connection; whereas TFTP implements a connection over UDP, and FTP uses two TCP connections (one using the TELNET protocol).
Please discuss any plans for implementation or use of this protocol with the contact.
DEPENDENCIES: Transmission Control Protocol CONTACT:
Recommended SPECIFICATION:  RFC 821 (in "Internet Mail Protocols")
The procedure for transmitting computer mail between hosts.
This has been revised since the IPTW, it is in the "Internet Mail Protocols" volume of November 1982.
RFC 788 (in IPTW) is obsolete.
There have been many misunderstandings and errors in the early implementations.
Some documentation of these problems can be found in the file [ISIF]<SMTP
Some minor differences between RFC 821 and RFC 822 should be resolved.
RFC 822 Mail Header Format Standards
This has been revised since the IPTW, it is in the "Internet Mail Protocols" volume of November 1982.
RFC 733 (in IPTW) is obsolete.
Further revision of RFC 822 is needed to correct some minor errors in the details of the specification.
MIL STD 1781 Simple Mail Transfer Protocol (SMTP)
Transmission Control Protocol Official ARPA Internet Protocols
A resource location protocol for use in the ARPA Internet.
This protocol utilizes the User Datagram Protocol (UDP) which in turn calls on the Internet Protocol to deliver its datagrams.
RFC 909 COMMENTS: Specifies a protocol for loading, dumping and debugging target machines from hosts in a network environment.
It is also designed to accommodate a variety of target CPU types.
It provides a powerful set of debugging services, while at the same time, it is structured so that a simple subset may be implemented in applications like boot loading where efficiency and space are at a premium.
DEPENDENCIES:  Reliable Data Protocol CONTACT:
Elective SPECIFICATION:  RFC 407 (in APH)
The general protocol for submitting batch jobs and retrieving the results.
Some changes needed for use with TCP.
File Transfer Protocol Transmission Control Protocol CONTACT:
A special protocol for submitting batch jobs and retrieving the results used with the UCLA IBM OS system.
Please discuss any plans for implementation or use of this protocol with the contact.
DEPENDENCIES: Transmission Control Protocol CONTACT:
RFC 818 COMMENTS: Provides special access to user Telnet on a remote system.
DEPENDENCIES: Telnet, Transmission Control Protocol CONTACT:
The protocol for vector graphics.
Very minor changes needed for use with TCP.
DEPENDENCIES: Telnet, Transmission Control Protocol CONTACT:
Debugging protocol, sends back whatever you send it.
Transmission Control Protocol or User Datagram Protocol CONTACT:
Debugging protocol, throws away whatever you send it.
Transmission Control Protocol or User Datagram Protocol CONTACT: Postel@USC
Debugging protocol, sends you ASCII data.
Transmission Control Protocol or User Datagram Protocol Official ARPA Internet Protocols
Debugging protocol, sends you a short ASCII message.
Transmission Control Protocol or User Datagram Protocol CONTACT:
Lists the currently active users.
Transmission Control Protocol or User Datagram Protocol CONTACT:
Elective SPECIFICATION:  RFC 742 (in APH)
COMMENTS: Provides information on the current or most recent activity of a user.
Some extensions have been suggested.
Some changes are are needed for TCP.
DEPENDENCIES: Transmission Control Protocol CONTACT:
Accesses the ARPANET Directory database.
Provides a way to find out about people, their addresses, phone numbers, organizations, and mailboxes.
DEPENDENCIES: Transmission Control Protocol CONTACT:
Experimental SPECIFICATION:  RFC 881, 882,
RFC 920 Domain Requirements RFC 921 Domain Name Implementation Schedule
Transmission Control Protocol or User Datagram Protocol CONTACT:
Elective SPECIFICATION:  RFC 811 (in IPTW)
Accesses the Registered Internet Hosts database (HOSTS.TXT).
Provides a way to find out about a host in the Internet, its Internet Address, and the protocols it implements.
Experimental SPECIFICATION:  IEN 116 (in IPTW)
COMMENTS: Provides machine oriented procedure for translating a host name to an Internet Address.
This specification has significant problems:  1)
The name syntax is out of date.
The protocol details are ambiguous, in particular, the length octet either does or doesn't include itself and the op code.
The extensions are not supported by any known implementation.
This protocol is now abandon in favor of the DOMAIN protocol.
Further implementations of this protocol are not advised.
Please discuss any plans for implementation or use of this protocol with the contact.
RFC 944 CSNET Mailbox Name Server Protocol
Experimental SPECIFICATION:  CS DN 2 COMMENTS:
Provides access to the CSNET data base of users to give information about users names, affiliations, and mailboxes.
Please discuss any plans for implementation or use of this protocol with the contact.
DEPENDENCIES: Transmission Control Protocol CONTACT: Solomon@UWISC.ARPA
RFC 867 COMMENTS: Provides the day and time in ASCII character string.
Transmission Control Protocol or User Datagram Protocol CONTACT:
RFC 868 COMMENTS: Provides the time as the number of seconds from a specified reference time.
Transmission Control Protocol or User Datagram Protocol CONTACT:
ISIF.ARPA DCNET Time Server Protocol
RFC 778 COMMENTS: Provides a mechanism for keeping synchronized clocks.
Elective SPECIFICATION:  RFC 734 (
A special Telnet like protocol for display terminals.
DEPENDENCIES: Transmission Control Protocol CONTACT:
Crispin@SU SCORE.ARPA Official ARPA Internet Protocols
RFC 944 Internet Message Protocol
This is an experimental multimedia mail transfer protocol.
The implementation is called a Message Processing Module or MPM.
Please discuss any plans for implementation or use of this protocol with the contact.
RFC 767 Structured Document Formats DEPENDENCIES: Transmission Control Protocol CONTACT:
The intent of the Post Office Protocol Version 2 (POP2) is to allow a user's workstation to access mail from a mailbox server.
It is expected that mail will be posted from the workstation to the mailbox server via the Simple Mail Transfer Protocol (SMTP).
Please discuss any plans for implementation or use of this protocol with the contact.
RFC 944 Network Standard Text Editor
Elective SPECIFICATION:  RFC 569 COMMENTS:
Describes a simple line editor which could be provided by every Internet host.
This server provides a means to determine the identity of a user of a particular TCP connection.
Given a TCP port number pair, it returns a character string which identifies the owner of that connection on the server's system.
Please discuss any plans for implementation or use of this protocol with the contact.
OTHER REFERENCES:  Supercedes RFC 912 DEPENDENCIES: Transmission Control Protocol CONTACT:
RFC 944 APPENDICES Assigned Numbers    STATUS:
Describes the fields of various protocols that are assigned specific values for actual use, and lists the currently assigned values.
Issued April 1985, replaces RFC 923, RFC 790 in IPTW, and RFC 900.
Elective SPECIFICATION:  RFC 794 (in IPTW)
Describes how to do pre emption of TCP connections.
RFC 944 Service Mappings    STATUS:
None SPECIFICATION:  RFC 795 (in IPTW)
Describes the mapping of the IP type of service field onto the parameters of some specific networks.
Out of date, needs revision.
None SPECIFICATION:  RFC 796 (in IPTW)
Describes the mapping between Internet Addresses and the addresses of some specific networks.
Out of date, needs revision.
Describes standard format rules for several types of documents.
RFC 944 Bitmap Formats    STATUS:
RFC 797 COMMENTS: Describes a standard format for bitmap data.
COMMENTS: Describes a standard format for facsimile data.
ISIF.ARPA Host Front End Protocol
RFC 929 COMMENTS: Please discuss any plans for implementation or use of this protocol with the contact.
RFC 877 COMMENTS: Describes a standard for the transmission of IP Datagrams over Public Data Networks.
RFC 778 DCNET Internet Clock Service CONTACT:  Mills@USC
RFC 895 COMMENTS: OTHER REFERENCES:
Discussion of the various problems and potential solutions of "explicit subnets" in a multi LAN environment.
Please discuss any plans for implementation or use of this protocol with the contact.
RFC 917, RFC 925, RFC 932, RFC 936, RFC 922 DEPENDENCIES: CONTACT:  Mills@USC
A proposed protocol of simple rules for broadcasting Internet datagrams on local networks that support broadcast, for addressing broadcasts, and for how gateways should handle them.
Please discuss any plans for implementation or use of this protocol with the contact.
RFC 922 Official ARPA Internet Protocols
RFC 944 DEPENDENCIES: CONTACT: Mogul@SU SCORE.ARPA Address Resolution Protocol
This is a procedure for finding the network hardware address corresponding to an Internet Address.
ISIF.ARPA A Reverse Address Resolution Protocol
This is a procedure for workstations to dynamically find their protocol address (e.g., their Internet Address), when they only only know their hardware address (e.g., their attached physical network address).
SCORE.ARPA Multi LAN Address Resolution Protocol
Discussion of the various problems and potential solutions of "transparent subnets" in a multi LAN environment.
Please discuss any plans for implementation or use of this protocol with the contact.
ISIF.ARPA Broadcasting Internet Datagrams with Subnets
A proposed protocol of simple rules for broadcasting Internet datagrams on local networks that support broadcast, for addressing broadcasts, and for how gateways should handle them.
Please discuss any plans for implementation or use of this protocol with the contact.
Recommended SPECIFICATION:  RFC 907 COMMENTS:
This protocol specifies the network access level communication between an arbitrary computer, called a host, and a packet switched satellite network, e.g., SATNET or WBNET.
Note:  Implementations of HAP should be performed in coordination with satellite network development and operations personnel.
This paper specifies a protocol which allows two programs to reliably communicate over a communication link.
It ensures that the data entering one end of the link if received arrives at the other end intact and unaltered.
This proposed protocol is designed to operate over a full duplex point to point connection.
It contains some features which tailor it to the RS 232 links now in current use.
Please discuss any plans for implementation or use of this protocol with the contact.
This paper discusses a Thinwire Protocol for connecting personal computers to the ARPA Internet.
It primarily focuses on the particular problems in the ARPA Internet of low speed network interconnection with personal computers, and possible methods of solution.
Please discuss any plans for implementation or use of this protocol with the contact.
