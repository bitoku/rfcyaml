Abstract This document specifies the syntax of Uniform Resource Identifier (URI) schemes for the Traversal Using Relays around NAT (TURN) protocol.
It defines two URI schemes to provision the TURN Resolution Mechanism (RFC 5928).
This document specifies the syntax and semantics of the Uniform Resource Identifier (URI) scheme for the Traversal Using Relays around NAT (TURN) protocol.
The TURN protocol is a specification allowing hosts behind NAT to control the operation of a relay server.
The relay server allows hosts to exchange packets with its peers.
The peers themselves may also be behind NATs.
[RFC5766] defines the specifics of the TURN protocol.
The "turn" and "turns" URI schemes are used to designate a TURN server (also known as a relay) on Internet hosts accessible using the TURN protocol.
With the advent of standards such as WebRTC [WEBRTC], we anticipate a plethora of endpoints and web applications to be able to identify and communicate with such a TURN server to carry out the TURN protocol.
This implies that endpoints and/or applications must be provisioned with the appropriate configuration to identify the TURN server.
Having an inconsistent syntax adds ambiguity and can result in non interoperable solutions and implementation limitations.
The "turn" and "turns" URI schemes help alleviate most of these issues by providing a consistent way to describe, configure, and exchange the information identifying a TURN server.
[RFC5928] defines a resolution mechanism to convert a secure flag, a host name or IP address, a potentially empty port, and a potentially empty transport to a list of IP address, port, and TURN transport tuples.
To simplify the provisioning of TURN clients, this document defines the "turn" and "turns" URI schemes that can carry the four components needed for the resolution mechanism.
The key words "MUST", "MUST NOT", "REQUIRED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in [RFC2119] when they appear in ALL CAPS.
When these words are not in ALL CAPS (such as "should" or "Should"), they have their usual English meanings, and are not to be interpreted as RFC 2119 key words.
Definitions of the "turn" and "turns" URI 3.1.
"tcp" / transport ext transport ext
<port> are specified in [RFC3986].
While these two ABNF productions are defined in [RFC3986] as components of the generic hierarchical URI, this does not imply that the "turn" and "turns" schemes are hierarchical URIs.
Developers MUST NOT use a generic hierarchical URI parser to parse a "turn" or "turns" URI.
The <host>, <port>, and <transport> components are passed without modification to the [RFC5928] algorithm.
<secure> is set to false if <scheme> is equal to "turn", and set to true if <scheme> is equal to "turns" and passed to the [RFC5928] algorithm with the other components.
URI schemes are used to designate a TURN server (also known as a relay) on Internet hosts accessible using the TURN protocol.
The TURN protocol supports sending messages over UDP, TCP, or TLS over TCP.
The "turns" URI scheme MUST be used when TURN is run over TLS over TCP (or, in the future, DTLS over UDP), and the "turn" scheme MUST be used otherwise.
The required <host> part of the "turn" URI denotes the TURN server host.
As specified in [RFC5766] and [RFC5928], the <port> part, if present, denotes the port on which the TURN server is awaiting connection requests.
If it is absent, the default port is 3478 for both UDP and TCP.
The default port for TURN over TLS is 5349.
Security Considerations Security considerations for the resolution mechanism are discussed in Section 5 of [RFC5928].
Note that this section contains normative text defining authentication procedures to be followed by turn clients when TLS is used.
URI schemes do not introduce any specific security issues beyond the security considerations discussed in [RFC3986].
Although a "turn" or "turns" URI does not itself include the username or password that will be used to authenticate the TURN client, in certain environments, such as WebRTC, the username and password will almost certainly be provisioned remotely by an external agent at the same time as a "turns" URI is sent to that client.
Thus, in such situations, if the username and password were received in the clear, there would be little or no benefit to using a "turns" URI.
For this reason, a TURN client MUST ensure that the username, password, "turns" URI, and any other security relevant parameters are received with equivalent security before using the "turns" URI.
Receiving those parameters over another TLS session can provide the appropriate level of security, if both TLS sessions are similarly parameterised, e.g., with commensurate strength ciphersuites.
This section contains the registration information for the "turn" and "turns" URI Schemes (in accordance with [RFC4395]).
"turn" URI Registration URI scheme name: turn Status: permanent URI scheme syntax: See Section 3.1.
Encoding considerations: There are no encoding considerations beyond those in [RFC3986].
Applications/protocols that use this URI scheme name
: The "turn" URI scheme is intended to be used by applications with a need to identify a TURN server to be used for NAT traversal.
The IESG References: RFC 7065 5.2.
"turns" URI Registration URI scheme name: turns Status: permanent URI scheme syntax:
Encoding considerations: There are no encoding considerations beyond those in [RFC3986].
Applications/protocols that use this URI scheme name
: The "turns" URI scheme is intended to be used by applications with a need to identify a TURN server to be used for NAT traversal over a secure connection.
RFC 7065 Appendix A.  Examples Table 1 shows how the <secure>, <port>, and <transport> components are populated from various URIs.
For all these examples, the <host> component is populated with "example.org".
One recurring comment was to stop using the suffix "s" on the URI scheme, and to move the secure option to a parameter (e.g. ";proto tls").
We decided against this idea because the STUN URI does not have a ";proto " parameter and we would have lost the symmetry between the TURN and STUN URIs.
Following the advice of Section 2.2 of RFC 4395, and because the TURN URI does not describe a hierarchical structure, the TURN URIs are opaque URIs.
<password> is not used in the URIs because it is deprecated [RFC3986].
<username> and <auth> are not used in the URIs because they do not guide the resolution mechanism.
As discussed at IETF 72 in Dublin, there are no generic parameters in the URI to prevent compatibility issues.
