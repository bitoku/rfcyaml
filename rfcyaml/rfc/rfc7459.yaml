- contents:
  - "            Representation of Uncertainty and Confidence in\n     the Presence
    Information Data Format Location Object (PIDF-LO)\n"
  title: __initial_text__
- contents:
  - "Abstract\n   This document defines key concepts of uncertainty and confidence
    as\n   they pertain to location information.  Methods for the manipulation\n   of
    location estimates that include uncertainty information are\n   outlined.\n   This
    document normatively updates the definition of location\n   information representations
    defined in RFCs 4119 and 5491.  It also\n   deprecates related terminology defined
    in RFC 3693.\n"
  title: Abstract
- contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This
    document is a product of the Internet Engineering Task Force\n   (IETF).  It represents
    the consensus of the IETF community.  It has\n   received public review and has
    been approved for publication by the\n   Internet Engineering Steering Group (IESG).
    \ Further information on\n   Internet Standards is available in Section 2 of RFC
    5741.\n   Information about the current status of this document, any errata,\n
    \  and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc7459.\n"
  title: Status of This Memo
- contents:
  - "Copyright Notice\n   Copyright (c) 2015 IETF Trust and the persons identified
    as the\n   document authors.  All rights reserved.\n   This document is subject
    to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n
    \  (http://trustee.ietf.org/license-info) in effect on the date of\n   publication
    of this document.  Please review these documents\n   carefully, as they describe
    your rights and restrictions with respect\n   to this document.  Code Components
    extracted from this document must\n   include Simplified BSD License text as described
    in Section 4.e of\n   the Trust Legal Provisions and are provided without warranty
    as\n   described in the Simplified BSD License.\n"
  title: Copyright Notice
- contents:
  - "Table of Contents\n   1. Introduction ....................................................4\n
    \     1.1. Conventions and Terminology ................................4\n   2.
    A General Definition of Uncertainty .............................5\n      2.1.
    Uncertainty as a Probability Distribution ..................6\n      2.2. Deprecation
    of the Terms \"Precision\" and \"Resolution\" ......8\n      2.3. Accuracy as
    a Qualitative Concept ..........................9\n   3. Uncertainty in Location
    .........................................9\n      3.1. Targets as Points in Space
    .................................9\n      3.2. Representation of Uncertainty and
    Confidence in PIDF-LO ...10\n      3.3. Uncertainty and Confidence for Civic Addresses
    ............10\n      3.4. DHCP Location Configuration Information and Uncertainty
    ...11\n   4. Representation of Confidence in PIDF-LO ........................12\n
    \     4.1. The \"confidence\" Element ..................................13\n      4.2.
    Generating Locations with Confidence ......................13\n      4.3. Consuming
    and Presenting Confidence .......................13\n   5. Manipulation of Uncertainty
    ....................................14\n      5.1. Reduction of a Location Estimate
    to a Point ...............15\n           5.1.1. Centroid Calculation ...............................16\n
    \                 5.1.1.1. Arc-Band Centroid .........................16\n                  5.1.1.2.
    Polygon Centroid ..........................16\n      5.2. Conversion to Circle
    or Sphere ............................19\n      5.3. Conversion from Three-Dimensional
    to Two-Dimensional ......20\n      5.4. Increasing and Decreasing Uncertainty
    and Confidence ......20\n           5.4.1. Rectangular Distributions ..........................21\n
    \          5.4.2. Normal Distributions ...............................21\n      5.5.
    Determining Whether a Location Is within a Given Region ...22\n           5.5.1.
    Determining the Area of Overlap for Two Circles ....24\n           5.5.2. Determining
    the Area of Overlap for Two Polygons ...25\n   6. Examples .......................................................25\n
    \     6.1. Reduction to a Point or Circle ............................25\n      6.2.
    Increasing and Decreasing Confidence ......................29\n      6.3. Matching
    Location Estimates to Regions of Interest ........29\n      6.4. PIDF-LO with
    Confidence Example ...........................30\n   7. Confidence Schema ..............................................31\n
    \  8. IANA Considerations ............................................32\n      8.1.
    URN Sub-Namespace Registration for ........................32\n      8.2. XML
    Schema Registration ...................................33\n   9. Security Considerations
    ........................................33\n   10. References ....................................................34\n
    \     10.1. Normative References .....................................34\n      10.2.
    Informative References ...................................35\n   Appendix A. Conversion
    between Cartesian and Geodetic\n               Coordinates in WGS84 ..................................36\n
    \  Appendix B. Calculating the Upward Normal of a Polygon ............37\n      B.1.
    Checking That a Polygon Upward Normal Points Up ...........38\n   Acknowledgements
    ..................................................39\n   Authors' Addresses ................................................39\n"
  title: Table of Contents
- contents:
  - "1.  Introduction\n   Location information represents an estimation of the position
    of a\n   Target [RFC6280].  Under ideal circumstances, a location estimate\n   precisely
    reflects the actual location of the Target.  For automated\n   systems that determine
    location, there are many factors that\n   introduce errors into the measurements
    that are used to determine\n   location estimates.\n   The process by which measurements
    are combined to generate a location\n   estimate is outside of the scope of work
    within the IETF.  However,\n   the results of such a process are carried in IETF
    data formats and\n   protocols.  This document outlines how uncertainty, and its\n
    \  associated datum, confidence, are expressed and interpreted.\n   This document
    provides a common nomenclature for discussing\n   uncertainty and confidence as
    they relate to location information.\n   This document also provides guidance
    on how to manage location\n   information that includes uncertainty.  Methods
    for expanding or\n   reducing uncertainty to obtain a required level of confidence
    are\n   described.  Methods for determining the probability that a Target is\n
    \  within a specified region based on its location estimate are\n   described.
    \ These methods are simplified by making certain\n   assumptions about the location
    estimate and are designed to be\n   applicable to location estimates in a relatively
    small geographic\n   area.\n   A confidence extension for the Presence Information
    Data Format -\n   Location Object (PIDF-LO) [RFC4119] is described.\n   This document
    describes methods that can be used in combination with\n   automatically determined
    location information.  These are\n   statistically based methods.\n"
  - contents:
    - "1.1.  Conventions and Terminology\n   The key words \"MUST\", \"MUST NOT\",
      \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\",
      \"MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described
      in [RFC2119].\n   This document assumes a basic understanding of the principles
      of\n   mathematics, particularly statistics and geometry.\n   Some terminology
      is borrowed from [RFC3693] and [RFC6280], in\n   particular \"Target\".\n   Mathematical
      formulae are presented using the following notation: add\n   \"+\", subtract
      \"-\", multiply \"*\", divide \"/\", power \"^\", and absolute\n   value \"|x|\".
      \ Precedence follows established conventions: power\n   operations precede multiply
      and divide, multiply and divide precede\n   add and subtract, and parentheses
      are used to indicate operations\n   that are applied together.  Mathematical
      functions are represented by\n   common abbreviations: square root \"sqrt(x)\",
      sine \"sin(x)\", cosine\n   \"cos(x)\", inverse cosine \"acos(x)\", tangent
      \"tan(x)\", inverse tangent\n   \"atan(x)\", two-argument inverse tangent \"atan2(y,x)\",
      error function\n   \"erf(x)\", and inverse error function \"erfinv(x)\".\n"
    title: 1.1.  Conventions and Terminology
  title: 1.  Introduction
- contents:
  - "2.  A General Definition of Uncertainty\n   Uncertainty results from the limitations
    of measurement.  In\n   measuring any observable quantity, errors from a range
    of sources\n   affect the result.  Uncertainty is a quantification of what is
    known\n   about the observed quantity, either through the limitations of\n   measurement
    or through inherent variability of the quantity.\n   Uncertainty is most completely
    described by a probability\n   distribution.  A probability distribution assigns
    a probability to\n   possible values for the quantity.\n   A probability distribution
    describing a measured quantity can be\n   arbitrarily complex, so it is desirable
    to find a simplified model.\n   One approach commonly taken is to reduce the probability
    distribution\n   to a confidence interval.  Many alternative models are used in
    other\n   areas, but study of those is not the focus of this document.\n   In
    addition to the central estimate of the observed quantity, a\n   confidence interval
    is succinctly described by two values: an error\n   range and a confidence.  The
    error range describes an interval and\n   the confidence describes an estimated
    upper bound on the probability\n   that a \"true\" value is found within the extents
    defined by the error.\n   In the following example, a measurement result for a
    length is shown\n   as a nominal value with additional information on error range
    (0.0043\n   meters) and confidence (95%).\n      e.g., x = 1.00742 +/- 0.0043
    meters at 95% confidence\n   This measurement result indicates that the value
    of \"x\" is between\n   1.00312 and 1.01172 meters with 95% probability.  No other
    assertion\n   is made: in particular, this does not assert that x is 1.00742.\n
    \  Uncertainty and confidence for location estimates can be derived in a\n   number
    of ways.  This document does not attempt to enumerate the many\n   methods for
    determining uncertainty.  [ISO.GUM] and [NIST.TN1297]\n   provide a set of general
    guidelines for determining and manipulating\n   measurement uncertainty.  This
    document applies that general guidance\n   for consumers of location information.\n
    \  As a statistical measure, values determined for uncertainty are found\n   based
    on information in the aggregate, across numerous individual\n   estimates.  An
    individual estimate might be determined to be\n   \"correct\" -- for example,
    by using a survey to validate the result --\n   without invalidating the statistical
    assertion.\n   This understanding of estimates in the statistical sense explains
    why\n   asserting a confidence of 100%, which might seem intuitively correct,\n
    \  is rarely advisable.\n"
  - contents:
    - "2.1.  Uncertainty as a Probability Distribution\n   The Probability Density
      Function (PDF) that is described by\n   uncertainty indicates the probability
      that the \"true\" value lies at\n   any one point.  The shape of the probability
      distribution can vary\n   depending on the method that is used to determine
      the result.  The\n   two probability density functions most generally applicable
      to\n   location information are considered in this document:\n   o  The normal
      PDF (also referred to as a Gaussian PDF) is used where\n      a large number
      of small random factors contribute to errors.  The\n      value used for the
      error range in a normal PDF is related to the\n      standard deviation of the
      distribution.\n   o  A rectangular PDF is used where the errors are known to
      be\n      consistent across a limited range.  A rectangular PDF can occur\n
      \     where a single error source, such as a rounding error, is\n      significantly
      larger than other errors.  A rectangular PDF is\n      often described by the
      half-width of the distribution; that is,\n      half the width of the distribution.\n
      \  Each of these probability density functions can be characterized by\n   its
      center point, or mean, and its width.  For a normal distribution,\n   uncertainty
      and confidence together are related to the standard\n   deviation of the function
      (see Section 5.4).  For a rectangular\n   distribution, the half-width of the
      distribution is used.\n   Figure 1 shows a normal and rectangular probability
      density function\n   with the mean (m) and standard deviation (s) labeled.  The
      half-width\n   (h) of the rectangular distribution is also indicated.\n                                *****
      \            *** Normal PDF\n                              **  :  **           ---
      Rectangular PDF\n                            **    :    **\n                           **
      \    :     **\n                .---------*---------------*---------.\n                |
      \       **       :       **        |\n                |       **        :        **
      \      |\n                |      * <-- s -->:          *      |\n                |
      \    * :         :         : *     |\n                |    **           :           **
      \   |\n                |   *   :         :         :   *   |\n                |
      \ *              :              *  |\n                |**     :         :         :
      \    **|\n               **                 :                 **\n            ***
      |       :         :         :       | ***\n        *****   |                 :<------
      h ------>|   *****\n    .****-------+.......:.........:.........:.......+-------*****.\n
      \                                 m\n      Figure 1: Normal and Rectangular
      Probability Density Functions\n   For a given PDF, the value of the PDF describes
      the probability that\n   the \"true\" value is found at that point.  Confidence
      for any given\n   interval is the total probability of the \"true\" value being
      in that\n   range, defined as the integral of the PDF over the interval.\n      The
      probability of the \"true\" value falling between two points is\n      found
      by finding the area under the curve between the points (that\n      is, the
      integral of the curve between the points).  For any given\n      PDF, the area
      under the curve for the entire range from negative\n      infinity to positive
      infinity is 1 or (100%).  Therefore, the\n      confidence over any interval
      of uncertainty is always less than\n      100%.\n   Figure 2 shows how confidence
      is determined for a normal\n   distribution.  The area of the shaded region
      gives the confidence (c)\n   for the interval between \"m-u\" and \"m+u\".\n
      \                               *****\n                              **:::::**\n
      \                           **:::::::::**\n                           **:::::::::::**\n
      \                         *:::::::::::::::*\n                         **:::::::::::::::**\n
      \                       **:::::::::::::::::**\n                       *:::::::::::::::::::::*\n
      \                     *:::::::::::::::::::::::*\n                     **:::::::::::::::::::::::**\n
      \                   *:::::::::::: c ::::::::::::*\n                   *:::::::::::::::::::::::::::::*\n
      \                **|:::::::::::::::::::::::::::::|**\n               **  |:::::::::::::::::::::::::::::|
      \ **\n            ***    |:::::::::::::::::::::::::::::|    ***\n        *****
      \     |:::::::::::::::::::::::::::::|      *****\n    .****..........!:::::::::::::::::::::::::::::!..........*****.\n
      \                  |              |              |\n                 (m-u)            m
      \           (m+u)\n               Figure 2: Confidence as the Integral of a
      PDF\n   In Section 5.4, methods are described for manipulating uncertainty if\n
      \  the shape of the PDF is known.\n"
    title: 2.1.  Uncertainty as a Probability Distribution
  - contents:
    - "2.2.  Deprecation of the Terms \"Precision\" and \"Resolution\"\n   The terms
      \"Precision\" and \"Resolution\" are defined in RFC 3693\n   [RFC3693].  These
      definitions were intended to provide a common\n   nomenclature for discussing
      uncertainty; however, these particular\n   terms have many different uses in
      other fields, and their definitions\n   are not sufficient to avoid confusion
      about their meaning.  These\n   terms are unsuitable for use in relation to
      quantitative concepts\n   when discussing uncertainty and confidence in relation
      to location\n   information.\n"
    title: 2.2.  Deprecation of the Terms "Precision" and "Resolution"
  - contents:
    - "2.3.  Accuracy as a Qualitative Concept\n   Uncertainty is a quantitative concept.
      \ The term \"accuracy\" is useful\n   in describing, qualitatively, the general
      concepts of location\n   information.  Accuracy is generally useful when describing\n
      \  qualitative aspects of location estimates.  Accuracy is not a\n   suitable
      term for use in a quantitative context.\n   For instance, it could be appropriate
      to say that a location estimate\n   with uncertainty \"X\" is more accurate
      than a location estimate with\n   uncertainty \"2X\" at the same confidence.
      \ It is not appropriate to\n   assign a number to \"accuracy\", nor is it appropriate
      to refer to any\n   component of uncertainty or confidence as \"accuracy\".
      \ That is,\n   saying the \"accuracy\" for the first location estimate is \"X\"
      would be\n   an erroneous use of this term.\n"
    title: 2.3.  Accuracy as a Qualitative Concept
  title: 2.  A General Definition of Uncertainty
- contents:
  - "3.  Uncertainty in Location\n   A \"location estimate\" is the result of location
    determination.  A\n   location estimate is subject to uncertainty like any other\n
    \  observation.  However, unlike a simple measure of a one dimensional\n   property
    like length, a location estimate is specified in two or\n   three dimensions.\n
    \  Uncertainty in two- or three-dimensional locations can be described\n   using
    confidence intervals.  The confidence interval for a location\n   estimate in
    two- or three-dimensional space is expressed as a subset\n   of that space.  This
    document uses the term \"region of uncertainty\"\n   to refer to the area or volume
    that describes the confidence\n   interval.\n   Areas or volumes that describe
    regions of uncertainty can be formed\n   by the combination of two or three one-dimensional
    ranges, or more\n   complex shapes could be described (for example, the shapes
    in\n   [RFC5491]).\n"
  - contents:
    - "3.1.  Targets as Points in Space\n   This document makes a simplifying assumption
      that the Target of the\n   PIDF-LO occupies just a single point in space.  While
      this is clearly\n   false in virtually all scenarios with any practical application,
      it\n   is often a reasonable simplifying assumption to make.\n   To a large
      extent, whether this simplification is valid depends on\n   the size of the
      Target relative to the size of the uncertainty\n   region.  When locating a
      personal device using contemporary location\n   determination techniques, the
      space the device occupies relative to\n   the uncertainty is proportionally
      quite small.  Even where that\n   device is used as a proxy for a person, the
      proportions change\n   little.\n   This assumption is less useful as uncertainty
      becomes small relative\n   to the size of the Target of the PIDF-LO (or conversely,
      as\n   uncertainty becomes small relative to the Target).  For instance,\n   describing
      the location of a football stadium or small country would\n   include a region
      of uncertainty that is only slightly larger than the\n   Target itself.  In
      these cases, much of the guidance in this document\n   is not applicable.  Indeed,
      as the accuracy of location determination\n   technology improves, it could
      be that the advice this document\n   contains becomes less relevant by the same
      measure.\n"
    title: 3.1.  Targets as Points in Space
  - contents:
    - "3.2.  Representation of Uncertainty and Confidence in PIDF-LO\n   A set of
      shapes suitable for the expression of uncertainty in\n   location estimates
      in the PIDF-LO are described in [GeoShape].  These\n   shapes are the recommended
      form for the representation of uncertainty\n   in PIDF-LO [RFC4119] documents.\n
      \  The PIDF-LO can contain uncertainty, but it does not include an\n   indication
      of confidence.  [RFC5491] defines a fixed value of 95%.\n   Similarly, the PIDF-LO
      format does not provide an indication of the\n   shape of the PDF.  Section
      4 defines elements to convey this\n   information in PIDF-LO.\n   Absence of
      uncertainty information in a PIDF-LO document does not\n   indicate that there
      is no uncertainty in the location estimate.\n   Uncertainty might not have been
      calculated for the estimate, or it\n   may be withheld for privacy purposes.\n
      \  If the Point shape is used, confidence and uncertainty are unknown; a\n   receiver
      can either assume a confidence of 0% or infinite\n   uncertainty.  The same
      principle applies on the altitude axis for\n   two-dimensional shapes like the
      Circle.\n"
    title: 3.2.  Representation of Uncertainty and Confidence in PIDF-LO
  - contents:
    - "3.3.  Uncertainty and Confidence for Civic Addresses\n   Automatically determined
      civic addresses [RFC5139] inherently include\n   uncertainty, based on the area
      of the most precise element that is\n   specified.  In this case, uncertainty
      is effectively described by the\n   presence or absence of elements.  To the
      recipient of location\n   information, elements that are not present are uncertain.\n
      \  To apply the concept of uncertainty to civic addresses, it is helpful\n   to
      unify the conceptual models of civic address with geodetic\n   location information.
      \ This is particularly useful when considering\n   civic addresses that are
      determined using reverse geocoding (that is,\n   the process of translating
      geodetic information into civic\n   addresses).\n   In the unified view, a civic
      address defines a series of (sometimes\n   non-orthogonal) spatial partitions.
      \ The first is the implicit\n   partition that identifies the surface of the
      earth and the space near\n   the surface.  The second is the country.  Each
      label that is included\n   in a civic address provides information about a different
      set of\n   spatial partitions.  Some partitions require slight adjustments from\n
      \  a standard interpretation: for instance, a road includes all\n   properties
      that adjoin the street.  Each label might need to be\n   interpreted with other
      values to provide context.\n   As a value at each level is interpreted, one
      or more spatial\n   partitions at that level are selected, and all other partitions
      of\n   that type are excluded.  For non-orthogonal partitions, only the\n   portion
      of the partition that fits within the existing space is\n   selected.  This
      is what distinguishes King Street in Sydney from King\n   Street in Melbourne.
      \ Each defined element selects a partition of\n   space.  The resulting location
      is the intersection of all selected\n   spaces.\n   The resulting spatial partition
      can be considered as a region of\n   uncertainty.\n   Note:  This view is a
      potential perspective on the process of\n      geocoding -- the translation
      of a civic address to a geodetic\n      location.\n   Uncertainty in civic addresses
      can be increased by removing elements.\n   This does not increase confidence
      unless additional information is\n   used.  Similarly, arbitrarily increasing
      uncertainty in a geodetic\n   location does not increase confidence.\n"
    title: 3.3.  Uncertainty and Confidence for Civic Addresses
  - contents:
    - "3.4.  DHCP Location Configuration Information and Uncertainty\n   Location
      information is often measured in two or three dimensions;\n   expressions of
      uncertainty in one dimension only are rare.  The\n   \"resolution\" parameters
      in [RFC6225] provide an indication of how\n   many bits of a number are valid,
      which could be interpreted as an\n   expression of uncertainty in one dimension.\n
      \  [RFC6225] defines a means for representing uncertainty, but a value\n   for
      confidence is not specified.  A default value of 95% confidence\n   should be
      assumed for the combination of the uncertainty on each\n   axis.  This is consistent
      with the transformation of those forms into\n   the uncertainty representations
      from [RFC5491].  That is, the\n   confidence of the resultant rectangular Polygon
      or Prism is assumed\n   to be 95%.\n"
    title: 3.4.  DHCP Location Configuration Information and Uncertainty
  title: 3.  Uncertainty in Location
- contents:
  - "4.  Representation of Confidence in PIDF-LO\n   On the whole, a fixed definition
    for confidence is preferable,\n   primarily because it ensures consistency between
    implementations.\n   Location generators that are aware of this constraint can
    generate\n   location information at the required confidence.  Location recipients\n
    \  are able to make sensible assumptions about the quality of the\n   information
    that they receive.\n   In some circumstances -- particularly with preexisting
    systems --\n   location generators might be unable to provide location information\n
    \  with consistent confidence.  Existing systems sometimes specify\n   confidence
    at 38%, 67%, or 90%.  Existing forms of expressing\n   location information, such
    as that defined in [TS-3GPP-23_032],\n   contain elements that express the confidence
    in the result.\n   The addition of a confidence element provides information that
    was\n   previously unavailable to recipients of location information.\n   Without
    this information, a location server or generator that has\n   access to location
    information with a confidence lower than 95% has\n   two options:\n   o  The location
    server can scale regions of uncertainty in an attempt\n      to achieve 95% confidence.
    \ This scaling process significantly\n      degrades the quality of the information,
    because the location\n      server might not have the necessary information to
    scale\n      appropriately; the location server is forced to make assumptions\n
    \     that are likely to result in either an overly conservative\n      estimate
    with high uncertainty or an overestimate of confidence.\n   o  The location server
    can ignore the confidence entirely, which\n      results in giving the recipient
    a false impression of its quality.\n   Both of these choices degrade the quality
    of the information\n   provided.\n   The addition of a confidence element avoids
    this problem entirely if\n   a location recipient supports and understands the
    element.  A\n   recipient that does not understand -- and, hence, ignores -- the\n
    \  confidence element is in no worse a position than if the location\n   server
    ignored confidence.\n"
  - contents:
    - "4.1.  The \"confidence\" Element\n   The \"confidence\" element MAY be added
      to the \"location-info\" element\n   of the PIDF-LO [RFC4119] document.  This
      element expresses the\n   confidence in the associated location information
      as a percentage.  A\n   special \"unknown\" value is reserved to indicate that
      confidence is\n   supported, but not known to the Location Generator.\n   The
      \"confidence\" element optionally includes an attribute that\n   indicates the
      shape of the PDF of the associated region of\n   uncertainty.  Three values
      are possible: unknown, normal, and\n   rectangular.\n   Indicating a particular
      PDF only indicates that the distribution\n   approximately fits the given shape
      based on the methods used to\n   generate the location information.  The PDF
      is normal if there are a\n   large number of small, independent sources of error.
      \ It is\n   rectangular if all points within the area have roughly equal\n   probability
      of being the actual location of the Target.  Otherwise,\n   the PDF MUST either
      be set to unknown or omitted.\n   If a PIDF-LO does not include the confidence
      element, the confidence\n   of the location estimate is 95%, as defined in [RFC5491].\n
      \  A Point shape does not have uncertainty (or it has infinite\n   uncertainty),
      so confidence is meaningless for a Point; therefore,\n   this element MUST be
      omitted if only a Point is provided.\n"
    title: 4.1.  The "confidence" Element
  - contents:
    - "4.2.  Generating Locations with Confidence\n   Location generators SHOULD attempt
      to ensure that confidence is equal\n   in each dimension when generating location
      information.  This\n   restriction, while not always practical, allows for more
      accurate\n   scaling, if scaling is necessary.\n   A confidence element MUST
      be included with all location information\n   that includes uncertainty (that
      is, all forms other than a Point).  A\n   special \"unknown\" is used if confidence
      is not known.\n"
    title: 4.2.  Generating Locations with Confidence
  - contents:
    - "4.3.  Consuming and Presenting Confidence\n   The inclusion of confidence that
      is anything other than 95% presents\n   a potentially difficult usability problem
      for applications that use\n   location information.  Effectively communicating
      the probability that\n   a location is incorrect to a user can be difficult.\n
      \  It is inadvisable to simply display locations of any confidence, or\n   to
      display confidence in a separate or non-obvious fashion.  If\n   locations with
      different confidence levels are displayed such that\n   the distinction is subtle
      or easy to overlook -- such as using fine\n   graduations of color or transparency
      for graphical uncertainty\n   regions or displaying uncertainty graphically,
      but providing\n   confidence as supplementary text -- a user could fail to notice
      a\n   difference in the quality of the location information that might be\n
      \  significant.\n   Depending on the circumstances, different ways of handling
      confidence\n   might be appropriate.  Section 5 describes techniques that could
      be\n   appropriate for consumers that use automated processing.\n   Providing
      that the full implications of any choice for the\n   application are understood,
      some amount of automated processing could\n   be appropriate.  In a simple example,
      applications could choose to\n   discard or suppress the display of location
      information if confidence\n   does not meet a predetermined threshold.\n   In
      settings where there is an opportunity for user training, some of\n   these
      problems might be mitigated by defining different operational\n   procedures
      for handling location information at different confidence\n   levels.\n"
    title: 4.3.  Consuming and Presenting Confidence
  title: 4.  Representation of Confidence in PIDF-LO
- contents:
  - "5.  Manipulation of Uncertainty\n   This section deals with manipulation of location
    information that\n   contains uncertainty.\n   The following rules generally apply
    when manipulating location\n   information:\n   o  Where calculations are performed
    on coordinate information, these\n      should be performed in Cartesian space
    and the results converted\n      back to latitude, longitude, and altitude.  A
    method for\n      converting to and from Cartesian coordinates is included in\n
    \     Appendix A.\n         While some approximation methods are useful in simplifying\n
    \        calculations, treating latitude and longitude as Cartesian axes\n         is
    never advisable.  The two axes are not orthogonal.  Errors\n         can arise
    from the curvature of the earth and from the\n         convergence of longitude
    lines.\n   o  Normal rounding rules do not apply when rounding uncertainty.\n
    \     When rounding, the region of uncertainty always increases (that\n      is,
    errors are rounded up) and confidence is always rounded down\n      (see [NIST.TN1297]).
    \ This means that any manipulation of\n      uncertainty is a non-reversible operation;
    each manipulation can\n      result in the loss of some information.\n"
  - contents:
    - "5.1.  Reduction of a Location Estimate to a Point\n   Manipulating location
      estimates that include uncertainty information\n   requires additional complexity
      in systems.  In some cases, systems\n   only operate on definitive values, that
      is, a single point.\n   This section describes algorithms for reducing location
      estimates to\n   a simple form without uncertainty information.  Having a consistent\n
      \  means for reducing location estimates allows for interaction between\n   applications
      that are able to use uncertainty information and those\n   that cannot.\n   Note:
      \ Reduction of a location estimate to a point constitutes a\n      reduction
      in information.  Removing uncertainty information can\n      degrade results
      in some applications.  Also, there is a natural\n      tendency to misinterpret
      a Point location as representing a\n      location without uncertainty.  This
      could lead to more serious\n      errors.  Therefore, these algorithms should
      only be applied where\n      necessary.\n   Several different approaches can
      be taken when reducing a location\n   estimate to a point.  Different methods
      each make a set of\n   assumptions about the properties of the PDF and the selected
      point;\n   no one method is more \"correct\" than any other.  For any given
      region\n   of uncertainty, selecting an arbitrary point within the area could
      be\n   considered valid; however, given the aforementioned problems with\n   Point
      locations, a more rigorous approach is appropriate.\n   Given a result with
      a known distribution, selecting the point within\n   the area that has the highest
      probability is a more rigorous method.\n   Alternatively, a point could be selected
      that minimizes the overall\n   error; that is, it minimizes the expected value
      of the difference\n   between the selected point and the \"true\" value.\n   If
      a rectangular distribution is assumed, the centroid of the area or\n   volume
      minimizes the overall error.  Minimizing the error for a\n   normal distribution
      is mathematically complex.  Therefore, this\n   document opts to select the
      centroid of the region of uncertainty\n   when selecting a point.\n"
    - contents:
      - "5.1.1.  Centroid Calculation\n   For regular shapes, such as Circle, Sphere,
        Ellipse, and Ellipsoid,\n   this approach equates to the center point of the
        region.  For regions\n   of uncertainty that are expressed as regular Polygons
        and Prisms, the\n   center point is also the most appropriate selection.\n
        \  For the Arc-Band shape and non-regular Polygons and Prisms, selecting\n
        \  the centroid of the area or volume minimizes the overall error.  This\n
        \  assumes that the PDF is rectangular.\n   Note:  The centroid of a concave
        Polygon or Arc-Band shape is not\n      necessarily within the region of uncertainty.\n"
      - contents:
        - "5.1.1.1.  Arc-Band Centroid\n   The centroid of the Arc-Band shape is found
          along a line that bisects\n   the arc.  The centroid can be found at the
          following distance from\n   the starting point of the arc-band (assuming
          an arc-band with an\n   inner radius of \"r\", outer radius \"R\", start
          angle \"a\", and opening\n   angle \"o\"):\n      d = 4 * sin(o/2) * (R*R
          + R*r + r*r) / (3*o*(R + r))\n   This point can be found along the line
          that bisects the arc; that is,\n   the line at an angle of \"a + (o/2)\".\n"
        title: 5.1.1.1.  Arc-Band Centroid
      - contents:
        - "5.1.1.2.  Polygon Centroid\n   Calculating a centroid for the Polygon and
          Prism shapes is more\n   complex.  Polygons that are specified using geodetic
          coordinates are\n   not necessarily coplanar.  For Polygons that are specified
          without an\n   altitude, choose a value for altitude before attempting this
          process;\n   an altitude of 0 is acceptable.\n      The method described
          in this section is simplified by assuming\n      that the surface of the
          earth is locally flat.  This method\n      degrades as polygons become larger;
          see [GeoShape] for\n      recommendations on polygon size.\n   The polygon
          is translated to a new coordinate system that has an x-y\n   plane roughly
          parallel to the polygon.  This enables the elimination\n   of z-axis values
          and calculating a centroid can be done using only x\n   and y coordinates.
          \ This requires that the upward normal for the\n   polygon be known.\n   To
          translate the polygon coordinates, apply the process described in\n   Appendix
          B to find the normal vector \"N = [Nx,Ny,Nz]\".  This value\n   should be
          made a unit vector to ensure that the transformation matrix\n   is a special
          orthogonal matrix.  From this vector, select two vectors\n   that are perpendicular
          to this vector and combine these into a\n   transformation matrix.\n   If
          \"Nx\" and \"Ny\" are non-zero, the matrices in Figure 3 can be used,\n
          \  given \"p = sqrt(Nx^2 + Ny^2)\".  More transformations are provided\n
          \  later in this section for cases where \"Nx\" or \"Ny\" are zero.\n          [
          \  -Ny/p     Nx/p     0  ]         [ -Ny/p  -Nx*Nz/p  Nx ]\n      T = [
          -Nx*Nz/p  -Ny*Nz/p   p  ]    T' = [  Nx/p  -Ny*Nz/p  Ny ]\n          [    Nx
          \       Ny      Nz ]         [   0      p       Nz ]\n                 (Transform)
          \                   (Reverse Transform)\n               Figure 3: Recommended
          Transformation Matrices\n   To apply a transform to each point in the polygon,
          form a matrix from\n   the Cartesian Earth-Centered, Earth-Fixed (ECEF)
          coordinates and use\n   matrix multiplication to determine the translated
          coordinates.\n      [   -Ny/p     Nx/p     0  ]   [ x[1]  x[2]  x[3]  ...
          \ x[n] ]\n      [ -Nx*Nz/p  -Ny*Nz/p   p  ] * [ y[1]  y[2]  y[3]  ...  y[n]
          ]\n      [    Nx        Ny      Nz ]   [ z[1]  z[2]  z[3]  ...  z[n] ]\n
          \         [ x'[1]  x'[2]  x'[3]  ... x'[n] ]\n        = [ y'[1]  y'[2]  y'[3]
          \ ... y'[n] ]\n          [ z'[1]  z'[2]  z'[3]  ... z'[n] ]\n                         Figure
          4: Transformation\n   Alternatively, direct multiplication can be used to
          achieve the same\n   result:\n      x'[i] = -Ny * x[i] / p + Nx * y[i] /
          p\n      y'[i] = -Nx * Nz * x[i] / p - Ny * Nz * y[i] / p + p * z[i]\n      z'[i]
          = Nx * x[i] + Ny * y[i] + Nz * z[i]\n   The first and second rows of this
          matrix (\"x'\" and \"y'\") contain the\n   values that are used to calculate
          the centroid of the polygon.  To\n   find the centroid of this polygon,
          first find the area using:\n      A = sum from i=1..n of (x'[i]*y'[i+1]-x'[i+1]*y'[i])
          / 2\n   For these formulae, treat each set of coordinates as circular, that\n
          \  is \"x'[0] == x'[n]\" and \"x'[n+1] == x'[1]\".  Based on the area, the\n
          \  centroid along each axis can be determined by:\n      Cx' = sum (x'[i]+x'[i+1])
          * (x'[i]*y'[i+1]-x'[i+1]*y'[i]) / (6*A)\n      Cy' = sum (y'[i]+y'[i+1])
          * (x'[i]*y'[i+1]-x'[i+1]*y'[i]) / (6*A)\n   Note:  The formula for the area
          of a polygon will return a negative\n      value if the polygon is specified
          in a clockwise direction.  This\n      can be used to determine the orientation
          of the polygon.\n   The third row contains a distance from a plane parallel
          to the\n   polygon.  If the polygon is coplanar, then the values for \"z'\"
          are\n   identical; however, the constraints recommended in [RFC5491] mean\n
          \  that this is rarely the case.  To determine \"Cz'\", average these\n
          \  values:\n      Cz' = sum z'[i] / n\n   Once the centroid is known in
          the transformed coordinates, these can\n   be transformed back to the original
          coordinate system.  The reverse\n   transformation is shown in Figure 5.\n
          \     [ -Ny/p  -Nx*Nz/p  Nx ]     [       Cx'        ]   [ Cx ]\n      [
          \ Nx/p  -Ny*Nz/p  Ny ]  *  [       Cy'        ] = [ Cy ]\n      [   0        p
          \    Nz ]     [ sum of z'[i] / n ]   [ Cz ]\n                     Figure
          5: Reverse Transformation\n   The reverse transformation can be applied
          directly as follows:\n      Cx = -Ny * Cx' / p - Nx * Nz * Cy' / p + Nx
          * Cz'\n      Cy = Nx * Cx' / p - Ny * Nz * Cy' / p + Ny * Cz'\n      Cz
          = p * Cy' + Nz * Cz'\n   The ECEF value \"[Cx,Cy,Cz]\" can then be converted
          back to geodetic\n   coordinates.  Given a polygon that is defined with
          no altitude or\n   equal altitudes for each point, the altitude of the result
          can be\n   either ignored or reset after converting back to a geodetic value.\n
          \  The centroid of the Prism shape is found by finding the centroid of\n
          \  the base polygon and raising the point by half the height of the\n   prism.
          \ This can be added to altitude of the final result;\n   alternatively,
          this can be added to \"Cz'\", which ensures that\n   negative height is
          correctly applied to polygons that are defined in\n   a clockwise direction.\n
          \  The recommended transforms only apply if \"Nx\" and \"Ny\" are non-zero.\n
          \  If the normal vector is \"[0,0,1]\" (that is, along the z-axis), then\n
          \  no transform is necessary.  Similarly, if the normal vector is\n   \"[0,1,0]\"
          or \"[1,0,0]\", avoid the transformation and use the x and z\n   coordinates
          or y and z coordinates (respectively) in the centroid\n   calculation phase.
          \ If either \"Nx\" or \"Ny\" are zero, the alternative\n   transform matrices
          in Figure 6 can be used.  The reverse transform is\n   the transpose of
          this matrix.\n    if Nx == 0:                              | if Ny == 0:\n
          \       [ 0  -Nz  Ny ]       [  0   1  0  ]  |            [ -Nz  0  Nx ]\n
          \   T = [ 1   0   0  ]  T' = [ -Nz  0  Ny ]  |   T = T' = [  0   1  0  ]\n
          \       [ 0   Ny  Nz ]       [  Ny  0  Nz ]  |            [  Nx  0  Nz ]\n
          \              Figure 6: Alternative Transformation Matrices\n"
        title: 5.1.1.2.  Polygon Centroid
      title: 5.1.1.  Centroid Calculation
    title: 5.1.  Reduction of a Location Estimate to a Point
  - contents:
    - "5.2.  Conversion to Circle or Sphere\n   The circle or sphere are simple shapes
      that suit a range of\n   applications.  A circle or sphere contains fewer units
      of data to\n   manipulate, which simplifies operations on location estimates.\n
      \  The simplest method for converting a location estimate to a Circle or\n   Sphere
      shape is to determine the centroid and then find the longest\n   distance to
      any point in the region of uncertainty to that point.\n   This distance can
      be determined based on the shape type:\n   Circle/Sphere:  No conversion necessary.\n
      \  Ellipse/Ellipsoid:  The greater of either semi-major axis or altitude\n      uncertainty.\n
      \  Polygon/Prism:  The distance to the farthest vertex of the Polygon\n      (for
      a Prism, it is only necessary to check points on the base).\n   Arc-Band:  The
      farthest length from the centroid to the points where\n      the inner and outer
      arc end.  This distance can be calculated by\n      finding the larger of the
      two following formulae:\n         X = sqrt( d*d + R*R - 2*d*R*cos(o/2) )\n         x
      = sqrt( d*d + r*r - 2*d*r*cos(o/2) )\n   Once the Circle or Sphere shape is
      found, the associated confidence\n   can be increased if the result is known
      to follow a normal\n   distribution.  However, this is a complicated process
      and provides\n   limited benefit.  In many cases, it also violates the constraint
      that\n   confidence in each dimension be the same.  Confidence should be\n   unchanged
      when performing this conversion.\n   Two-dimensional shapes are converted to
      a Circle; three-dimensional\n   shapes are converted to a Sphere.\n"
    title: 5.2.  Conversion to Circle or Sphere
  - contents:
    - "5.3.  Conversion from Three-Dimensional to Two-Dimensional\n   A three-dimensional
      shape can be easily converted to a two-\n   dimensional shape by removing the
      altitude component.  A Sphere\n   becomes a Circle; a Prism becomes a Polygon;
      an Ellipsoid becomes an\n   Ellipse.  Each conversion is simple, requiring only
      the removal of\n   those elements relating to altitude.\n   The altitude is
      unspecified for a two-dimensional shape and therefore\n   has unlimited uncertainty
      along the vertical axis.  The confidence\n   for the two-dimensional shape is
      thus higher than the three-\n   dimensional shape.  Assuming equal confidence
      on each axis, the\n   confidence of the Circle can be increased using the following\n
      \  approximate formula:\n      C[2d] >= C[3d] ^ (2/3)\n   \"C[2d]\" is the confidence
      of the two-dimensional shape and \"C[3d]\" is\n   the confidence of the three-dimensional
      shape.  For example, a Sphere\n   with a confidence of 95% can be simplified
      to a Circle of equal\n   radius with confidence of 96.6%.\n"
    title: 5.3.  Conversion from Three-Dimensional to Two-Dimensional
  - contents:
    - "5.4.  Increasing and Decreasing Uncertainty and Confidence\n   The combination
      of uncertainty and confidence provide a great deal of\n   information about
      the nature of the data that is being measured.  If\n   uncertainty, confidence,
      and PDF are known, certain information can\n   be extrapolated.  In particular,
      the uncertainty can be scaled to\n   meet a desired confidence or the confidence
      for a particular region\n   of uncertainty can be found.\n   In general, confidence
      decreases as the region of uncertainty\n   decreases in size, and confidence
      increases as the region of\n   uncertainty increases in size.  However, this
      depends on the PDF;\n   expanding the region of uncertainty for a rectangular
      distribution\n   has no effect on confidence without additional information.
      \ If the\n   region of uncertainty is increased during the process of obfuscation\n
      \  (see [RFC6772]), then the confidence cannot be increased.\n   A region of
      uncertainty that is reduced in size always has a lower\n   confidence.\n   A
      region of uncertainty that has an unknown PDF shape cannot be\n   reduced in
      size reliably.  The region of uncertainty can be expanded,\n   but only if confidence
      is not increased.\n   This section makes the simplifying assumption that location\n
      \  information is symmetrically and evenly distributed in each\n   dimension.
      \ This is not necessarily true in practice.  If better\n   information is available,
      alternative methods might produce better\n   results.\n"
    - contents:
      - "5.4.1.  Rectangular Distributions\n   Uncertainty that follows a rectangular
        distribution can only be\n   decreased in size.  Increasing uncertainty has
        no value, since it has\n   no effect on confidence.  Since the PDF is constant
        over the region\n   of uncertainty, the resulting confidence is determined
        by the\n   following formula:\n      Cr = Co * Ur / Uo\n   Where \"Uo\" and
        \"Ur\" are the sizes of the original and reduced regions\n   of uncertainty
        (either the area or the volume of the region); \"Co\"\n   and \"Cr\" are the
        confidence values associated with each region.\n   Information is lost by
        decreasing the region of uncertainty for a\n   rectangular distribution.  Once
        reduced in size, the uncertainty\n   region cannot subsequently be increased
        in size.\n"
      title: 5.4.1.  Rectangular Distributions
    - contents:
      - "5.4.2.  Normal Distributions\n   Uncertainty and confidence can be both increased
        and decreased for a\n   normal distribution.  This calculation depends on
        the number of\n   dimensions of the uncertainty region.\n   For a normal distribution,
        uncertainty and confidence are related to\n   the standard deviation of the
        function.  The following function\n   defines the relationship between standard
        deviation, uncertainty, and\n   confidence along a single axis:\n      S[x]
        = U[x] / ( sqrt(2) * erfinv(C[x]) )\n   Where \"S[x]\" is the standard deviation,
        \"U[x]\" is the uncertainty,\n   and \"C[x]\" is the confidence along a single
        axis.  \"erfinv\" is the\n   inverse error function.\n   Scaling a normal
        distribution in two dimensions requires several\n   assumptions.  Firstly,
        it is assumed that the distribution along each\n   axis is independent.  Secondly,
        the confidence for each axis is\n   assumed to be the same.  Therefore, the
        confidence along each axis\n   can be assumed to be:\n      C[x] = Co ^ (1/n)\n
        \  Where \"C[x]\" is the confidence along a single axis and \"Co\" is the\n
        \  overall confidence and \"n\" is the number of dimensions in the\n   uncertainty.\n
        \  Therefore, to find the uncertainty for each axis at a desired\n   confidence,
        \"Cd\", apply the following formula:\n      Ud[x] <= U[x] * (erfinv(Cd ^ (1/n))
        / erfinv(Co ^ (1/n)))\n   For regular shapes, this formula can be applied
        as a scaling factor\n   in each dimension to reach a required confidence.\n"
      title: 5.4.2.  Normal Distributions
    title: 5.4.  Increasing and Decreasing Uncertainty and Confidence
  - contents:
    - "5.5.  Determining Whether a Location Is within a Given Region\n   A number
      of applications require that a judgment be made about\n   whether a Target is
      within a given region of interest.  Given a\n   location estimate with uncertainty,
      this judgment can be difficult.\n   A location estimate represents a probability
      distribution, and the\n   true location of the Target cannot be definitively
      known.  Therefore,\n   the judgment relies on determining the probability that
      the Target is\n   within the region.\n   The probability that the Target is
      within a particular region is\n   found by integrating the PDF over the region.
      \ For a normal\n   distribution, there are no analytical methods that can be
      used to\n   determine the integral of the two- or three-dimensional PDF over
      an\n   arbitrary region.  The complexity of numerical methods is also too\n
      \  great to be useful in many applications; for example, finding the\n   integral
      of the PDF in two or three dimensions across the overlap\n   between the uncertainty
      region and the target region.  If the PDF is\n   unknown, no determination can
      be made without a simplifying\n   assumption.\n   When judging whether a location
      is within a given region, this\n   document assumes that uncertainties are rectangular.
      \ This introduces\n   errors, but simplifies the calculations significantly.
      \ Prior to\n   applying this assumption, confidence should be scaled to 95%.\n
      \  Note:  The selection of confidence has a significant impact on the\n      final
      result.  Only use a different confidence if an uncertainty\n      value for
      95% confidence cannot be found.\n   Given the assumption of a rectangular distribution,
      the probability\n   that a Target is found within a given region is found by
      first\n   finding the area (or volume) of overlap between the uncertainty\n
      \  region and the region of interest.  This is multiplied by the\n   confidence
      of the location estimate to determine the probability.\n   Figure 7 shows an
      example of finding the area of overlap between the\n   region of uncertainty
      and the region of interest.\n                    _.-\"\"\"\"-._\n                  .'
      \         `.    _ Region of\n                 /              \\  /  Uncertainty\n
      \             ..+-\"\"\"--..        |\n           .-'  | :::::: `-.     |\n
      \        ,'     | :: Ao ::: `.   |\n        /        \\ :::::::::: \\ /\n       /
      \         `._ :::::: _.X\n      |              `-....-'   |\n      |                         |\n
      \     |                         |\n       \\                       /\n        `.
      \                  .'  \\_ Region of\n          `._             _.'       Interest\n
      \            `--..___..--'\n          Figure 7: Area of Overlap between Two
      Circular Regions\n   Once the area of overlap, \"Ao\", is known, the probability
      that the\n   Target is within the region of interest, \"Pi\", is:\n      Pi
      = Co * Ao / Au\n   Given that the area of the region of uncertainty is \"Au\"
      and the\n   confidence is \"Co\".\n   This probability is often input to a decision
      process that has a\n   limited set of outcomes; therefore, a threshold value
      needs to be\n   selected.  Depending on the application, different threshold\n
      \  probabilities might be selected.  A probability of 50% or greater is\n   recommended
      before deciding that an uncertain value is within a given\n   region.  If the
      decision process selects between two or more regions,\n   as is required by
      [RFC5222], then the region with the highest\n   probability can be selected.\n"
    - contents:
      - "5.5.1.  Determining the Area of Overlap for Two Circles\n   Determining the
        area of overlap between two arbitrary shapes is a\n   non-trivial process.
        \ Reducing areas to circles (see Section 5.2)\n   enables the application
        of the following process.\n   Given the radius of the first circle \"r\",
        the radius of the second\n   circle \"R\", and the distance between their
        center points \"d\", the\n   following set of formulae provide the area of
        overlap \"Ao\".\n   o  If the circles don't overlap, that is \"d >= r+R\",
        \"Ao\" is zero.\n   o  If one of the two circles is entirely within the other,
        that is\n      \"d <= |r-R|\", the area of overlap is the area of the smaller\n
        \     circle.\n   o  Otherwise, if the circles partially overlap, that is
        \"d < r+R\" and\n      \"d > |r-R|\", find \"Ao\" using:\n         a = (r^2
        - R^2 + d^2)/(2*d)\n         Ao = r^2*acos(a/r) + R^2*acos((d - a)/R) - d*sqrt(r^2
        - a^2)\n   A value for \"d\" can be determined by converting the center points
        to\n   Cartesian coordinates and calculating the distance between the two\n
        \  center points:\n      d = sqrt((x1-x2)^2 + (y1-y2)^2 + (z1-z2)^2)\n"
      title: 5.5.1.  Determining the Area of Overlap for Two Circles
    - contents:
      - "5.5.2.  Determining the Area of Overlap for Two Polygons\n   A calculation
        of overlap based on polygons can give better results\n   than the circle-based
        method.  However, efficient calculation of\n   overlapping area is non-trivial.
        \ Algorithms such as Vatti's clipping\n   algorithm [Vatti92] can be used.\n
        \  For large polygonal areas, it might be that geodesic interpolation is\n
        \  used.  In these cases, altitude is also frequently omitted in\n   describing
        the polygon.  For such shapes, a planar projection can\n   still give a good
        approximation of the area of overlap if the larger\n   area polygon is projected
        onto the local tangent plane of the\n   smaller.  This is only possible if
        the only area of interest is that\n   contained within the smaller polygon.
        \ Where the entire area of the\n   larger polygon is of interest, geodesic
        interpolation is necessary.\n"
      title: 5.5.2.  Determining the Area of Overlap for Two Polygons
    title: 5.5.  Determining Whether a Location Is within a Given Region
  title: 5.  Manipulation of Uncertainty
- contents:
  - "6.  Examples\n   This section presents some examples of how to apply the methods\n
    \  described in Section 5.\n"
  - contents:
    - "6.1.  Reduction to a Point or Circle\n   Alice receives a location estimate
      from her Location Information\n   Server (LIS) that contains an ellipsoidal
      region of uncertainty.\n   This information is provided at 19% confidence with
      a normal PDF.  A\n   PIDF-LO extract for this information is shown in Figure
      8.\n     <gp:geopriv>\n       <gp:location-info>\n         <gs:Ellipsoid srsName=\"urn:ogc:def:crs:EPSG::4979\">\n
      \          <gml:pos>-34.407242 150.882518 34</gml:pos>\n           <gs:semiMajorAxis
      uom=\"urn:ogc:def:uom:EPSG::9001\">\n             7.7156\n           </gs:semiMajorAxis>\n
      \          <gs:semiMinorAxis uom=\"urn:ogc:def:uom:EPSG::9001\">\n             3.31\n
      \          </gs:semiMinorAxis>\n           <gs:verticalAxis uom=\"urn:ogc:def:uom:EPSG::9001\">\n
      \            28.7\n           </gs:verticalAxis>\n           <gs:orientation
      uom=\"urn:ogc:def:uom:EPSG::9102\">\n             43\n           </gs:orientation>\n
      \        </gs:Ellipsoid>\n         <con:confidence pdf=\"normal\">95</con:confidence>\n
      \      </gp:location-info>\n       <gp:usage-rules/>\n     </gp:geopriv>\n                   Figure
      8: Alice's Ellipsoid Location\n   This information can be reduced to a point
      simply by extracting the\n   center point, that is [-34.407242, 150.882518,
      34].\n   If some limited uncertainty were required, the estimate could be\n
      \  converted into a circle or sphere.  To convert to a sphere, the\n   radius
      is the largest of the semi-major, semi-minor and vertical\n   axes; in this
      case, 28.7 meters.\n   However, if only a circle is required, the altitude can
      be dropped as\n   can the altitude uncertainty (the vertical axis of the ellipsoid),\n
      \  resulting in a circle at [-34.407242, 150.882518] of radius 7.7156\n   meters.\n
      \  Bob receives a location estimate with a Polygon shape (which roughly\n   corresponds
      to the location of the Sydney Opera House).  This\n   information is shown in
      Figure 9.\n     <gml:Polygon srsName=\"urn:ogc:def:crs:EPSG::4326\">\n       <gml:exterior>\n
      \        <gml:LinearRing>\n           <gml:posList>\n             -33.856625
      151.215906 -33.856299 151.215343\n             -33.856326 151.214731 -33.857533
      151.214495\n             -33.857720 151.214613 -33.857369 151.215375\n             -33.856625
      151.215906\n           </gml:posList>\n         </gml:LinearRing>\n       </gml:exterior>\n
      \    </gml:Polygon>\n                     Figure 9: Bob's Polygon Location\n
      \  To convert this to a polygon, each point is firstly assigned an\n   altitude
      of zero and converted to ECEF coordinates (see Appendix A).\n   Then, a normal
      vector for this polygon is found (see Appendix B).\n   The result of each of
      these stages is shown in Figure 10.  Note that\n   the numbers shown in this
      document are rounded only for formatting\n   reasons; the actual calculations
      do not include rounding, which would\n   generate significant errors in the
      final values.\n   Polygon in ECEF coordinate space\n      (repeated point omitted
      and transposed to fit):\n            [ -4.6470e+06  2.5530e+06  -3.5333e+06
      ]\n            [ -4.6470e+06  2.5531e+06  -3.5332e+06 ]\n    pecef = [ -4.6470e+06
      \ 2.5531e+06  -3.5332e+06 ]\n            [ -4.6469e+06  2.5531e+06  -3.5333e+06
      ]\n            [ -4.6469e+06  2.5531e+06  -3.5334e+06 ]\n            [ -4.6469e+06
      \ 2.5531e+06  -3.5333e+06 ]\n   Normal Vector: n = [ -0.72782  0.39987  -0.55712
      ]\n   Transformation Matrix:\n        [ -0.48152  -0.87643   0.00000 ]\n    t
      = [ -0.48828   0.26827   0.83043 ]\n        [ -0.72782   0.39987  -0.55712 ]\n
      \  Transformed Coordinates:\n             [  8.3206e+01  1.9809e+04  6.3715e+06
      ]\n             [  3.1107e+01  1.9845e+04  6.3715e+06 ]\n    pecef' = [ -2.5528e+01
      \ 1.9842e+04  6.3715e+06 ]\n             [ -4.7367e+01  1.9708e+04  6.3715e+06
      ]\n             [ -3.6447e+01  1.9687e+04  6.3715e+06 ]\n             [  3.4068e+01
      \ 1.9726e+04  6.3715e+06 ]\n   Two dimensional polygon area: A = 12600 m^2\n
      \  Two-dimensional polygon centroid: C' = [ 8.8184e+00  1.9775e+04 ]\n   Average
      of pecef' z coordinates: 6.3715e+06\n   Reverse Transformation Matrix:\n         [
      -0.48152  -0.48828  -0.72782 ]\n    t' = [ -0.87643   0.26827   0.39987 ]\n
      \        [  0.00000   0.83043  -0.55712 ]\n   Polygon centroid (ECEF): C = [
      -4.6470e+06  2.5531e+06  -3.5333e+06 ]\n   Polygon centroid (Geo): Cg = [ -33.856926
      \ 151.215102  -4.9537e-04 ]\n                Figure 10: Calculation of Polygon
      Centroid\n   The point conversion for the polygon uses the final result, \"Cg\",\n
      \  ignoring the altitude since the original shape did not include\n   altitude.\n
      \  To convert this to a circle, take the maximum distance in ECEF\n   coordinates
      from the center point to each of the points.  This\n   results in a radius of
      99.1 meters.  Confidence is unchanged.\n"
    title: 6.1.  Reduction to a Point or Circle
  - contents:
    - "6.2.  Increasing and Decreasing Confidence\n   Assume that confidence is known
      to be 19% for Alice's location\n   information.  This is a typical value for
      a three-dimensional\n   ellipsoid uncertainty of normal distribution where the
      standard\n   deviation is used directly for uncertainty in each dimension.  The\n
      \  confidence associated with Alice's location estimate is quite low for\n   many
      applications.  Since the estimate is known to follow a normal\n   distribution,
      the method in Section 5.4.2 can be used.  Each axis can\n   be scaled by:\n
      \     scale = erfinv(0.95^(1/3)) / erfinv(0.19^(1/3)) = 2.9937\n   Ensuring
      that rounding always increases uncertainty, the location\n   estimate at 95%
      includes a semi-major axis of 23.1, a semi-minor axis\n   of 10 and a vertical
      axis of 86.\n   Bob's location estimate (from the previous example) covers an
      area of\n   approximately 12600 square meters.  If the estimate follows a\n
      \  rectangular distribution, the region of uncertainty can be reduced in\n   size.
      \ Here we find the confidence that Bob is within the smaller\n   area of the
      Concert Hall.  For the Concert Hall, the polygon\n   [-33.856473, 151.215257;
      -33.856322, 151.214973;\n   -33.856424, 151.21471; -33.857248, 151.214753;\n
      \  -33.857413, 151.214941; -33.857311, 151.215128] is used.  To use this\n   new
      region of uncertainty, find its area using the same translation\n   method described
      in Section 5.1.1.2, which produces 4566.2 square\n   meters.  Given that the
      Concert Hall is entirely within Bob's\n   original location estimate, the confidence
      associated with the\n   smaller area is therefore 95% * 4566.2 / 12600 = 34%.\n"
    title: 6.2.  Increasing and Decreasing Confidence
  - contents:
    - "6.3.  Matching Location Estimates to Regions of Interest\n   Suppose that a
      circular area is defined centered at\n   [-33.872754, 151.20683] with a radius
      of 1950 meters.  To determine\n   whether Bob is found within this area -- given
      that Bob is at\n   [-34.407242, 150.882518] with an uncertainty radius 7.7156
      meters --\n   we apply the method in Section 5.5.  Using the converted Circle
      shape\n   for Bob's location, the distance between these points is found to
      be\n   1915.26 meters.  The area of overlap between Bob's location estimate\n
      \  and the region of interest is therefore 2209 square meters and the\n   area
      of Bob's location estimate is 30853 square meters.  This gives\n   the estimated
      probability that Bob is less than 1950 meters from the\n   selected point as
      67.8%.\n   Note that if 1920 meters were chosen for the distance from the\n
      \  selected point, the area of overlap is only 16196 square meters and\n   the
      confidence is 49.8%.  Therefore, it is marginally more likely\n   that Bob is
      outside the region of interest, despite the center point\n   of his location
      estimate being within the region.\n"
    title: 6.3.  Matching Location Estimates to Regions of Interest
  - contents:
    - "6.4.  PIDF-LO with Confidence Example\n   The PIDF-LO document in Figure 11
      includes a representation of\n   uncertainty as a circular area.  The confidence
      element (on the line\n   marked with a comment) indicates that the confidence
      is 67% and that\n   it follows a normal distribution.\n     <pidf:presence\n
      \        xmlns:pidf=\"urn:ietf:params:xml:ns:pidf\"\n         xmlns:dm=\"urn:ietf:params:xml:ns:pidf:data-model\"\n
      \        xmlns:gp=\"urn:ietf:params:xml:ns:pidf:geopriv10\"\n         xmlns:gs=\"http://www.opengis.net/pidflo/1.0\"\n
      \        xmlns:gml=\"http://www.opengis.net/gml\"\n         xmlns:con=\"urn:ietf:params:xml:ns:geopriv:conf\"\n
      \        entity=\"pres:alice@example.com\">\n       <dm:device id=\"sg89ab\">\n
      \        <gp:geopriv>\n           <gp:location-info>\n             <gs:Circle
      srsName=\"urn:ogc:def:crs:EPSG::4326\">\n               <gml:pos>42.5463 -73.2512</gml:pos>\n
      \              <gs:radius uom=\"urn:ogc:def:uom:EPSG::9001\">\n                 850.24\n
      \              </gs:radius>\n             </gs:Circle>\n   <!--c--> <con:confidence
      pdf=\"normal\">67</con:confidence>\n           </gp:location-info>\n           <gp:usage-rules/>\n
      \        </gp:geopriv>\n        <dm:deviceID>mac:010203040506</dm:deviceID>\n
      \     </dm:device>\n    </pidf:presence>\n                Figure 11: Example
      PIDF-LO with Confidence\n"
    title: 6.4.  PIDF-LO with Confidence Example
  title: 6.  Examples
- contents:
  - "7.  Confidence Schema\n   <?xml version=\"1.0\"?>\n   <xs:schema\n       xmlns:conf=\"urn:ietf:params:xml:ns:geopriv:conf\"\n
    \      xmlns:xs=\"http://www.w3.org/2001/XMLSchema\"\n       targetNamespace=\"urn:ietf:params:xml:ns:geopriv:conf\"\n
    \      elementFormDefault=\"qualified\"\n       attributeFormDefault=\"unqualified\">\n
    \    <xs:annotation>\n       <xs:appinfo\n           source=\"urn:ietf:params:xml:schema:geopriv:conf\">\n
    \        PIDF-LO Confidence\n       </xs:appinfo>\n       <xs:documentation\n
    \          source=\"http://www.rfc-editor.org/rfc/rfc7459.txt\">\n         This
    schema defines an element that is used for indicating\n         confidence in
    PIDF-LO documents.\n       </xs:documentation>\n     </xs:annotation>\n     <xs:element
    name=\"confidence\" type=\"conf:confidenceType\"/>\n     <xs:complexType name=\"confidenceType\">\n
    \      <xs:simpleContent>\n         <xs:extension base=\"conf:confidenceBase\">\n
    \          <xs:attribute name=\"pdf\" type=\"conf:pdfType\"\n                         default=\"unknown\"/>\n
    \        </xs:extension>\n       </xs:simpleContent>\n     </xs:complexType>\n
    \    <xs:simpleType name=\"confidenceBase\">\n       <xs:union>\n         <xs:simpleType>\n
    \          <xs:restriction base=\"xs:decimal\">\n             <xs:minExclusive
    value=\"0.0\"/>\n             <xs:maxExclusive value=\"100.0\"/>\n           </xs:restriction>\n
    \        </xs:simpleType>\n         <xs:simpleType>\n           <xs:restriction
    base=\"xs:token\">\n             <xs:enumeration value=\"unknown\"/>\n           </xs:restriction>\n
    \        </xs:simpleType>\n       </xs:union>\n     </xs:simpleType>\n     <xs:simpleType
    name=\"pdfType\">\n       <xs:restriction base=\"xs:token\">\n         <xs:enumeration
    value=\"unknown\"/>\n         <xs:enumeration value=\"normal\"/>\n         <xs:enumeration
    value=\"rectangular\"/>\n       </xs:restriction>\n     </xs:simpleType>\n   </xs:schema>\n"
  title: 7.  Confidence Schema
- contents:
  - '8.  IANA Considerations

    '
  - contents:
    - "8.1.  URN Sub-Namespace Registration for\n      urn:ietf:params:xml:ns:geopriv:conf\n
      \  A new XML namespace, \"urn:ietf:params:xml:ns:geopriv:conf\", has been\n
      \  registered, as per the guidelines in [RFC3688].\n   URI:  urn:ietf:params:xml:ns:geopriv:conf\n
      \  Registrant Contact:  IETF GEOPRIV working group (geopriv@ietf.org),\n      Martin
      Thomson (martin.thomson@gmail.com).\n   XML:\n       BEGIN\n         <?xml version=\"1.0\"?>\n
      \        <!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\"\n           \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n
      \        <html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\">\n           <head>\n
      \            <title>PIDF-LO Confidence Attribute</title>\n           </head>\n
      \          <body>\n             <h1>Namespace for PIDF-LO Confidence Attribute</h1>\n
      \            <h2>urn:ietf:params:xml:ns:geopriv:conf</h2>\n             <p>See
      <a href=\"http://www.rfc-editor.org/rfc/rfc7459.txt\">\n                RFC
      7459</a>.</p>\n           </body>\n         </html>\n       END\n"
    title: 8.1.  URN Sub-Namespace Registration for
  - contents:
    - "8.2.  XML Schema Registration\n   An XML schema has been registered, as per
      the guidelines in\n   [RFC3688].\n   URI:  urn:ietf:params:xml:schema:geopriv:conf\n
      \  Registrant Contact:  IETF GEOPRIV working group (geopriv@ietf.org),\n      Martin
      Thomson (martin.thomson@gmail.com).\n   Schema:  The XML for this schema can
      be found as the entirety of\n      Section 7 of this document.\n"
    title: 8.2.  XML Schema Registration
  title: 8.  IANA Considerations
- contents:
  - "9.  Security Considerations\n   This document describes methods for managing
    and manipulating\n   uncertainty in location.  No specific security concerns arise
    from\n   most of the information provided.  The considerations of [RFC4119]\n
    \  all apply.\n   A thorough treatment of the privacy implications of describing\n
    \  location information are discussed in [RFC6280].  Including\n   uncertainty
    information increases the amount of information\n   available; and altering uncertainty
    is not an effective privacy\n   mechanism.\n   Providing uncertainty and confidence
    information can reveal\n   information about the process by which location information
    is\n   generated.  For instance, it might reveal information that could be\n   used
    to infer that a user is using a mobile device with a GPS, or\n   that a user is
    acquiring location information from a particular\n   network-based service.  A
    Rule Maker might choose to remove\n   uncertainty-related fields from a location
    object in order to protect\n   this information.  Note however that information
    might not be\n   perfectly protected due to difficulties associated with location\n
    \  obfuscation, as described in Section 13.5 of [RFC6772].  In\n   particular,
    increasing uncertainty does not necessarily result in a\n   reduction of the information
    conveyed by the location object.\n   Adding confidence to location information
    risks misinterpretation by\n   consumers of location that do not understand the
    element.  This could\n   be exploited, particularly when reducing confidence,
    since the\n   resulting uncertainty region might include locations that are less\n
    \  likely to contain the Target than the recipient expects.  Since this\n   sort
    of error is always a possibility, the impact of this is low.\n"
  title: 9.  Security Considerations
- contents:
  - '10.  References

    '
  - contents:
    - "10.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use
      in RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119, March
      1997,\n              <http://www.rfc-editor.org/info/rfc2119>.\n   [RFC3688]
      \ Mealling, M., \"The IETF XML Registry\", BCP 81, RFC 3688,\n              January
      2004, <http://www.rfc-editor.org/info/rfc3688>.\n   [RFC3693]  Cuellar, J.,
      Morris, J., Mulligan, D., Peterson, J., and\n              J. Polk, \"Geopriv
      Requirements\", RFC 3693, February 2004,\n              <http://www.rfc-editor.org/info/rfc3693>.\n
      \  [RFC4119]  Peterson, J., \"A Presence-based GEOPRIV Location Object\n              Format\",
      RFC 4119, December 2005,\n              <http://www.rfc-editor.org/info/rfc4119>.\n
      \  [RFC5139]  Thomson, M. and J. Winterbottom, \"Revised Civic Location\n              Format
      for Presence Information Data Format Location\n              Object (PIDF-LO)\",
      RFC 5139, February 2008,\n              <http://www.rfc-editor.org/info/rfc5139>.\n
      \  [RFC5491]  Winterbottom, J., Thomson, M., and H. Tschofenig, \"GEOPRIV\n
      \             Presence Information Data Format Location Object (PIDF-LO)\n              Usage
      Clarification, Considerations, and Recommendations\",\n              RFC 5491,
      March 2009,\n              <http://www.rfc-editor.org/info/rfc5491>.\n   [RFC6225]
      \ Polk, J., Linsner, M., Thomson, M., and B. Aboba, Ed.,\n              \"Dynamic
      Host Configuration Protocol Options for\n              Coordinate-Based Location
      Configuration Information\", RFC\n              6225, July 2011, <http://www.rfc-editor.org/info/rfc6225>.\n
      \  [RFC6280]  Barnes, R., Lepinski, M., Cooper, A., Morris, J.,\n              Tschofenig,
      H., and H. Schulzrinne, \"An Architecture for\n              Location and Location
      Privacy in Internet Applications\",\n              BCP 160, RFC 6280, July 2011,\n
      \             <http://www.rfc-editor.org/info/rfc6280>.\n"
    title: 10.1.  Normative References
  - contents:
    - "10.2.  Informative References\n   [Convert]  Burtch, R., \"A Comparison of
      Methods Used in Rectangular\n              to Geodetic Coordinate Transformations\",
      April 2006.\n   [GeoShape] Thomson, M. and C. Reed, \"GML 3.1.1 PIDF-LO Shape\n
      \             Application Schema for use by the Internet Engineering\n              Task
      Force (IETF)\", Candidate OpenGIS Implementation\n              Specification
      06-142r1, Version: 1.0, April 2007.\n   [ISO.GUM]  ISO/IEC, \"Guide to the expression
      of uncertainty in\n              measurement (GUM)\", Guide 98:1995, 1995.\n
      \  [NIST.TN1297]\n              Taylor, B. and C. Kuyatt, \"Guidelines for Evaluating
      and\n              Expressing the Uncertainty of NIST Measurement Results\",\n
      \             Technical Note 1297, September 1994.\n   [RFC5222]  Hardie, T.,
      Newton, A., Schulzrinne, H., and H.\n              Tschofenig, \"LoST: A Location-to-Service
      Translation\n              Protocol\", RFC 5222, August 2008,\n              <http://www.rfc-editor.org/info/rfc5222>.\n
      \  [RFC6772]  Schulzrinne, H., Ed., Tschofenig, H., Ed., Cuellar, J.,\n              Polk,
      J., Morris, J., and M. Thomson, \"Geolocation Policy:\n              A Document
      Format for Expressing Privacy Preferences for\n              Location Information\",
      RFC 6772, January 2013,\n              <http://www.rfc-editor.org/info/rfc6772>.\n
      \  [Sunday02] Sunday, D., \"Fast polygon area and Newell normal\n              computation\",
      Journal of Graphics Tools JGT, 7(2):9-13,\n              2002.\n   [TS-3GPP-23_032]\n
      \             3GPP, \"Universal Geographical Area Description (GAD)\",\n              3GPP
      TS 23.032 12.0.0, September 2014.\n   [Vatti92]  Vatti, B., \"A generic solution
      to polygon clipping\",\n              Communications of the ACM Volume 35, Issue
      7, pages 56-63,\n              July 1992,\n              <http://portal.acm.org/citation.cfm?id=129906>.\n
      \  [WGS84]    US National Imagery and Mapping Agency, \"Department of\n              Defense
      (DoD) World Geodetic System 1984 (WGS 84), Third\n              Edition\", NIMA
      TR8350.2, January 2000.\n"
    title: 10.2.  Informative References
  title: 10.  References
- contents:
  - "Appendix A.  Conversion between Cartesian and Geodetic Coordinates in\n             WGS84\n
    \  The process of conversion from geodetic (latitude, longitude, and\n   altitude)
    to ECEF Cartesian coordinates is relatively simple.\n   In this appendix, the
    following constants and derived values are used\n   from the definition of WGS84
    [WGS84]:\n      {radius of ellipsoid} R = 6378137 meters\n      {inverse flattening}
    1/f = 298.257223563\n      {first eccentricity squared} e^2 = f * (2 - f)\n      {second
    eccentricity squared} e'^2 = e^2 * (1 - e^2)\n   To convert geodetic coordinates
    (latitude, longitude, altitude) to\n   ECEF coordinates (X, Y, Z), use the following
    relationships:\n      N = R / sqrt(1 - e^2 * sin(latitude)^2)\n      X = (N +
    altitude) * cos(latitude) * cos(longitude)\n      Y = (N + altitude) * cos(latitude)
    * sin(longitude)\n      Z = (N*(1 - e^2) + altitude) * sin(latitude)\n   The reverse
    conversion requires more complex computation, and most\n   methods introduce some
    error in latitude and altitude.  A range of\n   techniques are described in [Convert].
    \ A variant on the method\n   originally proposed by Bowring, which results in
    an acceptably small\n   error, is described by the following:\n      p = sqrt(X^2
    + Y^2)\n      r = sqrt(X^2 + Y^2 + Z^2)\n      u = atan((1-f) * Z * (1 + e'^2
    * (1-f) * R / r) / p)\n      latitude = atan((Z + e'^2 * (1-f) * R * sin(u)^3)\n
    \     / (p - e^2 * R * cos(u)^3))\n      longitude = atan2(Y, X)\n      altitude
    = sqrt((p - R * cos(u))^2 + (Z - (1-f) * R * sin(u))^2)\n   If the point is near
    the poles, that is, \"p < 1\", the value for\n   altitude that this method produces
    is unstable.  A simpler method for\n   determining the altitude of a point near
    the poles is:\n      altitude = |Z| - R * (1 - f)\n"
  title: Appendix A.  Conversion between Cartesian and Geodetic Coordinates in
- contents:
  - "Appendix B.  Calculating the Upward Normal of a Polygon\n   For a polygon that
    is guaranteed to be convex and coplanar, the\n   upward normal can be found by
    finding the vector cross product of\n   adjacent edges.\n   For more general cases,
    the Newell method of approximation described\n   in [Sunday02] may be applied.
    \ In particular, this method can be used\n   if the points are only approximately
    coplanar, and for non-convex\n   polygons.\n   This process requires a Cartesian
    coordinate system.  Therefore,\n   convert the geodetic coordinates of the polygon
    to Cartesian, ECEF\n   coordinates (Appendix A).  If no altitude is specified,
    assume an\n   altitude of zero.\n   This method can be condensed to the following
    set of equations:\n      Nx = sum from i=1..n of (y[i] * (z[i+1] - z[i-1]))\n
    \     Ny = sum from i=1..n of (z[i] * (x[i+1] - x[i-1]))\n      Nz = sum from
    i=1..n of (x[i] * (y[i+1] - y[i-1]))\n   For these formulae, the polygon is made
    of points\n   \"(x[1], y[1], z[1])\" through \"(x[n], y[n], x[n])\".  Each array
    is\n   treated as circular, that is, \"x[0] == x[n]\" and \"x[n+1] == x[1]\".\n
    \  To translate this into a unit-vector; divide each component by the\n   length
    of the vector:\n      Nx' = Nx / sqrt(Nx^2 + Ny^2 + Nz^2)\n      Ny' = Ny / sqrt(Nx^2
    + Ny^2 + Nz^2)\n      Nz' = Nz / sqrt(Nx^2 + Ny^2 + Nz^2)\n"
  - contents:
    - "B.1.  Checking That a Polygon Upward Normal Points Up\n   RFC 5491 [RFC5491]
      stipulates that the Polygon shape be presented in\n   counterclockwise direction
      so that the upward normal is in an upward\n   direction.  Accidental reversal
      of points can invert this vector.\n   This error can be hard to detect just
      by looking at the series of\n   coordinates that form the polygon.\n   Calculate
      the dot product of the upward normal of the polygon\n   (Appendix B) and any
      vector that points away from the center of the\n   earth from the location of
      polygon.  If this product is positive,\n   then the polygon upward normal also
      points away from the center of\n   the earth.\n      The inverse cosine of this
      value indicates the angle between the\n      horizontal plane and the approximate
      plane of the polygon.\n   A unit vector for the upward direction at any point
      can be found\n   based on the latitude (lat) and longitude (lng) of the point,
      as\n   follows:\n      Up = [ cos(lat) * cos(lng) ; cos(lat) * sin(lng) ; sin(lat)
      ]\n   For polygons that span less than half the globe, any point in the\n   polygon
      -- including the centroid -- can be selected to generate an\n   approximate
      up vector for comparison with the upward normal.\n"
    title: B.1.  Checking That a Polygon Upward Normal Points Up
  title: Appendix B.  Calculating the Upward Normal of a Polygon
- contents:
  - "Acknowledgements\n   Peter Rhodes provided assistance with some of the mathematical\n
    \  groundwork on this document.  Dan Cornford provided a detailed review\n   and
    many terminology corrections.\n"
  title: Acknowledgements
- contents:
  - "Authors' Addresses\n   Martin Thomson\n   Mozilla\n   331 E Evelyn Street\n   Mountain
    View, CA  94041\n   United States\n   EMail: martin.thomson@gmail.com\n   James
    Winterbottom\n   Unaffiliated\n   Australia\n   EMail: a.james.winterbottom@gmail.com\n"
  title: Authors' Addresses
