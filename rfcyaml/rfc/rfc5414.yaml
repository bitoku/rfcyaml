- title: __initial_text__
  contents:
  - ''
- title: Independent Submission                                           S. Iino
  contents:
  - 'Independent Submission                                           S. Iino

    '
- title: 'Obsoleted by: 5415                                            M. Sugiura'
  contents:
  - "Obsoleted by: 5415                                            M. Sugiura\n  \
    \               Wireless LAN Control Protocol (WiCoP)\n"
- title: Abstract
  contents:
  - "Abstract\n   The popularity of wireless local area networks (WLANs) has led to\n\
    \   widespread deployments across different establishments.  It has also\n   translated\
    \ into an increasing scale of the WLANs.  Large-scale\n   deployments made of\
    \ large numbers of wireless termination points\n   (WTPs) and covering substantial\
    \ areas are increasingly common.\n   The Wireless LAN Control Protocol (WiCoP)\
    \ described in this document\n   allows for the control and provisioning of large-scale\
    \ WLANs.  It\n   enables central management of these networks and realizes the\n\
    \   objectives set forth for the Control And Provisioning of Wireless\n   Access\
    \ Points (CAPWAP).\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n   published for the historical record.\n   This document defines a Historic\
    \ Document for the Internet community.\n   This is a contribution to the RFC Series,\
    \ independently of any other\n   RFC stream.  The RFC Editor has chosen to publish\
    \ this document at\n   its discretion and makes no statement about its value for\n\
    \   implementation or deployment.  Documents approved for publication by\n   the\
    \ RFC Editor are not a candidate for any level of Internet\n   Standard; see Section\
    \ 2 of RFC 5741.\n   Information about the current status of this document, any\
    \ errata,\n   and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc5414.\n"
- title: IESG Note
  contents:
  - "IESG Note\n   This RFC documents the WiCoP protocol as it was when submitted\
    \ to the\n   IETF as a basis for further work in the CAPWAP Working Group, and\n\
    \   therefore it may resemble the CAPWAP protocol specification in RFC\n   5415,\
    \ as well as other IETF work.  This RFC is being published solely\n   for the\
    \ historical record.  The protocol described in this RFC has\n   not been thoroughly\
    \ reviewed and may contain errors and omissions.\n   RFC 5415 documents the standards\
    \ track solution for the CAPWAP\n   Working Group and obsoletes any and all mechanisms\
    \ defined in this\n   RFC.  This RFC itself is not a candidate for any level of\
    \ Internet\n   Standard and should not be used as a basis for any sort of Internet\n\
    \   deployment.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2010 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http:trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................4\n\
    \   2. Terminology .....................................................6\n  \
    \ 3. Protocol Overview ...............................................6\n   4.\
    \ WiCoP Format ....................................................7\n      4.1.\
    \ WiCoP Header ...............................................8\n      4.2. WiCoP\
    \ Control Packet ......................................11\n           4.2.1. WiCoP\
    \ Control Messages .............................12\n           4.2.2. WiCoP Control\
    \ Message Elements .....................12\n           4.2.3. WiCoP Control Message\
    \ Description ..................27\n      4.3. WiCoP Data Packet .........................................36\n\
    \      4.4. WiCoP Timers ..............................................37\n  \
    \         4.4.1. Active Presence Timer ..............................37\n    \
    \       4.4.2. Feedback Interval ..................................37\n      \
    \     4.4.3. Response Timer .....................................37\n        \
    \   4.4.4. Wireless Connectivity Timer ........................38\n   5. WiCoP\
    \ Processes ................................................38\n      5.1. Initialization\
    \ ............................................38\n      5.2. Capabilities Exchange\
    \ .....................................38\n      5.3. Connection ................................................39\n\
    \      5.4. Configuration .............................................40\n  \
    \         5.4.1. Logical Groups .....................................41\n    \
    \       5.4.2. Resource Control ...................................41\n      5.5.\
    \ Operation .................................................41\n           5.5.1.\
    \ Updates ............................................42\n           5.5.2. Feedback\
    \ and Statistics ............................42\n           5.5.3. Non-Periodic\
    \ Events ................................43\n           5.5.4. Firmware Trigger\
    \ ...................................43\n           5.5.5. Wireless Terminal Management\
    \ .......................43\n           5.5.6. Key Configuration ..................................46\n\
    \   6. WiCoP Performance ..............................................51\n  \
    \    6.1. Operational Efficiency ....................................51\n    \
    \  6.2. Semantic Efficiency .......................................51\n   7. Summary\
    \ and Conclusion .........................................51\n   8. Security Considerations\
    \ ........................................52\n   9. Informative References .........................................53\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   The popularity of wireless local area networks (WLANs) has\
    \ led to\n   numerous but incompatible designs and solutions.  The CAPWAP\n  \
    \ Architecture Taxonomy [RFC4118] describes major variations of these\n   designs.\
    \  Among them, the Local MAC (Media Access Control) and Split\n   MAC architecture\
    \ designs are notable categories.\n   Wireless LAN Control Protocol (WiCoP) recognizes\
    \ the major\n   architecture designs and presents a common platform on which WLAN\n\
    \   entities of different designs can be accommodated.  This enables\n   interoperability\
    \ among wireless termination points (WTPs) and WLAN\n   access controllers (ACs)\
    \ of distinct architecture designs.  WiCoP\n   therefore allows for cost-effective\
    \ WLAN expansions.  It can also\n   accommodate future developments in WLAN technologies.\
    \  Figure 1\n   illustrates the WiCoP operational structure in which distinct\
    \ control\n   elements are utilized for Local MAC and Split MAC WTPs.\n   WiCoP\
    \ also addresses the increasing trend of shared infrastructure\n   WLANs.  Here,\
    \ WLAN management needs to distinguish and isolate\n   control for the different\
    \ logical groups sharing a single physical\n   WLAN.  WiCoP manages WLANs through\
    \ a series of tunnels that separate\n   traffic based on logical groups.\n   The\
    \ WiCoP operational structure in Figure 1 shows that each WTP uses\n   a number\
    \ of tunnels to distinguish and separate traffic for control\n   and for each\
    \ logical group.  The protocol allows for managing WLANs\n   in a manner consistent\
    \ with the logical groups that share the\n   physical infrastructure.\n      \
    \                           Local MAC WTP\n   +-------+                      \
    \ +-------+\n   |       |                       |       |    Logical Groups\n\
    \   |      (=====Control Tunnel======)      |\n   |       |                  \
    \     |       |       ~~~~~~~\n   |       |                       |       |  \
    \    /       /\n   |      <=====Logical Group A=====>      |      /   A   /~~~~\n\
    \   |       |                       |       |      /       /    /\n   |      <=====Logical\
    \ Group B=====>      |       ~~~~~~~     /~~~~\n   |       |                 \
    \      |       |           /    B  /    /\n   |      <=====Logical Group C=====>\
    \      |            ~~~~~~~     /\n   |       |                       |      \
    \ |                /    C  /\n   |       |                       +-------+   \
    \              ~~~~~~~\n   |       |\n   |       |\n   |  AC   |\n   |       |\n\
    \   |       |                     Split MAC WTP\n   |       |\n   |       |  \
    \                     +-------+    Logical Groups\n   |       |              \
    \         |       |\n   |      [=====Control Tunnel======]      |      ~~~~~~~\n\
    \   |       |                       |       |     /       /\n   |       |    \
    \                   |       |     /   1   /~~~~\n   |      <=====Logical Group\
    \ 1=====>      |     /       /    /\n   |       |                       |    \
    \   |      ~~~~~~~     /\n   |      <=====Logical Group 2=====>      |       \
    \   /    2  /\n   |       |                       |       |           ~~~~~~~\n\
    \   +-------+                       +-------+\n                              \
    \   Figure 1\n   In Figure 1, WiCoP establishes and operates control tunnels and\n\
    \   logical group tunnels between the AC and two types of WTPs.  The\n   control\
    \ tunnels are used to transport WiCoP messages dealing with the\n   configuration,\
    \ monitoring, and management of WTPs as a physical\n   whole.  The logical group\
    \ tunnels serve to separate traffic among\n   each of the logical groups constituting\
    \ a physical WTP.\n"
- title: 2.  Terminology
  contents:
  - "2.  Terminology\n   This document follows the terminologies of [RFC4118] and\
    \ [RFC4564].\n"
- title: 3.  Protocol Overview
  contents:
  - "3.  Protocol Overview\n   The Wireless LAN Control Protocol (WiCoP) focuses on\
    \ enabling\n   interoperability in shared infrastructure WLANs.  It is designed\
    \ for\n   use with different wireless technologies.  This document provides\n\
    \   both the general operations of WiCoP and also specific use-cases with\n  \
    \ respect to IEEE 802.11-based systems.\n   The state machine for WiCoP is illustrated\
    \ in Figure 2.\n                                    +--------------------------------+\n\
    \                                    |                                |\n    \
    \                                |   +------------------+         |\n        \
    \                            V   V                  |         |\n    +-------------+\
    \         +-------------+         +-------------+  |\n    |             |    \
    \     |             |         |             |  |\n    | Initial-    |-------->|\
    \ Capabilities|-------->|  Connection |  |\n    |    ization  |         |   Exchange\
    \  |         |             |  |\n    |             |         |             | \
    \        |             |  |\n    +-------------+         +-------------+     \
    \    +-------------+  |\n           A                       A                \
    \       |         |\n           |                       |                    \
    \   |         |\n           |                       |                       |\
    \         |\n           |                       |                       |    \
    \     |\n           |                       |                       V        \
    \ |\n           |                       |                +-------------+  |\n\
    \           |                       |                |             |  |\n    \
    \       |                       +----------------| Configur-   |  |\n        \
    \   |                                        |     ation   |  |\n           |\
    \                                        |             |  |\n           |    \
    \                                    +-------------+  |\n           |        \
    \                                       |         |\n           |            \
    \                                   |         |\n           |                \
    \                               |         |\n           |                    \
    \                           |         |\n           |                        \
    \                       V         |\n           |                            \
    \            +--------------+ |\n           |                                \
    \        |              | |\n           +----------------------------------------|\
    \              |-+\n                                                    |  Operation\
    \   |\n                                                    |              |\n\
    \                                                    +--------------+\n      \
    \                            Figure 2\n   The Initialization state represents\
    \ the initial states of WTPs and\n   AC.  A WTP or AC in this state powers on,\
    \ clears internal registers,\n   runs hardware self-tests, and resets network\
    \ interfaces.\n   The Capabilities Exchange state represents initial protocol\
    \ exchange\n   between a WTP and AC.  A WTP in this state determines possible\
    \ ACs\n   from which it can receive management services.  An AC in this state\n\
    \   determines the capabilities of the WTP and the WTP's compatibility\n   with\
    \ the management services it offers.\n   The Connection state represents the creation\
    \ of a security\n   infrastructure between a WTP and AC.  This involves mutual\n\
    \   authentication and the establishment of a secure connection between\n   the\
    \ WiCoP entities.\n   The Configuration state represents the exchange of long-term\n\
    \   operational parameters and settings between a WTP and AC.  A WTP in\n   this\
    \ state receives configuration information to allow it to operate\n   consistently\
    \ within the WLAN managed by the AC.  An AC in this state\n   provides configuration\
    \ information to the WTP based on the WTP's\n   capabilities and network policies.\n\
    \   The Operation state represents the active exchange of WiCoP\n   monitoring\
    \ and management messages.  WTPs send regular status updates\n   to and receive\
    \ corresponding management instructions from the AC.\n   This state also involves\
    \ firmware and configuration updates arising\n   from changes in network conditions\
    \ and administrative policies.\n"
- title: 4.  WiCoP Format
  contents:
  - "4.  WiCoP Format\n   WiCoP uses separate packets for control and data message\
    \ transfer\n   between the AC and WTPs.  A common header is used for both types\
    \ of\n   packets in which a single-bit flag distinguishes between them.  This\n\
    \   section presents the packet formats for WiCoP packets.\n"
- title: 4.1.  WiCoP Header
  contents:
  - "4.1.  WiCoP Header\n   Figure 3 illustrates the WiCoP common header for control\
    \ and data\n   packets.\n   0                                                \
    \              31\n   |                7               15              23    \
    \         |\n   |-------|-------|-------|-------|-------|-------|-------|-------|\n\
    \   |                                                               |\n   +---------------+-+-+-+-+-+-+-+-+-------------------------------+\n\
    \   |    Version    |M|D|C|R|E|F|L| |           Reserve             |\n   +---------------+-+-+-+-+-+-+-+-+-------------------------------+\n\
    \   |  Fragment ID  | Fragment No.  |           Length              |\n   +---------------+---------------+-------------------------------+\n\
    \                                 Figure 3\n   Version Field\n   This field indicates\
    \ the protocol version.\n   'M' Field\n   The MAC-type field, 'M', distinguishes\
    \ between Local MAC WTPs and\n   Split MAC WTPs.  It is used to efficiently realize\
    \ interoperability\n   between WTPs of the two different designs.  A '0' value\
    \ indicates\n   WiCoP exchanges with a Split MAC WTP while a '1' value indicates\n\
    \   WiCoP exchanges with a Local MAC WTP.\n   The presence of this classification\
    \ bit in the WiCoP common header\n   serves to expedite processing of WiCoP and\
    \ WLAN traffic at the AC.\n   With a single parsing of the WiCoP common header\
    \ once, the AC will be\n   able to determine the appropriate processing required\
    \ for the\n   particular WiCoP packet.\n   'D' Field\n   The differentiator field,\
    \ 'D', is used to distinguish between WTP\n   variants within a type of WTP design.\
    \  The CAPWAP Architecture\n   Taxonomy [RFC4118] illustrates that the Split MAC\
    \ design allows\n   encryption/decryption to be performed at either the WTP or\
    \ the AC.\n   The Architecture Taxonomy also indicates that the Local MAC design\n\
    \   allows authentication to take place at either the WTP or the AC.\n   WiCoP\
    \ acknowledges these major variants and accommodates them using\n   the 'D' field\
    \ in conjunction with the 'M' field.  For a Split MAC\n   WTP, the 'D' field is\
    \ used to indicate location of\n   encryption/decryption while for a Local MAC\
    \ WTP, the 'D' field is\n   used to indicate location of authentication.  The\
    \ following table\n   highlights their usage.\n   'M'             'D'        \
    \     Description\n    0               0              Split MAC WTP - Encryption/decryption\n\
    \                                   is performed at WTP\n    0               1\
    \              Split MAC WTP - Encryption/decryption\n                       \
    \            is performed at AC\n    1               0              Local MAC\
    \ WTP - Authentication is\n                                   performed by WTP\n\
    \    1               1              Local MAC WTP - Authentication is\n      \
    \                             performed by AC\n   Similar to the 'M' field, the\
    \ presence of this classification in the\n   WiCoP common header helps expedite\
    \ processing at the AC with a single\n   parsing.  By incorporating the classification\
    \ bits in the WiCoP\n   common header, where it is available for all packets of\
    \ a session,\n   the AC processing can be expedited.  Alternatively, the AC would\
    \ have\n   to check each arriving packet against an internal register and\n  \
    \ consequently delay processing.\n   'C' Field\n   This field distinguishes between\
    \ a WiCoP control and WiCoP data\n   packet.  Each type of information is tunneled\
    \ separately across the\n   WiCoP tunnel interfaces between WTPs and the AC. \
    \ A '0' value for the\n   'C' field indicates a data packet, while a '1' value\
    \ indicates a\n   control packet.\n   The 'C' field is also used to assign WiCoP\
    \ packets to distinct data\n   and control tunnels between the AC and WTP.  WiCoP\
    \ also maintains\n   logical groups in WLANs with the 'C' field.\n   'R' Field\n\
    \   The retransmission field, 'R', is used to differentiate between the\n   first\
    \ and subsequent transmissions of WiCoP packets.  The 'R' field\n   is used for\
    \ critical WiCoP packets such as those relating to security\n   key exchanges.\
    \  A '0' value for the 'R' field indicates the first\n   transmission of a WiCoP\
    \ packet, while a '1' value indicates a\n   retransmission.\n   'E' Field\n  \
    \ The encryption field, 'E', is used to indicate if the WiCoP packet is\n   encrypted\
    \ between the AC and WTPs.  The 'E' field is used for those\n   WiCoP packets\
    \ that are exchanged during initialization.  A '0' value\n   indicates the WiCoP\
    \ packet is unencrypted, while a '1' value\n   indicates the packet is encrypted.\n\
    \   'F' Field\n   The fragmentation field indicates if the packet is a fragment\
    \ of a\n   larger packet.  A '0' value indicates a non-fragmented packet while\
    \ a\n   '1' value indicates a fragmented packet.  The 'F', 'L', 'Fragment\n  \
    \ ID', and 'Fragment No.' fields are used together.\n   'L' Field\n   This field\
    \ is used to indicate the last fragment of a larger packet.\n   It is only valid\
    \ when the 'F' field has a '1' value.  A '0' value for\n   the 'L' field indicates\
    \ the last fragment of a larger packet while a\n   '1' value indicates an intermediate\
    \ fragment of a larger packet.  The\n   'F', 'L', 'Fragment ID', and 'Fragment\
    \ No.' fields are used together.\n   Fragment ID Field\n   The Fragment ID identifies\
    \ the larger packet that has been\n   fragmented.  It is used to distinguish between\
    \ fragments of different\n   large packets.  This field is valid only when the\
    \ 'F' field has a '1'\n   value.  The 'F', 'L', 'Fragment ID', and 'Fragment No.'\
    \ fields are\n   used together.\n   Fragment No.  Field\n   The fragment number\
    \ field identifies the sequence of fragments of a\n   larger packet.  The value\
    \ of the Fragment No. field is incremented\n   for each fragment of a larger packet\
    \ so as to show the order of\n   fragments.  This field is valid only when the\
    \ 'F' field has a '1'\n   value.  The 'F', 'L', 'Fragment ID', and 'Fragment No.'\
    \ fields are\n   used together.\n   Length Field\n   This field specifies the\
    \ length of the WiCoP payload following the\n   header.\n"
- title: 4.2.  WiCoP Control Packet
  contents:
  - "4.2.  WiCoP Control Packet\n   The WiCoP control header follows the WiCoP common\
    \ header.  It is\n   highlighted in Figure 5.\n   0                          \
    \                                    31\n   |                7               15\
    \              23             |\n   |-------|-------|-------|-------|-------|-------|-------|-------|\n\
    \   |                                                               |\n   +---------------+---------------+-------------------------------+\n\
    \   |   Msg Type    |   Reserve     |           Seq Num             |\n   +---------------+---------------+-------------------------------+\n\
    \   |       Msg Element Length      |\n   +-------------------------------+\n\
    \                                 Figure 5\n   The control packet adds four additional\
    \ fields to the common header.\n   These are described below:\n   Msg Type Field\n\
    \   The message type field specifies the type of control message\n   transported\
    \ in the packet.  The list of control messages is presented\n   in Section 5.2.1.\n\
    \   Seq Num Field\n   The sequence number field is used to map WiCoP request and\
    \ response\n   sequences.  The initiator of a WiCoP request message increments\
    \ the\n   Seq Num field for each new request message.  The responder then uses\n\
    \   these values of the Seq Num fields in its corresponding response\n   messages.\n\
    \   Msg Element Length Field\n   This field specifies the length in bytes of the\
    \ subsequent WiCoP\n   control message element.\n"
- title: 4.2.1.  WiCoP Control Messages
  contents:
  - "4.2.1.  WiCoP Control Messages\n   The list of WiCoP control messages is shown\
    \ below:\n   Message                                 Msg Type\n   ------------------------------------------------------------\n\
    \   Capabilities                            1\n   Capabilities Response      \
    \             2\n   Connection                              3\n   Connection Response\
    \                     4\n   Configuration Request                   5\n   Configuration\
    \ Response                  6\n   Configuration Data                      7\n\
    \   Configuration Data Response             8\n   Configuration Trigger      \
    \             9\n   Configuration Trigger Response          10\n   Feedback  \
    \                              11\n   Feedback Response                      \
    \ 12\n   Reset                                   13\n   Reset Response       \
    \                   14\n   Firmware Download                       15\n   Firmware\
    \ Download Response              16\n   Terminal Addition                    \
    \   17\n   Terminal Addition Response              18\n   Terminal Deletion  \
    \                     19\n   Terminal Deletion Response              20\n   Key\
    \ Configuration                       21\n   Key Configuration Response      \
    \        22\n   Notification                            23\n   Notification Response\
    \                   24\n"
- title: 4.2.2.  WiCoP Control Message Elements
  contents:
  - "4.2.2.  WiCoP Control Message Elements\n   WiCoP control messages each include\
    \ a control message header followed\n   by one or more message elements.  The\
    \ message elements are shown in\n   the following table:\n   +-----------------+-----------+-------------------------------------+\n\
    \   | Message Element | Type      | Description                         |\n  \
    \ +-----------------+-----------+-------------------------------------+\n   |\
    \ WTP-Info        | 1         | Information regarding WTPs, such as |\n   |  \
    \               |           | manufacturer ID, MAC address, etc.  |\n   |    \
    \             |           |                                     |\n   | Cap-from-WTP\
    \    | 2         | Quality-of-Service (QoS) abilities  |\n   |               \
    \  |           | (WME-Wireless Multimedia Extension) |\n   |                 |\
    \           |  and security abilities             |\n   |                 |  \
    \         | (IEEE 802.11i) are included         |\n   |                 |    \
    \       |                                     |\n   | Conf-If-Data    | 3    \
    \     | Physical Layer (PHY) information for|\n   |                 |        \
    \   | each wireless interface             |\n   |                 |          \
    \ |                                     |\n   | Conf-WTP-Data   | 4         |\
    \ Information regarding logical       |\n   |                 |           | groups\
    \ on a per-logical group basis |\n   |                 |           | (e.g., per-virtual\
    \ AP)              |\n   |                 |           |                     \
    \                |\n   | Cap-to-WTP      | 5         | Setup data sent to WTPs\
    \ by an AC on |\n   |                 |           | a per-logical group basis\
    \           |\n   |                 |           |                            \
    \         |\n   | QoS-Value       | 6         | QoS setup (access categories)\
    \       |\n   |                 |           |                                \
    \     |\n   |Timer-Init-Value | 7         | Initial values of timers such as \
    \   |\n   |                 |           | aging, echo interval, etc.         \
    \ |\n   |                 |           |                                     |\n\
    \   | Terminal-Data   | 8         | Information relevant to wireless    |\n  \
    \ |                 |           | terminals - Basic Service Set       |\n   |\
    \                 |           | Identifier (BSSID), association ID, |\n   |  \
    \               |           | etc.                                |\n   |    \
    \             |           |                                     |\n   | BSSID\
    \           | 9         | BSSID, and terminal MAC address     |\n   |        \
    \         |           |                                     |\n   | Encryption-Data\
    \ | 10        | Details of the security framework - |\n   |                 |\
    \           | cipher suit, operation mode, etc.   |\n   |                 |  \
    \         |                                     |\n   | EAP-Frame       | 11 \
    \       | Extensible Authentication Protocol  |\n   |                 |      \
    \     | (EAP) frame                         |\n   |                 |        \
    \   |                                     |\n   | Statistics      | 12       \
    \ | Various statistics information -    |\n   |                 |           |\
    \ transmission attempts, Frame Check  |\n   |                 |           | Sequence\
    \ (FCS) errors, etc.         |\n   |                 |           |           \
    \                          |\n   | Interface-Error | 13        | Type of wireless\
    \ interface failure  |\n   |                 |           |                   \
    \                  |\n   | FROM-Error      | 14        | Flash ROM Error information\
    \         |\n   |                 |           |                              \
    \       |\n   | QoS-Capability  | 15        | Network congestion information \
    \     |\n   |                 |           |                                  \
    \   |\n   | TFTP-Data       | 16        | Firmware-related details           \
    \ |\n   |                 |           |                                     |\n\
    \   | Result          | 17        | Result of protocol operations -     |\n  \
    \ |                 |           | success or failure                  |\n   |\
    \                 |           |                                     |\n   | OID\
    \             | 18        | Simple Network Management Protocol  |\n   |      \
    \           |           | (SNMP) Object Identifiers (OIDs)    |\n   |        \
    \         |           |                                     |\n   | GTK-Flag \
    \       | 19        | Determines type of Group Temporal   |\n   |            \
    \     |           | Key (GTK) - new or existing         |\n   +-----------------+-----------+-------------------------------------+\n\
    \   Each message element comprises a number of information items that are\n  \
    \ detailed below.  The length of each information item is specified in\n   bytes.\n\
    \   WTP-Info:\n   Information included in the WTP-Info message element is provided\
    \ on a\n   per-WTP basis, i.e., each WTP exchanges one WTP-Info message element.\n\
    \   +--------------+----------+----------------+------------------------+\n  \
    \ | Item         | Length   | Syntax         | Description            |\n   +--------------+----------+----------------+------------------------+\n\
    \   | Manufacturer | 8        | DisplayString  | Manufacturer ID        |\n  \
    \ | ID           |          |                |                        |\n   |\
    \              |          |                |                        |\n   | MAC\
    \ Address  | 6        | PhyAddress     | WTP MAC Address        |\n   |      \
    \        |          |                |                        |\n   | Firmware\
    \     | 8        | DisplayString  | Firmware version of    |\n   | Version   \
    \   |          |                | WTP                    |\n   |             \
    \ |          |                |                        |\n   | Start Time   |\
    \ 4        | TimeTicks      | Starting time of WTP   |\n   |              |  \
    \        |                | (UNIX Time)            |\n   +--------------+----------+----------------+------------------------+\n\
    \   Cap-from-WTP:\n   Information included in the Cap-from-WTP message element\
    \ is provided\n   on a per-WTP basis, i.e., each WTP exchanges one Cap-from-WTP\
    \ message\n   element.\n   +--------------+----------+----------------+------------------------+\n\
    \   | Item         | Length   | Syntax         | Description            |\n  \
    \ +--------------+----------+----------------+------------------------+\n   |\
    \ 802.11e Cap  | 2        | Integer        | Length of 802.11e      |\n   | Length\
    \       |          |                | capabilities           |\n   |         \
    \     |          |                |                        |\n   | 802.11e   \
    \   | Variable | OCTETString    | 802.11e capabilities   |\n   | Capabilities\
    \ |          |                | of WTP. If WTP does    |\n   |              |\
    \          |                | not have such          |\n   |              |  \
    \        |                | capabilities, this     |\n   |              |    \
    \      |                | field is filled with   |\n   |              |      \
    \    |                | '0'                    |\n   |              |        \
    \  |                |                        |\n   | 802.11i Cap  | 2        |\
    \ Integer        | Length of 802.11i      |\n   | Length       |          |  \
    \              | capabilities           |\n   |              |          |    \
    \            |                        |\n   | 802.11i      | Variable | OCTETString\
    \    | 802.11i capabilities   |\n   | Capabilities |          |              \
    \  | of WTP. If WTP does    |\n   |              |          |                |\
    \ not have such          |\n   |              |          |                | capabilities,this\
    \      |\n   |              |          |                | field is filled with\
    \   |\n   |              |          |                | '0'                   \
    \ |\n   |              |          |                |                        |\n\
    \   | AuthType     | 2        | OCTETString    | Type of authentication |\n  \
    \ |              |          |                | mechanism used between |\n   |\
    \              |          |                | WTPs and the AC        |\n   +--------------+----------+----------------+------------------------+\n\
    \   Conf-If-Data\n   The Conf-If-Data message element relates to the wireless\
    \ interface.\n   A WTP with many interfaces will include corresponding numbers\
    \ of\n   Conf-If-Data message elements within its control messages to the AC.\n\
    \   Conf-If-Data message elements are indexed by the If ID information\n   item.\n\
    \   +--------------+----------+----------------+------------------------+\n  \
    \ | Item         | Length   | Syntax         | Description            |\n   +--------------+----------+----------------+------------------------+\n\
    \   | If ID        | 1        | Integer        | Denotes identification |\n  \
    \ |              |          |                | of a wireless          |\n   |\
    \              |          |                | interface              |\n   |  \
    \            |          |                |                        |\n   | Current\
    \      | 1        | Integer        | Current Power Level    |\n   | Power    \
    \    |          |                | ('1' = Max; '2' = 1/2; |\n   |            \
    \  |          |                | '3' = 1/4; '4' = 1/8   |\n   |              |\
    \          |                |                        |\n   | Radio        | 1\
    \        | Integer        | Radio channel of       |\n   | Channel      |    \
    \      |                | operation              |\n   |              |      \
    \    |                |                        |\n   | 2Dot4Mode    | 1      \
    \  | Integer        | Interface mode in      |\n   |              |          |\
    \                | 2.4GHz. ('1' = IEEE    |\n   |              |          |  \
    \              | 802.11b; '2' = IEEE    |\n   |              |          |    \
    \            | 802.11g; '3' = Both)   |\n   +--------------+----------+----------------+------------------------+\n\
    \   Conf-WTP-Data\n   Configuration information is provided on the basis of logical\
    \ groups\n   such as virtual APs.  There are multiple Conf-WTP-Data message\n\
    \   elements to address the many logical groups within a WLAN managed by\n   WiCoP.\
    \  Conf-WTP-Data message elements are indexed by the BSSID\n   information item.\n\
    \   +--------------+----------+----------------+------------------------+\n  \
    \ | Item         | Length   | Syntax         | Description            |\n   +--------------+----------+----------------+------------------------+\n\
    \   | BSSID        | 6        | OCTETString    | BSSID                  |\n  \
    \ |              |          |                |                        |\n   |\
    \ ESSID        | 32       | OCTETString    | Extended Service Set   |\n   |  \
    \            |          |                | Identifier (ESSID)     |\n   |    \
    \          |          |                |                        |\n   | BSSID\
    \ -      | 32       | OCTETString    | Mapping for logical    |\n   | TunnelID\
    \     |          |                | groups across BSSID    |\n   |           \
    \   |          |                | and WiCoP tunnels      |\n   |             \
    \ |          |                |                        |\n   | Beacon       |\
    \ 1        | Integer        | Time interval between  |\n   | Period       |  \
    \        |                | Beacon transmissions   |\n   |              |    \
    \      |                |                        |\n   | DTIM Period  | 1    \
    \    | Integer        | Delivery Traffic       |\n   |              |        \
    \  |                | Indication Message     |\n   |              |          |\
    \                | (DTIM) period of       |\n   |              |          |  \
    \              | Beacon transmissions   |\n   |              |          |    \
    \            |                        |\n   | AnyRejectFla | 1        | Integer\
    \        | Flag indicating WTP    |\n   | g            |          |          \
    \      | rejection of any Probe |\n   |              |          |            \
    \    | Request within any     |\n   |              |          |              \
    \  | SSID - ('1' =          |\n   |              |          |                |\
    \ Rejected; '2' = Not    |\n   |              |          |                | Rejected)\
    \              |\n   |              |          |                |            \
    \            |\n   | SSID Stealth | 1        | Integer        | Flag indicating\
    \        |\n   | Flag         |          |                | inclusion of ESSID\
    \     |\n   |              |          |                | within Beacon Frames\
    \   |\n   |              |          |                | ('1' = ESSID included;\
    \ |\n   |              |          |                | '2' = ESSID not        |\n\
    \   |              |          |                | included)              |\n  \
    \ |              |          |                |                        |\n   |\
    \ Operation    | 2        | Integer        | Data rates supported   |\n   | Rate\
    \ Set     |          |                | by WTP for terminal    |\n   |       \
    \       |          |                | being added using a    |\n   |         \
    \     |          |                | 12-bit format for 1.1, |\n   |           \
    \   |          |                | 2.2, 3.55, 4.6, 5.9,   |\n   |             \
    \ |          |                | 6.11, 7.12, 8.18,      |\n   |              |\
    \          |                | 9.24, 10.36, 11.48,    |\n   |              |  \
    \        |                | and 12.54 Mbps         |\n   |              |    \
    \      |                |                        |\n   | Encryption   | 1    \
    \    | Integer        | Encryption Type -      |\n   | Type         |        \
    \  |                | &#65288;'1' = OFF; '2' |\n   |              |          |\
    \                | = WEP40; '3' = WEP104; |\n   |              |          |  \
    \              | '4' = WEP128)          |\n   |              |          |    \
    \            |                        |\n   | Encryption   | 16       | OCTETString\
    \    | Static Encryption Key  |\n   | Key          |          |              \
    \  |                        |\n   +--------------+----------+----------------+------------------------+\n\
    \   Cap-to-WTP:\n   Capabilities information is provided on the basis of logical\
    \ groups\n   such as virtual APs.  So, there are multiple Cap-to-WTP message\n\
    \   elements to address the many logical groups within a WLAN managed by\n   WiCoP.\
    \  Conf-to-WTP message elements are indexed by the BSSID\n   information item.\
    \  If logical groups are created by other means,\n   their corresponding identifier\
    \ is used as the index.\n   +--------------+----------+----------------+------------------------+\n\
    \   | Item         | Length   | Syntax         | Description            |\n  \
    \ +--------------+----------+----------------+------------------------+\n   |\
    \ BSSID        | 6        | OCTETString    | BSSID                  |\n   |  \
    \            |          |                |                        |\n   | 802.11e\
    \ Cap  | 2        | Integer        | Length of 802.11e      |\n   | Length   \
    \    |          |                | capabilities           |\n   |            \
    \  |          |                |                        |\n   | 802.11e      |\
    \ Variable | OCTETString    | 802.11e capabilities   |\n   | Capabilities |  \
    \        |                | of WTP. If WTP does    |\n   |              |    \
    \      |                | not have such          |\n   |              |      \
    \    |                | capabilities, this     |\n   |              |        \
    \  |                | field is filled with   |\n   |              |          |\
    \                | '0'                    |\n   |              |          |  \
    \              |                        |\n   | 802.11i Cap  | 2        | Integer\
    \        | Length of 802.11i      |\n   | Length       |          |          \
    \      | capabilities           |\n   |              |          |            \
    \    |                        |\n   | 802.11i      | Variable | OCTETString  \
    \  | 802.11i capabilities   |\n   | Capabilities |          |                |\
    \ of WTP.  If WTP does   |\n   |              |          |                | not\
    \ have such          |\n   |              |          |                | capabilities,\
    \ this     |\n   |              |          |                | field is filled\
    \ with   |\n   |              |          |                | '0'              \
    \      |\n   +--------------+----------+----------------+------------------------+\n\
    \   QoS-Value:\n   QoS parameters are assigned for each logical group to address\
    \ their\n   respective individual conditions and requirements.  QoS-Value message\n\
    \   elements are provided on a per-logical group basis.  They are indexed\n  \
    \ by the BSSID information item.  If logical groups are created by\n   other means,\
    \ their corresponding identifier is used as the index.\n   +--------------+----------+----------------+------------------------+\n\
    \   | Item         | Length   | Syntax         | Description            |\n  \
    \ +--------------+----------+----------------+------------------------+\n   |\
    \ BSSID        | 6        | OCTETString    | BSSID                  |\n   |  \
    \            |          |                |                        |\n   | WTP\
    \ AC_BE    | 2        | Integer        | AC Parameters Record   |\n   |      \
    \        |          |                | AC_BE in WTP           |\n   |        \
    \      |          |                |                        |\n   | WTP AC_BK\
    \    | 2        | Integer        | AC Parameters Record   |\n   |            \
    \  |          |                | AC_BK in WTP           |\n   |              |\
    \          |                |                        |\n   | WTP AC_VI    | 2\
    \        | Integer        | AC Parameters Record   |\n   |              |    \
    \      |                | AC_VI in WTP           |\n   |              |      \
    \    |                |                        |\n   | WTP AC_VO    | 2      \
    \  | Integer        | AC Parameters Record   |\n   |              |          |\
    \                | AC_VO in WTP           |\n   |              |          |  \
    \              |                        |\n   | TE AC_BE     | 2        | Integer\
    \        | AC Parameters Record   |\n   |              |          |          \
    \      | AC_BE in terminals     |\n   |              |          |            \
    \    |                        |\n   | TE AC_BK     | 2        | Integer      \
    \  | AC Parameters Record   |\n   |              |          |                |\
    \ AC_BK in terminals     |\n   |              |          |                |  \
    \                      |\n   | TE AC_VI     | 2        | Integer        | AC Parameters\
    \ Record   |\n   |              |          |                | AC_VI in terminals\
    \     |\n   |              |          |                |                     \
    \   |\n   | TE AC_VO     | 2        | Integer        | AC Parameters Record  \
    \ |\n   |              |          |                | AC_VO in terminals     |\n\
    \   +--------------+----------+----------------+------------------------+\n  \
    \ Timer-Init-Value:\n   WiCoP timers are used for the WTP as a whole.  So, the\
    \ Timer-Init-\n   Value message element is provided on a per-WTP basis.\n   +--------------+----------+----------------+------------------------+\n\
    \   | Item         | Length   | Syntax         | Description            |\n  \
    \ +--------------+----------+----------------+------------------------+\n   |\
    \ BSSID        | 6        | OCTETString    | BSSID                  |\n   |  \
    \            |          |                |                        |\n   | Response\
    \     | 4        | Integer        | Initial value of       |\n   | Timer     \
    \   |          |                | Response Timer         |\n   |             \
    \ |          |                |                        |\n   | Active       |\
    \ 4        | Integer        | Initial value of       |\n   | Presence     |  \
    \        |                | Active Presence Timer  |\n   | Timer        |    \
    \      |                |                        |\n   |              |      \
    \    |                |                        |\n   | Feedback     | 4      \
    \  | Integer        | Initial value of       |\n   | Interval     |          |\
    \                | Feedback Interval      |\n   | Timer        |          |  \
    \              | Timer                  |\n   +--------------+----------+----------------+------------------------+\n\
    \   Terminal-Data:\n   The Terminal-Data message element is applicable for both\
    \ Local MAC\n   and Split MAC WTP designs.  In the case of Local MAC, Terminal-Data\n\
    \   is sent from WTPs to the AC.  In the case of Split MAC, Terminal-Data\n  \
    \ is sent from the AC to WTPs.  So, the direction of usage depends on\n   the\
    \ type of WTP at which wireless terminal operations are performed.\n   Some information\
    \ items may be optional for use with specific WTP\n   designs.\n   +--------------+----------+----------------+------------------------+\n\
    \   | Item         | Length   | Syntax         | Description            |\n  \
    \ +--------------+----------+----------------+------------------------+\n   |\
    \ BSSID        | 6        | PhyAddress     | BSSID in which         |\n   |  \
    \            |          |                | terminal is being      |\n   |    \
    \          |          |                | added                  |\n   |      \
    \        |          |                |                        |\n   | MAC Address\
    \  | 6        | PhyAddress     | MAC address of         |\n   |              |\
    \          |                | terminal being added   |\n   |              |  \
    \        |                |                        |\n   | Association  | 2  \
    \      | Integer        | Association ID of      |\n   | ID           |      \
    \    |                | terminal being added   |\n   |              |        \
    \  |                |                        |\n   | Operation    | 2        |\
    \ Integer        | Data rates supported   |\n   | Rate Set     |          |  \
    \              | by WTP for terminal    |\n   |              |          |    \
    \            | being added using a    |\n   |              |          |      \
    \          | 12-bit format for 1.1, |\n   |              |          |        \
    \        | 2.2, 3.55, 4.6, 5.9,   |\n   |              |          |          \
    \      | 6.11, 7.12, 8.18,      |\n   |              |          |            \
    \    | 9.24, 10.36, 11.48,    |\n   |              |          |              \
    \  | and 12.54 Mbps         |\n   |              |          |                |\
    \                        |\n   | Listen       | 2        | Integer        | Listen\
    \ period          |\n   | Period       |          |                |         \
    \               |\n   +--------------+----------+----------------+------------------------+\n\
    \   BSSID:\n   The BSSID message element is used to identify logical groups within\
    \ a\n   WLAN.  WiCoP may be extended for other types of logical groups by\n  \
    \ simply including additional message elements.\n   +--------------+----------+----------------+------------------------+\n\
    \   | Item         | Length   | Syntax         | Description            |\n  \
    \ +--------------+----------+----------------+------------------------+\n   |\
    \ BSSID        | 6        | PhyAddress     | BSSID in which         |\n   |  \
    \            |          |                | terminal is being      |\n   |    \
    \          |          |                | added                  |\n   |      \
    \        |          |                |                        |\n   | MAC Address\
    \  | 6        | PhyAddress     | MAC address of         |\n   |              |\
    \          |                | terminal being added   |\n   +--------------+----------+----------------+------------------------+\n\
    \   Encryption-Data:\n   The Encryption-Data message element contains information\
    \ relevant for\n   configuring security keys at WTPs.  It is used in architectures\
    \ in\n   which the authentication and encryption points are located in\n   distinct\
    \ WLAN entities.\n   +--------------+----------+----------------+------------------------+\n\
    \   | Item         | Length   | Syntax         | Description            |\n  \
    \ +--------------+----------+----------------+------------------------+\n   |\
    \ MAC Address  | 6        | PhyAddress     | MAC address of         |\n   |  \
    \            |          |                | terminal               |\n   |    \
    \          |          |                |                        |\n   | Operation\
    \    | 1        | Integer        | Operational Mode ('1'  |\n   |            \
    \  |          |                | = Set Key; '2' =       |\n   |              |\
    \          |                | Delete Key)            |\n   |              |  \
    \        |                |                        |\n   | Key Index    | 1  \
    \      | Integer        | Key Index - valid when |\n   |              |      \
    \    |                | Operational Mode = Set |\n   |              |        \
    \  |                | Key                    |\n   |              |          |\
    \                |                        |\n   | Key Flag     | 1        | Integer\
    \        | Key Flag ('1' =        |\n   |              |          |          \
    \      | Unicast Key or PTK;    |\n   |              |          |            \
    \    | '2' = Broadcast Key or |\n   |              |          |              \
    \  | GTK) - valid only when |\n   |              |          |                |\
    \ Operational Mode = Set |\n   |              |          |                | Key\
    \                    |\n   |              |          |                |      \
    \                  |\n   | Cipher Suit  | 1        | Integer        | Encryption\
    \ Type ('1' = |\n   |              |          |                | WEP40; '2' =\
    \ WEP104;   |\n   |              |          |                | '3' = WEP128; '4'\
    \ =    |\n   |              |          |                | TKIP; '5' = AES) - \
    \    |\n   |              |          |                | valid only when      \
    \  |\n   |              |          |                | Operational Mode = Set |\n\
    \   |              |          |                | Key                    |\n  \
    \ |              |          |                |                        |\n   |\
    \ Key          | 32       | OCTETString    | Key body - valid only  |\n   |  \
    \            |          |                | when Operational Mode  |\n   |    \
    \          |          |                | = Set Key              |\n   +--------------+----------+----------------+------------------------+\n\
    \   EAP-Frame:\n   The EAP-Frame message element is used to carry EAP frames used\
    \ in the\n   configuration and management of the WLAN.\n   +--------------+----------+----------------+------------------------+\n\
    \   | Item         | Length   | Syntax         | Description            |\n  \
    \ +--------------+----------+----------------+------------------------+\n   |\
    \ MAC Address  | 6        | PhyAddress     | MAC address of         |\n   |  \
    \            |          |                | terminal               |\n   |    \
    \          |          |                |                        |\n   | EAP  \
    \        | Variable | OCTETString    | EAP Frames             |\n   +--------------+----------+----------------+------------------------+\n\
    \   Statistics:\n   Statistics information covers all aspects of WTPs.  As such,\
    \ this\n   message element is provided on a per-WTP basis.  WiCoP messages\n \
    \  containing the Statistics message element simultaneously serve as\n   keepalive\
    \ signals between WTPs and the AC.\n   +--------------+----------+----------------+------------------------+\n\
    \   | Item         | Length   | Syntax         | Description            |\n  \
    \ +--------------+----------+----------------+------------------------+\n   |\
    \ OutOctet     | 4        | Counter 32     | Octet number of frame  |\n   |  \
    \            |          |                | WTP transmits          |\n   |    \
    \          |          |                |                        |\n   | Transmit\
    \     | 4        | Counter 32     | Total number of frames |\n   | Count     \
    \   |          |                | transmitted by WTP     |\n   |             \
    \ |          |                |                        |\n   | Successful   |\
    \ 4        | Counter 32     | Total number of ACKs   |\n   | Transmit     |  \
    \        |                | received               |\n   | Count        |    \
    \      |                |                        |\n   |              |      \
    \    |                |                        |\n   | ACK Failure  | 4      \
    \  | Counter 32     | Total number of failed |\n   | Count        |          |\
    \                | ACKs                   |\n   |              |          |  \
    \              |                        |\n   | InOctets     | 4        | Counter\
    \ 32     | Octet number of frame  |\n   |              |          |          \
    \      | WTP receives           |\n   |              |          |            \
    \    |                        |\n   | Receive      | 4        | Counter 32   \
    \  | Total number of frames |\n   | Count        |          |                |\
    \ received by WTP        |\n   |              |          |                |  \
    \                      |\n   | Receive      | 4        | Counter 32     | Total\
    \ number of        |\n   | Discard      |          |                | received\
    \ frames that   |\n   |              |          |                | are discarded\
    \          |\n   |              |          |                |                \
    \        |\n   | Retransmissi | 4        | Counter 32     | Number of WTP    \
    \      |\n   | on Count     |          |                | retransmission     \
    \    |\n   |              |          |                | attempts\"           \
    \   |\n   |              |          |                |                       \
    \ |\n   | Duplicate    | 4        | Counter 32     | Number of duplicate    |\n\
    \   | Receive      |          |                | frames received by WTP |\n  \
    \ | Count        |          |                |                        |\n   |\
    \              |          |                |                        |\n   | FCS\
    \ Error    | 4        | Counter32      | Number of frames       |\n   | Receive\
    \      |          |                | received with FCS      |\n   | Count    \
    \    |          |                | errors                 |\n   |            \
    \  |          |                |                        |\n   | Unknown      |\
    \ 4        | Counter 32     | Number of unknown      |\n   | Frame        |  \
    \        |                | protocol frames        |\n   | Receive      |    \
    \      |                | received               |\n   | Count        |      \
    \    |                |                        |\n   |              |        \
    \  |                |                        |\n   | Beacon       | 4        |\
    \ Counter 32     | Number of transmitted  |\n   | Transmit     |          |  \
    \              | Beacon frames          |\n   | Count        |          |    \
    \            |                        |\n   |              |          |      \
    \          |                        |\n   | Probe        | 4        | Counter\
    \ 32     | Number of transmitted  |\n   | Transmit     |          |          \
    \      | Probe Response frames  |\n   | Count        |          |            \
    \    |                        |\n   |              |          |              \
    \  |                        |\n   | Probe        | 4        | Counter 32     |\
    \ Number of received     |\n   | Receive      |          |                | Probe\
    \ Response frames  |\n   | Count        |          |                |        \
    \                |\n   |              |          |                |          \
    \              |\n   | Decrypt CRC  | 4        | Counter 32     | Number of received\
    \     |\n   | Error Count  |          |                | frames that cannot  \
    \   |\n   |              |          |                | decrypt               \
    \ |\n   +--------------+----------+----------------+------------------------+\n\
    \   Interface-Error:\n   This message element is used to exchange information\
    \ on error\n   conditions related to the wireless interface.\n   +--------------+----------+----------------+------------------------+\n\
    \   | Item         | Length   | Syntax         | Description            |\n  \
    \ +--------------+----------+----------------+------------------------+\n   |\
    \ Interface    | 1        | Integer        | Interface ID           |\n   | Index\
    \        |          |                |                        |\n   |        \
    \      |          |                |                        |\n   | Error Type\
    \   | 1        | Integer        | Type of error ('1' =   |\n   |             \
    \ |          |                | Unrecoverable; '2' =   |\n   |              |\
    \          |                | Recoverable)           |\n   +--------------+----------+----------------+------------------------+\n\
    \   FROM-Error:\n   The FROM-Error message element is used to exchange information\
    \ on\n   error conditions related to flash ROMs in WTPs or the AC.\n   +--------------+----------+----------------+------------------------+\n\
    \   | Item         | Length   | Syntax         | Description            |\n  \
    \ +--------------+----------+----------------+------------------------+\n   |\
    \ FROM Index   | 1        | Integer        | FROM ID                |\n   |  \
    \            |          |                |                        |\n   | Error\
    \ Type   | 1        | Integer        | Type of error ('1' =   |\n   |        \
    \      |          |                | Unrecoverable; '2' =   |\n   |          \
    \    |          |                | Recoverable)           |\n   +--------------+----------+----------------+------------------------+\n\
    \   QoS Capability:\n   The QoS-Capability message element is used to exchange\
    \ information\n   concerning the Enhanced Distributed Channel Access (EDCA) and\
    \ HCF\n   Controlled Channel Access (HCCA) capabilities of WTPs.\n   +--------------+----------+----------------+------------------------+\n\
    \   | Item         | Length   | Syntax         | Description            |\n  \
    \ +--------------+----------+----------------+------------------------+\n   |\
    \ EDCA         | 1        | Integer        | EDCA Capability ('1' = |\n   |  \
    \            |          |                | Capable; '2' = Not     |\n   |    \
    \          |          |                | capable)               |\n   |      \
    \        |          |                |                        |\n   | HCCA   \
    \      | 1        | Integer        | HCCA Capability ('1' = |\n   |          \
    \    |          |                | Capable; '2' = Not     |\n   |            \
    \  |          |                | capable)               |\n   +--------------+----------+----------------+------------------------+\n\
    \   TFTP-Data:\n   This message element is for firmware data from an AC to WTPs.\n\
    \   +--------------+----------+----------------+------------------------+\n  \
    \ | Item         | Length   | Syntax         | Description            |\n   +--------------+----------+----------------+------------------------+\n\
    \   | TFTP Data    | Variable | OCTETString    | Details of Trivial File|\n  \
    \ |              |          |                | Transfer Protocol      |\n   |\
    \              |          |                | (TFTP)                 |\n   +--------------+----------+----------------+------------------------+\n\
    \   Result:\n   The Result message element is used in all WiCoP response messages\
    \ to\n   indicate the status of WiCoP request messages.\n   +--------------+----------+----------------+------------------------+\n\
    \   | Item         | Length   | Syntax         | Description            |\n  \
    \ +--------------+----------+----------------+------------------------+\n   |\
    \ Result Code  | 1        | Integer        | '1' = OK; '2' = NG     |\n   +--------------+----------+----------------+------------------------+\n\
    \   OID:\n   The OID message element is used for general configuration information\n\
    \   specified by OIDs.\n   +--------------+----------+----------------+------------------------+\n\
    \   | Item         | Length   | Syntax         | Description            |\n  \
    \ +--------------+----------+----------------+------------------------+\n   |\
    \ Length       | 1        | Integer        | Length of OID String   |\n   |  \
    \            |          |                | and OID Value          |\n   |    \
    \          |          |                |                        |\n   | OID String\
    \   | Variable | OCTETString    | Object Identifier that |\n   |             \
    \ |          |                | is assigned according  |\n   |              |\
    \          |                | to Basic Encoding      |\n   |              |  \
    \        |                | Rules (BER)            |\n   |              |    \
    \      |                |                        |\n   | Value        | Variable\
    \ | OCTETString    | Value                  |\n   +--------------+----------+----------------+------------------------+\n\
    \   GTK-Flag:\n   The GTK-Flag message element is used to inform the WTP on the\
    \ type of\n   GTK used and correspondingly how the KeyMIC is to be computed.\n\
    \   +--------------+----------+----------------+------------------------+\n  \
    \ | Item         | Length   | Syntax         | Description            |\n   +--------------+----------+----------------+------------------------+\n\
    \   | GTK Flag     | 1        | Integer        | Determines the type of |\n  \
    \ |              |          |                | GTK ('1' = New; '2' =  |\n   |\
    \              |          |                | Existing)              |\n   +--------------+----------+----------------+------------------------+\n"
- title: 4.2.3.  WiCoP Control Message Description
  contents:
  - "4.2.3.  WiCoP Control Message Description\n   Message: Capabilities\n   Direction:\
    \ WTP -> AC\n   Type: Request\n   Description: WTPs send a Capabilities message\
    \ upon transitioning from\n   the Initialization state to the Capabilities Exchange\
    \ state.  The\n   message serves to discover and identify the controlling AC of\
    \ the\n   WLAN and to provide it with identification and capabilities\n   information.\
    \  In the IEEE 802.11 use-case, the Capabilities message\n   also specifies the\
    \ WTP's IEEE 802.11e and IEEE 802.11i features.\n   TLV: The Capabilities message\
    \ includes message elements of types 1\n   and 2.\n                          \
    \ +----------------+\n                           |  Capabilities  |\n        \
    \                   +----------------+\n                           |    WTP-Info\
    \    |\n                           |                |\n                      \
    \     |  Cap-from-WTP  |\n                           +----------------+\n   Message:\
    \ Capabilities Response\n   Direction: AC -> WTP\n   Type: Response\n   Description:\
    \ This message is sent by an AC after examining the\n   compatibility of the WTP\
    \ and its capabilities.  The compatibility is\n   with respect to the MAC architecture\
    \ that can be supported by the AC.\n   If the WTP is determined to be compatible,\
    \ the Capabilities Response\n   message also contains information on the capabilities\
    \ of the AC.\n   TLV: The Capabilities Response message includes message elements\
    \ of\n   types 5 and 17.  The Cap-to-WTP message elements are distinguished\n\
    \   based on BSSIDs to represent different logical groups.\n                 \
    \      +-----------------------+\n                       | Capabilities Response\
    \ |\n                       +-----------------------+\n                      \
    \ |      Cap-to-WTP 1     |\n                       |                       |\n\
    \                       |     Cap-to-WTP ...    |\n                       |  \
    \                     |\n                       |      Cap-to-WTP n     |\n  \
    \                     |                       |\n                       |    \
    \    Result         |\n                       +-----------------------+\n   Message:\
    \ Connection\n   Direction: WTP -> AC\n   Type: Request\n   Description: The Connection\
    \ message initiates the mutual security\n   association between an AC and WTPs.\
    \  This message carries the first\n   message of the chosen security protocol.\
    \  The specific security\n   mechanism for the authentication is out of scope\
    \ of the WiCoP\n   specifications.\n   TLV: The Connection message includes message\
    \ elements of type 2.\n                           +---------------+\n        \
    \                   |   Connection  |\n                           +---------------+\n\
    \                           | Cap-from-WTP  |\n                           +---------------+\n\
    \   Message: Connection Response\n   Direction: AC -> WTP\n   Type: Response\n\
    \   Description: After completion of the security protocol exchange, this\n  \
    \ message indicates the result of the WTP-AC security association.  If\n   successful,\
    \ it also represents the admission of the WTP into the\n   WLAN.\n   TLV: Type\
    \ 17 message element is included.\n                        +---------------------+\n\
    \                        | Connection Response |\n                        +---------------------+\n\
    \                        |       Result        |\n                        +---------------------+\n\
    \   Message: Configuration Request\n   Direction: WTP -> AC\n   Type: Request\n\
    \   Description: This message starts the Configuration state for the WTP.\n  \
    \ It is a request for configuration information from the WTPs to the\n   AC.\n\
    \   Message: Configuration Response\n   Direction: AC -> WTP\n   Type: Response\n\
    \   Description: This is an acknowledgement for the Configuration Request\n  \
    \ message.\n   TLV: Type 17 message element is included.\n                   \
    \    +------------------------+\n                       | Configuration Response\
    \ |\n                       +------------------------+\n                     \
    \  |         Result         |\n                       +------------------------+\n\
    \   Message: Configuration Data\n   Direction: AC -> WTP\n   Type: Request\n \
    \  Description: Configuration information including operational\n   parameters,\
    \ QoS settings, and timer values is sent using the\n   Configuration Data message.\
    \  This message is also used for\n   configuration updates in the Operation state\
    \ of WiCoP.\n   TLV: This message includes message elements of types 3, 4, 5,\
    \ 6, and\n   7.  The Conf-WTP-Data and QoS-Value message elements are identified\n\
    \   by BSSIDs to denote logical groups, while the Conf-If-Data message\n   elements\
    \ are identified by If-IDs to denote multiple wireless radios.\n             \
    \           +---------------------+\n                        |  Configuration\
    \ Data |\n                        +---------------------+\n                  \
    \      |   Conf-If-Data 1    |\n                        |                    \
    \ |\n                        |  Conf-If-Data ...   |\n                       \
    \ |                     |\n                        |   Conf-If-Data n    |\n \
    \                       |                     |\n                        |   Conf-WTP-Data\
    \ 1   |\n                        |                     |\n                   \
    \     |  Conf-WTP-Data ...  |\n                        |                     |\n\
    \                        |   Conf-WTP-Data n   |\n                        |  \
    \                   |\n                        |     Cap-to-WTP 1    |\n     \
    \                   |                     |\n                        |    Cap-to-WTP\
    \ ...   |\n                        |                     |\n                 \
    \       |     Cap-to-WTP n    |\n                        |                   \
    \  |\n                        |     QoS-Value 1     |\n                      \
    \  |                     |\n                        |    QoS-Value ...    |\n\
    \                        |                     |\n                        |  \
    \   QoS-Value n     |\n                        |                     |\n     \
    \                   |  Timer-Init-Value   |\n                        +---------------------+\n\
    \   Message: Configuration Data Response\n   Direction: WTP -> AC\n   Type: Response\n\
    \   Description: This is an acknowledgement for the Configuration Data\n   message.\n\
    \   TLV: Type 17 message element is included.\n                    +-----------------------------+\n\
    \                    | Configuration Data Response |\n                    +-----------------------------+\n\
    \                    |           Result            |\n                    +-----------------------------+\n\
    \   Message: Configuration Trigger\n   Direction: AC -> WTP\n   Type: Request\n\
    \   Description: This message is used to trigger the activation of the\n   configuration\
    \ information sent in earlier Configuration messages.\n   Message: Configuration\
    \ Trigger Response\n   Direction: WTP -> AC\n   Type: Response\n   Description:\
    \ This is an acknowledgement of the Configuration Trigger.\n   This response message\
    \ is sent before activation of the configuration\n   information.\n   TLV: Message\
    \ elements of type 17 are included.\n                   +--------------------------------+\n\
    \                   | Configuration Trigger Response |\n                   +--------------------------------+\n\
    \                   |             Result             |\n                   +--------------------------------+\n\
    \   Message: Reset\n   Direction: AC -> WTP\n   Type: Request\n   Description:\
    \ This message from the AC instructs the WTP to clear\n   registers and revert\
    \ to initial conditions.\n   Message: Reset Response\n   Direction: WTP -> AC\n\
    \   Type: Response\n   Description: This is an acknowledgement for the Reset message\
    \ to the\n   AC.\n   TLV: Message elements of type 17 are included.\n        \
    \                   +----------------+\n                           | Reset Response\
    \ |\n                           +----------------+\n                         \
    \  |     Result     |\n                           +----------------+\n   Message:\
    \ Feedback\n   Direction: WTP <-> AC\n   Type: Request\n   Description:\n    \
    \    WTP: The Feedback message is used to send regular statistics\n          \
    \   information to the AC.  It also serves as a keepalive\n             indicator\
    \ used to update the Active Presence Timer\n             maintained by the AC.\n\
    \        AC:  The Feedback message is used to determine the active state\n   \
    \          of WTPs.\n   TLV: This message includes message elements of type 12.\n\
    \                            +-------------+\n                            |  \
    \ Feedback  |\n                            +-------------+\n                 \
    \           | Statistics  |\n                            +-------------+\n   Message:\
    \ Feedback Response\n   Direction: WTP <-> AC\n   Type: Response\n   Description:\
    \ This is an acknowledgement for Feedback messages.\n   TLV: Message elements\
    \ of type 17 are included.\n                         +-------------------+\n \
    \                        | Feedback Response |\n                         +-------------------+\n\
    \                         |      Result       |\n                         +-------------------+\n\
    \   Message: Firmware Download\n   Direction: AC -> WTP\n   Type: Request\n  \
    \ Description: This message is used to instruct WTPs to update their\n   firmware.\
    \  The message element contains information regarding the new\n   firmware.\n\
    \   TLV: Message elements of type 16 are included.\n                         +-------------------+\n\
    \                         | Firmware Download |\n                         +-------------------+\n\
    \                         |     TFTP-Data     |\n                         +-------------------+\n\
    \   Message: Firmware Download Response\n   Direction: WTP -> AC\n   Type: Request\
    \ Response\n   Description: This is an acknowledgement for the Firmware Download\n\
    \   message.\n   TLV: Message elements of type 17 are included.\n            \
    \         +----------------------------+\n                     | Firmware Download\
    \ Response |\n                     +----------------------------+\n          \
    \           |           Result           |\n                     +----------------------------+\n\
    \   Message: Notification\n   Direction: WTP <-> AC\n   Type: Request\n   Description:\
    \ This message is used to indicate non-periodic events.\n   It may be sent by\
    \ either WTPs or the AC.  Notification messages\n   indicate failures, non-periodic\
    \ changes, etc.\n   TLV: Message elements of types 13 and 14 are included.\n \
    \                         +------------------+\n                          |  \
    \ Notification   |\n                          +------------------+\n         \
    \                 | Interface-Error  |\n                          |          \
    \        |\n                          |    FROM-Error    |\n                 \
    \         +------------------+\n   Message: Notification Response\n   Direction:\
    \ WTP <-> AC\n   Type: Response\n   Description: This is an acknowledgement for\
    \ the Notification message.\n   It may be followed by Configuration messages to\
    \ rectify errors.\n   TLV: Message elements of type 17 are included.\n       \
    \                +-----------------------+\n                       | Notification\
    \ Response |\n                       +-----------------------+\n             \
    \          |        Result         |\n                       +-----------------------+\n\
    \   Message: Terminal Addition\n   Direction: WTP <-> AC\n   Type: Request\n \
    \  Description: This message may be sent from WTPs or the AC, depending\n   on\
    \ the WTP type in consideration.  In both cases, it is sent in\n   response to\
    \ an IEEE 802.11 association frame.\n   For Split MAC WTPs, Terminal Addition\
    \ is sent from the AC to the WTPs\n   and includes information on the wireless\
    \ terminal relevant to the\n   WTP.\n   For Local MAC WTPs, Terminal Addition\
    \ is sent from a WTP to the AC\n   and contains information on the wireless terminal\
    \ relevant to the AC.\n   TLV: Message elements of type 8 are included.\n    \
    \                     +-------------------+\n                         | Terminal\
    \ Addition |\n                         +-------------------+\n               \
    \          |   Terminal-Data   |\n                         +-------------------+\n\
    \   Message: Terminal Addition Response\n   Direction: WTP <-> AC\n   Type: Response\n\
    \   Description: This is an acknowledgement sent from either WTPs or the\n   AC,\
    \ depending on the WTP type in consideration.\n   TLV: Message elements of type\
    \ 17 are included.\n                     +----------------------------+\n    \
    \                 | Terminal Addition Response |\n                     +----------------------------+\n\
    \                     |           Result           |\n                     +----------------------------+\n\
    \   Message: Terminal Deletion\n   Direction: WTP <-> AC\n   Type: Request\n \
    \  Description: This message is sent in response to a disconnection of a\n   wireless\
    \ terminal.  It can be sent from WTPs or the AC.  In both\n   cases, Terminal\
    \ Deletion instructs the recipient to remove any state\n   information relating\
    \ to the specific wireless terminal.  The message\n   is sent in response to an\
    \ IEEE 802.11 disassociation frame, IEEE\n   802.11 deauthentication frame, or\
    \ due to the expiration of the Active\n   Presence Timer.\n   For Split MAC WTPs,\
    \ Terminal Deletion is sent from the AC to the\n   WTPs.\n   For Local MAC WTPs,\
    \ Terminal Deletion is sent from the WTPs to the\n   AC.\n   TLV: Message elements\
    \ of type 9 are included.\n                         +-------------------+\n  \
    \                       | Terminal Deletion |\n                         +-------------------+\n\
    \                         |       BSSID       |\n                         +-------------------+\n\
    \   Message: Terminal Deletion Response\n   Direction: WTP <-> AC\n   Type: Response\n\
    \   Description: This is an acknowledgement sent from either WTPs or the\n   AC,\
    \ depending on the WiCoP interface.\n   TLV: Message elements of type 17 are included.\n\
    \                     +----------------------------+\n                     | Terminal\
    \ Addition Response |\n                     +----------------------------+\n \
    \                    |           Result           |\n                     +----------------------------+\n\
    \   Message: Key Configuration\n   Direction: AC -> WTP\n   Type: Request\n  \
    \ Description: This message is used when authentication and encryption\n   points\
    \ are located in distinct WLAN entities.  WiCoP uses it in cases\n   where 'M'\
    \ = 0 and 'D' = 0 or where 'M' = 1 and 'D' = 1.  It is used\n   to configure security\
    \ key information from the AC to the WTPs.\n   TLV: The following message elements\
    \ are included for Key\n   Configuration.\n                         +-------------------+\n\
    \                         | Key Configuration |\n                         +-------------------+\n\
    \                         |     GTK-Flag      |\n                         |  \
    \                 |\n                         |  Encryption-Data  |\n        \
    \                 |                   |\n                         |     EAP-Frame\
    \     |\n                         +-------------------+\n   Message: Key Configuration\
    \ Response\n   Direction: WTP -> AC\n   Type: Response\n   Description: This is\
    \ an acknowledgement for the Key Configuration\n   message.\n   TLV: Message elements\
    \ of type 17 are included.\n                     +----------------------------+\n\
    \                     | Key Configuration Response |\n                     +----------------------------+\n\
    \                     |           Result           |\n                     +----------------------------+\n"
- title: 4.3.  WiCoP Data Packet
  contents:
  - "4.3.  WiCoP Data Packet\n   WiCoP data packets include the WiCoP common header\
    \ followed by a\n   payload.  Data packets are used to distinguish traffic from\
    \ control\n   when both control and data paths are identical.  Such a scenario\n\
    \   would involve data traffic of the WTPs traversing the AC.  However,\n   given\
    \ the diversity of large-scale WLAN deployments, there are\n   scenarios in which\
    \ data and control paths are distinct.  WiCoP can be\n   used in both cases.\n\
    \   The WiCoP data packet format is illustrated below in Figure 7,\n   together\
    \ with the WiCoP common header.\n   0                                        \
    \                      31\n   |                7               15            \
    \  23             |\n   |-------|-------|-------|-------|-------|-------|-------|-------|\n\
    \   |                                                               |\n   +---------------+-+-+-+-+-+-+-+-+-------------------------------+\n\
    \   |    Version    |M|D|C|R|E|F|L| |           Reserve             |\n   +---------------+-+-+-+-+-+-+-+-+-------------------------------+\n\
    \   |  Fragment ID  | Fragment No.  |           Length              |\n   +---------------+---------------+-------------------------------+\n\
    \   |                            Payload                            |\n   +---------------------------------------------------------------+\n\
    \                                 Figure 7\n"
- title: 4.4.  WiCoP Timers
  contents:
  - "4.4.  WiCoP Timers\n   WiCoP uses a number of timers to determine WLAN status\
    \ and maintain\n   system performance.  Timers are maintained by all WiCoP entities.\n"
- title: 4.4.1.  Active Presence Timer
  contents:
  - "4.4.1.  Active Presence Timer\n   The Active Presence Timer is used by each WiCoP\
    \ entity -- AC and WTPs\n   -- to verify the presence of each other.  The absence\
    \ of a reply to\n   the Feedback message within the expiration of the Active Presence\n\
    \   Timer indicates the corresponding entity is inactive.  Contingency\n   operations\
    \ such as reset are used in this case.  The value of the\n   Active Presence Timer\
    \ ranges from 10 to 300 seconds with a default\n   value of 30 seconds.\n"
- title: 4.4.2.  Feedback Interval
  contents:
  - "4.4.2.  Feedback Interval\n   Feedback messages are periodic with the frequency\
    \ defined by the\n   Feedback Interval.  The interval is set during WTP configuration.\
    \  It\n   has a value ranging from 1 to 100 seconds and a default value of 10\n\
    \   seconds.\n   The Feedback Interval timer sets the periodicity of WLAN system\n\
    \   audits.  So with this timer, the WLAN controller receives regular\n   information\
    \ on the state of the WLAN and all its WTPs.\n"
- title: 4.4.3.  Response Timer
  contents:
  - "4.4.3.  Response Timer\n   This is a general-purpose timer used to limit the\
    \ elapsed time\n   between transmission of a request message and receipt of a\n\
    \   corresponding response message.  The value of this timer ranges from\n   1\
    \ to 3 seconds with a default value of 1 second.\n"
- title: 4.4.4.  Wireless Connectivity Timer
  contents:
  - "4.4.4.  Wireless Connectivity Timer\n   This timer triggers any changes in wireless\
    \ connectivity.  WiCoP uses\n   this timer to send Notification and other messages\
    \ relating to\n   wireless conditions.  It is also used to trigger the disconnection\
    \ of\n   mobile terminals without disassociation.  The value of the Wireless\n\
    \   Connectivity Timer ranges from 1 minute to 86,400 minutes with a\n   default\
    \ value of 10 minutes.\n"
- title: 5.  WiCoP Processes
  contents:
  - "5.  WiCoP Processes\n   The processes of the Wireless LAN Control Protocol are\
    \ described in\n   this section with respect to the operational state in which\
    \ they\n   occur.\n"
- title: 5.1.  Initialization
  contents:
  - "5.1.  Initialization\n   The Initialization state represents the initial conditions\
    \ of WiCoP\n   entities.  WTPs and ACs in this state are powered on, run hardware\n\
    \   self-check tests, and reset network interfaces.\n   State transition: Initialization\
    \ -> Capabilities Exchange\n        WTP: Automatically upon detecting an active\
    \ network interface\n         AC: Upon receiving a Capabilities message from a\
    \ WTP\n"
- title: 5.2.  Capabilities Exchange
  contents:
  - "5.2.  Capabilities Exchange\n   The Capabilities Exchange state allows WTPs to\
    \ first find an AC and\n   then to exchange capabilities information with it.\n\
    \   WiCoP is designed to control WLANs with both Local MAC and Split MAC\n   WTPs.\
    \  The differences in their respective functional characteristics\n   are determined\
    \ in this state.\n   The WTP first broadcasts a Capabilities message as soon as\
    \ it\n   transitions from its Initialization state.  The Capabilities message\n\
    \   serves to discover ACs and contains information on its identity and\n   capabilities.\n\
    \   The AC receiving the Capabilities message transitions from its\n   Initialization\
    \ state.  It examines compatibility with respect to the\n   WTP type, its capabilities,\
    \ and responds with an appropriate\n   Capabilities Response message.\n   The\
    \ WTP continues to send Capabilities messages at an interval\n   specified by\
    \ the Response Timer until it receives a Capabilities\n   Response message from\
    \ an AC.\n   The AC maintains a count of Capabilities messages received from a\n\
    \   given WTP, which it uses to ignore WTPs after a limit.  This is to\n   ensure\
    \ that rogue WTPs that are not compatible with the AC do not\n   repeatedly attempt\
    \ connections.  The limit of connection attempts is\n   3 within 60 seconds.\n\
    \   State transition: Capabilities Exchange -> Connection\n        WTP: Upon receiving\
    \ a positive Capabilities Response message\n             from an AC\n        \
    \ AC: Upon receiving a Connection Request message from a WTP\n"
- title: 5.3.  Connection
  contents:
  - "5.3.  Connection\n   The Connection state involves establishing a security infrastructure\n\
    \   between WTPs and an AC.\n   The WTP sends a Connection message to trigger\
    \ the authentication and\n   security mechanism, i.e., this message initiates\
    \ an IPsec security\n   association.\n   The AC sends a positive Connection Response\
    \ message after\n   establishment of the security association or a negative Connection\n\
    \   Response message if an error occurs.  The AC also monitors the\n   receipt\
    \ of WiCoP control messages to prevent replay attacks.\n   The security association\
    \ between an AC and WTPs covers mutual\n   authentication and also protection\
    \ for integrity, confidentiality,\n   and modification protection for subsequent\
    \ traffic exchanges.\n   In order to avoid forceful disconnections of legitimate\
    \ WTPs after a\n   successful Connection, the AC ignores Capabilities messages\
    \ received\n   with a previously registered WTP identification.\n   State transition:\
    \ Connection -> Configuration\n        WTP: Upon successful establishment of security\
    \ infrastructure\n             marked by sending of a Configuration Request message\n\
    \         AC: Upon receiving Configuration Request message from a WTP\n      \
    \       after successful establishment of security infrastructure\n   State transition:\
    \ Connection -> Capabilities Exchange\n        WTP: Upon expiry of the WTP Response\
    \ Timer before receipt of a\n             positive Connection Response message\
    \ from an AC or upon\n             receipt of a negative Connection Response message\n\
    \         AC: Upon expiry of AC Response Timer before receipt of\n           \
    \  Configuration Request message from WTP\n"
- title: 5.4.  Configuration
  contents:
  - "5.4.  Configuration\n   The Configuration state is one in which relatively long-term\n\
    \   operational parameters, such as those for identification and logical\n   groups,\
    \ are exchanged.  These parameters are based on previously\n   exchanged capabilities\
    \ information and network policies.\n   The WTP sends a Configuration Request\
    \ message to the AC.\n   The AC first acknowledges the WTP's Configuration Request,\
    \ after\n   which it sends appropriate configuration information in subsequent\n\
    \   Configuration Data messages.  WiCoP includes MIB objectives as\n   message\
    \ elements in some Configuration Data messages so as to\n   simplify WTP configuration.\n\
    \   The WTP acknowledges Configuration Data messages individually or en\n   bloc\
    \ with Configuration Data Response messages.  The Response Timer\n   is maintained\
    \ at both WTP and AC to track the exchanges.\n   The AC also establishes relevant\
    \ processing schedules according to\n   the WTP's architecture design.  For example,\
    \ for Split MAC WTPs, the\n   AC arranges its processing schedule to parse IEEE\
    \ 802.11 control and\n   management messages while for Local MAC WTPs, the AC\
    \ arranges\n   schedules processing so as to bypass parsing of IEEE 802.11\n \
    \  management messages.\n   The AC sends a Configure Trigger message after sending\
    \ all relevant\n   configuration information to the WTP.\n   The WTP acknowledges\
    \ a Configure Trigger message with a Configure\n   Trigger Response message before\
    \ activating the previously exchanged\n   configuration parameters.\n   In order\
    \ to avoid forceful disconnections of legitimate WTPs after\n   successful Configuration,\
    \ the AC ignores Capabilities messages\n   received with a previously registered\
    \ WTP identification.\n   State transition: Configuration -> Operation\n     \
    \   WTP: After receiving final Configuration Data message from the\n         \
    \    AC marked by receipt of a Configure Trigger message from\n             the\
    \ AC\n         AC: Upon receiving acknowledgement for Configure Trigger\n    \
    \         message marked by receipt of a Configure Trigger Response\n        \
    \     message from WTP\n   State transition: Configuration -> Capabilities Exchange\n\
    \        WTP: Upon expiry of the WTP Response Timer before receipt of a\n    \
    \         Configure Trigger message from the AC\n         AC: Upon expiry of the\
    \ AC Response Timer before receipt of\n             Configure Data Response message\
    \ or Configure Trigger\n             Response message\n   The following describes\
    \ major configuration aspects of WiCoP.\n"
- title: 5.4.1.  Logical Groups
  contents:
  - "5.4.1.  Logical Groups\n   Configuration Data messages are used to establish\
    \ logical groups in\n   the WLAN and also to separate traffic among them.  The\
    \ logical groups\n   are established based on network administrative policies\
    \ and other\n   external considerations.  In the IEEE 802.11 use-case, logical\
    \ groups\n   are established with BSSID-based virtual APs and are separated over\n\
    \   the WiCoP interface using tunnels.\n   The AC assigns particular BSSIDs of\
    \ the WTP to specific VLAN tunnels.\n   This assignment is specified to the WTP\
    \ using the BSSID-TunnelID\n   parameter in the Configuration Data message.  The\
    \ logical group\n   mapping therefore works across the wireless and WiCoP interfaces.\n\
    \   The WTP then identifies the specified BSSID and VLAN tunnel as\n   corresponding\
    \ to one logical group.  It creates internal state such\n   that traffic belonging\
    \ to the logical group is kept distinct from\n   that of other logical groups.\n\
    \   The AC and WTP also use distinct VLAN tunnels for data and control\n   traffic.\
    \  The 'C' field in the WiCoP header is used to distinguish\n   and assign WiCoP\
    \ packets to particular data and control VLAN tunnels.\n"
- title: 5.4.2.  Resource Control
  contents:
  - "5.4.2.  Resource Control\n   The AC sends QoS information using QoS-Value message\
    \ elements in\n   Configuration Data messages.  The QoS-Value message element\
    \ contains\n   values for EDCA and HCCA parameters.  This information is specified\n\
    \   for each of the logical groups.  In the IEEE 802.11 use-case, QoS-\n   Value\
    \ message elements are specified for each BSSID.\n   The WTP configures QoS parameters\
    \ locally and also forwards relevant\n   settings to wireless terminals in appropriate\
    \ encapsulations.  In the\n   IEEE 802.11 use-case, QoS parameters are sent to\
    \ wireless terminals\n   in corresponding Beacon or Probe Response frames.\n"
- title: 5.5.  Operation
  contents:
  - "5.5.  Operation\n   This is the active operation state of the WLAN in which short-term\n\
    \   dynamics are examined.\n   The WTP begins operations according to the operational\
    \ parameters\n   exchanged in the previous Configuration state.\n   The AC monitors\
    \ WTPs according to network administrative policies and\n   configurations.\n\
    \   In order to avoid forceful disconnections of legitimate WTPs after\n   successful\
    \ Operation setup, the AC ignores Capabilities messages\n   received with a previously\
    \ registered WTP identification.\n   State transition: Operation -> Capabilities\
    \ Exchange\n        WTP: Upon expiry of the WTP Active Presence Timer before receipt\n\
    \             of a Feedback Response message from the AC\n         AC: Upon expiry\
    \ of the AC Active Presence Timer before receipt\n             of a Feedback message\
    \ from the WTP\n   State transition: Operation -> Initialization\n        WTP:\
    \ Upon receipt of a Reset message from an AC\n         AC: Upon receipt of a Reset\
    \ Response message from a WTP\n   The following describes major operation aspects\
    \ of WiCoP.\n"
- title: 5.5.1.  Updates
  contents:
  - "5.5.1.  Updates\n   The dynamic nature of WLAN systems requires regular updates\
    \ to\n   network operations.\n   The AC sends additional configuration information\
    \ in the\n   Configuration Data messages.  This is applicable to establishment\
    \ of\n   new logical groups, changes to existing logical groups, changes in\n\
    \   QoS settings, etc.  Configuration information is followed by a\n   Configure\
    \ Trigger message.\n   The WTP sends a Configure Trigger Response before activating\
    \ the\n   additional configuration information.\n   Configuration updates can\
    \ be used to clear statistics information by\n   reflecting initial values.\n\
    \   An extreme case of a configuration update involves use of the Reset\n   message\
    \ from the AC, which instructs the WTP to revert to initial\n   conditions.  The\
    \ WTP replies with a Reset Response message before\n   reverting to its initial\
    \ state.\n"
- title: 5.5.2.  Feedback and Statistics
  contents:
  - "5.5.2.  Feedback and Statistics\n   The Operation state also sees regular feedback\
    \ being sent by WTPs to\n   the AC.\n   The WTP sends Feedback messages to indicate\
    \ various statistics and\n   congestion condition information.  Feedback also\
    \ includes information\n   on the state of the WTP and wireless medium such as\
    \ queue levels and\n   channel interference.  Feedback messages are sent with\
    \ a frequency\n   defined by the Feedback Interval.  In addition to statistics,\
    \ the\n   Feedback message also serves as a WTP keepalive indicator to the AC.\n\
    \   Feedback messages combine statistics information together with WTP\n   status\
    \ information.\n   The AC monitors Feedback messages for their statistics value\
    \ and\n   implicit indication of WTP activity.  The AC also tracks the state of\n\
    \   congestion at wireless terminals and WTPs.  This information enables\n   the\
    \ AC to adapt its downstream transmissions, such as scheduling\n   transmission\
    \ away from congested WTPs, so as to relieve congestion.\n   The AC additionally\
    \ uses the Feedback message to randomly determine\n   the active state of WTPs.\
    \  An active WTP replies with a corresponding\n   Feedback Response message.\n"
- title: 5.5.3.  Non-Periodic Events
  contents:
  - "5.5.3.  Non-Periodic Events\n   The WTP and AC use the Notification message for\
    \ non-periodic events.\n   They send Notification messages to indicate error conditions\
    \ or\n   drastic changes in congestion state.\n   The recipient of the Notification\
    \ message acknowledges with a\n   Notification Response message.  The response\
    \ may contain information\n   on rectifying the error or may simply be an acknowledgement\
    \ of the\n   Notification.\n"
- title: 5.5.4.  Firmware Trigger
  contents:
  - "5.5.4.  Firmware Trigger\n   The AC sends a Firmware Download message to update\
    \ firmware at WTPs.\n   The Firmware Download message contains TFTP information,\
    \ which the\n   WTP uses to refresh its firmware.  This is used when a new version\
    \ of\n   firmware is available for the WTPs.\n   The WTP acknowledges new firmware\
    \ with a Firmware Download Response\n   message after which it is activated.\n"
- title: 5.5.5.  Wireless Terminal Management
  contents:
  - "5.5.5.  Wireless Terminal Management\n   The Operation state of WiCoP also involves\
    \ configuration of WTPs and\n   the AC with wireless terminal-specific information.\n\
    \   Here the Terminal Addition message is used in response to a new\n   wireless\
    \ terminal entering the WLAN.  This message may be sent by\n   either the WTPs\
    \ or the AC, depending on the WiCoP interface being\n   used.  The recipient of\
    \ this message replies with the Terminal\n   Addition Response message.\n   The\
    \ Terminal Deletion message is used when a wireless terminal leaves\n   the WLAN.\
    \  This is used to delete state information that was\n   maintained by either\
    \ the WTPs or the AC.  It is acknowledged with the\n   Terminal Deletion Response\
    \ message.\n   Figure 8 below illustrates the exchange of Terminal Addition and\n\
    \   Terminal Deletion messages for both Local-MAC- and Split-MAC-based\n   WiCoP\
    \ interfaces.\n   Here the WiCoP Terminal Addition message is triggered as a response\n\
    \   to an IEEE 802.11 Association message.  In the case of Local MAC\n   architecture,\
    \ the WTP sends the message to the AC.  However, in the\n   Split MAC architecture,\
    \ Terminal Addition is sent from an AC to the\n   WTP.\n   +----------+      \
    \     +---------------+                 +------+\n   | Terminal |           |\
    \ Local MAC WTP |                 |  AC  |\n   +----------+           +---------------+\
    \                 +------+\n        |                          |             \
    \               |\n        |                          |                      \
    \      |\n        | IEEE 802.11 Association  |           WiCoP            |\n\
    \        |------------------------->|     Terminal Addition      |\n        |\
    \                          |===========================>|\n        |         \
    \                 |                            |\n        |                  \
    \        |      WiCoP Terminal        |\n        |                          |<===========================|\n\
    \        | IEEE 802.11 Association  |    Addition Response       |\n        |<-------------------------|\
    \                            |\n        |      Response            |         \
    \                   |\n        |                          |                  \
    \          |\n        |                          |                           \
    \ |\n        |                                                       |\n     \
    \   |                                                       |\n        |     \
    \                                                  |\n        |              \
    \    +---------------+                    |\n        |                  | Split\
    \ MAC WTP |                    |\n        |                  +---------------+\
    \                    |\n        |                          |                 \
    \           |\n        |                          |                          \
    \  |\n        | IEEE 802.11 Association  |                            |\n    \
    \    |------------------------->|                            |\n        |    \
    \                      |  IEEE 802.11 Association   |\n        |             \
    \             |===========================>|\n        |                      \
    \    |       (Over WiCoP)         |\n        |                          |    \
    \                        |\n        |                          |             \
    \               |\n        |                          |           WiCoP      \
    \      |\n        |                          |      Terminal Addition     |\n\
    \        |                          |<===========================|\n        |\
    \                          |                            |\n        |         \
    \                 |                            |\n        |                  \
    \        |      WiCoP Terminal        |\n        |                          |===========================>|\n\
    \        |                          |    Addition Response       |\n        |\
    \                          |                            |\n        |         \
    \                 |                            |\n        |                  \
    \        |  IEEE 802.11 Association   |\n        |                          |<===========================|\n\
    \        |                          |   Response (Over WiCoP)    |\n        |\
    \ IEEE 802.11 Association  |                            |\n        |<-------------------------|\
    \                            |\n        |       Response           |         \
    \                   |\n                                 Figure 8\n"
- title: 5.5.6.  Key Configuration
  contents:
  - "5.5.6.  Key Configuration\n   One of the differences between Split MAC and Local\
    \ MAC WTPs is the\n   location of the over-the-air encryption.  Some Split MAC\
    \ and Local\n   MAC WTPs perform encryption locally while others leave it to the\
    \ AC.\n   WiCoP accommodates these differences by enabling security key\n   configuration\
    \ in those cases where encryption is performed at the\n   WTP.  The encryption\
    \ setup process is therefore contingent on the\n   WiCoP protocol interface.\n\
    \   When dynamic WEP is used, the WiCoP Key Configuration message is used\n  \
    \ to notify WTPs of encryption keys for each associated wireless\n   terminal.\
    \  Here, the EAP over LAN (EAPoL) Key frame is encapsulated\n   in the Key Configuration\
    \ message and sent to a WTP.  Upon receiving\n   the Key Configuration message,\
    \ the WTP sets the encryption key in its\n   local security table, decapsulates\
    \ the EAPOL Key frame and forwards\n   it to the wireless terminal.  This is illustrated\
    \ in Figure 9.\n   +----------+                 +-----+                     +------+\n\
    \   | Terminal |                 | WTP |                     |  AC  |\n   +----------+\
    \                 +-----+                     +------+\n        |            \
    \              |                            |\n        |                    802.1x\
    \ Authentication              |\n        |<=====================================================>|\n\
    \        |                          |                            |\n        |\
    \                          |                            |\n       PMK        \
    \                 |                           PMK\n        |                 \
    \         |                            |\n        |                          |\
    \                            |\n        |<-------------------------|<===========================|\n\
    \        |       EAPoL Packet       |     WiCoP Control Packet   |\n        |\
    \                          |      (Key Configuration)   |\n        |         \
    \                 |      | +-----------------------+\n        |              \
    \            |       \\|- Encryption-Data      |\n        |                  \
    \        |        |    Unicast-Key        |\n       Set                      Receive\
    \     |- EAP-Frame            |\n     Unicast-Key              Unicast-Key   |\
    \    Key Signature      |\n        |                          |        +-----------------------+\n\
    \        |                          |                            |\n        |\
    \                          |===========================>|\n        |         \
    \                 |     WiCoP Control Packet   |\n        |                  \
    \        |      (Key Configuration    |\n        |                          |\
    \       Response )           |\n        |                          |         \
    \                   |\n        |                          |                  \
    \          |\n        |                          |                           \
    \ |\n        |                          |                            |\n     \
    \   |<-------------------------|<===========================|\n        |     \
    \  EAPoL Packet       |     WiCoP Control Packet   |\n        |              \
    \            |      (Key Configuration)   |\n        |                       \
    \   |      | +-----------------------+\n        |                          | \
    \      \\|- Encryption-Data      |\n        |                          |     \
    \   |     Broadcast-Key     |\n       Set                      Receive     |-\
    \ EAP-Frame            |\n     Broadcast-Key            Broadcast-Key |    Key\
    \ Signature      |\n        |                          |        |    Broadcast\
    \ Key      |\n        |                          |        +-----------------------+\n\
    \        |                          |                            |\n        |\
    \                          |===========================>|\n        |         \
    \                 |     WiCoP Control Packet   |\n        |                  \
    \        |      (Key Configuration    |\n        |                          |\
    \       Response )           |\n                                 Figure 9\n  \
    \ When WPA or IEEE 802.11i is used in WLAN architectures in which the\n   authenticator\
    \ is located at the AC and encryption points at WTPs, the\n   exchanges of the\
    \ 4-way handshake are managed distinctly.  This is\n   because the AC is no longer\
    \ in a position to calculate the KeyMIC as\n   it is not aware of the KeyRSC sequence\
    \ counter.  So here, a WiCoP Key\n   Configuration message is used to transport\
    \ the 3rd message of the\n   4-way handshake -- containing the EAPoL-Key -- with\
    \ unassigned KeyRSC\n   and KeyMIC fields.  When the WTP receives the WiCoP Key\
    \ Configuration\n   message, it first assigns the sequence number value to the\
    \ KeyRSC\n   field.  Then, the WTP calculates the KeyMIC value using the PTK and\n\
    \   KeyRSC.  So, the WiCoP Key Configuration message allows the KeyMIC to\n  \
    \ be calculated at the WTPs instead of the AC.  The GTK-Flag message\n   element\
    \ is used to determine how the KeyMIC is calculated -- in case\n   of a new GTK,\
    \ KeyMIC is computed with a KeyRSC value of 0 and in case\n   of an existing GTK,\
    \ KeyMIC is computed with a KeyRSC value\n   corresponding to the actual counter.\n\
    \   Figure 10 illustrates this case where the WiCoP common header is\n   either\
    \ 'M' = 0 and 'D' = 0 or 'M' = 1 and 'D' = 1.\n   +----------+               \
    \  +-----+                     +------+\n   | Terminal |                 | WTP\
    \ |                     |  AC  |\n   +----------+                 +-----+    \
    \                 +------+\n        |                          |             \
    \               |\n        |                    802.1x Authentication        \
    \      |\n        |<=====================================================>|\n\
    \        |                          |                            |\n       PMK\
    \                         |                           PMK\n        |         \
    \                 |                            |\n      Generate             \
    \        |                        Generate\n       SNonce                    \
    \  |                         ANonce\n        |                          |    \
    \                        |\n        |                          |             \
    \               |\n        |                      Message 1                  \
    \      |\n        |<-------------------------|<---------------------------|\n\
    \        |       EAPoL Packet       |      WiCoP Data Packet     |\n      Receive\
    \                      |                            |\n       ANonce         \
    \             |                            |\n      Generate                 \
    \    |                            |\n       PTK                         |    \
    \                        |\n        |                          |             \
    \               |\n        |                      Message 2                  \
    \      |\n        |------------------------->|--------------------------->|\n\
    \        |       EAPoL Packet       |      WiCoP Data Pakcet     |\n        |\
    \                          |                        Receive\n        |       \
    \                   |                        SNonce\n        |               \
    \           |                            |\n        |                        \
    \  |                       Generate\n        |                          |    \
    \                      PTK\n        |                          |             \
    \             GTK\n        |                      Message 3                  \
    \      |\n        |<-------------------------|<===========================|\n\
    \        |       EAPoL Packet       |     WiCoP Control Packet   |\n        |\
    \                          |      (Key Configuration)   |\n        |         \
    \                 |      | +-----------------------+\n        |              \
    \            |       \\|- GTK-Flag             |\n      Receive              \
    \      Receive    |- Encryption-Data(PTK) |\n       GTK                      \
    \  PTK       |- Encryption-Data(GTK) |\n        |                         GTK\
    \       |- EAP-Frame            |\n        |                          |      \
    \  +-----------------------+\n        |                          |           \
    \                 |\n        |                          |                    \
    \        |\n        |                          |                            |\n\
    \        |                      Message 4                        |\n        |------------------------->|--------------------------->|\n\
    \        |       EAPoL Packet       |      WiCoP Data Pakcet     |\n        |\
    \                          |                            |\n                  \
    \               Figure 10\n   The 1st, 2nd, and 4th messages of the 4-way handshake\
    \ are transported\n   in WiCoP data packets that are assigned priorities similar\
    \ to that of\n   WiCoP control packets.\n   Similarly, for the group key handshake\
    \ in WPA and IEEE 802.11i, the\n   1st message of the handshake is transported\
    \ using the WiCoP Key\n   Configuration message with unassigned KeyRSC.  The WTP\
    \ again assigns\n   the sequence number value to the KeyRSC and then calculates\
    \ the\n   KeyMIC.  The 2nd message of the handshake however is transported in\n\
    \   WiCoP data packets with priorities similar to that of WiCoP control\n   packets.\
    \  This is illustrated in Figure 11.\n   +----------+                 +-----+\
    \                     +------+\n   | Terminal |                 | WTP |      \
    \               |  AC  |\n   +----------+                 +-----+            \
    \         +------+\n        |                          |                     \
    \       |\n        |                      Message 1                        |\n\
    \        |<-------------------------|<===========================|\n        |\
    \       EAPoL Packet       |     WiCoP Control Packet   |\n        |         \
    \                 |      (Key Configuration)   |\n        |                  \
    \        |      | +-----------------------+\n        |                       \
    \   |       \\|- GTK-Flag             |\n      Receive                    Receive\
    \    |- Encryption-Data(GTK) |\n       GTK                        GTK       |-\
    \ EAP-Frame            |\n        |                          |        +-----------------------+\n\
    \        |                          |                            |\n        |\
    \                          |                            |\n        |         \
    \                 |                            |\n        |                  \
    \        |                            |\n        |                      Message\
    \ 2                        |\n        |------------------------->|--------------------------->|\n\
    \        |       EAPoL Packet       |      WiCoP Data Pakcet     |\n        |\
    \                          |                            |\n                  \
    \               Figure 11\n   The Key Configuration Response message is used by\
    \ the WTP to notify\n   the AC of the encryption setup process.\n"
- title: 6.  WiCoP Performance
  contents:
  - "6.  WiCoP Performance\n   WiCoP is an efficient protocol.  This section illustrates\
    \ various\n   examples of its efficiency.\n"
- title: 6.1.  Operational Efficiency
  contents:
  - "6.1.  Operational Efficiency\n   The fact that WiCoP requires a single operation\
    \ to distinguish and\n   manage WTPs of different designs makes it operationally\
    \ efficient.\n   Because WiCoP assigns dedicated classification bits in the common\n\
    \   header, an AC needs to parse incoming packets only once to determine\n   the\
    \ particular manner in which it is to be processed.  Without the\n   dedicated\
    \ classifications in the common header, an AC would have to\n   perform a lookup\
    \ after parsing every incoming packet, which would\n   result in delaying processing.\
    \  The scale and sensitivity of large-\n   scale deployments require that WLAN\
    \ control protocols be efficient in\n   operation.\n"
- title: 6.2.  Semantic Efficiency
  contents:
  - "6.2.  Semantic Efficiency\n   In certain cases, WiCoP combines utilities in a\
    \ single operation.\n   One particular case is that of statistics and activity\
    \ feedback.\n   Here, WTPs regularly send a single Feedback message containing\n\
    \   statistics and other state information, which also acts as an\n   implicit\
    \ keepalive mechanism.  This helps to reduce the number of\n   message exchanges\
    \ and also simplifies protocol implementation.\n   Similarly, the Capabilities\
    \ messages serve the purpose of finding ACs\n   as well as informing them of WTP\
    \ capabilities and design.\n"
- title: 7.  Summary and Conclusion
  contents:
  - "7.  Summary and Conclusion\n   The Wireless LAN Control Protocol presents a solution\
    \ for managing\n   large-scale WLANs with diverse elements.  It addresses the\
    \ challenges\n   presented in the CAPWAP Problem Statement [RFC3990] and realizes\
    \ the\n   requirements of the CAPWAP Objectives [RFC4564].\n   WiCoP enables integral\
    \ control of Split MAC and Local MAC WTPs by\n   defining appropriate differentiators\
    \ within the protocol message\n   exchanges and processes.  It addresses architecture\
    \ designs in which\n   the authenticator and encryption points are located on\
    \ distinct\n   entities.  In doing so, WiCoP realizes the interoperability objective\n\
    \   and its benefits.\n   WiCoP also addresses shared WLAN deployments by configuring\
    \ and\n   managing WTPs on a logical group basis.  It is further provisioned to\n\
    \   separate control and data traffic within WLANs.  So, the protocol\n   addresses\
    \ the objectives of logical groups and traffic separation.\n   Overall, the specifications\
    \ presented in this document allow for an\n   effective WLAN control and provisioning\
    \ protocol.\n"
- title: 8.  Security Considerations
  contents:
  - "8.  Security Considerations\n   Illegitimate WTPs and ACs pose a significant\
    \ threat to WLAN security.\n   This can be mitigated by requiring all WiCoP entities\
    \ to be mutually\n   authenticated before initiating critical protocol exchanges.\
    \  WiCoP\n   includes a trigger for a suitable authentication mechanism.  This\
    \ is\n   to accommodate a different security mechanism that may be used\n   between\
    \ WTPs and the AC, depending on the nature of the deployment.\n   In extension\
    \ to mutual authentication, the subsequent exchange of\n   protocol information\
    \ between WTPs and the AC need to be protected.\n   The exchanges have to be protected\
    \ against alterations of any sort\n   and Denial-of-Service (DoS) attacks.  Also,\
    \ the information should\n   not be accessible to any third party.  Encryption\
    \ of protocol\n   exchanges is therefore necessary.  WiCoP includes appropriate\n\
    \   procedures to select and establish a security association between\n   WTPs\
    \ and the AC in the Connection state.\n   Architecture designs in which authentication\
    \ is performed at the AC\n   and encryption at the WTPs can be exposed to the\
    \ threat of replay\n   attacks.  Since the AC will not be aware of the exact value\
    \ of the\n   sequence counter, it will not make the corresponding assignment\n\
    \   within the 4-way handshake.  This leaves the wireless terminal to\n   accept\
    \ all incoming frames, including illegitimate frames, as it\n   cannot verify\
    \ the sequence counter value.  Such a threat needs to\n   protected against by\
    \ allowing the WTP to assign the correct value of\n   the sequence counter.  WiCoP\
    \ accomplishes this by sending the 3rd\n   message of the 4-way handshake within\
    \ a control message to the WTP,\n   which then updates the sequence counter field\
    \ before forwarding it to\n   the wireless terminals.\n   Another issue to consider\
    \ is that of rogue WTPs using identifiers\n   similar to that of legitimate WTPs.\
    \  In such instances, a rogue WTP\n   can send a Capabilities message to the AC,\
    \ thereby causing\n   disconnection of the existing legitimate WTP of the same\
    \ identifier.\n   It is important for the AC to ignore Capabilities messages received\n\
    \   with existing identifiers.\n"
- title: 9. Informative References
  contents:
  - "9. Informative References\n   [RFC4118]  Yang, L., Zerfos, P., and E. Sadot,\
    \ \"Architecture Taxonomy\n              for Control and Provisioning of Wireless\
    \ Access Points\n              (CAPWAP)\", RFC 4118, June 2005.\n   [RFC4564]\
    \  Govindan, S., Ed., Cheng, H., Yao, ZH., Zhou, WH., and L.\n              Yang,\
    \ \"Objectives for Control and Provisioning of Wireless\n              Access\
    \ Points (CAPWAP)\", RFC 4564, July 2006.\n   [RFC3990]  O'Hara, B., Calhoun,\
    \ P., and J. Kempf, \"Configuration and\n              Provisioning for Wireless\
    \ Access Points (CAPWAP) Problem\n              Statement\", RFC 3990, February\
    \ 2005.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Satoshi Iino\n   Panasonic Mobile Communications\n   600,\
    \ Saedo-cho\n   Tsuzuki-ku\n   Yokohama  224 8539\n   Japan\n   Phone: +81 45\
    \ 938 3789\n   EMail: iino.satoshi@jp.panasonic.com\n   Saravanan Govindan\n \
    \  Panasonic Singapore Laboratories\n   Block 1022, Tai Seng Industrial Estate\n\
    \   #06-3530, Tai Seng Avenue\n   Singapore  534 415\n   Singapore\n   Phone:\
    \ +65 6550 5441\n   EMail: saravanan.govindan@sg.panasonic.com\n   Mikihito Sugiura\n\
    \   Panasonic Mobile Communications\n   600, Saedo-cho\n   Tsuzuki-ku\n   Yokohama\
    \  224 8539\n   Japan\n   Phone: +81 45 938 3789\n   EMail: sugiura.mikihito@jp.panasonic.com\n\
    \   Hong Cheng\n   Panasonic Singapore Laboratories\n   Block 1022, Tai Seng Industrial\
    \ Estate\n   #06-3530, Tai Seng Avenue\n   Singapore  534 415\n   Singapore\n\
    \   Phone: +65 6550 5447\n   EMail: hong.cheng@sg.panasonic.com\n"
