- title: __initial_text__
  contents:
  - "       SIMPLE Made Simple: An Overview of the IETF Specifications\n         \
    \       for Instant Messaging and Presence Using\n                 the Session\
    \ Initiation Protocol (SIP)\n"
- title: Abstract
  contents:
  - "Abstract\n   The IETF has produced many specifications related to Presence and\n\
    \   Instant Messaging with the Session Initiation Protocol (SIP).\n   Collectively,\
    \ these specifications are known as SIP for Instant\n   Messaging and Presence\
    \ Leveraging Extensions (SIMPLE).  This document\n   serves as a guide to the\
    \ SIMPLE suite of specifications.  It\n   categorizes the specifications, explains\
    \ what each is for, and how\n   they relate to each other.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n   published for informational purposes.\n   This document is a product\
    \ of the Internet Engineering Task Force\n   (IETF).  It represents the consensus\
    \ of the IETF community.  It has\n   received public review and has been approved\
    \ for publication by the\n   Internet Engineering Steering Group (IESG).  Not\
    \ all documents\n   approved by the IESG are a candidate for any level of Internet\n\
    \   Standard; see Section 2 of RFC 5741.\n   Information about the current status\
    \ of this document, any errata,\n   and how to provide feedback on it may be obtained\
    \ at\n   http://www.rfc-editor.org/info/rfc6914.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2013 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction . . . . . . . . . . . . . . . . . . .\
    \ . . . . . .  2\n   2.  Presence . . . . . . . . . . . . . . . . . . . . . .\
    \ . . . . .  3\n     2.1.  Core Protocol Machinery  . . . . . . . . . . . . .\
    \ . . . .  4\n     2.2.  Presence Documents . . . . . . . . . . . . . . . . .\
    \ . . .  5\n     2.3.  Privacy and Policy . . . . . . . . . . . . . . . . . .\
    \ . .  6\n     2.4.  Provisioning . . . . . . . . . . . . . . . . . . . . . .\
    \ .  7\n     2.5.  Federation . . . . . . . . . . . . . . . . . . . . . . . .\
    \  8\n     2.6.  Optimizations  . . . . . . . . . . . . . . . . . . . . . .  8\n\
    \   3.  Instant Messaging  . . . . . . . . . . . . . . . . . . . . . .  9\n  \
    \   3.1.  Page Mode  . . . . . . . . . . . . . . . . . . . . . . . . 10\n    \
    \ 3.2.  Session Mode . . . . . . . . . . . . . . . . . . . . . . . 10\n     3.3.\
    \  IM Chat Rooms  . . . . . . . . . . . . . . . . . . . . . . 11\n     3.4.  IM\
    \ Features  . . . . . . . . . . . . . . . . . . . . . . . 11\n   4.  Security\
    \ Considerations  . . . . . . . . . . . . . . . . . . . 11\n   5.  Acknowledgements\
    \ . . . . . . . . . . . . . . . . . . . . . . . 12\n   6.  Informative References\
    \ . . . . . . . . . . . . . . . . . . . . 12\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   The IETF has produced many specifications related to Presence\
    \ and\n   Instant Messaging with the Session Initiation Protocol (SIP)\n   [RFC3261].\
    \  Collectively, these specifications are known as SIP for\n   Instant Messaging\
    \ and Presence Leveraging Extensions (SIMPLE).  These\n   specifications cover\
    \ topics ranging from protocols for subscription\n   and publication to presence\
    \ document formats to protocols for\n   managing privacy preferences.  The large\
    \ number of specifications can\n   make it hard to figure out exactly what SIMPLE\
    \ is, what\n   specifications cover it, what functionality it provides, and how\n\
    \   these specifications relate to each other.\n   This document serves to address\
    \ these problems.  It provides an\n   enumeration of the protocols that make up\
    \ the SIMPLE suite of\n   specifications from IETF.  It categorizes them into\
    \ related areas of\n   functionality, briefly explains the purpose of each, and\
    \ how the\n   specifications relate to each other.  Each specification also\n\
    \   includes a letter that designates its category [RFC2026].  These\n   values\
    \ are:\n   S: Standards Track\n   E: Experimental\n   B: Best Current Practice\n\
    \   I: Informational\n"
- title: 2.  Presence
  contents:
  - "2.  Presence\n   SIMPLE provides for both presence and instant messaging (IM)\n\
    \   capabilities.  Though both of these fit underneath the broad SIMPLE\n   umbrella,\
    \ they are well separated from each other and are supported\n   by different sets\
    \ of specifications.  That is a key part of the\n   SIMPLE story; presence is\
    \ much broader than just IM, and it enables\n   communications using voice and\
    \ video along with IM.\n   The SIMPLE presence specifications can be broken up\
    \ into:\n   o  The core protocol machinery, which provides the actual SIP\n  \
    \    extensions for subscriptions, notifications, and publications\n   o  Presence\
    \ documents, which are XML documents that provide for rich\n      presence and\
    \ are carried by the core protocol machinery\n   o  Privacy and policy, which\
    \ are documents for expressing privacy\n      preferences about how those presence\
    \ documents are to be shown (or\n      not shown) to other users\n   o  Provisioning,\
    \ which describes how users manage their privacy\n      policies, buddy lists,\
    \ and other pieces of information required\n      for SIMPLE presence to work\n\
    \   o  Optimizations, which are improvements in the core protocol\n      machinery\
    \ that were defined to improve the performance of SIMPLE,\n      particularly\
    \ on wireless links\n"
- title: 2.1.  Core Protocol Machinery
  contents:
  - "2.1.  Core Protocol Machinery\n   RFC 6665, SIP-Specific Event Notification (S):\
    \  [RFC6665] defines the\n      SUBSCRIBE and NOTIFY methods for SIP, forming\
    \ the core of the SIP\n      event notification framework.  To actually use the\
    \ framework,\n      extensions need to be defined for specific event packages.\n\
    \      Presence is defined as an event package [RFC3856] within this\n      framework.\
    \  Packages exist for other, non-presence related\n      functions, such as message\
    \ waiting indicators and dialog state\n      changes.\n   RFC 3856, A Presence\
    \ Event Package for the Session Initiation\n      Protocol (SIP) (S):  [RFC3856]\
    \ defines an event package for\n      indicating user presence through SIP.  Through\
    \ this package, a SIP\n      user agent (UA) can ask to be notified of the presence\
    \ state of a\n      presentity (presence entity).  The contents of the NOTIFY\
    \ messages\n      in this package are presence documents discussed in Section\
    \ 2.2.\n   RFC 4662, A Session Initiation Protocol (SIP) Event Notification\n\
    \      Extension for Resource Lists (S):  [RFC4662] defines an extension\n   \
    \   to [RFC3265] (which has now been obsoleted by RFC 6665) that\n      allows\
    \ a client to subscribe to a list of resources using a single\n      subscription.\
    \  The server, called a Resource List Server (RLS),\n      will \"expand\" the\
    \ subscription and subscribe to each individual\n      member of the list.  Its\
    \ primary usage with presence is to allow\n      subscriptions to \"buddy lists\"\
    .  Without RFC 4662, a UA would need\n      to subscribe to each presentity individually.\
    \  With RFC 4662, they\n      can have a single subscription to all buddies. \
    \ A user can manage\n      the entries in their buddy list using the provisioning\
    \ mechanisms\n      in Section 2.4.\n   RFC 5367, Subscriptions to Request-Contained\
    \ Resource Lists in the\n      Session Initiation Protocol (SIP) (S):  [RFC5367]\
    \ is very similar\n      to RFC 4662.  It allows a client to subscribe to a list\
    \ of\n      resources using a single subscription.  However, with this\n     \
    \ mechanism, the list is included within the body of the SUBSCRIBE\n      request.\
    \  In RFC 4662, it is provisioned ahead of time on the\n      server.\n   RFC\
    \ 3903, Session Initiation Protocol (SIP) Extension for Event State\n      Publication\
    \ (S):  [RFC3903] defines the PUBLISH method.  With this\n      method, a UA can\
    \ publish its current state for any event package,\n      including the presence\
    \ event package.  Once an agent publishes its\n      presence state, the presence\
    \ server would send notifications of\n      this state change using RFC 3856.\n"
- title: 2.2.  Presence Documents
  contents:
  - "2.2.  Presence Documents\n   Once a user has generated a subscription to presence\
    \ using the core\n   protocol machinery, they will receive notifications (SIP\
    \ NOTIFY\n   requests) that contain presence information.  That presence\n   information\
    \ is in the form of an XML presence document.  Several\n   specifications have\
    \ been defined to describe this document format,\n   focusing on rich, multimedia\
    \ presence.\n   RFC 3863, Presence Information Data Format (PIDF) (S):  [RFC3863]\n\
    \      defines the baseline XML format for a presence document.  It\n      defines\
    \ the concept of a tuple as representing a basic\n      communication modality\
    \ and defines a simple status for it (open or\n      closed).\n   RFC 4479, A\
    \ Data Model for Presence (S):  [RFC4479] extends the basic\n      model in RFC\
    \ 3863.  It introduces the concepts of device and\n      person status and explains\
    \ how these relate to each other.  It\n      describes how presence documents\
    \ are used to represent\n      communications systems states in a consistent fashion.\
    \  More than\n      RFC 3863, it defines what a presence document is and what\
    \ it\n      means.\n   RFC 4480, RPID: Rich Presence Extensions to the Presence\
    \ Information\n      Data Format (PIDF) (S):  [RFC4480] adds many more attributes\
    \ to\n      the presence document schema, building upon the model in RFC 4479.\n\
    \      It allows for indications of activities, moods, places and place\n    \
    \  types, icons, and indications of whether or not a user is idle.\n   RFC 4481,\
    \ Timed Presence Extensions to the Presence Information Data\n      Format (PIDF)\
    \ to Indicate Status Information for Past and Future\n      Time Intervals (S):\
    \  [RFC4481] adds attributes to the presence\n      document schema, again building\
    \ upon the model in RFC 4479.  It\n      allows documents to indicate status for\
    \ the future or the past.\n      For example, a user can indicate that they will\
    \ be unavailable for\n      voice communications from 2 p.m. to 3 p.m. due to\
    \ a meeting.\n   RFC 4482, CIPID: Contact Information for the Presence Information\n\
    \      Data Format (S):  [RFC4482] adds attributes to the presence\n      document\
    \ schema for contact information, such as a vCard, display\n      name, homepage,\
    \ icon, or sound (such as the pronunciation of their\n      name).\n   RFC 5196,\
    \ Session Initiation Protocol (SIP) User Agent Capability\n      Extension to\
    \ Presence Information Data Format (PIDF) (S):\n      [RFC5196] adds even more\
    \ attributes to the presence document\n      schema, this time to allow indication\
    \ of capabilities for the user\n      agent.  For example, the extensions can\
    \ indicate whether a UA\n      supports audio and video, what SIP methods it supports,\
    \ and so on.\n"
- title: 2.3.  Privacy and Policy
  contents:
  - "2.3.  Privacy and Policy\n   The rich presence capabilities defined by the specifications\
    \ in\n   Section 2.2 introduces a strong need for privacy preferences.  Users\n\
    \   must be able to approve or deny subscriptions to their presence and\n   indicate\
    \ what information such watchers can see.  In SIMPLE, this is\n   accomplished\
    \ through policy documents uploaded to the presence server\n   using the provisioning\
    \ mechanisms in Section 2.4.\n   RFC 4745, Common Policy: A Document Format for\
    \ Expressing Privacy\n      Preferences (S):  [RFC4745] defines a general XML\
    \ framework for\n      expressing privacy preferences for both geolocation information\n\
    \      and presence information.  It introduces the concepts of\n      conditions,\
    \ actions, and transformations that are applied to\n      privacy-sensitive data.\
    \  The common policy framework provides\n      privacy safety, a property by which\
    \ network error or version\n      incompatibilities can never cause more information\
    \ to be revealed\n      to a watcher than the user would otherwise desire.\n \
    \  RFC 5025, Presence Authorization Rules (S):  [RFC5025] uses the\n      framework\
    \ of RFC 4745 to define a policy document format for\n      describing presence-privacy\
    \ policies.  Besides basic yes/no\n      approvals, this format allows a user\
    \ to control what kind of\n      information a watcher is allowed to see.\n  \
    \ RFC 3857, A Watcher Information Event Template-Package for the\n      Session\
    \ Initiation Protocol (SIP) (S):  [RFC3857], also known as\n      watcherinfo,\
    \ provides a mechanism for a user agent to find out\n      what subscriptions\
    \ are in place for a particular event package.\n      Though it was defined to\
    \ be used for any event package, it has\n      particular applicability for presence.\
    \  It is used to provide\n      reactive authorization.  With reactive authorization,\
    \ a user gets\n      alerted if someone tries to subscribe to their presence,\
    \ so that\n      they may provide an authorization decision.  Watcherinfo is used\n\
    \      to provide the alert that someone has subscribed to a user's\n      presence.\n\
    \   RFC 3858, An Extensible Markup Language (XML) Based Format for\n      Watcher\
    \ Information (S):  [RFC3858] is the companion to RFC 3857.\n      It specifies\
    \ the XML format of watcherinfo that is carried in\n      notifications for the\
    \ event template package in RFC 3857.\n"
- title: 2.4.  Provisioning
  contents:
  - "2.4.  Provisioning\n   Proper operation of a SIMPLE presence system requires\
    \ that several\n   pieces of data are correctly managed by the users and provisioned\n\
    \   into the system.  These include buddy lists (used by the resource\n   list\
    \ subscription mechanism in RFC 4662) and privacy policies (such\n   as those\
    \ described by the XML format in [RFC5025]).\n   In SIMPLE, management of this\
    \ data is handled by the Extensible\n   Markup Language (XML) Configuration Access\
    \ Protocol (XCAP) [RFC4825].\n   XCAP is used by the user agent to manipulate\
    \ buddy lists, privacy\n   policy, and other data that is represented by XML documents\
    \ stored on\n   a server.\n   RFC 4825, The Extensible Markup Language (XML) Configuration\
    \ Access\n      Protocol (XCAP) (S):  [RFC4825] specifies XCAP, a usage of HTTP\n\
    \      that allows a user agent to manipulate the contents of XML\n      documents\
    \ stored on a server.  It can be used to manipulate any\n      kind of XML, and\
    \ the protocol itself is independent of the\n      particular schema of the data\
    \ it is modifying.  XML schemas have\n      been defined for buddy lists, privacy\
    \ policies, and offline\n      presence status, allowing all of those to be managed\
    \ by a user\n      with XCAP.\n   RFC 5875, An Extensible Markup Language (XML)\
    \ Configuration Access\n      Protocol (XCAP) Diff Event Package (S):  [RFC5875]\
    \ defines an\n      extension to the SIP user agent configuration profile, allowing\
    \ a\n      user agent to learn about changes in its documents on an XCAP\n   \
    \   server.  With this mechanism, there can be a change made by\n      someone\
    \ else to a buddy list or privacy policy document, and a UA\n      will find out\
    \ that a new version is available.\n   RFC 5874, An Extensible Markup Language\
    \ (XML) Document Format for\n      Indicating a Change in XML Configuration Access\
    \ Protocol (XCAP)\n      Resources (S):  [RFC5874] defines an XML format for indicating\n\
    \      changes in XCAP documents.  It makes use of an XML diff format\n      defined\
    \ in [RFC5261].  It is used in conjunction with [RFC5875] to\n      alert a user\
    \ agent of changes made by someone else to their\n      provisioned data.\n  \
    \ RFC 4826, Extensible Markup Language (XML) Formats for Representing\n      Resource\
    \ Lists (S):  [RFC4826] defines two XML document formats\n      used to represent\
    \ buddy lists.  One is simply a list of users (or\n      more generally, resources),\
    \ and the other defines a buddy list\n      whose membership is composed of a\
    \ list of users or resources.\n      These lists can be manipulated by XCAP, allowing\
    \ a user to add or\n      remove members from their buddy lists.  The buddy list\
    \ is also\n      accessed by the resource list server specified in RFC 4662 for\n\
    \      processing resource list subscriptions.\n   RFC 4827, An Extensible Markup\
    \ Language (XML) Configuration Access\n      Protocol (XCAP) Usage for Manipulating\
    \ Presence Document Contents\n      (S):  [RFC4827] defines an XCAP usage that\
    \ allows a user to store\n      an \"offline\" presence document.  This is a presence\
    \ status that is\n      used by a presence server when there are no presence documents\n\
    \      published for that user by any user agents currently running.\n"
- title: 2.5.  Federation
  contents:
  - "2.5.  Federation\n   Federation refers to the interconnection of different presence\
    \ and\n   instant messaging systems for the purposes of communications.\n   Federation\
    \ can be between domains or within a domain.  A document has\n   been developed\
    \ that describes how presence and IM federation works.\n   RFC 5344, Presence\
    \ and Instant Messaging Peering Use Cases (I):\n      [RFC5344] describes a basic\
    \ set of presence and instant messaging\n      use cases for federating between\
    \ providers.\n"
- title: 2.6.  Optimizations
  contents:
  - "2.6.  Optimizations\n   When running over wireless links, presence can be a very\
    \ expensive\n   service.  Notifications often get sent when the change is not\
    \ really\n   relevant to the watcher.  Furthermore, when a notification is sent,\n\
    \   it contains the full presence state of the watcher, rather than just\n   an\
    \ indication of what changed.  Optimizations have been defined to\n   address\
    \ both of these cases.\n   RFC 4660, Functional Description of Event Notification\
    \ Filtering\n      (S):  [RFC4660] defines a mechanism that allows a watcher to\n\
    \      include filters in its subscription.  These filters limit the\n      cases\
    \ in which notifications are sent.  It is used in conjunction\n      with RFC\
    \ 4661, which specifies the XML format of the filters\n      themselves.  The\
    \ mechanism, though targeted for presence, can be\n      applied to any SIP event\
    \ package.\n   RFC 4661, An Extensible Markup Language (XML)-Based Format for\
    \ Event\n      Notification Filtering (S):  [RFC4661] defines an XML format used\n\
    \      with the event notification filtering mechanism defined in RFC\n      4660\
    \ [RFC4660].\n   RFC 5262, Presence Information Data Format (PIDF)  Extension\
    \ for\n      Partial Presence (S):  [RFC5262] defines a new XML format for\n \
    \     representing changes in presence documents, called a partial PIDF\n    \
    \  document.  This format contains an XML patch operation [RFC5261]\n      that,\
    \ when applied to the previous presence document, yields the\n      new presence\
    \ document.  The partial PIDF document is included in\n      presence notifications\
    \ when a watcher indicates that they support\n      the format.\n   RFC 5263,\
    \ Session Initiation Protocol (SIP) Extension for Partial\n      Notification\
    \ of Presence Information (S):  [RFC5263] defines a\n      mechanism for receiving\
    \ notifications that contain partial\n      presence documents.\n   RFC 5264,\
    \ Publication of Partial Presence Information (S):  [RFC5264]\n      defines a\
    \ mechanism for publishing presence status using a partial\n      PIDF document.\n\
    \   RFC 5261, An Extensible Markup Language (XML) Patch Operations\n      Framework\
    \ Utilizing XML Path Language (XPath) Selectors (S):\n      [RFC5261] defines\
    \ an XML structure for representing changes in XML\n      documents.  It is a\
    \ form of \"diff\" but specifically for XML\n      documents.  It is used by several\
    \ of the optimization mechanisms\n      defined for SIMPLE.\n   RFC 5112, The\
    \ Presence-Specific Static Dictionary for Signaling\n      Compression (Sigcomp)\
    \ (S):  [RFC5112] defines a dictionary for\n      usage with Signaling Compression\
    \ (Sigcomp) [RFC3320] to improve\n      the compressibility of presence documents.\n\
    \   RFC 6446, Session Initiation Protocol (SIP) Event Notification\n      Extension\
    \ for Notification Rate Control (S):  [RFC6446] specifies\n      mechanisms for\
    \ adjusting the rate of SIP event notifications.\n      These mechanisms can be\
    \ applied in subscriptions to all SIP event\n      packages.\n"
- title: 3.  Instant Messaging
  contents:
  - "3.  Instant Messaging\n   SIMPLE defines two modes of instant messaging.  These\
    \ are page mode\n   and session mode.  In page mode, instant messages are sent\
    \ by sending\n   a SIP request that contains the contents of the instant message.\
    \  In\n   session mode, IM is viewed as another media type -- along with audio\n\
    \   and video -- and an INVITE request is used to set up a session that\n   includes\
    \ IM as a media type.  While page mode is more efficient for\n   one or two message\
    \ conversations, session mode is more efficient for\n   longer conversations since\
    \ the messages are not sent through the SIP\n   servers.  Furthermore, by viewing\
    \ IM as a media type, all of the\n   features available in SIP signaling -- third\
    \ party call control,\n   forking, and so on, are available for IM.\n"
- title: 3.1.  Page Mode
  contents:
  - "3.1.  Page Mode\n   RFC 3428, Session Initiation Protocol (SIP) Extension for\
    \ Instant\n      Messaging (S):  [RFC3428] introduces the MESSAGE method, which\
    \ can\n      be used to send an instant message through SIP signaling.\n   RFC\
    \ 5365, Multiple-Recipient MESSAGE Requests in the Session\n      Initiation Protocol\
    \ (SIP) (S):  [RFC5365] defines a mechanism\n      whereby a client can send a\
    \ single SIP MESSAGE to multiple\n      recipients.  This is accomplished by including\
    \ the list of\n      recipients as an object in the body and having a network\
    \ server\n      send a copy to each recipient.\n"
- title: 3.2.  Session Mode
  contents:
  - "3.2.  Session Mode\n   RFC 4975, The Message Session Relay Protocol (MSRP) (S):\
    \  [RFC4975]\n      defines a small text-based protocol for exchanging arbitrarily\n\
    \      sized content of any kind between users.  An MSRP session is set\n    \
    \  up by exchanging certain information, such as an MSRP URI, within\n      SIP\
    \ and Session Description Protocol (SDP) signaling.\n   RFC 3862, Common Presence\
    \ and Instant Messaging (CPIM): Message\n      Format (S):  [RFC3862] defines\
    \ a wrapper around instant message\n      content providing metadata, such as\
    \ the sender and recipient\n      identity.  The CPIM format is carried in MSRP.\n\
    \   RFC 4976, Relay Extensions for the Message Sessions Relay Protocol\n     \
    \ (MSRP) (S):  [RFC4976] adds support for relays to MSRP.  These\n      relay\
    \ servers receive MSRP messages and send them towards the\n      destination.\
    \  They provide support for firewall and NAT traversal\n      and allow for features\
    \ such as recording and inspection to be\n      implemented.\n   RFC 6135, An\
    \ Alternative Connection Model for the Message Session\n      Relay Protocol (MSRP)\
    \ (S):  [RFC6135] allows clients to negotiate\n      which endpoint in a session\
    \ will establish the MSRP connection.\n      Without this specification, the client\
    \ generating the SDP offer\n      would initiate the connection.\n   RFC 6714,\
    \ Connection Establishment for Media Anchoring (CEMA) for the\n      Message Session\
    \ Relay Protocol (MSRP) (S):  [RFC6714] allows\n      middleboxes to anchor the\
    \ MSRP connection, without the need for\n      middleboxes to modify the MSRP\
    \ messages; thus, it also enables a\n      secure end-to-end MSRP communication\
    \ in networks where such\n      middleboxes are deployed.\n"
- title: 3.3.  IM Chat Rooms
  contents:
  - "3.3.  IM Chat Rooms\n   In SIMPLE, IM multi-user chat (also known as chat-rooms)\
    \ are provided\n   using regular SIP conferencing mechanisms.  The framework for\
    \ SIP\n   conferencing [RFC4353] and conference control [RFC5239] describe how\n\
    \   all SIP-based conferencing works; including joining and leaving,\n   persistent\
    \ and temporary conferences, floor control and moderation,\n   and learning of\
    \ conference membership, amongst other functions.  All\n   that is necessary are\
    \ extensions to provide features that are\n   specific to IM.\n   Multi-party\
    \ Chat Using the Message Session Relay Protocol (MSRP)\n      (Work in Progress):\
    \  [SIMPCHAT] defines how MSRP is used to\n      provide support for nicknames\
    \ and private chat within an IM\n      conference.\n"
- title: 3.4.  IM Features
  contents:
  - "3.4.  IM Features\n   Several specifications have been written to provide IM-specific\n\
    \   features for SIMPLE.  These include \"is-typing\" indications, allowing\n\
    \   a user to know when their messaging peer is composing a response and\n   allowing\
    \ a user to know when their IM has been received via delivery\n   notifications.\n\
    \   RFC 3994, Indication of Message Composition for Instant Messaging\n      (S):\
    \  [RFC3994] defines an XML format that can be sent in instant\n      messages\
    \ that indicates the status of message composition.  This\n      provides the\
    \ familiar \"is-typing\" indication in IM systems, but\n      also supports voice,\
    \ video, and other message types.\n   RFC 5438, Instant Message Disposition Notification\
    \ (IMDN) (S):\n      [RFC5438] provides delivery notifications of IM receipt.\
    \  This\n      allows a user to know with certainty that a message has been\n\
    \      received.\n"
- title: 4.  Security Considerations
  contents:
  - "4.  Security Considerations\n   This specification is an overview of existing\
    \ specifications and does\n   not introduce any security considerations on its\
    \ own.\n"
- title: 5.  Acknowledgements
  contents:
  - "5.  Acknowledgements\n   Thanks to Vijay Gurbani, Barry Leiba, Stephen Hanna,\
    \ and Salvatore\n   Loreto for their review and comments.\n"
- title: 6.  Informative References
  contents:
  - "6.  Informative References\n   [RFC2026]   Bradner, S., \"The Internet Standards\
    \ Process -- Revision\n               3\", BCP 9, RFC 2026, October 1996.\n  \
    \ [RFC3261]   Rosenberg, J., Schulzrinne, H., Camarillo, G., Johnston,\n     \
    \          A., Peterson, J., Sparks, R., Handley, M., and E.\n               Schooler,\
    \ \"SIP: Session Initiation Protocol\", RFC 3261,\n               June 2002.\n\
    \   [RFC3265]   Roach, A., \"Session Initiation Protocol (SIP)-Specific\n    \
    \           Event Notification\", RFC 3265, June 2002.\n   [RFC3320]   Price,\
    \ R., Bormann, C., Christoffersson, J., Hannu, H.,\n               Liu, Z., and\
    \ J. Rosenberg, \"Signaling Compression\n               (SigComp)\", RFC 3320,\
    \ January 2003.\n   [RFC3428]   Campbell, B., Rosenberg, J., Schulzrinne, H.,\
    \ Huitema,\n               C., and D. Gurle, \"Session Initiation Protocol (SIP)\n\
    \               Extension for Instant Messaging\", RFC 3428,\n               December\
    \ 2002.\n   [RFC3856]   Rosenberg, J., \"A Presence Event Package for the Session\n\
    \               Initiation Protocol (SIP)\", RFC 3856, August 2004.\n   [RFC3857]\
    \   Rosenberg, J., \"A Watcher Information Event Template-\n               Package\
    \ for the Session Initiation Protocol (SIP)\",\n               RFC 3857, August\
    \ 2004.\n   [RFC3858]   Rosenberg, J., \"An Extensible Markup Language (XML) Based\n\
    \               Format for Watcher Information\", RFC 3858, August 2004.\n   [RFC3862]\
    \   Klyne, G. and D. Atkins, \"Common Presence and Instant\n               Messaging\
    \ (CPIM): Message Format\", RFC 3862, August 2004.\n   [RFC3863]   Sugano, H.,\
    \ Fujimoto, S., Klyne, G., Bateman, A., Carr,\n               W., and J. Peterson,\
    \ \"Presence Information Data Format\n               (PIDF)\", RFC 3863, August\
    \ 2004.\n   [RFC3903]   Niemi, A., \"Session Initiation Protocol (SIP) Extension\n\
    \               for Event State Publication\", RFC 3903, October 2004.\n   [RFC3994]\
    \   Schulzrinne, H., \"Indication of Message Composition for\n               Instant\
    \ Messaging\", RFC 3994, January 2005.\n   [RFC4353]   Rosenberg, J., \"A Framework\
    \ for Conferencing with the\n               Session Initiation Protocol (SIP)\"\
    , RFC 4353,\n               February 2006.\n   [RFC4479]   Rosenberg, J., \"A\
    \ Data Model for Presence\", RFC 4479,\n               July 2006.\n   [RFC4480]\
    \   Schulzrinne, H., Gurbani, V., Kyzivat, P., and J.\n               Rosenberg,\
    \ \"RPID: Rich Presence Extensions to the\n               Presence Information\
    \ Data Format (PIDF)\", RFC 4480,\n               July 2006.\n   [RFC4481]   Schulzrinne,\
    \ H., \"Timed Presence Extensions to the\n               Presence Information\
    \ Data Format (PIDF) to Indicate\n               Status Information for Past and\
    \ Future Time Intervals\",\n               RFC 4481, July 2006.\n   [RFC4482]\
    \   Schulzrinne, H., \"CIPID: Contact Information for the\n               Presence\
    \ Information Data Format\", RFC 4482, July 2006.\n   [RFC4660]   Khartabil, H.,\
    \ Leppanen, E., Lonnfors, M., and J. Costa-\n               Requena, \"Functional\
    \ Description of Event Notification\n               Filtering\", RFC 4660, September\
    \ 2006.\n   [RFC4661]   Khartabil, H., Leppanen, E., Lonnfors, M., and J. Costa-\n\
    \               Requena, \"An Extensible Markup Language (XML)-Based\n       \
    \        Format for Event Notification Filtering\", RFC 4661,\n              \
    \ September 2006.\n   [RFC4662]   Roach, A., Campbell, B., and J. Rosenberg, \"\
    A Session\n               Initiation Protocol (SIP) Event Notification Extension\n\
    \               for Resource Lists\", RFC 4662, August 2006.\n   [RFC4745]   Schulzrinne,\
    \ H., Tschofenig, H., Morris, J., Cuellar, J.,\n               Polk, J., and J.\
    \ Rosenberg, \"Common Policy: A Document\n               Format for Expressing\
    \ Privacy Preferences\", RFC 4745,\n               February 2007.\n   [RFC4825]\
    \   Rosenberg, J., \"The Extensible Markup Language (XML)\n               Configuration\
    \ Access Protocol (XCAP)\", RFC 4825,\n               May 2007.\n   [RFC4826]\
    \   Rosenberg, J., \"Extensible Markup Language (XML) Formats\n              \
    \ for Representing Resource Lists\", RFC 4826, May 2007.\n   [RFC4827]   Isomaki,\
    \ M. and E. Leppanen, \"An Extensible Markup\n               Language (XML) Configuration\
    \ Access Protocol (XCAP) Usage\n               for Manipulating Presence Document\
    \ Contents\", RFC 4827,\n               May 2007.\n   [RFC4975]   Campbell, B.,\
    \ Mahy, R., and C. Jennings, \"The Message\n               Session Relay Protocol\
    \ (MSRP)\", RFC 4975, September 2007.\n   [RFC4976]   Jennings, C., Mahy, R.,\
    \ and A. Roach, \"Relay Extensions\n               for the Message Sessions Relay\
    \ Protocol (MSRP)\",\n               RFC 4976, September 2007.\n   [RFC5025] \
    \  Rosenberg, J., \"Presence Authorization Rules\", RFC 5025,\n              \
    \ December 2007.\n   [RFC5112]   Garcia-Martin, M., \"The Presence-Specific Static\n\
    \               Dictionary for Signaling Compression (Sigcomp)\",\n          \
    \     RFC 5112, January 2008.\n   [RFC5196]   Lonnfors, M. and K. Kiss, \"Session\
    \ Initiation Protocol\n               (SIP) User Agent Capability Extension to\
    \ Presence\n               Information Data Format (PIDF)\", RFC 5196,\n     \
    \          September 2008.\n   [RFC5239]   Barnes, M., Boulton, C., and O. Levin,\
    \ \"A Framework for\n               Centralized Conferencing\", RFC 5239, June\
    \ 2008.\n   [RFC5261]   Urpalainen, J., \"An Extensible Markup Language (XML)\n\
    \               Patch Operations Framework Utilizing XML Path Language\n     \
    \          (XPath) Selectors\", RFC 5261, September 2008.\n   [RFC5262]   Lonnfors,\
    \ M., Leppanen, E., Khartabil, H., and J.\n               Urpalainen, \"Presence\
    \ Information Data Format (PIDF)\n               Extension for Partial Presence\"\
    , RFC 5262,\n               September 2008.\n   [RFC5263]   Lonnfors, M., Costa-Requena,\
    \ J., Leppanen, E., and H.\n               Khartabil, \"Session Initiation Protocol\
    \ (SIP) Extension\n               for Partial Notification of Presence Information\"\
    ,\n               RFC 5263, September 2008.\n   [RFC5264]   Niemi, A., Lonnfors,\
    \ M., and E. Leppanen, \"Publication of\n               Partial Presence Information\"\
    , RFC 5264, September 2008.\n   [RFC5344]   Houri, A., Aoki, E., and S. Parameswar,\
    \ \"Presence and\n               Instant Messaging Peering Use Cases\", RFC 5344,\n\
    \               October 2008.\n   [RFC5365]   Garcia-Martin, M. and G. Camarillo,\
    \ \"Multiple-Recipient\n               MESSAGE Requests in the Session Initiation\
    \ Protocol\n               (SIP)\", RFC 5365, October 2008.\n   [RFC5367]   Camarillo,\
    \ G., Roach, A., and O. Levin, \"Subscriptions to\n               Request-Contained\
    \ Resource Lists in the Session\n               Initiation Protocol (SIP)\", RFC\
    \ 5367, October 2008.\n   [RFC5438]   Burger, E. and H. Khartabil, \"Instant Message\
    \ Disposition\n               Notification (IMDN)\", RFC 5438, February 2009.\n\
    \   [RFC5874]   Rosenberg, J. and J. Urpalainen, \"An Extensible Markup\n    \
    \           Language (XML) Document Format for Indicating a Change in\n      \
    \         XML Configuration Access Protocol (XCAP) Resources\",\n            \
    \   RFC 5874, May 2010.\n   [RFC5875]   Urpalainen, J. and D. Willis, \"An Extensible\
    \ Markup\n               Language (XML) Configuration Access Protocol (XCAP) Diff\n\
    \               Event Package\", RFC 5875, May 2010.\n   [RFC6135]   Holmberg,\
    \ C. and S. Blau, \"An Alternative Connection\n               Model for the Message\
    \ Session Relay Protocol (MSRP)\",\n               RFC 6135, February 2011.\n\
    \   [RFC6446]   Niemi, A., Kiss, K., and S. Loreto, \"Session Initiation\n   \
    \            Protocol (SIP) Event Notification Extension for\n               Notification\
    \ Rate Control\", RFC 6446, January 2012.\n   [RFC6665]   Roach, A., \"SIP-Specific\
    \ Event Notification\", RFC 6665,\n               July 2012.\n   [RFC6714]   Holmberg,\
    \ C., Blau, S., and E. Burger, \"Connection\n               Establishment for\
    \ Media Anchoring (CEMA) for the Message\n               Session Relay Protocol\
    \ (MSRP)\", RFC 6714, August 2012.\n   [SIMPCHAT]  Niemi, A., Garcia, M., and\
    \ G. Sandbakken, \"Multi-party\n               Chat Using the Message Session\
    \ Relay Protocol (MSRP)\",\n               Work in Progress, January 2013.\n"
- title: Author's Address
  contents:
  - "Author's Address\n   Jonathan Rosenberg\n   jdrosen.net\n   EMail: jdrosen@jdrosen.net\n\
    \   URI:   http://www.jdrosen.net\n"
