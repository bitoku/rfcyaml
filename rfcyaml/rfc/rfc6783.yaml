- title: __initial_text__
  contents:
  - '                 Mailing Lists and Non-ASCII Addresses

    '
- title: Abstract
  contents:
  - "Abstract\n   This document describes considerations for mailing lists with the\n\
    \   introduction of non-ASCII UTF-8 email addresses.  It outlines some\n   possible\
    \ scenarios for handling lists with mixtures of non-ASCII and\n   traditional\
    \ addresses but does not specify protocol changes or offer\n   implementation\
    \ or deployment advice.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n   published for informational purposes.\n   This document is a product\
    \ of the Internet Engineering Task Force\n   (IETF).  It represents the consensus\
    \ of the IETF community.  It has\n   received public review and has been approved\
    \ for publication by the\n   Internet Engineering Steering Group (IESG).  Not\
    \ all documents\n   approved by the IESG are a candidate for any level of Internet\n\
    \   Standard; see Section 2 of RFC 5741.\n   Information about the current status\
    \ of this document, any errata,\n   and how to provide feedback on it may be obtained\
    \ at\n   http://www.rfc-editor.org/info/rfc6783.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2012 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction  . . . . . . . . . . . . . . . . . . .\
    \ . . . . . . 2\n     1.1.  Mailing List Header Additions and Modifications .\
    \ . . . . . 3\n     1.2.  Non-ASCII Email Addresses . . . . . . . . . . . . .\
    \ . . . . 3\n   2.  Scenarios Involving Mailing Lists . . . . . . . . . . . .\
    \ . . . 4\n     2.1.  Fully SMTPUTF8 Lists  . . . . . . . . . . . . . . . . .\
    \ . . 4\n     2.2.  Mixed SMTPUTF8 and ASCII Lists  . . . . . . . . . . . . .\
    \ . 5\n     2.3.  SMTP Issues . . . . . . . . . . . . . . . . . . . . . . . .\
    \ 5\n   3.  List Headers  . . . . . . . . . . . . . . . . . . . . . . . . . 6\n\
    \     3.1.  SMTPUTF8 List Headers . . . . . . . . . . . . . . . . . . . 6\n  \
    \   3.2.  Downgrading List Headers  . . . . . . . . . . . . . . . . . 7\n    \
    \ 3.3.  Subscribers' Addresses in Downgraded Headers  . . . . . . . 8\n   4. \
    \ Security Considerations . . . . . . . . . . . . . . . . . . . . 8\n   5.  References\
    \  . . . . . . . . . . . . . . . . . . . . . . . . . . 8\n     5.1.  Normative\
    \ References  . . . . . . . . . . . . . . . . . . . 8\n     5.2.  Informative\
    \ References  . . . . . . . . . . . . . . . . . . 9\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   This document describes considerations for mailing lists\
    \ with the\n   introduction of non-ASCII UTF-8 email addresses.  The usage of\
    \ such\n   addresses is described in [RFC6530].\n   Mailing lists are an important\
    \ part of email usage and collaborative\n   communications.  The introduction\
    \ of internationalized email\n   addresses affects mailing lists in three main\
    \ areas: (1) transport\n   (receiving and sending messages); (2) message headers\
    \ of received and\n   retransmitted messages; and (3) mailing list operational\
    \ policies.\n   A mailing list is a mechanism that distributes a message to multiple\n\
    \   recipients when the originator sends it to a single address.  An\n   agent,\
    \ usually software rather than a person, at that single address\n   receives the\
    \ message and then causes the message to be redistributed\n   to a list of recipients.\
    \  This agent usually sets the envelope return\n   address (henceforth called\
    \ the \"bounce address\") of the redistributed\n   message to a different address\
    \ from that of the original message.\n   Using a different bounce address directs\
    \ error and other\n   automatically generated messages to an error-handling address\n\
    \   associated with the mailing list.  This sends error and other\n   automatic\
    \ messages to the list agent, which can often do something\n   useful with them,\
    \ rather than to the original sender, who typically\n   doesn't control the list\
    \ and hence can't do anything about them.\n   In most cases, the mailing list\
    \ agent redistributes a received\n   message to its subscribers as a new message,\
    \ that is, conceptually it\n   uses message submission [RFC6409] (as did the sender\
    \ of the original\n   message).  The exception, where the mailing list is not\
    \ managed by a\n   separate agent that receives and redistributes messages in\
    \ separate\n   transactions but is implemented by an expansion step within an\
    \ SMTP\n   transaction where one local address expands to multiple local or non-\n\
    \   local addresses, is not addressed by this document.\n"
- title: 1.1.  Mailing List Header Additions and Modifications
  contents:
  - "1.1.  Mailing List Header Additions and Modifications\n   Some list agents alter\
    \ message header fields, while others do not.  A\n   number of standardized list-related\
    \ header fields have been defined,\n   and many lists add one or more of these\
    \ headers.  Separate from these\n   standardized list-specific header fields,\
    \ and despite a history of\n   interoperability problems from doing so, some lists\
    \ alter or add\n   header fields in an attempt to control where replies are sent.\
    \  Such\n   lists typically add or replace the \"Reply-To\" field, and some add\
    \ or\n   replace the \"Sender\" field.  Some lists alter or replace other\n  \
    \ fields, including \"From\".\n   Among these list-specific header fields are\
    \ those specified in RFCs\n   2369 [RFC2369] and 2919 [RFC2919].  For more information,\
    \ see\n   Section 3.\n"
- title: 1.2.  Non-ASCII Email Addresses
  contents:
  - "1.2.  Non-ASCII Email Addresses\n   While the mail transport protocol is the\
    \ same for regular email\n   recipients and mailing list recipients, list agents\
    \ have special\n   considerations with non-ASCII email addresses because they\
    \ retransmit\n   messages composed by other agents to potentially many recipients.\n\
    \   There are considerations for non-ASCII email addresses in the\n   envelope\
    \ as well as in header fields of redistributed messages.  In\n   particular, a\
    \ message with non-ASCII addresses in the headers or\n   envelope cannot be sent\
    \ to non-SMTPUTF8 recipients.\n   With mailing lists, there are two different\
    \ types of considerations:\n   first, the purely technical ones involving message\
    \ handling, error\n   cases, and the like, and second, those that arise from the\
    \ fact that\n   humans use mailing lists to communicate.  As an example of the\
    \ first,\n   list agents might choose to reject all messages from non-ASCII\n\
    \   addresses if they are unprepared to handle SMTPUTF8 mail.  As an\n   example\
    \ of the second, a user who sends a message to a list often is\n   unaware of\
    \ the list membership.  In particular, the user often\n   doesn't know if the\
    \ members are SMTPUTF8 mail users or not, and often\n   neither the original sender\
    \ nor the recipients personally know each\n   other.  As a consequence of this,\
    \ remedies that may be readily\n   available for one-to-one communication might\
    \ not be appropriate when\n   dealing with mailing lists.  For example, if a user\
    \ sends a message\n   that is undeliverable, normally the telephone, instant messaging,\
    \ or\n   other forms of communication are available to obtain a working\n   address.\
    \  With mailing lists, the users may not have any recourse.\n   Of course, with\
    \ mailing lists, the original sender usually does not\n   know which list members\
    \ successfully received a message or if it was\n   undeliverable to some.\n  \
    \ Conceptually, a mailing list's internationalization can be divided\n   into\
    \ three capabilities.  First, does the list have a non-ASCII\n   submission address?\
    \  Second, does the list agent accept subscriptions\n   for addresses containing\
    \ non-ASCII characters?  And third, does the\n   list agent accept messages that\
    \ require SMTPUTF8 capabilities?\n   If a list has subscribers with ASCII addresses,\
    \ those subscribers\n   might or might not be able to accept SMTPUTF8 messages.\n"
- title: 2.  Scenarios Involving Mailing Lists
  contents:
  - "2.  Scenarios Involving Mailing Lists\n   Generally (and exclusively within the\
    \ scope of this document), an\n   original message is sent to a mailing list as\
    \ a completely separate\n   and independent transaction from the list agent sending\
    \ the\n   retransmitted message to one or more list recipients.  In both cases,\n\
    \   the message might be addressed only to the list address or might have\n  \
    \ recipients in addition to the list.  Furthermore, the list agent\n   might choose\
    \ to send the retransmitted message to each list recipient\n   in a separate message\
    \ submission transaction or might choose to\n   include multiple recipients per\
    \ transaction.  Often, list agents are\n   constructed to work in cooperation\
    \ with, rather than include the\n   functionality of, a message submission server;\
    \ hence, the list\n   transmits to a single submission server one copy of the\
    \ retransmitted\n   message.  The submission server then decides which recipients\
    \ to\n   include in which transaction.\n"
- title: 2.1.  Fully SMTPUTF8 Lists
  contents:
  - "2.1.  Fully SMTPUTF8 Lists\n   Some lists may wish to be fully SMTPUTF8.  That\
    \ is, all subscribers\n   are expected to be able to receive SMTPUTF8 mail.  For\
    \ list hygiene\n   reasons, such a list would probably want to prevent subscriptions\n\
    \   from addresses that are unable to receive SMTPUTF8 mail.  If a\n   putative\
    \ subscriber has a non-ASCII address, it must be able to\n   receive SMTPUTF8\
    \ mail, but there is no way to tell whether a\n   subscriber with an ASCII address\
    \ can receive SMTPUTF8 mail short of\n   sending an SMTPUTF8 probe or confirmation\
    \ message and somehow finding\n   out whether it was delivered, e.g., if the user\
    \ clicked a link in the\n   confirmation message.\n"
- title: 2.2.  Mixed SMTPUTF8 and ASCII Lists
  contents:
  - "2.2.  Mixed SMTPUTF8 and ASCII Lists\n   Other lists may wish to handle a mixture\
    \ of SMTPUTF8 and ASCII\n   subscribers, either as a transitional measure as subscribers\
    \ upgrade\n   to SMTPUTF8-capable mail software or as an ongoing feature.  While\
    \ it\n   is not possible in general to downgrade SMTPUTF8 mail to ASCII mail,\n\
    \   list software might divide the recipients into two sets, SMTPUTF8 and\n  \
    \ ASCII recipients, and create a downgraded version of SMTPUTF8 list\n   messages\
    \ to send to ASCII recipients.  See Sections 3.2 and 3.3.\n   To determine which\
    \ set an address belongs in, list software might\n   make the conservative assumption\
    \ that ASCII addresses get ASCII\n   messages, it might try to probe the address\
    \ with an SMTPUTF8 test\n   message, or it might let the subscriber set the message\
    \ format\n   manually, similar to the way that some lists now let subscribers\n\
    \   choose between plain text and HTML mail, or individual messages and a\n  \
    \ daily digest.\n   To determine whether a message needs to be downgraded for\
    \ ASCII\n   recipients, list software might assume that any message received via\n\
    \   an SMTPUTF8 SMTP session is an SMTPUTF8 message or might examine the\n   headers\
    \ and body of the message to see whether it needs SMTPUTF8\n   treatment.  Depending\
    \ on the interface between the list software and\n   the Mail Transfer Agent (MTA)\
    \ and Mail Delivery Agent (MDA) that\n   handle incoming messages, it may not\
    \ be able to tell the type of\n   session for incoming messages.\n"
- title: 2.3.  SMTP Issues
  contents:
  - "2.3.  SMTP Issues\n   Mailing list software usually changes the envelope addresses\
    \ on each\n   message.  The bounce address is set to an address that will return\n\
    \   bounces to the list agent, and the recipient addresses are set to the\n  \
    \ subscribers of the list.  For some lists, all messages to a list get\n   the\
    \ same bounce address.  For others, list software may create a\n   bounce address\
    \ per recipient or a unique bounce address per message\n   per recipient, bounce\
    \ management techniques known as Variable\n   Envelope Return Paths or VERP [VERP].\n\
    \   The bounce address for a list typically includes the name of the\n   list,\
    \ so a list with a non-ASCII name will have a non-ASCII bounce\n   address.  Given\
    \ the unknown paths that bounce messages might take,\n   list software might instead\
    \ use an ASCII bounce address to make it\n   more likely that bounces can be delivered\
    \ back to the list agent.\n   Similarly, a VERP address for each subscriber typically\
    \ embeds a\n   version of the subscriber's address so the VERP bounce address\
    \ for a\n   non-ASCII subscriber address will be a non-ASCII address.  For the\n\
    \   same reason, the list software might use ASCII bounce addresses that\n   encode\
    \ the recipient's identity in some other way.\n"
- title: 3.  List Headers
  contents:
  - "3.  List Headers\n   List agents typically add list-specific headers to each\
    \ message\n   before resending the message to list recipients.\n"
- title: 3.1.  SMTPUTF8 List Headers
  contents:
  - "3.1.  SMTPUTF8 List Headers\n   The list headers in RFCs 2369 [RFC2369] and 2919\
    \ [RFC2919] were all\n   specified before SMTPUTF8 mail existed, and their definitions\
    \ do not\n   address where non-ASCII characters might appear.  These include,\
    \ for\n   example:\n   List-Id: List Header Mailing List\n      <list-header.example.com>\n\
    \   List-Help:\n      <mailto:list@example.com?subject=help>\n   List-Unsubscribe:\n\
    \      <mailto:list@example.com?subject=unsubscribe>\n   List-Subscribe:\n   \
    \   <mailto:list@example.com?subject=subscribe>\n   List-Post:\n      <mailto:list@example.com>\n\
    \   List-Owner:\n      <mailto:listmom@example.com> (Contact Person for Help)\n\
    \   List-Archive:\n      <mailto:archive@example.com?subject=index%20list>\n \
    \  As described in [RFC2369], \"[t]he contents of the list header fields\n   mostly\
    \ consist of angle-bracket ('<', '>') enclosed URLs, with\n   internal whitespace\
    \ being ignored\".  [RFC2919] specifies that \"[t]he\n   list identifier will,\
    \ in most cases, appear like a host name in a\n   domain of the list owner\".\
    \  Since these headers were defined in the\n   context of ASCII mail, these headers\
    \ permit only ASCII text,\n   including in the URLs.\n   The most commonly used\
    \ URI schemes in List-* headers tend to be http\n   and mailto [RFC6068], although\
    \ they sometimes include https and ftp\n   and, in principle, can contain any\
    \ valid URI.\n   Even if a scheme permits an internationalized form, it should\
    \ use a\n   pure ASCII form of the URI described in [RFC3986].  Future work may\n\
    \   extend these header fields or define replacements to directly support\n  \
    \ unencoded non-ASCII outside the ASCII repertoire in these and other\n   header\
    \ fields, but in the absence of such extension or replacement,\n   non-ASCII characters\
    \ can only be included by encoding them as ASCII.\n   The encoding technique specified\
    \ in [RFC3986] is to use a pair of hex\n   digits preceded by a percent sign,\
    \ but percent signs have been used\n   informally in mail addresses to do source\
    \ routing.  Although few mail\n   systems still permit source routing, a lot of\
    \ mail software still\n   forbids or escapes characters formerly used for source\
    \ routing, which\n   can lead to unfortunate interactions with percent-encoded\
    \ URIs or any\n   URI that includes one of those characters.  If a program interpreting\n\
    \   a mailto: URI knew that the Mail User Agent (MUA) in use were able to\n  \
    \ handle non-ASCII data, the program could pass the URI in unencoded\n   non-ASCII,\
    \ avoiding problems with misinterpreted percent signs, but\n   at this point,\
    \ there is no standard or even informal way for MUAs to\n   signal SMTPUTF8 capabilities.\
    \  Also, note that whether\n   internationalized domain names should be percent-encoded\
    \ or appear in\n   A-label form [RFC5890] depends on the context in which they\
    \ occur.\n   The List-ID header field uniquely identifies a list.  The intent\
    \ is\n   that the value of this header remain constant, even if the machine or\n\
    \   system used to operate or host the list changes.  This header field\n   is\
    \ often used in various filters and tests, such as client-side\n   filters, Sieve\
    \ filters [RFC5228], and so forth.  If the definition of\n   a List-ID header\
    \ field were to be extended to allow non-ASCII text,\n   filters and tests might\
    \ not properly compare encoded and unencoded\n   versions of a non-ASCII value.\
    \  In addition to these comparison\n   considerations, it is generally desirable\
    \ that this header field\n   contain something meaningful that users can type\
    \ in.  However, ASCII\n   encodings of non-ASCII characters are unlikely to be\
    \ meaningful to\n   users or easy for them to accurately type.\n"
- title: 3.2.  Downgrading List Headers
  contents:
  - "3.2.  Downgrading List Headers\n   If list software prepares a downgraded version\
    \ of an SMTPUTF8\n   message, all the List-* headers must be downgraded.  In particular,\n\
    \   if a List-* header contains a non-ASCII mailto (even encoded in\n   ASCII),\
    \ it may be advisable to edit the header to remove the non-\n   ASCII address\
    \ or replace it with an equivalent ASCII address if one\n   is known to the list\
    \ software.  Otherwise, a client might run into\n   trouble if the decoded mailto\
    \ results in a non-ASCII address.  If a\n   header that contains a mailto URL\
    \ is downgraded by percent encoding,\n   some mail software may misinterpret the\
    \ percent signs as attempted\n   source routing.\n   When downgrading list headers,\
    \ it may not be possible to produce a\n   downgraded version that is satisfactorily\
    \ equivalent to the original\n   header.  In particular, if a non-ASCII List-ID\
    \ is downgraded to an\n   ASCII version, software and humans at recipient systems\
    \ will\n   typically not be able to tell that both refer to the same list.\n \
    \  If lists permit mail with multiple MIME parts, some MIME headers in\n   SMTPUTF8\
    \ messages may include non-ASCII characters in file names and\n   other descriptive\
    \ text strings.  Downgrading these strings may lose\n   the sense of the names,\
    \ break references from other MIME parts (such\n   as HTML IMG references to embedded\
    \ images), and otherwise damage the\n   mail.\n"
- title: 3.3.  Subscribers' Addresses in Downgraded Headers
  contents:
  - "3.3.  Subscribers' Addresses in Downgraded Headers\n   List software typically\
    \ leaves the original submitter's address in\n   the From: line, both so that\
    \ recipients can tell who wrote the\n   message and so that they have a choice\
    \ of responding to the list or\n   directly to the submitter.  If a submitter\
    \ has a non-ASCII address,\n   there is no way to downgrade the From: header and\
    \ preserve the\n   address so that ASCII recipients can respond to it, since non-\n\
    \   SMTPUTF8 mail systems can't send mail to non-ASCII addresses.\n   Possible\
    \ work-arounds (none implemented that we know of) might\n   include allowing subscribers\
    \ with non-ASCII addresses to register an\n   alternate ASCII address with the\
    \ list software, having the list\n   software itself create ASCII forwarding addresses,\
    \ or just putting\n   the list's address in the From: line and losing the ability\
    \ to\n   respond directly to the submitter.\n"
- title: 4.  Security Considerations
  contents:
  - "4.  Security Considerations\n   None beyond what mailing list agents do now.\n"
- title: 5.  References
  contents:
  - '5.  References

    '
- title: 5.1.  Normative References
  contents:
  - "5.1.  Normative References\n   [RFC3986]  Berners-Lee, T., Fielding, R., and\
    \ L. Masinter, \"Uniform\n              Resource Identifier (URI): Generic Syntax\"\
    , STD 66,\n              RFC 3986, January 2005.\n   [RFC6068]  Duerst, M., Masinter,\
    \ L., and J. Zawinski, \"The 'mailto'\n              URI Scheme\", RFC 6068, October\
    \ 2010.\n   [RFC6409]  Gellens, R. and J. Klensin, \"Message Submission for Mail\"\
    ,\n              STD 72, RFC 6409, November 2011.\n   [RFC6530]  Klensin, J. and\
    \ Y. Ko, \"Overview and Framework for\n              Internationalized Email\"\
    , RFC 6530, February 2012.\n"
- title: 5.2.  Informative References
  contents:
  - "5.2.  Informative References\n   [RFC2369]  Neufeld, G. and J. Baer, \"The Use\
    \ of URLs as Meta-Syntax\n              for Core Mail List Commands and their\
    \ Transport through\n              Message Header Fields\", RFC 2369, July 1998.\n\
    \   [RFC2919]  Chandhok, R. and G. Wenger, \"List-Id: A Structured Field\n   \
    \           and Namespace for the Identification of Mailing Lists\",\n       \
    \       RFC 2919, March 2001.\n   [RFC5228]  Guenther, P. and T. Showalter, \"\
    Sieve: An Email Filtering\n              Language\", RFC 5228, January 2008.\n\
    \   [RFC5890]  Klensin, J., \"Internationalized Domain Names for\n           \
    \   Applications (IDNA): Definitions and Document Framework\",\n             \
    \ RFC 5890, August 2010.\n   [VERP]     Bernstein, D., \"Variable Envelope Return\
    \ Paths\",\n              February 1997, <http://cr.yp.to/proto/verp.txt>.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   John Levine\n   Taughannock Networks\n   PO Box 727\n\
    \   Trumansburg, NY  14886\n   US\n   Phone: +1 831 480 2300\n   EMail: standards@taugh.com\n\
    \   URI:   http://jl.ly\n   Randall Gellens\n   Qualcomm Incorporated\n   5775\
    \ Morehouse Drive\n   San Diego, CA  92121\n   US\n   EMail: rg+ietf@qti.qualcomm.com\n"
