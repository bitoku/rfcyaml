- title: __initial_text__
  contents:
  - '                 UUCP Mail Interchange Format Standard

    '
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   In response to the need for maintenance of current information\
    \ about\n   the status and progress of various projects in the ARPA-Internet\n\
    \   community, this RFC is issued for the benefit of community members.\n   The\
    \ information contained in this document is accurate as of the date\n   of publication,\
    \ but is subject to change. Subsequent RFCs will\n   reflect such changes.\n \
    \  This document defines the standard format for the transmission of\n   mail\
    \ messages between machines in the UUCP Project.  It does not\n   address the\
    \ format for storage of messages on one machine, nor the\n   lower level transport\
    \ mechanisms used to get the data from one\n   machine to the next.  It represents\
    \ a standard for conformance by\n   hosts in the UUCP zone.  Distribution of this\
    \ memo is unlimited.\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   This document is intended to define the standard format\
    \ for the\n   transmission of mail messages between machines in the UUCP Project.\n\
    \   It does not address the format for storage of messages on one\n   machine,\
    \ nor the lower level transport mechanisms used to get the\n   data from one machine\
    \ to the next.  We assume remote execution of the\n   rmail command (or equivalent)\
    \ as the UUCP network primitive\n   operation.\n   The general philosophy is that,\
    \ if we were to invent a new standard,\n   we would make ourselves incompatible\
    \ with existing systems.  There\n   are already too many (incompatible) standards\
    \ in the world, resulting\n   in ambiguities such as a!b@c.d which is parsed a!(b@c.d)\
    \ in the old\n   UUCP world, and (a!b)@c.d in the Internet world.  (Neither standard\n\
    \   allows parentheses, and in adding them we would be compatible with\n   neither.\
    \  There would also be serious problems with the shell and\n   with the UUCP transport\
    \ mechanism.)\n   Having an established, well documented, and extensible family\
    \ of\n   standards already defined by the ARPA community, we choose to adopt\n\
    \   these standards for the UUCP zone as well.  (The UUCP zone is that\n   subset\
    \ of the community connected by UUCP which chooses to register\n   with the UUCP\
    \ project.  It represents an administrative entity.)\n   While the actual transport\
    \ mechanism is up to the two hosts to\n   arrange, and might include UUCP, SMTP,\
    \ MMDF, or some other facility,\n   we adopt RFC-920 (domains) and RFC-822 (mail\
    \ format) as UUCP zone\n   standards.  All mail transmitted between systems should\
    \ conform to\n"
- title: RFC 976                                                    February 1986
  contents:
  - 'RFC 976                                                    February 1986

    '
- title: UUCP Mail Interchange Format Standard
  contents:
  - "UUCP Mail Interchange Format Standard\n   those two standards.  In addition,\
    \ should the ARPA community change\n   these standards at a later time, we intend\
    \ to change our standards to\n   remain compatible with theirs, given a reasonable\
    \ time to upgrade\n   software.\n   This document specifies an interpretation\
    \ of RFC-822 and RFC-920 in\n   the UUCP world.  It shows how the envelope should\
    \ be encoded, and how\n   UUCP routing is accomplished in an environment of mixed\n\
    \   implementations.\n"
- title: 2.  Basics
  contents:
  - "2.  Basics\n   Messages can be divided into two parts: the envelope and the message.\n\
    \   The envelope contains information needed by the mail transport\n   services,\
    \ and the message contains information useful to the sender\n   and receiver.\
    \  The message is divided into the header and the body.\n   Sometimes an intermediate\
    \ host will add to the message (e.g. a\n   Received line) but, except in the case\
    \ of a gateway which must\n   translate formats, it is not expected that intermediate\
    \ hosts will\n   change the message itself.  In the UUCP world, the envelope consists\n\
    \   of the \"destination addresses\" (normally represented as the argument\n \
    \  or arguments to the rmail command) and the \"source path\" (normally\n   represented\
    \ in one or more lines at the beginning of the message\n   beginning either \"\
    From \" or \">From \", sometimes called \"From_\n   lines\".)  The RFC-822 header\
    \ lines (including \"From:\" and \"To:\") are\n   part of the message, as is the\
    \ text of the message body itself.\n   UUCP uses short host names, such as \"\
    ucbvax\", at and below the\n   transport layer.  We refer to these names as \"\
    6 letter names\",\n   because all implementations of UUCP consider at least the\
    \ first 6\n   letters significant.  (Some consider the first 7 or the first 14\n\
    \   significant, but we must use the lowest common denominator.) UUCP\n   names\
    \ may be longer than 6 characters, but all such names much be\n   unique in their\
    \ first 6 letters.  RFC-920 domain names, such as\n   \"ucbvax.Berkeley.EDU\"\
    , are called \"domain names.\" The two names are\n   different.  Upper and lower\
    \ case are usually considered different in\n   6 letter names, but are considered\
    \ equivalent in domain names.  Names\n   such as \"ucbvax.UUCP\", consisting of\
    \ a 6 letter name followed by\n   \".UUCP\", previously were domain style references\
    \ to a host with a\n   given 6 letter name.  Such names are being phased out in\
    \ favor of\n   organizational domain names such as \"ucbvax.Berkeley.EDU\"\n"
- title: RFC 976                                                    February 1986
  contents:
  - 'RFC 976                                                    February 1986

    '
- title: UUCP Mail Interchange Format Standard
  contents:
  - 'UUCP Mail Interchange Format Standard

    '
- title: 2.1  Hybrid Addresses
  contents:
  - "2.1  Hybrid Addresses\n   There are (among others) two major kinds of mailing\
    \ address syntax\n   used in the UUCP world.  The a!b!c!user (\"bang paths\")\
    \ is used by\n   older UUCP software to explicitly route mail to the destination.\
    \  The\n   user@domain (\"domain\") syntax is used in conformance to RFC-822.\n\
    \   Under most circumstances, it is possible to look at a given address\n   and\
    \ determine which sort of address it is.  However, a hybrid address\n   with a\
    \ ! to the left of an @, such as a!b@c, is ambiguous: it could\n   be interpreted\
    \ as (a!b)@c.d or a!(b@c.d).  Both interpretations can\n   be useful.  The first\
    \ interpretation is required by RFC-822, the\n   second is a de-facto standard\
    \ in the UUCP software.\n   Because of the confusion surrounding hybrid addresses,\
    \ we recommend\n   that all transport layer software avoid the use of hybrid addresses\n\
    \   at all times.  A pure bang syntax can be used to disambiguate, being\n   written\
    \ c.d!a!b in the first case above, and a!c.d!b in the second.\n   We recommend\
    \ that all implementations use this \"bang domain\" syntax\n   unless they are\
    \ sure of what is running on the next machine.\n   In conformance with RFC-822\
    \ and the AT&T Message Transfer\n   Architecture, we recommand that any host that\
    \ accepts hybrid\n   addresses apply the (a!b)@c.d interpretation.\n"
- title: 2.2  Transport
  contents:
  - "2.2  Transport\n   Since SMTP is not available to much of the UUCP domain, we\
    \ define the\n   method to be used for \"remote execution\" based transport mechanisms.\n\
    \   The command to be \"remotely executed\" should read\n      rmail user@domain\
    \ ...\n   with the message on the standard input of the command.  The\n   \"user@domain\"\
    \ argument must conform to RFC-920 and RFC-822.  More\n   than one address argument\
    \ is allowed, in order to save transmission\n   costs for multiple recipients\
    \ of the same message.\n   An alternative form that may be used is\n      rmail\
    \ domain!user\n   where \"domain\" contains at least one period and no !'s.  This\
    \ is to\n   be interpreted exactly the same as user@domain, and can be used to\n\
    \   transport a message across old UUCP hosts without fear that they\n   might\
    \ change the address.  The \"user\" string can contain any\n   characters except\
    \ \"@\".  This character is forbidden because it is\n   unknown what an intermediate\
    \ host might do to it. (It is also\n"
- title: RFC 976                                                    February 1986
  contents:
  - 'RFC 976                                                    February 1986

    '
- title: UUCP Mail Interchange Format Standard
  contents:
  - "UUCP Mail Interchange Format Standard\n   recommended that the \"%\" character\
    \ be avoided, since some hosts treat\n   \"%\" as a synonym for \"@\".) However,\
    \ to route across hosts that don't\n   understand domains, the following is possible\n\
    \      rmail a!b!c!domain!user\n   A \"domain\" can be distinguished from a 6\
    \ letter UUCP site name\n   because a domain will contain at least one period.\
    \  (In the case of\n   single level domains with no periods, a period should be\
    \ added to the\n   end, e.g. Mark.Horton@att becomes \"att.!Mark.Horton\".  A\
    \ translator\n   from ! to @ format should remove a trailing dot at the end of\
    \ the\n   domain, if one is present.) We don't expect this to happen, except\n\
    \   for local networks using addresses like \"user@host\".\n   A simple implementation\
    \ can always generate domain!user syntax\n   (rather than user@domain) since it\
    \ is safe to assume that gateways\n   are class 3 (Classes are explained in section\
    \ 3.5).\n"
- title: 2.3  Batch SMTP
  contents:
  - "2.3  Batch SMTP\n   Standard conforming implementations may optionally support\
    \ a protocol\n   called \"Batch SMTP\".  SMTP (Simple Mail Transfer Protocol)\
    \ is the\n   ARPA community standard mail transfer protocol (RFC-821). It is also\n\
    \   used on BITNET and Mailnet.  While SMTP was designed to be\n   interactive,\
    \ it is possible to batch up a series of commands and send\n   them off to a remote\
    \ machine for batch execution.  This is used on\n   BITNET, and is appropriate\
    \ for UUCP.  One advantage to BSMTP is that\n   the UNIX shell does not get involved\
    \ in the interpretation of\n   messages, so it becomes possible to include special\
    \ characters such\n   as space and parentheses in electronic messages.  (Such\
    \ characters\n   are expected to be popular in X.400 addresses.)\n   To support\
    \ BSMTP on UNIX, a conforming host should arrange that mail\n   to the user \"\
    b-smtp\" is interpreted as Batch SMTP commands.  (We use\n   b-smtp instead of\
    \ bsmtp because bsmtp might conflict with a login\n   name.) Since many mail systems\
    \ treat lines consisting of a single\n   period as an \"end of file\" flag, and\
    \ since SMTP uses the period as a\n   required end of file flag, and to strip\
    \ off headers, we put an extra\n   \"#\" at the beginning of each BSMTP line.\
    \  On a sendmail system, an\n   easy way to implement this is to include the alias\n\
    \      b-smtp: \"|egrep '^#' | sed 's/^#//' | /usr/lib/sendmail -bs\"\n   which\
    \ will feed the commands to an SMTP interpreter.  A better\n   solution would\
    \ appropriately check for errors and send back an error\n   message to the sender.\n"
- title: RFC 976                                                    February 1986
  contents:
  - 'RFC 976                                                    February 1986

    '
- title: UUCP Mail Interchange Format Standard
  contents:
  - "UUCP Mail Interchange Format Standard\n   An example BSMTP message from seismo.CSS.GOV\
    \ to cbosgd.ATT.COM is\n   shown here.  This sample is the file shipped over the\
    \ UUCP link for\n   in put to the command \"rmail b-smtp\".  Note that the RFC-\
    \ 822 message\n   is between the DATA line and the period line.  The envelope\n\
    \   information is passed in the MAIL FROM and RCPT TO lines.  The name\n   of\
    \ the sending system is in the HELO line.  The actual envelope\n   information\
    \ (above the # lines) is ignored and need not be present.\n      From foo!bar\
    \ Sun Jan 12 23:59:00 1986 remote from seismo Date:\n      Tue, 18 Feb 86 13:07:36\
    \ EST\n      From: mark@ucbvax.Berkeley.EDU\n      Message-Id: <8602181807.AA10228@mark@ucbvax.Berkeley.EDU>\
    \ To:\n      b-smtp@cbosgd.ATT.COM\n      #HELO seismo.CSS.GOV\n      #MAIL FROM:<mark@ucbvax.Berkeley.EDU>\n\
    \      #RCPT TO:<mark@cbosgd.ATT.COM>\n      #DATA\n      #Date: Tue, 18 Feb 86\
    \ 13:07:36 EST\n      #From: mark@ucbvax.Berkeley.EDU\n      #Message-Id: <8602181807.AA10228@mark@ucbvax.Berkeley.EDU>\
    \ #To:\n      mark@cbosgd.ATT.COM\n      #\n      #This is a sample message.\n\
    \      #.\n      #QUIT\n"
- title: 2.4  Envelope
  contents:
  - "2.4  Envelope\n   The standard input of the command should begin with a single\
    \ line\n      From domain!user date remote from system\n   followed immediately\
    \ by the RFC-822 format headers and body of the\n   message.  It is possible that\
    \ there will be additional From_ lines\n   preceding this line - these lines may\
    \ be added, one line for each\n   system the message passes through.  It is also\
    \ possible that the\n   \"system\" fields will be stacked into a single line,\
    \ with many !'s in\n   the \"user\" string.  The \">\" character may precede the\
    \ \"From\".  In\n   general, this is the \"envelope\" information, and should\
    \ follow the\n   same conventions that previous UUCP mail has followed.  The primary\n\
    \   difference is that, when the system names are stacked up, if\n   previously\
    \ the result would have been a!b!c!mysys!me, the new result\n   will be a!b!c!mysys!domain!me,\
    \ where domain will contain at least one\n   period, and \"mysys\" is often the\
    \ 6 letter UUCP name for the same\n"
- title: RFC 976                                                    February 1986
  contents:
  - 'RFC 976                                                    February 1986

    '
- title: UUCP Mail Interchange Format Standard
  contents:
  - "UUCP Mail Interchange Format Standard\n   system named by \"domain\".  If the\
    \ \"domain!\" is redundant, it may be\n   omitted from the envelope, either in\
    \ the source path or in the\n   destination address.\n   The receiving system\
    \ may discard extra \"From_\" lines if it folds the\n   information into a a single\
    \ From_ line. It passes the\n   path!domain!user along as the \"envelope\" information\
    \ containing the\n   address of the sender of the message, and possibly preserves\
    \ the\n   forwarding date and system in a newly generated header line, such as\n\
    \   Received or Sent-By.  (Adding Received using this information is\n   discouraged,\
    \ since the line appears to have been added on a different\n   system than the\
    \ one actually adding it.  That other system may have\n   actually included a\
    \ Received line too! The Sent-By line is similar to\n   Received, but the date\
    \ need not be converted into RFC-822 format, and\n   the line is not claimed to\
    \ have been added by the system whose name\n   is mentioned.)\n   If the receiving\
    \ system passes the message along to another system,\n   it will add a \"From_\"\
    \ line to the front, giving the same user@domain\n   address for the sender, and\
    \ its own name for the system.  If the\n   receiving system stores the message\
    \ in a local mailbox, it is\n   recommended that a single \"From_\" line be generated\
    \ at the front of\n   the message, keeping the date (in the same format, since\
    \ certain mail\n   reading programs are sensitive to this format), and not using\
    \ the\n   \"remote from system\" syntax.\n   Note - if an intermediate system\
    \ adds text such as \"system!\" to the\n   front of a \"user@domain\" syntax address,\
    \ either in the envelope or\n   the body, this is a violation of this standard\
    \ and of RFC-822.\n"
- title: 2.5  Routing
  contents:
  - "2.5  Routing\n   In order to properly route mail, it is sometimes necessary to\
    \ know\n   what software a destination or intermediate machine is running, or\n\
    \   what conventions it follows.  We have tried to minimize the amount of\n  \
    \ this information that is necessary, but the support of subdomains may\n   require\
    \ that different methods are used in different situations.  For\n   purposes of\
    \ predicting the behavior of other hosts, we divide hosts\n   into three classes.\
    \ These classes are:\n   Class 1   old-style UUCP ! routing only.  We assume that\
    \ the host\n             understands local user names:\n                  rmail\
    \ user\n"
- title: RFC 976                                                    February 1986
  contents:
  - 'RFC 976                                                    February 1986

    '
- title: UUCP Mail Interchange Format Standard
  contents:
  - "UUCP Mail Interchange Format Standard\n             and bang paths\n        \
    \          rmail host1!host2!user\n             but we assume nothing more about\
    \ the host.  If we have\n             no information about a host, we can treat\
    \ it as class 1\n             with no problems, since we make no assumptions about\n\
    \             how it will handle hybrid addresses.\n   Class 2   Old style UUCP\
    \ ! routing, and 4.2BSD style domain\n             parsing.  We assume the capabilities\
    \ of class 1, plus\n             the ability to understand\n                 \
    \ rmail user@domain\n             if the \"domain\" is one outside the UUCP zone\
    \ which\n             the host knows about.  Class 2 hosts do not necessarily\n\
    \             understand domain!user or have routers.  Hosts in non-\n       \
    \      UUCP RFC-920 domains are considered class 2, even though\n            \
    \ they may not understand host!user.\n   Class 3   All class 1 and 2 features\
    \ are present.  In addition,\n             class 3 hosts must be able to route\
    \ UUCP mail for hosts\n             that are not immediately adjacent and also\
    \ understand\n             the syntax\n                  rmail domain!user\n \
    \            as described above.  All gateways into UUCP must be\n           \
    \  class 3.\n   This document describes what class 3 hosts must be able to process.\n\
    \   Classes 1 and 2 already exist, and will continue to exist for a long\n   time,\
    \ but are viewed as \"older systems\" that may eventually be\n   upgraded to class\
    \ 3 status.\n"
- title: 3.  Algorithm
  contents:
  - "3.  Algorithm\n   The algorithm for delivering a message to an address \"user@domain\"\
    \n   over UUCP links can be summarized as follows:\n      a.  If the address is\
    \ actually of the form @domain1:user@domain2,\n          the \"domain\" used for\
    \ the remainder should be \"domain1\"\n          instead of \"domain2\", and the\
    \ bang form reads\n          domain1!domain2!user.\n"
- title: RFC 976                                                    February 1986
  contents:
  - 'RFC 976                                                    February 1986

    '
- title: UUCP Mail Interchange Format Standard
  contents:
  - "UUCP Mail Interchange Format Standard\n      b.  Determine d: the most specific\
    \ part of \"domain\" that is\n          recognized locally.  This part will be\
    \ a suffix of \"domain\".\n          This can be done by scanning through a table\
    \ with entries that\n          go from specific to general, comparing entries\
    \ with \"domain\"\n          to see if the entries are at the tail of \"domain\"\
    .  For\n          example, with the address \"mark@osgd.cb.att.com\", if the local\n\
    \          host recognizes \"uucp\" and \"att.com\", d would be \"att.com\".\n\
    \          The final entry in the table will be the null string, matching\n  \
    \        any completely unrecognized domain.\n      c.  Look in the found table\
    \ entry for g: the name of the\n          \"gateway\", and for r: a UUCP !-style\
    \ route to reach g.  G is\n          not necessarily directly connected to the\
    \ local host, but\n          should be viewed as a gateway into the d domain.\
    \  (The values\n          of g and r for a given d may be different on different\
    \ hosts,\n          although g will often be the same.)\n      d.  Look at the\
    \ beginning of r to find the \"next hop\" host n. N\n          will always be\
    \ directly connected to the local host.\n      e.  Determine, if possible, the\
    \ class of g and n.\n      f.  Create an appropriate destination string s to be\
    \ interpreted\n          by n.  (See below.)\n      g.  Pass the message off to\
    \ n with destination information s.\n      In an environment with other types\
    \ of networks that do not use\n      UUCP !  parsing, the table will probably\
    \ contain additional\n      information, such as which type of link to use.  The\
    \ path\n      information may be replaced in other environments by information\n\
    \      specific to the network.\n      The first entries in the table mentioned\
    \ in part (b) are normally\n      very specific, and allow well known routes to\
    \ be constructed\n      directly instead of routing through the domain tree. \
    \ The domain\n      tree should be reserved for cases where no better information\
    \ is\n      available, or where traffic is very light, or where the default\n\
    \      route is the best available.  If a better route is available, that\n  \
    \    information can be put in the table.  If a host has any\n      significant\
    \ amount of traffic sent to a second host, it is\n      normally expected that\
    \ the two hosts will set up a direct UUCP\n      link and make an entry in their\
    \ tables to send mail directly, even\n      if they are in separate domains. \
    \ Routing tables should be\n      constructed to try to keep paths short and inexpensive\
    \ for as much\n      traffic as possible.\n"
- title: RFC 976                                                    February 1986
  contents:
  - 'RFC 976                                                    February 1986

    '
- title: UUCP Mail Interchange Format Standard
  contents:
  - "UUCP Mail Interchange Format Standard\n      Here are some hints for the construction\
    \ of the destination string\n      n (step f above.) The \"envelope recipient\"\
    \ information (the\n      argument(s) to rmail) may be in either domain ! form\n\
    \      (host.com!user) or domain @ form (user@host.com) as long as the\n     \
    \ sending site is sure the next hop is class 3.  If the next hop is\n      not\
    \ class 3, or the sending site is not sure, the ! form should be\n      used,\
    \ if possible, since it is hard to predict what the next hop\n      would do with\
    \ a hybrid address.\n      If the gateway is known to be class 3, domain ! form\
    \ may be used,\n      but if the sending site is not sure, and the entire destination\n\
    \      string was matched in the lookup (rather than some parent domain),\n  \
    \    the 6 letter ! form should be used: r!user, for example:\n      dumbhost!host!user.\
    \  If the gateway appears to actually be a\n      gateway for a subdomain, e.g.\
    \ because a parent domain was matched,\n      (such as the address user@host.gateway.com,\
    \ where host.gateway.com\n      was not found but gateway.com was) it can be assumed\
    \ to be at\n      class 3.  This allows routes such as\n      dumbhost!domain!host.domain.com!user\
    \ to be used with a reasonable\n      degree of safety.  If a direct link exists\
    \ to the destination\n      host, the user@domain syntax or the domain!user syntax\
    \ may be\n      used.\n      All hosts conforming to this standard are class 3,\
    \ and all\n      subdomain gateways must be class 3 hosts.\n"
- title: 4.  Example
  contents:
  - "4.  Example\n   Suppose host A.D.COM sends mail to host C.D.COM.  Let's suppose\
    \ that\n   the 6 letter names for these hosts are aname and dname, and that the\n\
    \   intermediate host to be routed through has name bname.\n   The user on A types\n\
    \      mail user@c.d.com\n   The user interface creates a file such as\n     \
    \ Date:  9 Jan 1985   8:39 EST\n      From: myname@A.D.COM (My Name)\n      Subject:\
    \ sample message\n      To: user@c.d.com\n      This is a sample message\n   and\
    \ passes it to the transport mechanism with a command such as\n"
- title: RFC 976                                                    February 1986
  contents:
  - 'RFC 976                                                    February 1986

    '
- title: UUCP Mail Interchange Format Standard
  contents:
  - "UUCP Mail Interchange Format Standard\n      sendmail user@c.d.com < file\n \
    \  The transport mechanism looks up a route to c.d.com.  It does not\n   find\
    \ c.d.com in its database, so it looks up d.com, and finds that\n   the path is\
    \ bname!dname!%s, and that c.d.com is a class 3 host.\n   Plugging in c.d.com!user,\
    \ it gets the path bname!dname!c.d.com!user.\n   (If it had found c.d.com with\
    \ path bname!cname!%s, it would have\n   omitted the domain from the resulting\
    \ path: bname!cname!user, since\n   it is not sure whether the destination host\
    \ is class 1, 2, or 3.)\n   It prepends a From_ line and passes it to uux:\n \
    \     uux - bname!rmail dname!c.d.com!user < file2\n   where file2 contains\n\
    \      From A.D.COM!user Wed Jan  9 12:43:35 1985 remote from aname Date:\n  \
    \    9 Jan 1985   8:39 EST\n      From: myname@A.D.COM (My Name)\n      Subject:\
    \ sample message\n      To: user@c.d.com\n      This is a sample message\n   (Note\
    \ the blank line at the end of the message - at least one blank\n   line is required.)\
    \ This results in the command\n      rmail dname!c.d.com!user\n   running on B.\
    \  B prepends its own from line and passes the mail\n   along:\n      uux - dname!rmail\
    \ c.d.com!user < file3\n   where file3 contains\n      From nuucp Wed Jan  9 12:43:35\
    \ 1985 remote from bname >From\n      A.D.COM!user Wed Jan  9 11:21:48 1985 remote\
    \ from aname Date:  9\n      Jan 1985   8:39 EST\n      From: myname@A.D.COM (My\
    \ Name)\n      Subject: sample message\n      To: user@c.d.com\n      This is\
    \ a sample message\n"
- title: RFC 976                                                    February 1986
  contents:
  - 'RFC 976                                                    February 1986

    '
- title: UUCP Mail Interchange Format Standard
  contents:
  - "UUCP Mail Interchange Format Standard\n   The command\n      rmail c.d.com!user\n\
    \   is run on C, which stacks the From_ lines\n      From bname!aname!A.D.COM!user\
    \ Wed Jan  9 12:43:35 1985 Date:  9\n      Jan 1985   8:39 EST\n      From: myname@A.D.COM\
    \ (My Name)\n      Subject: sample message\n      To: user@c.d.com\n      This\
    \ is a sample message\n   and stores the message locally, probably in this same\
    \ format.\n"
- title: 5.  Summary
  contents:
  - "5.  Summary\n   Hosts conforming to this standard should accept all of the following\n\
    \   forms:\n      rmail localuser               (no !%@ in user)\n      rmail\
    \ hosta!hostb!user        (no !%@ in user)\n      rmail user@domain          \
    \   (only . in domain)\n      rmail domain!user             (at least 1 . in domain)\n\
    \      rmail domain.!user            (in case domain has no dots)\n   The \"envelope\"\
    \ portion of the message (\"From_\" lines) should conform\n   to existing conventions,\
    \ using ! routing.  The \"heading\" portion of\n   the message (the Word: lines\
    \ such as Date:, From:, To:, and Subject:)\n   must conform to RFC-822.  All header\
    \ addresses must be in the @ form.\n   The originating site should ensure that\
    \ the addresses conform to\n   RFC-822, since no requirement is placed on forwarding\
    \ sites or\n   gateways to transform addresses into legal RFC-822 format.  (Such\n\
    \   forwarding sites and gateways should NOT, however, change a legal\n   RFC-822\
    \ address such as user@domain into an illegal RFC-822 address\n   such as gateway!user@domain,\
    \ even if forwarding to a class 1 UUCP\n   host.)\n"
- title: 6.  References
  contents:
  - "6.  References\n   [1]  Postel, J., \"Simple Mail Transfer Protocol\", RFC-821,\n\
    \        USC/Information Sciences Institute, August, 1982.\n   [2]  Crocker, D.,\
    \ \"Standard for the Format of ARPA Internet Text\n        Messages\", RFC-822,\
    \ Department of Electrical Engineering,\n        University of Delaware, August,\
    \ 1982.\n"
- title: RFC 976                                                    February 1986
  contents:
  - 'RFC 976                                                    February 1986

    '
- title: UUCP Mail Interchange Format Standard
  contents:
  - "UUCP Mail Interchange Format Standard\n   [3]  Postel, J., and J. K. Reynolds,\
    \ \"Domain Requirements\", RFC-920,\n        USC/Information Sciences Institute,\
    \ October, 1984.\n"
