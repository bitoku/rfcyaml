- contents:
  - '                Diameter Quality-of-Service Application

    '
  title: __initial_text__
- contents:
  - "Abstract\n   This document describes the framework, messages, and procedures
    for\n   the Diameter Quality-of-Service (QoS) application.  The Diameter QoS\n
    \  application allows network elements to interact with Diameter servers\n   when
    allocating QoS resources in the network.  In particular, two\n   modes of operation,
    namely \"Pull\" and \"Push\", are defined.\n"
  title: Abstract
- contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This
    document is a product of the Internet Engineering Task Force\n   (IETF).  It represents
    the consensus of the IETF community.  It has\n   received public review and has
    been approved for publication by the\n   Internet Engineering Steering Group (IESG).
    \ Further information on\n   Internet Standards is available in Section 2 of RFC
    5741.\n   Information about the current status of this document, any errata,\n
    \  and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc5866.\n"
  title: Status of This Memo
- contents:
  - "Copyright Notice\n   Copyright (c) 2010 IETF Trust and the persons identified
    as the\n   document authors.  All rights reserved.\n   This document is subject
    to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n
    \  (http://trustee.ietf.org/license-info) in effect on the date of\n   publication
    of this document.  Please review these documents\n   carefully, as they describe
    your rights and restrictions with respect\n   to this document.  Code Components
    extracted from this document must\n   include Simplified BSD License text as described
    in Section 4.e of\n   the Trust Legal Provisions and are provided without warranty
    as\n   described in the Simplified BSD License.\n"
  title: Copyright Notice
- contents:
  - "Table of Contents\n   1.  Introduction . . . . . . . . . . . . . . . . . . .
    . . . . . .  3\n   2.  Terminology  . . . . . . . . . . . . . . . . . . . . .
    . . . .  3\n   3.  Framework  . . . . . . . . . . . . . . . . . . . . . . . .
    . .  5\n     3.1.  Network Element Functional Model . . . . . . . . . . . . .
    \ 7\n     3.2.  Implications of Endpoint QoS Capabilities  . . . . . . . .  8\n
    \      3.2.1.  Endpoint Categories  . . . . . . . . . . . . . . . . .  8\n       3.2.2.
    \ Interaction Modes between the Authorizing Entity\n               and Network
    Element  . . . . . . . . . . . . . . . . .  9\n     3.3.  Authorization Schemes
    \ . . . . . . . . . . . . . . . . . . 10\n       3.3.1.  Pull Mode Schemes  .
    . . . . . . . . . . . . . . . . . 10\n       3.3.2.  Push Mode Schemes  . . .
    . . . . . . . . . . . . . . . 13\n     3.4.  QoS Application Requirements . .
    . . . . . . . . . . . . . 14\n   4.  QoS Application Session Establishment and
    Management . . . . . 17\n     4.1.  Parties Involved . . . . . . . . . . . . .
    . . . . . . . . 17\n     4.2.  Session Establishment  . . . . . . . . . . . .
    . . . . . . 18\n       4.2.1.  Session Establishment for Pull Mode  . . . . .
    . . . . 18\n       4.2.2.  Session Establishment for Push Mode  . . . . . . .
    . . 21\n       4.2.3.  Discovery and Selection of Peer Diameter QoS\n               Application
    Node . . . . . . . . . . . . . . . . . . . 24\n     4.3.  Session Re-Authorization
    . . . . . . . . . . . . . . . . . 24\n       4.3.1.  Client-Side Initiated Re-Authorization
    . . . . . . . . 25\n       4.3.2.  Server-Side Initiated Re-Authorization . .
    . . . . . . 26\n     4.4.  Session Termination  . . . . . . . . . . . . . . .
    . . . . 28\n       4.4.1.  Client-Side Initiated Session Termination  . . . .
    . . 28\n       4.4.2.  Server-Side Initiated Session Termination  . . . . . .
    28\n   5.  QoS Application Messages . . . . . . . . . . . . . . . . . . . 29\n
    \    5.1.  QoS-Authorization Request (QAR)  . . . . . . . . . . . . . 30\n     5.2.
    \ QoS-Authorization-Answer (QAA) . . . . . . . . . . . . . . 31\n     5.3.  QoS-Install
    Request (QIR)  . . . . . . . . . . . . . . . . 32\n     5.4.  QoS-Install Answer
    (QIA) . . . . . . . . . . . . . . . . . 32\n     5.5.  Re-Auth-Request (RAR)  .
    . . . . . . . . . . . . . . . . . 33\n     5.6.  Re-Auth-Answer (RAA) . . . .
    . . . . . . . . . . . . . . . 34\n   6.  QoS Application State Machine  . . .
    . . . . . . . . . . . . . 34\n     6.1.  Supplemented States for Push Mode  .
    . . . . . . . . . . . 34\n   7.  QoS Application AVPs . . . . . . . . . . . .
    . . . . . . . . . 35\n     7.1.  Reused Base Protocol AVPs  . . . . . . . . .
    . . . . . . . 36\n     7.2.  QoS Application-Defined AVPs . . . . . . . . . .
    . . . . . 36\n   8.  Accounting . . . . . . . . . . . . . . . . . . . . . . .
    . . . 37\n   9.  Examples . . . . . . . . . . . . . . . . . . . . . . . . . .
    . 38\n     9.1.  Example Call Flow for Pull Mode (Success Case) . . . . . . 38\n
    \    9.2.  Example Call Flow for Pull Mode (Failure Case) . . . . . . 40\n     9.3.
    \ Example Call Flow for Push Mode  . . . . . . . . . . . . . 43\n   10. IANA Considerations
    \ . . . . . . . . . . . . . . . . . . . . . 45\n     10.1. AVP Codes  . . . .
    . . . . . . . . . . . . . . . . . . . . 45\n     10.2. Application IDs  . . .
    . . . . . . . . . . . . . . . . . . 45\n     10.3. Command Codes  . . . . . .
    . . . . . . . . . . . . . . . . 46\n   11. Security Considerations  . . . . .
    . . . . . . . . . . . . . . 46\n   12. Acknowledgements . . . . . . . . . . .
    . . . . . . . . . . . . 47\n   13. Contributors . . . . . . . . . . . . . . .
    . . . . . . . . . . 47\n   14. References . . . . . . . . . . . . . . . . . .
    . . . . . . . . 48\n     14.1. Normative References . . . . . . . . . . . . .
    . . . . . . 48\n     14.2. Informative References . . . . . . . . . . . . . .
    . . . . 48\n"
  title: Table of Contents
- contents:
  - "1.  Introduction\n   This document describes the framework, messages, and procedures
    for\n   the Diameter [RFC3588] Quality-of-Service (QoS) application.  The\n   Diameter
    QoS application allows Network Elements (NEs) to interact\n   with Diameter servers
    when allocating QoS resources in the network.\n   Two modes of operation are defined.
    \ In the first, called \"Pull\"\n   mode, the network element requests QoS authorization
    from the\n   Diameter server based on some trigger (such as a QoS signaling\n
    \  protocol) that arrives along the data path.  In the second, called\n   \"Push\"
    mode, the Diameter server proactively sends a command to the\n   network element(s)
    to install QoS authorization state.  This could be\n   triggered, for instance,
    by off-path signaling, such as Session\n   Initiation Protocol (SIP) [RFC3261]
    call control.\n   A set of command codes is specified that allows a single Diameter
    QoS\n   application server to support both Pull and Push modes based on the\n
    \  requirements of network technologies, deployment scenarios, and end-\n   host
    capabilities.  In conjunction with Diameter Attribute Value\n   Pairs (AVPs) defined
    in [RFC5777] and in [RFC5624], this document\n   depicts basic call-flow procedures
    used to establish, modify, and\n   terminate a Diameter QoS application session.\n
    \  This document defines a number of Diameter-encoded AVPs, which are\n   described
    using a modified version of the Augmented Backus-Naur Form\n   (ABNF), see [RFC3588].\n"
  title: 1.  Introduction
- contents:
  - "2.  Terminology\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\",
    \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\"
    in this\n   document are to be interpreted as described in RFC 2119 [RFC2119].\n
    \  The following terms are used in this document:\n   AAA Cloud\n      An infrastructure
    of Authentication, Authorization, and Accounting\n      (AAA) entities (clients,
    agents, servers) communicating via a AAA\n      protocol over trusted, secure
    connections.  It offers\n      authentication, authorization, and accounting services
    to\n      applications in local and roaming scenarios.  Diameter and RADIUS\n
    \     [RFC2865] are both widely deployed AAA protocols.\n   Application Endpoint
    (AppE)\n      An Application Endpoint is an entity in an end-user device that\n
    \     exchanges signaling messages with Application Servers or directly\n      with
    other Application Endpoints.  Based on the result of this\n      signaling, the
    endpoint may make a request for QoS from the\n      network.  For example, a SIP
    User Agent is one kind of Application\n      Endpoint.\n   Application Server
    (AppS)\n      An Application Server is an entity that exchanges signaling\n      messages
    with an Application Endpoint (see above).  It may be a\n      source of authorization
    for QoS-enhanced application flows.  For\n      example, a SIP server is one kind
    of Application Server.\n   Authorizing Entity (AE)\n      The Authorizing Entity
    is a Diameter server that supports the QoS\n      application.  It is responsible
    for authorizing QoS requests for a\n      particular application flow or aggregate.
    \ The Authorizing Entity\n      may be a standalone entity or may be integrated
    with an\n      Application Server and may be co-located with a subscriber\n      database.
    \ This entity corresponds to the Policy Decision Point\n      (PDP) [RFC2753].\n
    \  Network Element (NE)\n      A QoS-aware router that acts as a Diameter client
    for the QoS\n      application.  This entity triggers the protocol interaction
    for\n      Pull mode, and it is the recipient of QoS information in Push\n      mode.
    \ The Diameter client at a Network Element corresponds to the\n      Policy Enforcement
    Point (PEP) [RFC2753].\n   Pull Mode\n      In this mode, the QoS authorization
    process is invoked by the QoS\n      reservation request received from the Application
    Endpoint.  The\n      Network Element then requests the QoS authorization decision
    from\n      the Authorizing Entity.\n   Push Mode\n      In this mode, the QoS
    authorization process is invoked by the\n      request from the Application Server
    or local policies in the\n      Authorizing Entity.  The Authorizing Entity then
    installs the QoS\n      authorization decision to the Network Element directly.\n
    \  Resource Requesting Entity (RRE)\n      A Resource Requesting Entity is a logical
    entity that supports the\n      protocol interaction for QoS resources.  The RRE
    resides in the\n      end-host and is able to communicate with peer logical entities
    in\n      an Authorizing Entity or a Network Element to trigger the QoS\n      authorization
    process.\n"
  title: 2.  Terminology
- contents:
  - "3.  Framework\n   The Diameter QoS application runs between an NE (acting as
    a Diameter\n   client) and the resource AE (acting as a Diameter server).  A high-\n
    \  level picture of the resulting architecture is shown in Figure 1.\n               +-------+---------+\n
    \              |   Authorizing   |\n               |     Entity      |\n               |(Diameter
    Server)|\n               +-------+---------+\n                       |\n                       |\n
    \               /\\-----+-----/\\\n            ////               \\\\\\\\\n          ||
    \      AAA Cloud       ||\n         |   (Diameter application)  |\n          ||
    \                      ||\n            \\\\\\\\               ////\n                \\-------+-----/\n
    \                       |\n       +---+--+   +-----+----+   +---+--+\n       |
    \     |   |    NE    |   |      |    Media\n       +  NE  +===+(Diameter +===+
    \ NE  +=============>>\n       |      |   |  Client) |   |      |    Flow\n       +------+
    \  +----------+   +------+\n               Figure 1: An Architecture Supporting
    QoS-AAA\n   Figure 1 depicts NEs through which media flows need to pass, a cloud\n
    \  of AAA servers, and an AE.  Note that there may be more than one\n   router
    that needs to interact with the AAA cloud along the path of a\n   given application
    flow, although the figure only depicts one for\n   clarity.\n   In some deployment
    scenarios, NEs may request authorization through\n   the AAA cloud based on an
    incoming QoS reservation request.  The NE\n   will route the request to a designated
    AE.  The AE will return the\n   result of the authorization decision.  In other
    deployment scenarios,\n   the authorization will be initiated upon dynamic application
    state,\n   so that the request must be authenticated and authorized based on\n
    \  information from one or more AppSs.  After receiving the\n   authorization
    request from the AppS or the NE, the AE decides the\n   appropriate mode (i.e.,
    Push or Pull).  The usage of Push or Pull\n   mode can be determined by the Authorizing
    Entity either statically or\n   dynamically.  Static determination might be based
    on a configurable\n   defined policy in the Authorizing Entity, while dynamic
    determination\n   might be based on information received from an application server.\n
    \  For Push mode, the Authorizing Entity needs to identify the\n   appropriate
    NE(s) to which QoS authorization information needs to be\n   pushed.  It might
    determine this based on information received from\n   the AppS, such as the IP
    addresses of media flows.\n   In some deployment scenarios, there is a mapping
    between access\n   network type and the service logic (e.g., selection of Push
    or Pull\n   mode and other differentiated handling of the resource admission and\n
    \  control).  The access network type might be derived from the\n   authorization
    request from the AppS or the NE, and in this case, the\n   Authorizing Entity
    can identify the corresponding service logic based\n   on the mapping.\n   If
    the interface between the NEs and the AAA cloud is identical\n   regardless of
    whether or not the AE communicates with an AppS,\n   routers are insulated from
    the details of particular applications and\n   need not know that Application
    Servers are involved.  Also, the AAA\n   cloud may also encompass business relationships
    such as those between\n   network operators and third-party application providers.
    \ This\n   enables flexible intra- or inter-domain authorization, accounting,\n
    \  and settlement.\n"
  - contents:
    - "3.1.  Network Element Functional Model\n   Figure 2 depicts a logical operational
      model of resource management\n   in a router.\n               +-------------------------------------------------------+\n
      \              | DIAMETER Client                                       |\n               |
      Functionality                                         |\n               | +---------------++-----------------++---------------+
      |\n               | | User          || QoS Application || Accounting    | |\n
      \              | | Authentication|| Client          || Client (e.g., | |\n               |
      | Client        || (Authorization  ||for QoS Traffic| |\n               | +---------------+|
      of QoS Requests)|+---------------+ |\n               |                  +-----------------+
      \                 |\n               +-------------------------------------------------------+\n
      \                                             ^\n                                              v\n
      \           +--------------+            +----------+\n            |QoS Signaling
      |            | Resource |\n            |Msg Processing|<<<<<>>>>>>>|Management|\n
      \           +--------------+            +----------+\n                 .  ^
      \  |              *      ^\n                 |  v   .            *        ^\n
      \           +-------------+        *          ^\n            |Signaling msg|
      \      *           ^\n            | Processing  |       *           V\n            +-------------+
      \      *           V\n                 |      |         *           V\n     ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n
      \                .      .         *           V\n                 |      |         *
      \    .............................\n                 .      .         *     .
      \  Traffic Control         .\n                 |      |         *     .                +---------+.\n
      \                .      .         *     .                |Admission|.\n                 |
      \     |         *     .                | Control |.\n       +----------+    +------------+
      \  .                +---------+.\n   <.->|  Input   |    | Outgoing   |<.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.->\n
      \      |  Packet  |    | Interface  |   .+----------+    +---------+.\n   ===>|Processing|====|
      Selection  |===.|  Packet  |====| Packet  |.=>\n       |          |    |(Forwarding)|
      \  .|Classifier|     Scheduler|.\n       +----------+    +------------+   .+----------+
      \   +---------+.\n                                        .............................\n
      \          <.-.-> = signaling flow\n           =====> = data flow (sender -->
      receiver)\n           <<<>>> = control and configuration operations\n           ******
      = routing table manipulation\n                Figure 2: Network Element Functional
      Model\n   The processing of incoming QoS reservation requests includes three\n
      \  actions: admission control, authorization, and resource reservation.\n   The
      admission control function provides information about available\n   resources
      and determines whether there are enough resources to\n   fulfill the request.
      \ Authorization is performed by the Diameter\n   client, which involves contacting
      an authorization entity through the\n   AAA cloud shown in Section 3.  If both
      checks are successful, the\n   authorized QoS parameters are set in the packet
      classifier and the\n   packet scheduler.  Note that the parameters passed to
      the Traffic\n   Control function may be different from the ones that requested
      QoS\n   (depending on the authorization decision).  Once the requested\n   resource
      is granted, the Resource Management function provides\n   accounting information
      to the AE via the Diameter client.\n"
    title: 3.1.  Network Element Functional Model
  - contents:
    - '3.2.  Implications of Endpoint QoS Capabilities

      '
    - contents:
      - "3.2.1.  Endpoint Categories\n   The QoS capabilities of Application Endpoints
        are varied, and can be\n   categorized as follows:\n   Category 1\n      A
        Category 1 Application Endpoint has no QoS capability at either\n      the
        application or the network level.  This type of AppE may set\n      up a connection
        through application signaling, but it is incapable\n      of specifying resource/QoS
        requirements through either\n      application- or network-level signaling.\n
        \  Category 2\n      A Category 2 Application Endpoint only has QoS capability
        at the\n      application level.  This type of AppE is able to set up a\n
        \     connection through application signaling with certain resource/QoS\n
        \     requirements (e.g., application attributes), but it is unable to\n      signal
        any resource/QoS requirements at the network level.\n   Category 3\n      A
        Category 3 Application Endpoint has QoS capability at the\n      network level.
        \ This type of AppE may set up a connection through\n      application signaling,
        translate service characteristics into\n      network resource/QoS requirements
        (e.g., network QoS class)\n      locally, and request the resources through
        network signaling,\n      e.g., Resource ReSerVation Protocol (RSVP) [RFC2205]
        or Next Steps\n      in Signaling (NSIS) [NSIS-QOS].\n"
      title: 3.2.1.  Endpoint Categories
    - contents:
      - "3.2.2.  Interaction Modes between the Authorizing Entity and Network\n        Element\n
        \  Different QoS mechanisms are employed in packet networks.  Those QoS\n
        \  mechanisms can be categorized into two schemes: IntServ [RFC2211]\n   [RFC2212]
        and Diffserv [RFC2474].  In the IntServ scheme, network\n   signaling (e.g.,
        RSVP, NSIS, or link-specific signaling) is commonly\n   used to initiate a
        request from an AppE for the desired QoS resource.\n   In the Diffserv scheme,
        QoS resources are provisioned based upon some\n   predefined QoS service classes
        rather than AppE-initiated, flow-based\n   QoS requests.\n   It is obvious
        that the eligible QoS scheme is correlated to the\n   AppE's capability in
        the context of QoS authorization.  Since\n   Category 1 and 2 AppEs cannot
        initiate the QoS resource requests by\n   means of network signaling, using
        the current mechanism of the\n   IntServ model to signal QoS information across
        the network is not\n   applicable to them in general.  Depending on network
        technology and\n   operator requirements, a Category 3 AppE may either make
        use of\n   network signaling for resource requests or not.\n   The diversity
        of QoS capabilities of endpoints and QoS schemes of\n   network technology
        leads to the distinction on the interaction mode\n   between the QoS authorization
        system and underlying NEs.  When the\n   IntServ scheme is employed by a Category
        3 endpoint, the\n   authorization process is typically initiated by an NE
        when a trigger\n   is received from the endpoint such as network QoS signaling.
        \ In the\n   Diffserv scheme, since the NE is unable to request the resource\n
        \  authorization on its own initiative, the authorization process is\n   typically
        triggered by either the request of AppSs or policies\n   defined by the operator.\n
        \  As a consequence, two interaction modes are needed in support of\n   different
        combinations of QoS schemes and endpoint's QoS\n   capabilities: Push mode
        and Pull mode.\n   Push mode\n      The QoS authorization process is triggered
        by AppSs or local\n      network conditions (e.g., time of day on resource
        usage and QoS\n      classes), and the authorization decisions are installed
        by the AE\n      to the network element on its own initiative without explicit\n
        \     request.  In order to support Push mode, the AE (i.e., Diameter\n      server)
        should be able to initiate a Diameter authorization\n      session to communicate
        with the NE (i.e., Diameter client) without\n      any preestablished connection
        from the network element.\n   Pull mode\n      The QoS authorization process
        is triggered by the network\n      signaling received from end-user equipment
        or by a local event in\n      the NE according to pre-configured policies,
        and authorization\n      decisions are produced upon the request of the NE.
        \ In order to\n      support Pull mode, the NE (i.e., Diameter client) will
        initiate a\n      Diameter authorization session to communicate with the Authorizing\n
        \     Entity (i.e., Diameter server).\n   For Category 1 and 2 Application
        Endpoints, Push mode is REQUIRED.\n   For a Category 3 AppE, either Push mode
        or Pull mode MAY be used.\n   Push mode is applicable to certain networks,
        for example, Cable\n   network, DSL, Ethernet, and Diffserv-enabled IP/MPLS.
        \ Pull mode is\n   more appropriate to IntServ-enabled IP networks or certain
        wireless\n   networks such as the General Packet Radio Service (GPRS) networks\n
        \  defined by the Third Generation Partnership Project (3GPP).  Some\n   networks
        (for example, Worldwide Interoperability for Microwave\n   Access (WiMAX))
        may require both Push and Pull modes.\n"
      title: 3.2.2.  Interaction Modes between the Authorizing Entity and Network
    title: 3.2.  Implications of Endpoint QoS Capabilities
  - contents:
    - '3.3.  Authorization Schemes

      '
    - contents:
      - "3.3.1.  Pull Mode Schemes\n   Three types of basic authorization schemes
        for Pull mode exist: one\n   type of two-party scheme and two types of three-party
        schemes.  The\n   notation adopted here is in respect to the entity that performs
        the\n   QoS authorization (QoS Authz).  The authentication of the QoS\n   requesting
        entity might be done at the NE as part of the QoS\n   signaling protocol,
        or by an off-path protocol (on the application\n   layer or for network access
        authentication) or the AE might be\n   contacted with a request for authentication
        and authorization of the\n   QoS requesting entity.  From the Diameter QoS
        application's point of\n   view, these schemes differ in type of information
        that need to be\n   carried.  Here we focus on the \"Basic Three-Party Scheme\"
        (see\n   Figure 3) and the \"Token-Based Three-Party Scheme\" (see Figure
        4).\n   In the \"Two-Party Scheme\", the QoS RRE is authenticated by the NE
        and\n   the authorization decision is made either locally at the NE itself
        or\n   offloaded to a trusted entity (most likely within the same\n   administrative
        domain).  In the two-party case, no Diameter QoS\n   protocol interaction
        is required.\n                                        +--------------+\n                                        |
        Authorizing  |\n                                        | Entity       |\n
        \                                       | authorizing  | <......+\n                                        |
        resource     |        .\n                                        | request
        \     |        .\n                                        +------------+-+
        \       .\n                                        --^----------|--   .    .\n
        \                                  /////  |          |  \\\\\\\\\\   .\n                                 //
        \      |          |       \\\\ .\n                                |     QoS
        | QoS AAA  | QoS     |.\n                                |    authz| protocol
        |authz    |.\n                                |     req.|          | res.
        \   |.\n                                 \\\\       |          |       //
        .\n                                   \\\\\\\\\\  |          |  /////   .\n
        \                         QoS           --|----------v--   .    .\n       +-------------+
        \   request       +-+------------+        .\n       |  Entity     |----------------->|
        NE           |        .\n       |  requesting |                  | performing
        \  |        .\n       |  resource   |granted / rejected| QoS          |  <.....+\n
        \      |             |<-----------------| reservation  | financial\n       +-------------+
        \                 +--------------+ settlement\n                       Figure
        3: Three-Party Scheme\n   In the \"Basic Three-Party Scheme\", a QoS reservation
        request that\n   arrives at the NE is forwarded to the Authorizing Entity
        (e.g., in\n   the user's home network), where the authorization decision is
        made.\n   As shown, financial settlement -- a business relationship, such
        as a\n   roaming agreement -- between the visited network and the home network\n
        \  ensures that the visited network is compensated for the resources\n   consumed
        by the user via the home network.\n                               financial
        settlement\n                                ...........................+\n
        \     Authorization             V             -------      .\n      Token
        Request   +--------------+      / QoS AAA \\    .\n      +-------------->|
        \             |     /  protocol \\   .\n      |               | Authorizing
        \ +--------------+   \\  .\n      |               | Entity       |   |          |
        \   | .\n      |        +------+              |<--+----+     |    | .\n      |
        \       |      +--------------+  |QoS  |     |QoS  |.\n      |        |                        |authz|
        \    |authz|.\n      |        |Authorization           |req.+|     |res. |.\n
        \     |        |Token                   |Token|     |     |.\n      |        |
        \                        |    |     | .  | .\n      |        |                          \\
        \  |     | . /  .\n      |        |                            \\ |     |
        /    .\n      |        |      QoS request             |-----V .    .\n    +-------------+
        + Authz  Token   +--------+-----+      .\n    |  Entity     |----------------->|
        NE           |      .\n    |  requesting |                  | performing   |
        \     .\n    |  resource   |granted / rejected| QoS          | <....+\n    |
        \            |<-----------------| reservation  |\n    +-------------+                  +--------------+\n
        \                Figure 4: Token-Based Three-Party Scheme\n   The \"Token-Based
        Three-Party Scheme\" is applicable to environments\n   where a previous protocol
        interaction is used to request\n   authorization tokens to assist the authorization
        process at the NE or\n   the AE [RFC3521].\n   The QoS RRE may be involved
        in an application-layer protocol\n   interaction, for example, using SIP [RFC3313],
        with the AE.  As part\n   of this interaction, authentication and authorization
        at the\n   application layer might take place.  As a result of a successful\n
        \  authorization decision, which might involve the user's home AAA\n   server,
        an authorization token is generated by the AE (e.g., the SIP\n   proxy and
        an entity trusted by the SIP proxy) and returned to the\n   end-host for inclusion
        into the QoS signaling protocol.  The\n   authorization token will be used
        by an NE that receives the QoS\n   signaling message to authorize the QoS
        request.  Alternatively, the\n   Diameter QoS application will be used to
        forward the authorization\n   token to the user's home network.  The authorization
        token allows for\n   the authorization decision performed at the application
        layer to be\n   associated with a corresponding QoS signaling session.  Note
        that the\n   authorization token might either refer to established state\n
        \  concerning the authorization decision or the token might itself carry\n
        \  the authorized parameters (protected by a digital signature or a\n   keyed
        message digest to prevent tampering).  In the latter case, the\n   authorization
        token may contain several pieces of information\n   pertaining to the authorized
        application session, but at minimum it\n   should contain:\n   o  An identifier
        for the AE (for example, an AppS) that issued the\n      authorization token;\n
        \  o  An identifier referring to a specific application protocol session\n
        \     for which the token was issued; and\n   o  A keyed message digest or
        digital signature protecting the content\n      of the authorization token.\n
        \  A possible structure for the authorization token and the policy\n   element
        carrying it are proposed in the context of RSVP [RFC3520].\n   In the scenario
        mentioned above, where the QoS resource requesting\n   entity is involved
        in an application-layer protocol interaction with\n   the AE, it may be worthwhile
        to consider a token-less binding\n   mechanism also.  The application-layer
        protocol interaction may have\n   indicated the transport port numbers at
        the QoS RRE where it might\n   receive media streams (for example, in SIP/SDP
        [RFC4566] signaling,\n   these port numbers are advertised).  The QoS RRE
        may also use these\n   port numbers in some IP filter indications to the NE
        performing QoS\n   reservation so that it may properly tunnel the inbound
        packets.  The\n   NE performing QoS reservation will forward the QoS resource\n
        \  requesting entity's IP address and the IP filter indications to the\n   AE
        in the QoS authorization request.  The AE will use the QoS RRE's\n   IP address
        and the port numbers in the IP filter indication, which\n   will match the
        port numbers advertised in the earlier application-\n   layer protocol interaction,
        to identify the right piece of policy\n   information to be sent to the NE
        performing the QoS reservation in\n   the QoS Authorization response.\n"
      title: 3.3.1.  Pull Mode Schemes
    - contents:
      - "3.3.2.  Push Mode Schemes\n   Push mode can be further divided into two types:
        endpoint-initiated\n   and network-initiated.  In the former case, the authorization
        process\n   is triggered by AppS in response to an explicit QoS request from
        an\n   endpoint through application signaling, e.g., SIP; in the latter\n
        \  case, the authorization process is triggered by the AppS without an\n   explicit
        QoS request from an endpoint.\n   In the endpoint-initiated scheme, the QoS
        RRE (i.e., the AppE)\n   determines the required application-level QoS and
        sends a QoS request\n   through an application signaling message.  The AppS
        will extract\n   application-level QoS information and trigger the authorization\n
        \  process to the AE.  In the network-initiated scheme, the AE and/or\n   AppS
        should derive and determine the QoS requirements according to\n   application
        attribute, subscription, and endpoint capability when the\n   endpoint does
        not explicitly indicate the QoS attributes.  The AE\n   makes an authorization
        decision based on application-level QoS\n   information, network policies,
        end-user subscription, network\n   resource availability, etc., and installs
        the decision to the NE\n   directly.\n   A Category 1 AppE requires network-initiated
        Push mode and a Category\n   2 AppE may use either type of Push Mode.\n                               financial
        settlement\n                                ...........................+\n
        \     Application               V             -------      .\n      signaling
        msg   +--------------+      / QoS AAA \\    .\n      +-------------->|              |
        \    /  protocol \\   .\n      |               | Authorizing  +--------------+
        \  \\  .\n      |               | Entity       |   |          |    | .\n      |
        \              +              |<--+----+     |    | .\n      |               +--------------+
        \ |QoS  |     |QoS  |.\n      |                                install|     |install\n
        \     |                                 |rsp. |     |req. |.\n      |                                 |
        \    |     |     |.\n      |                                  |    |     |
        .  | .\n      |                                   \\   |     | . /  .\n      |
        \                                    \\ |     | /    .\n      V                                       |-----V
        .    .\n    +-------------+                  +--------+-----+      .\n    |
        \ Entity     |                  | NE           |      .\n    |  requesting
        |                  | performing   |      .\n    |  resource   |QoS rsrc granted
        \ | QoS          | <....+\n    |             |<-----------------| reservation
        \ |\n    +-------------+                  +--------------+\n                      Figure
        5: Scheme for Push Mode\n"
      title: 3.3.2.  Push Mode Schemes
    title: 3.3.  Authorization Schemes
  - contents:
    - "3.4.  QoS Application Requirements\n   A QoS application must meet a number
      of requirements applicable to a\n   diverse set of networking environments and
      services.  It should be\n   compatible with different deployment scenarios having
      specific QoS\n   signaling models and security issues.  Satisfying the requirements\n
      \  listed below while interworking with QoS signaling protocols, a\n   Diameter
      QoS application should accommodate the capabilities of the\n   QoS signaling
      protocols rather than introduce functional requirements\n   on them.  A list
      of requirements for a QoS authorization application\n   is provided here:\n
      \  Identity-based Routing\n      The Diameter QoS application MUST route AAA
      requests to the\n      Authorizing Entity, based on the provided identity of
      the QoS\n      requesting entity or the identity of the AE encoded in the\n
      \     provided authorization token.\n   Flexible Authentication Support\n      The
      Diameter QoS application MUST support a variety of different\n      authentication
      protocols for verification of authentication\n      information present in QoS
      signaling messages.  The support for\n      these protocols MAY be provided
      indirectly by tying the signaling\n      communication for QoS to a previous
      authentication protocol\n      exchange (e.g., using network access authentication).\n
      \  Making an Authorization Decision\n      The Diameter QoS application MUST
      exchange sufficient information\n      between the AE and the enforcing entity
      (and vice versa) to\n      compute an authorization decision and to execute
      this decision.\n   Triggering an Authorization Process\n      The Diameter QoS
      application MUST allow periodic and event-\n      triggered execution of the
      authorization process, originated at\n      the enforcing entity or even at
      the AE.\n   Associating QoS Reservations and Application State\n      The Diameter
      QoS application MUST carry information sufficient for\n      an AppS to identify
      the appropriate application session and\n      associate it with a particular
      QoS reservation.\n   Dynamic Authorization\n      It MUST be possible for the
      Diameter QoS application to push\n      updates towards the NE(s) from Authorizing
      Entities.\n   Bearer Gating\n      The Diameter QoS application MUST allow the
      AE to gate (i.e.,\n      enable/disable) authorized application flows based
      on, e.g.,\n      application state transitions.\n   Accounting Records\n      The
      Diameter QoS application MAY define QoS accounting records\n      containing
      duration, volume (byte count) usage information, and a\n      description of
      the QoS attributes (e.g., bandwidth, delay, loss\n      rate) that were supported
      for the flow.\n   Sending Accounting Records\n      The NE SHOULD be able to
      send accounting records for a particular\n      QoS reservation state to an
      accounting entity.\n   Failure Notification\n      The Diameter QoS application
      MUST allow the NE to report failures,\n      such as loss of connectivity due
      to movement of a mobile node or\n      other reasons for packet loss, to the
      Authorizing Entity.\n   Accounting Correlation\n      The Diameter QoS application
      MAY support the exchange of\n      sufficient information to allow for correlation
      between accounting\n      records generated by the NEs and accounting records
      generated by\n      an AppS.\n   Interaction with Other AAA Applications\n      Interaction
      with other AAA applications, such as the Diameter\n      Network Access Server
      Application [RFC4005], may be required for\n      exchange of authorization,
      authentication, and accounting\n      information.\n   In deployment scenarios
      where authentication of the QoS reservation\n   requesting entity (e.g., the
      user) is done by means outside the\n   Diameter QoS application protocol interaction,
      the AE is contacted\n   only with a request for QoS authorization.  Authentication
      might have\n   taken place already via the interaction with the Diameter application\n
      \  [RFC4005] or as part of the QoS signaling protocol (e.g., Transport\n   Layer
      Security (TLS) [RFC5246] in the General Internet Signaling\n   Transport (GIST)
      protocol [NSIS-NTLP]).\n   Authentication of the QoS reservation requesting
      entity to the AE is\n   necessary if a particular Diameter QoS application protocol
      cannot be\n   related (or if there is no intention to relate it) to a prior\n
      \  authentication.  In this case, the AE MUST authenticate the QoS\n   reservation
      requesting entity in order to authorize the QoS request\n   as part of the Diameter
      QoS protocol interaction.\n   This document refers to three types of sessions
      that need to be\n   properly correlated.\n   QoS Signaling Session\n      The
      time period during which a QoS signaling protocol establishes,\n      maintains,
      and deletes a QoS reservation state at the QoS network\n      element is referred
      to as a QoS signaling session.  Different QoS\n      signaling protocols use
      different ways to identify QoS signaling\n      sessions.  The same applies
      to different usage environments.\n      Currently, this document supports three
      types of QoS session\n      identifiers, namely a signaling session id (e.g.,
      the Session\n      Identifier used by the NSIS protocol suite), a flow id (e.g.,\n
      \     identifier assigned by an application to a certain flow as used in\n      the
      3GPP), and a flow description based on the IP parameters of\n      the flow's
      endpoints.\n   Diameter Authorization Session\n      The time period for which
      a Diameter server authorizes a requested\n      service (i.e., QoS resource
      reservation) is referred to as a\n      Diameter authorization session.  It
      is identified by a Session-Id\n      included in all Diameter messages used
      for management of the\n      authorized service (initial authorization, re-authorization,\n
      \     termination), see [RFC3588].\n   Application-Layer Session\n      The
      application-layer session identifies the duration of an\n      application-layer
      service that requires provision of a certain\n      QoS.  An application-layer
      session identifier is provided by the\n      QoS requesting entity in the QoS
      signaling messages, for example\n      as part of the authorization token.  In
      general, the application\n      session identifier is opaque to the QoS-aware
      NEs.  It is included\n      in the authorization request message sent to the
      AE and helps it\n      to correlate the QoS authorization request to the application\n
      \     session state information.\n   Correlating these sessions is done at each
      of the three involved\n   entities: The QoS requesting entity correlates the
      application with\n   the QoS signaling sessions.  The QoS NE correlates the
      QoS signaling\n   session with the Diameter authorization sessions.  The AE
      SHOULD bind\n   the information about the three sessions together.  Note that
      in\n   certain scenarios, not all of the sessions are present.  For example,\n
      \  the application session might not be visible to the QoS signaling\n   protocol
      directly if there is no binding between the application\n   session and the
      QoS requesting entity using the QoS signaling\n   protocol.\n"
    title: 3.4.  QoS Application Requirements
  title: 3.  Framework
- contents:
  - '4.  QoS Application Session Establishment and Management

    '
  - contents:
    - "4.1.  Parties Involved\n   Authorization models supported by this application
      include three\n   parties:\n   o  Resource Requesting Entity\n   o  Network
      Elements (Diameter QoS application (DQA) client)\n   o  Authorizing Entity (Diameter
      QoS application (DQA) server)\n   Note that the QoS RRE is only indirectly involved
      in the message\n   exchange.  This entity provides the trigger to initiate the
      Diameter\n   QoS protocol interaction by transmitting QoS signaling messages.
      \ The\n   Diameter QoS application is only executed between the Network Element\n
      \  (i.e., DQA client) and the Authorizing Entity (i.e., DQA server).\n   The
      QoS RRE may communicate with the AE using application-layer\n   signaling for
      the negotiation of service parameters.  As part of this\n   application-layer
      protocol interaction, for example using SIP,\n   authentication and authorization
      might take place.  This message\n   exchange is, however, outside the scope
      of this document.  The\n   protocol communication between the QoS resource requesting
      entity and\n   the QoS NE might be accomplished using the NSIS protocol suite,
      RSVP,\n   or a link-layer signaling protocol.  A description of these protocols\n
      \  is also outside the scope of this document.\n"
    title: 4.1.  Parties Involved
  - contents:
    - "4.2.  Session Establishment\n   Pull and Push modes use a different set of
      command codes for session\n   establishment.  For other operations, such as
      session modification\n   and termination, they use the same set of command codes.\n
      \  The selection of Pull mode or Push mode operation is based on the\n   trigger
      of the QoS authorization session.  When a QoS-Authorization-\n   Request (QAR,
      see Section 5.1) message with a new Session-Id is\n   received, the AE operates
      in Pull mode; when other triggers are\n   received, the AE operates in Push
      mode.  Similarly, when a QoS-\n   Install-Request (QIR, see Section 5.3} with
      a new Session-Id is\n   received, the NE operates in Push mode; when other triggers
      are\n   received, the NE operates in Pull mode.\n   The QoS authorization session
      is typically established per subscriber\n   base (i.e., all requests with the
      same User-ID), but it is also\n   possible to be established on a per node or
      per request base.  The\n   concurrent sessions between an NE and an AE are identified
      by\n   different Session-Ids.\n"
    - contents:
      - "4.2.1.  Session Establishment for Pull Mode\n   A request for a QoS reservation
        or local events received by an NE can\n   trigger the initiation of a Diameter
        QoS authorization session.  The\n   NE converts the required objects from
        the QoS signaling message to\n   Diameter AVPs and generates a QAR message.\n
        \  Figure 6 shows the protocol interaction between a Resource Requesting\n
        \  Entity, a Network Element, and the Authorizing Entity.\n   The AE's identity,
        information about the application session and/or\n   identity and credentials
        of the QoS RRE, requested QoS parameters,\n   and the signaling session identifier
        and/or QoS-enabled data flows\n   identifiers MAY be encapsulated into respective
        Diameter AVPs and\n   included in the Diameter message sent to the AE.  The
        QAR is sent to\n   a Diameter server that can be either the home server of
        the QoS\n   requesting entity or an AppS.\n   +------------------------------------------+------------------------+\n
        \  | QoS-Specific Input Data                  | Diameter AVPs          |\n
        \  +------------------------------------------+------------------------+\n
        \  | Authorizing Entity ID (e.g.,             | Destination-Host       |\n
        \  | Destination-Host taken from              | Destination-Realm      |\n
        \  | authorization token, Destination-Realm,  |                        |\n
        \  | or derived from the Network Access       |                        |\n
        \  | Identifier (NAI) of the QoS requesting   |                        |\n
        \  | entity)                                  |                        |\n
        \  | Authorization Token Credentials of the   | QoS-Authorization-Data |\n
        \  | QoS requesting entity                    | User-Name              |\n
        \  | QoS-Resources (including QoS parameters) |                        |\n
        \  +------------------------------------------+------------------------+\n
        \          Table 1: Mapping Input Data to QoS AVPs -- Pull Mode\n   Authorization
        processing starts at the Diameter QoS server when it\n   receives the QAR.
        \ Based on the information in the QoS-\n   Authentication-Data, User-Name,
        and QoS-Resources AVPs, the server\n   determines the authorized QoS resources
        and flow state (enabled/\n   disabled) from locally available information
        (e.g., policy\n   information that may be previously established as part of
        an\n   application-layer signaling exchange or the user's subscription\n   profile).
        \ The QoS-Resources AVP is defined in [RFC5777].  The\n   authorization decision
        is then reflected in the response returned to\n   the Diameter client with
        the QoS-Authorization-Answer (QAA) message.\n                                               Authorizing\n
        \    End-Host         Network Element             Entity\n   requesting QoS
        \      (Diameter               (Diameter\n                        QoS Client)
        \            QoS Server)\n       |                   |                         |\n
        \      +---QoS-Reserve---->|                         |\n       |                   +-
        - - - - QAR - - - - - >|\n       |                   |(QoS-Resources,          |\n
        \      |                   |   QoS-Auth-Data,User-ID)|\n       |                   |
        \               +--------+--------------+\n       |                   |                |
        \ Authorize request    |\n       |                   |                |  Keep
        session data    |\n       |                   |                |/Authz-time,Session-Id/|\n
        \      |                   |                +--------+--------------+\n       |
        \                  |< - - - - QAA - - - - - -+\n       |                   |(Result-Code,
        \           |\n       |                   |QoS-Resources,Authz-time)|\n       |
        \          +-------+---------+\n       |           |Install QoS state|\n       |
        \          |       +         |\n       |           | Authz  session  |\n       |
        \          | /Authz-time/    |                QoS Responder\n       |           |
        \                |                    Node\n       |           +-------+---------+
        \                     |\n       |                   +----------QoS-Reserve---....--->|\n
        \      |                   |                                |\n       |                   |<---------QoS-Response--....----|\n
        \      |<--QoS-Response----+                                |\n       |                   |
        \                               |\n       |=====================Data Flow==============....===>|\n
        \        Figure 6: Initial QoS Request Authorization for Pull Mode\n   The
        Authorizing Entity keeps authorization session state and SHOULD\n   save additional
        information for management of the session (e.g.,\n   Signaling-Session-Id,
        authentication data) as part of the session\n   state information.\n   The
        final result of the authorization request is provided in the\n   Result-Code
        AVP of the QAA message sent by the Authorizing Entity.\n   In the case of
        successful authorization (i.e., Result-Code =\n   DIAMETER_LIMITED_SUCCESS
        (see Section 7.1)), information about the\n   authorized QoS resources and
        the status of the authorized flow\n   (enabled/disabled) is provided in the
        QoS-Resources AVP of the QAA\n   message.  The QoS information provided via
        the QAA is installed by\n   the QoS Traffic Control function of the NE.  The
        value\n   DIAMETER_LIMITED_SUCCESS indicates that the AE expects confirmation\n
        \  via another QAR message for successful QoS resource reservation and\n   for
        final reserved QoS resources (see below).\n   One important piece of information
        returned from the Authorizing\n   Entity is the authorization lifetime (carried
        inside the QAA).  The\n   authorization lifetime allows the NE to determine
        how long the\n   authorization decision is valid for this particular QoS reservation.\n
        \  A number of factors may influence the authorized session duration,\n   such
        as the user's subscription plan or the currently available\n   credits at
        the user's account (see Section 8).  The authorization\n   duration is time-based,
        as specified in [RFC3588].  For an extension\n   of the authorization period,
        a new QoS-Authorization-Request/Answer\n   message exchange SHOULD be initiated.
        \ Further aspects of QoS\n   authorization session maintenance are discussed
        in Sections 4.3, 4.4,\n   and 8.\n   The indication of a successful QoS reservation
        and activation of the\n   data flow is provided by the transmission of a QAR
        message, which\n   reports the parameters of the established QoS state: reserved\n
        \  resources, duration of the reservation, and identification of the QoS\n
        \  enabled flow/QoS signaling session.  The Diameter QoS server\n   acknowledges
        the reserved QoS resources with the QA Answer (QAA)\n   message where the
        Result-Code is set to 'DIAMETER_SUCCESS'.  Note\n   that the reserved QoS
        resources reported in this QAR message MAY be\n   different than those authorized
        with the initial QAA message, due to\n   the QoS-signaling-specific behavior
        (e.g., receiver-initiated\n   reservations with One-Path-With-Advertisements)
        or specific process\n   of QoS negotiation along the data path.\n"
      title: 4.2.1.  Session Establishment for Pull Mode
    - contents:
      - "4.2.2.  Session Establishment for Push Mode\n   The Diameter QoS server in
        the AE initiates a Diameter QoS\n   authorization session upon the request
        for a QoS reservation\n   triggered by application-layer signaling or by local
        events, and\n   generates a QoS-Install-Request (QIR) message to the Diameter
        QoS\n   client in the NE in which it maps required objects to Diameter\n   payload
        objects.\n   Figure 7 shows the protocol interaction between the AE, a Network\n
        \  Element, and an RRE.\n   The NE's identity, information about the application
        session and/or\n   identity and credentials of the QoS resource requesting
        entity,\n   requested QoS parameters, and signaling session identifier and/or
        QoS\n   enabled data flows identifiers MAY be encapsulated into respective\n
        \  Diameter AVPs and included in the Diameter message sent from a\n   Diameter
        QoS server in the Authorizing Entity to a Diameter QoS\n   client in the NE.
        \ This requires that the AE has knowledge of\n   specific information for
        allocating and identifying the NE that\n   should be contacted and the data
        flow for which the QoS reservation\n   should be established.  This information
        can be statically configured\n   or dynamically discovered, see Section 4.2.3
        for details.\n   +-----------------------------------------+-------------------------+\n
        \  | QoS-Specific Input Data                 | Diameter AVPs           |\n
        \  +-----------------------------------------+-------------------------+\n
        \  | Network Element ID                      | Destination-Host        |\n
        \  |                                         | Destination-Realm       |\n
        \  | Authorization Token Credentials of the  | QoS-Authorization-Data  |\n
        \  | QoS requesting entity                   | User-Name               |\n
        \  | QoS-Resources (including QoS            |                         |\n
        \  | parameters)                             |                         |\n
        \  +-----------------------------------------+-------------------------+\n
        \          Table 2: Mapping Input Data to QoS AVPs -- Push Mode\n   Authorization
        processing starts at the Diameter QoS server when it\n   receives a request
        from an RRE through an AppS (e.g., SIP Invite) or\n   is triggered by a local
        event (e.g., a pre-configured timer).  Based\n   on the received information,
        the server determines the authorized QoS\n   resources and flow state (enabled/disabled)
        from locally available\n   information (e.g., policy information that may
        be previously\n   established as part of an application-layer signaling exchange,
        or\n   the user's subscription profile).  The authorization decision is then\n
        \  reflected in the QoS-Install-Request (QIR) message to the Diameter\n   QoS
        client.\n                                               Authorizing\n     End-Host
        \        Network Element             Entity\n   requesting QoS       (Diameter
        \              (Diameter\n                        QoS Client)             QoS
        Server)\n       |                   |                          |\n       |
        \                  |                          |<-- Trigger --\n       |                   |
        \                +--------+--------------+\n       |                   |                 |
        \ Authorize request    |\n       |                   |                 |  Keep
        session data    |\n       |                   |                 |/Authz-time,Session-Id/|\n
        \      |                   |                 +--------+--------------+\n       |
        \                  |                          |\n       |                   |<--
        - -- - QIR - - - - - -+\n       |                   |(Initial Request,Decision
        |\n       |                   |(QoS-Resources,Authz-time)|\n       |           +-------+---------+\n
        \      |           |Install QoS state|\n       |           |       +         |\n
        \      |           | Authz  session  |\n       |           | /Authz-time/
        \   |\n       |           |                 |\n       |           +-------+---------+\n
        \      |                   + - - - - QIA - - - - - ->|\n       |                   |
        \   (Result-Code,        |\n       |                   |     QoS-Resources)
        \     |\n       |                   |                +--------+--------------+\n
        \      |                   |                | Report for successful |\n       |
        \                  |                |   QoS reservation     |\n       |                   |
        \               |Update of reserved QoS |\n       |                   |                |
        \     resources        |\n       |                   |                +--------+--------------+\n
        \      |                   |                         QoS Responder\n       |
        \                  |                               Node\n       |                   |
        \                               |\n       |=====================Data Flow==============....===>|\n
        \        Figure 7: Initial QoS Request Authorization for Push Mode\n   The
        AE keeps authorization session state and SHOULD save additional\n   information
        for management of the session (e.g.,\n   Signaling-Session-Id, authentication
        data) as part of the session\n   state information.\n   The final result of
        the authorization decision is provided in the\n   QoS-Resources AVP of the
        QIR message sent by the AE.  The QoS\n   information provided via the QIR
        is installed by the QoS Traffic\n   Control function of the NE.\n   One important
        piece of information from the AE is the authorization\n   lifetime (carried
        inside the QIR).  The authorization lifetime allows\n   the NE to determine
        how long the authorization decision is valid for\n   this particular QoS reservation.
        \ A number of factors may influence\n   the authorized session duration, such
        as the user's subscription plan\n   or the currently available credits at
        the user's account (see\n   Section 8).  The authorization duration is time-based
        as specified in\n   [RFC3588].  For an extension of the authorization period,
        a new QoS-\n   Install-Request/Answer message or QoS-Authorization-Request/Answer\n
        \  message exchange SHOULD be initiated.  Further aspects of QoS\n   authorization
        session maintenance are discussed in Sections 4.3, 4.4,\n   and 8.\n   The
        indication of QoS reservation and activation of the data flow can\n   be provided
        by the QoS-Install-Answer message immediately.  In the\n   case of successful
        enforcement, the Result-Code (= DIAMETER_SUCCESS,\n   (see Section 7.1)) information
        is provided in the QIA message.  Note\n   that the reserved QoS resources
        reported in the QIA message may be\n   different than those initially authorized
        with the QIR message, due\n   to the QoS signaling-specific behavior (e.g.,
        receiver-initiated\n   reservations with One-Path-With-Advertisements) or
        specific process\n   of QoS negotiation along the data path.  In the case
        that Multiple\n   AEs control the same NE, the NE should make the selection
        on the\n   authorization decision to be enforced based on the priority of
        the\n   request.\n"
      title: 4.2.2.  Session Establishment for Push Mode
    - contents:
      - "4.2.3.  Discovery and Selection of Peer Diameter QoS Application Node\n   The
        Diameter QoS application node may obtain information of its peer\n   nodes
        (e.g., Fully-Qualified Domain Name (FQDN), IP address) through\n   static
        configuration or dynamic discovery as described in Section 5.2\n   of [RFC3588].
        \ In particular, the NE shall perform the relevant\n   operation for Pull
        mode; the AE shall perform the relevant operations\n   for Push mode.\n   Upon
        receipt of a trigger to initiate a new Diameter QoS\n   authorization session,
        the Diameter QoS application node selects and\n   retrieves the location information
        of the peer node that is\n   associated with the affected user based on some
        index information\n   provided by the RRE.  For instance, it can be the Authorization\n
        \  Entity's ID stored in the authorization token, the end-user identity\n
        \  (e.g., NAI [RFC4282]), or a globally routable IP address.\n"
      title: 4.2.3.  Discovery and Selection of Peer Diameter QoS Application Node
    title: 4.2.  Session Establishment
  - contents:
    - "4.3.  Session Re-Authorization\n   Client- and server-side initiated re-authorizations
      are considered in\n   the design of the Diameter QoS application.  Whether the\n
      \  re-authorization events are transparent for the resource requesting\n   entity
      or result in specific actions in the QoS signaling protocol is\n   outside the
      scope of the Diameter QoS application.  It is directly\n   dependent on the
      capabilities of the QoS signaling protocol.\n   There are a number of options
      for policy rules according to which the\n   NE (AAA client) contacts the AE
      for re-authorization.  These rules\n   depend on the semantics and contents
      of the QAA message sent by the\n   AE:\n   a.  The QAA message contains the
      authorized parameters of the flow\n       and its QoS and sets their limits
      (presumably upper).  With these\n       parameters, the AE specifies the services
      that the NE can provide\n       and for which it will be financially compensated.
      \ Therefore, any\n       change or request for change of the parameters of the
      flow and\n       its QoS that do not conform to the authorized limits requires\n
      \      contacting the AE for authorization.\n   b.  The QAA message contains
      authorized parameters of the flow and\n       its QoS.  The rules that determine
      whether parameters' changes\n       require re-authorization are agreed out
      of band, based on a\n       Service Level Agreement (SLA) between the domains
      of the NE and\n       the AE.\n   c.  The QAA message contains the authorized
      parameters of the flow\n       and its QoS.  Any change or request for change
      of these\n       parameters requires contacting the AE for re-authorization.\n
      \  d.  In addition to the authorized parameters of the flow and its QoS,\n       the
      QAA message contains policy rules that determine the NEs\n       actions in
      case of a change or a request for change in authorized\n       parameters.\n
      \  Provided options are not exhaustive.  Elaborating on any of the\n   listed
      approaches is deployment/solution specific and is not\n   considered in the
      current document.\n   In addition, the AE may use an RAR (Re-Authorization-Request)
      to\n   perform re-authorization with the authorized parameters directly when\n
      \  the re-authorization is triggered by service request or local events/\n   policy
      rules.\n"
    - contents:
      - "4.3.1.  Client-Side Initiated Re-Authorization\n   The AE provides the duration
        of the authorization session as part of\n   the QoS-Authorization-Answer (QAA)
        message.  At any time before the\n   expiration of this period, a new QoS-Authorization-Request
        (QAR)\n   message MAY be sent to the AE.  The transmission of the QAR MAY
        be\n   triggered when the NE receives a QoS signaling message that requires\n
        \  modification of the authorized parameters of an ongoing QoS session,\n
        \  or authorization lifetime expires.\n                                               Authorizing\n
        \    End-Host         Network Element             Entity\n   requesting QoS
        \      (Diameter               (Diameter\n                        QoS Client)
        \            QoS Server)\n       |                   |                         |\n
        \      |=====================Data Flow==========================>\n       |
        \                  |                         |\n       |           +-------+----------+
        \             |\n       |           |Authz-time/CC-Time|              |\n
        \      |           |    expires       |              |\n       |           +-------+----------+
        \             |\n       |                   +- - - - - QAR - - - - - >|\n
        \      |                   |(QoS-Resources,          |\n       |                   |
        QoS-Authorization-Data,User-ID) |\n                           |                +--------+--------------+\n
        \   NOTE:                  |                |  Authorize request    |\n    Re-authorization
        \      |                | Update session data   |\n    is transparent to      |
        \               |/Authz-time,Session-Id/|\n    the End-Host           |                +--------+--------------+\n
        \                          |< - - - - QAA - - - - - -+\n       |                   |(Result-Code,
        \           |\n       |                   |QoS-Resources,Authz-time)|\n       |
        \          +-------+---------+               |\n       |           |Update
        QoS state |               |\n       |           |       +         |               |\n
        \      |           | Authz  session  |               |\n       |           |
        /Authz-time/    |               |\n       |           |                 |
        \              |\n       |           +-------+---------+               |\n
        \      |                   |                         |\n       |=====================Data
        Flow==========================>\n       |                   |\n           Figure
        8: Client-side Initiated QoS Re-Authorization\n"
      title: 4.3.1.  Client-Side Initiated Re-Authorization
    - contents:
      - "4.3.2.  Server-Side Initiated Re-Authorization\n   The AE MAY initiate a
        QoS re-authorization by issuing a\n   Re-Authorization-Request (RAR) message
        as defined in the Diameter\n   base protocol [RFC3588], which may include
        the parameters of the\n   re-authorized QoS state: reserved resources, duration
        of the\n   reservation, identification of the QoS-enabled flow/QoS signaling\n
        \  session for re-installation of the resource state by the QoS Traffic\n
        \  Control function of the NE.\n   An NE that receives such an RAR message
        with Session-Id matching a\n   currently active QoS session acknowledges the
        request by sending the\n   Re-Auth-Answer (RAA) message towards the AE.\n
        \  If the RAR does not include any parameters of the re-authorized QoS\n   state,
        the NE MUST initiate a QoS re-authorization by sending a\n   QoS-Authorization-Request
        (QAR) message towards the AE.\n                                               Authorizing\n
        \    End-Host         Network Element             Entity\n   requesting QoS
        \      (Diameter               (Diameter\n                        QoS Client)
        \            QoS Server)\n       |                   |                          |\n
        \      |                   |                          |<-- Trigger --\n       |
        \                  |                 +--------+--------------+\n       |                   |
        \                |  Authorize request    |\n       |                   |                 |
        \ Keep session data    |\n       |                   |                 |/Authz-time,Session-Id/|\n
        \      |                   |                 +--------+--------------+\n       |
        \                  |                          |\n       |                   |<--
        - -- - RAR - - - - - -+\n       |                   |(Request,Decision         |\n
        \      |                   |(QoS-Resources,Authz-time)|\n       |           +-------+---------+\n
        \      |           |Install QoS state|\n       |           |       +         |\n
        \      |           | Authz  session  |\n       |           | /Authz-time/
        \   |\n       |           |                 |\n       |           +-------+---------+\n
        \      |                   + - - - - RAA - - - - - ->|\n       |                   |
        \   (Result-Code,        |\n       |                   |     QoS-Resources)
        \     |\n       |                   |                +--------+--------------+\n
        \      |                   |                | Report for successful |\n       |
        \                  |                |   QoS reservation     |\n       |                   |
        \               |Update of reserved QoS |\n       |                   |                |
        \     resources        |\n       |                   |                +--------+--------------+\n
        \      |                   |                         |\n           Figure
        9: Server-Side Initiated QoS Re-Authorization\n"
      title: 4.3.2.  Server-Side Initiated Re-Authorization
    title: 4.3.  Session Re-Authorization
  - contents:
    - '4.4.  Session Termination

      '
    - contents:
      - "4.4.1.  Client-Side Initiated Session Termination\n   The authorization session
        for an installed QoS reservation state MAY\n   be terminated by the Diameter
        client by sending a Session-\n   Termination-Request (STR) message to the
        Diameter server with a\n   response Session-Termination-Acknowledgement (STA)
        message.  This is\n   a Diameter base protocol function and it is defined
        in [RFC3588].\n   Session termination can be caused by a QoS signaling message\n
        \  requesting deletion of the existing QoS reservation state, or it can\n
        \  be caused as a result of a soft-state expiration of the QoS\n   reservation
        state.\n                                               Authorizing\n     End-Host
        \        Network Element             Entity\n   requesting QoS       (Diameter
        \              (Diameter\n                        QoS Client)             QoS
        Server)\n       |                   |                         |\n       |==Data
        Flow==>X /Stop of the data flow/      |\n       |                   |                         |\n
        \      +---QoS-Reserve---->|                         |\n       |  (Delete
        QoS      +- - - - - STR - - - - - >|\n       |   reservation)    |                +--------+--------------+\n
        \      |                   |                | Remove authorization  |\n       |
        \                  |                | session state         |\n       |                   |
        \               +--------+--------------+\n       |                   |< -
        - - - STA - - - - - -+\n       |           +-------+--------+                |\n
        \      |           |Delete QoS state|\n       |           +-------+--------+
        \                  QoS Responder\n       |                   |                                Node\n
        \      |                   +----------QoS-Reserve-----....--->|\n       |
        \                  |         (Delete QoS              |\n       |                   |
        \         reservation)            |\n       |                   |<---------QoS-Response----....----+\n
        \      |<--QoS-Response----+                                  |\n           Figure
        10: Client-Side Initiated Session Termination\n"
      title: 4.4.1.  Client-Side Initiated Session Termination
    - contents:
      - "4.4.2.  Server-Side Initiated Session Termination\n   At any time during
        a session, the AE MAY send an Abort-Session-\n   Request (ASR) message to
        the NE.  This is a Diameter base protocol\n   function and it is defined in
        [RFC3588].  Possible reasons for\n   initiating the ASR message to the NE
        are insufficient credits or\n   session termination at the application layer.
        \ The ASR message\n   results in termination of the authorized session, release
        of the\n   reserved resources at the NE, and transmission of an appropriate
        QoS\n   signaling message indicating a notification to other Network Elements\n
        \  aware of the signaling session.\n                                               Authorizing\n
        \    End-Host         Network Element             Entity\n   requesting QoS
        \      (Diameter               (Diameter\n                        QoS Client)
        \            QoS Server)\n       |                   |                         |\n
        \      |=====================Data Flow==========================>\n       |
        \                  |\n       |                   |< - - - - ASR - - - - -
        -+\n       |                   |                         |\n       |====Data
        Flow=====>X                         |  QoS Responder\n       |                   |
        \                        |      Node\n       |<--QoS-Notify------+----------QoS-Reserve-----....--->|\n
        \      |                   |         (Delete QoS     |        |\n                           |
        \         reservation)   |\n                   +-------+--------+                |\n
        \                  |Delete QoS state|                |\n                   +-------+--------+
        \               |\n                           +- - - - - ASA - - - - - >|\n
        \                          |                +--------+--------------+\n                           |
        \               | Remove authorization  |\n                           |                |
        \    session state     |\n                           |                +--------+--------------+\n
        \                          |                            QoS Responder\n                           |
        \                               Node\n                           |<---------QoS-Response----....----+\n
        \                          |                                  |\n           Figure
        11: Server-Side Initiated Session Termination\n"
      title: 4.4.2.  Server-Side Initiated Session Termination
    title: 4.4.  Session Termination
  title: 4.  QoS Application Session Establishment and Management
- contents:
  - "5.  QoS Application Messages\n   The Diameter QoS application requires the definition
    of new mandatory\n   AVPs and Command-Codes (see Section 3 of [RFC3588]).  Four
    new\n   Diameter messages are defined along with Command-Codes whose values\n
    \  MUST be supported by all Diameter implementations that conform to\n   this
    specification.\n       +---------------------------+---------+------+-------------+\n
    \      | Command Name              | Abbrev. | Code | Reference   |\n       +---------------------------+---------+------+-------------+\n
    \      | QoS-Authorization-Request |   QAR   |  326 | Section 5.1 |\n       |
    QoS-Authorization-Answer  |   QAA   |  326 | Section 5.2 |\n       | QoS-Install-Request
    \      |   QIR   |  327 | Section 5.3 |\n       | QoS-Install-Answer        |
    \  QIA   |  327 | Section 5.4 |\n       +---------------------------+---------+------+-------------+\n
    \                     Table 3: Diameter QoS Commands\n   In addition, the following
    Diameter base protocol messages are used\n   in the Diameter QoS application:\n
    \         +-----------------------+---------+------+-----------+\n          |
    Command-Name          | Abbrev. | Code | Reference |\n          +-----------------------+---------+------+-----------+\n
    \         | Re-Auth-Request       |   RAR   |  258 | [RFC3588] |\n          |
    Re-Auth-Answer        |   RAA   |  258 | [RFC3588] |\n          | Abort-Session-Request
    |   ASR   |  274 | [RFC3588] |\n          | Abort-Session-Answer  |   ASA   |
    \ 274 | [RFC3588] |\n          | Session-Term-Request  |   STR   |  275 | [RFC3588]
    |\n          | Session-Term-Answer   |   STA   |  275 | [RFC3588] |\n          +-----------------------+---------+------+-----------+\n
    \                     Table 4: Diameter Base Commands\n   Diameter nodes conforming
    to this specification MAY advertise support\n   for the Diameter QoS application
    by including the value of 9 in the\n   Auth-Application-Id or the Acct-Application-Id
    AVP of the\n   Capabilities-Exchange-Request and Capabilities-Exchange-Answer\n
    \  commands, see [RFC3588].\n   The value of 9 MUST be used as the Application-Id
    in all QAR/QAA and\n   QIR/QIA commands.\n   The value of zero (0) SHOULD be used
    as the Application-Id in all\n   STR/STA, ASR/ASA, and RAR/RAA commands.\n"
  - contents:
    - "5.1.  QoS-Authorization Request (QAR)\n   The QoS-Authorization-Request (QAR)
      message, indicated by the\n   Command-Code field (see Section 3 of [RFC3588])
      being set to 326 and\n   the 'R' bit being set in the Command Flags field, is
      used by NEs to\n   request quality of service related resource authorization
      for a given\n   flow.\n   The QAR message MUST carry information for signaling
      session\n   identification, AE identification, information about the requested\n
      \  QoS, and the identity of the QoS requesting entity.  In addition,\n   depending
      on the deployment scenario, an authorization token and\n   credentials of the
      QoS requesting entity SHOULD be included.\n   The message format is defined
      as follows:\n    <QoS-Authorization-Request> ::= < Diameter Header: 326, REQ,
      PXY >\n                                    < Session-Id >\n                                    {
      Auth-Application-Id }\n                                    { Origin-Host }\n
      \                                   { Origin-Realm }\n                                    {
      Destination-Realm }\n                                    { Auth-Request-Type
      }\n                                    [ Destination-Host ]\n                                    [
      User-Name ]\n                                 *  [ QoS-Resources ]\n                                    [
      QoS-Authorization-Data ]\n                                    [ Bound-Auth-Session-Id
      ]\n                                 *  [ AVP ]\n"
    title: 5.1.  QoS-Authorization Request (QAR)
  - contents:
    - "5.2.  QoS-Authorization-Answer (QAA)\n   The QoS-Authorization-Answer (QAA)
      message, indicated by the Command-\n   Code field being set to 326 and the 'R'
      bit being cleared in the\n   Command Flags field, is sent in response to the
      QoS-Authorization-\n   Request (QAR) message.  If the QoS authorization request
      is\n   successfully authorized, the response will include the AVPs to allow\n
      \  authorization of the QoS resources and transport plane gating\n   information.\n
      \  The message format is defined as follows:\n    <QoS-Authorization-Answer>
      ::= < Diameter Header: 326, PXY >\n                                   < Session-Id
      >\n                                   { Auth-Application-Id }\n                                   {
      Auth-Request-Type }\n                                   { Result-Code }\n                                   {
      Origin-Host }\n                                   { Origin-Realm }\n                                *
      \ [ QoS-Resources ]\n                                   [ Acct-Multisession-Id
      ]\n                                   [ Session-Timeout ]\n                                   [
      Authorization-Session-Lifetime ]\n                                   [ Authorization-Grace-Period
      ]\n                                *  [ AVP ]\n"
    title: 5.2.  QoS-Authorization-Answer (QAA)
  - contents:
    - "5.3.  QoS-Install Request (QIR)\n   The QoS-Install Request (QIR) message,
      indicated by the Command-Code\n   field being set to 327 and the 'R' bit being
      set in the Command Flags\n   field, is used by the AE to install or update the
      QoS parameters and\n   the flow state of an authorized flow at the transport
      plane element.\n   The message MUST carry information for signaling-session\n
      \  identification or identification of the flow to which the provided\n   QoS
      rules apply, identity of the transport plane element, description\n   of provided
      QoS parameters, flow state, and duration of the provided\n   authorization.\n
      \  The message format is defined as follows:\n    <QoS-Install-Request> ::=
      < Diameter Header: 327, REQ, PXY >\n                              < Session-Id
      >\n                              { Auth-Application-Id }\n                              {
      Origin-Host }\n                              { Origin-Realm }\n                              {
      Destination-Realm }\n                              { Auth-Request-Type }\n                              [
      Destination-Host ]\n                           *  [ QoS-Resources ]\n                              [
      Session-Timeout ]\n                              [ Authorization-Session-Lifetime
      ]\n                              [ Authorization-Grace-Period ]\n                              [
      Authorization-Session-Volume ]\n                           *  [ AVP ]\n"
    title: 5.3.  QoS-Install Request (QIR)
  - contents:
    - "5.4.  QoS-Install Answer (QIA)\n   The QoS-Install Answer (QIA) message, indicated
      by the Command-Code\n   field being set to 327 and the 'R' bit being cleared
      in the Command\n   Flags, field is sent in response to the QoS-Install Request
      (QIR)\n   message for confirmation of the result of the installation of the\n
      \  provided QoS reservation instructions.\n   The message format is defined
      as follows:\n     <QoS-Install-Answer> ::= < Diameter Header: 327, PXY >\n                              <
      Session-Id >\n                              { Auth-Application-Id }\n                              {
      Origin-Host }\n                              { Origin-Realm }\n                              {
      Result-Code }\n                           *  [ QoS-Resources ]\n                           *
      \ [ AVP ]\n"
    title: 5.4.  QoS-Install Answer (QIA)
  - contents:
    - "5.5.  Re-Auth-Request (RAR)\n   The Re-Auth-Request (RAR) message, indicated
      by the Command-Code\n   field being set to 258 and the 'R' bit being set in
      the Command Flags\n   field, is sent by the AE to the NE in order to initiate
      the QoS\n   re-authorization from the DQA server side.\n   If the RAR command
      is received by the NE without any parameters of\n   the re-authorized QoS state,
      the NE MUST initiate a QoS\n   re-authorization by sending a QoS-Authorization-Request
      (QAR) message\n   towards the AE.\n   The message format is defined as follows:\n
      \        <RAR>  ::= < Diameter Header: 258, REQ, PXY >\n                    <
      Session-Id >\n                    { Origin-Host }\n                    { Origin-Realm
      }\n                    { Destination-Realm }\n                    { Destination-Host
      }\n                    { Auth-Application-Id }\n                    { Re-Auth-Request-Type
      }\n                    [ User-Name ]\n                    [ Origin-State-Id
      ]\n                  * [ Proxy-Info ]\n                  * [ Route-Record ]\n
      \                 * [ QoS-Resources ]\n                    [ Session-Timeout
      ]\n                    [ Authorization-Session-Lifetime ]\n                    [
      Authorization-Grace-Period ]\n                    [ Authorization-Session-Volume
      ]\n                  * [ AVP ]\n"
    title: 5.5.  Re-Auth-Request (RAR)
  - contents:
    - "5.6.  Re-Auth-Answer (RAA)\n   The Re-Auth-Answer (RAA) message, indicated
      by the Command-Code field\n   being set to 258 and the 'R' bit being cleared
      in the Command Flags\n   field, is sent by the NE to the AE in response to the
      RAR command.\n   The message format is defined as follows:\n         <RAA>  ::=
      < Diameter Header: 258, PXY >\n                    < Session-Id >\n                    {
      Result-Code }\n                    { Origin-Host }\n                    { Origin-Realm
      }\n                    [ User-Name ]\n                    [ Origin-State-Id
      ]\n                    [ Error-Message ]\n                    [ Error-Reporting-Host
      ]\n                  * [ Failed-AVP ]\n                  * [ Redirect-Host ]\n
      \                   [ Redirect-Host-Usage ]\n                    [ Redirect-Host-Max-Cache-Time
      ]\n                  * [ Proxy-Info ]\n                  * [ QoS-Resources ]\n
      \                 * [ AVP ]\n"
    title: 5.6.  Re-Auth-Answer (RAA)
  title: 5.  QoS Application Messages
- contents:
  - "6.  QoS Application State Machine\n   The QoS application defines its own state
    machine that is based on\n   the authorization state machine defined in Section
    8.1 of the\n   Diameter base protocol ([RFC3588]).  The QoS state machine uses
    its\n   own messages, as defined in Section 5, and QoS AVPs, as defined in\n   Section
    7.\n"
  - contents:
    - "6.1.  Supplemented States for Push Mode\n   Using the Diameter base protocol
      state machine as a basis, the\n   following states are supplemented to the first
      two state machines in\n   which the session state is maintained on the server.
      \ These MUST be\n   supported in any QoS application implementations in support
      of\n   server-initiated Push mode (see Section 4.2.2).\n   The following states
      are supplemented to the state machine on the\n   server when state is maintained
      on the client, as defined in Section\n   8.1 of the Diameter base protocol[RFC3588]:\n
      \                                SERVER, STATEFUL\n         State     Event
      \                         Action     New State\n         -------------------------------------------------------------\n
      \        Idle      An application or local        Send        Pending\n                   event
      triggers an initial      QIR initial\n                   QoS request to the
      server      request\n         Pending   Received QIA with a failed     Clean
      up    Idle\n                   Result-Code\n         Pending   Received QIA
      with Result-Code  Update      Open\n                   = SUCCESS                      session\n
      \        Pending   Error in processing received   Send        Discon\n                   QIA
      with Result-Code = SUCCESS ASR\n   The following states are supplemented to
      the state machine on the\n   client when state is maintained on the server,
      as defined in Section\n   8.1 of the Diameter base protocol [RFC3588]:\n                                 CLIENT,
      STATEFUL\n         State     Event                          Action     New State\n
      \        -------------------------------------------------------------\n         Idle
      \     QIR initial request            Send         Open\n                   received
      and successfully      QIA initial\n                   processed                      answer,\n
      \                                                 reserve\n                                                  resources\n
      \        Idle      QIR initial request            Send         Idle\n                   received
      but not               QIA initial\n                   successfully processed
      \        answer with\n                                                  Result-Code\n
      \                                                 != SUCCESS\n"
    title: 6.1.  Supplemented States for Push Mode
  title: 6.  QoS Application State Machine
- contents:
  - "7.  QoS Application AVPs\n   Each of the AVPs identified in the QoS-Authorization-Request/Answer\n
    \  and QoS-Install-Request/Answer messages and the assignment of their\n   value(s)
    is given in this section.\n"
  - contents:
    - "7.1.  Reused Base Protocol AVPs\n   The QoS application uses a number of session
      management AVPs, defined\n   in the base protocol ([RFC3588]).\n   Attribute
      Name                AVP Code     Reference [RFC3588]\n   Origin-Host                   264
      \         Section 6.3\n   Origin-Realm                  296          Section
      6.4\n   Destination-Host              293          Section 6.5\n   Destination-Realm
      \            283          Section 6.6\n   Auth-Application-Id           258
      \         Section 6.8\n   Result-Code                   268          Section
      7.1\n   Auth-Request-Type             274          Section 8.7\n   Session-Id
      \                   263          Section 8.8\n   Authorization-Lifetime        291
      \         Section 8.9\n   Auth-Grace-Period             276          Section
      8.10\n   Session-Timeout                27          Section 8.13\n   User-Name
      \                      1          Section 8.14\n   The Auth-Application-Id AVP
      (AVP Code 258) is assigned by IANA to\n   Diameter applications.  The value
      of the Auth-Application-Id for the\n   Diameter QoS application is 9.\n"
    title: 7.1.  Reused Base Protocol AVPs
  - contents:
    - "7.2.  QoS Application-Defined AVPs\n   This document reuses the AVPs defined
      in Section 4 of [RFC5777].\n   This section lists the AVPs that are introduced
      specifically for the\n   QoS application.  The following new AVPs are defined:
      Bound-Auth-\n   Session-Id and the QoS-Authorization-Data AVP.\n   The following
      table describes the Diameter AVPs newly defined in this\n   document for use
      with the QoS Application, their AVP code values,\n   types, possible flag values,
      and to determine whether the AVP may be\n   encrypted.\n                                                  +-------------------+\n
      \                                                 |    AVP Flag rules |\n   +----------------------------------------------|----+--------+-----+\n
      \  |                       AVP  Section           |    |    SHLD| MUST|\n   |
      Attribute Name        Code Defined Data Type |MUST|     NOT|  NOT|\n   +----------------------------------------------+----+--------+-----+\n
      \  |QoS-Authorization-Data 579    7.2  OctetString| M  |        |  V  |\n   |Bound-Auth-Session-Id
      \ 580    7.2  UTF8String | M  |        |  V  |\n   +----------------------------------------------+----+--------+-----+\n
      \  |M - Mandatory bit. An AVP with the \"M\" bit set and its value MUST |\n
      \  |    be supported and recognized by a Diameter entity in order for |\n   |
      \   the message, which carries this AVP, to be accepted.          |\n   |V -
      Vendor-specific bit that indicates whether the AVP belongs to |\n   |    an
      address space.                                              |\n   +------------------------------------------------------------------+\n
      \  QoS-Authorization-Data\n      The QoS-Authorization-Data AVP (AVP Code 579)
      is of type\n      OctetString.  It is a container that carries application-session\n
      \     or user-specific data that has to be supplied to the AE as input\n      to
      the computation of the authorization decision.\n   Bound-Authentication-Session-Id\n
      \     The Bound-Authentication-Session AVP (AVP Code 580) is of type\n      UTF8String.
      \ It carries the ID of the Diameter authentication\n      session that is used
      for the network access [RFC4005].  It is used\n      to tie the QoS authorization
      request to a prior authentication of\n      the end-host done by a co-located
      application for network access\n      authentication ([RFC4005]) at the QoS
      NE.\n"
    title: 7.2.  QoS Application-Defined AVPs
  title: 7.  QoS Application AVPs
- contents:
  - "8.  Accounting\n   An NE MAY start an accounting session by sending an Accounting-\n
    \  Request (ACR) message after successful QoS reservation and activation\n   of
    the data flow (see Figures 6 and 7).  After every successful re-\n   authorization
    procedure (see Figures 8 and 9), the NE MAY initiate an\n   interim accounting
    message exchange.  After successful session\n   termination (see Figures 10 and
    11), the NE may initiate a final\n   exchange of accounting messages for the termination
    of the accounting\n   session and report final records for the use of the QoS
    resources\n   reserved.  It should be noted that the two sessions (authorization\n
    \  and accounting) have independent management by the Diameter base\n   protocol,
    which allows for finalizing the accounting session after\n   the end of the authorization
    session.\n   The detailed QoS accounting procedures are out of scope in this\n
    \  document.\n"
  title: 8.  Accounting
- contents:
  - '9.  Examples

    '
  - contents:
    - "9.1.  Example Call Flow for Pull Mode (Success Case)\n   This section presents
      an example of the interaction between the end-\n   host and Diameter QoS application
      entities using Pull mode.  The\n   application-layer signaling is, in this example,
      provided using SIP.\n   Signaling for a QoS resource reservation is done using
      the QoS NSIS\n   Signaling Layer Protocol (NSLP).  The authorization of the
      QoS\n   reservation request is done by the Diameter QoS application (DQA).\n
      \    End-Host                                 SIP Proxy  Correspondent\n   requesting
      QoS                            (DQA Server)        Node\n         |                                          |
      \             |\n       ..|....Application-layer SIP signaling.......|..............|..\n
      \      . |  Invite (SDP)                            |              | .\n       .
      +.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.->              | .\n       . |  100
      Trying                              |              | .\n       . <.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-+
      \ Invite (SDP)| .\n       . |                                          +-.-.-.....-.-.>
      .\n       . |                                          |  180 SDP'    | .\n
      \      . |                                          <-.-.-.....-.-.+ .\n       .
      |                                 +--------+--------+     | .\n       . |                                 |Authorize
      session|     | .\n       . |                                 |   parameters
      \   |     | .\n       . | 180 (Session parameters)        +--------+--------+
      \    | .\n       . <.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-+              |
      .\n       ..|..........................................|... ..........|..\n
      \        |                                          |              |\n         |
      \          +------------+                 |              |\n         |           |
      \    NE     |                 |              |\n         |           |(DQA Client)|
      \                |              |\n         |           +------+-----+                 |
      \             |\n         |                  |                       |              |\n
      \        |QoS NSLP Reserve  |                       |              |\n         +------------------>
      QAR                   |              |\n         | (POLICY_DATA>v   +- - - -
      -<<AAA>>- - - ->              |\n         |  QSPEC)  v   >===>(Destination-Host,
      \    |              |\n         |      v   >=======>QoS-Authorization-Data++------------+
      |\n         |      >===========>QoS-Resources)        |Authorize    | |\n         |
      \                 |                      |QoS resources| |\n         |                  |
      \                     ++------------+ |\n         |                  | QAA                   |
      \             |\n         |                  <- - - - -<<AAA>>- - - -+              |\n
      \        |                  |(Result-Code,          |              |\n         |
      \                 |QoS-Resources,         |              |\n         |                  |Authorization-Lifetime)|
      \             |\n         |        +---------+--------+              |              |\n
      \        |        |Install QoS state1|              |              |\n         |
      \       |+ Authz  session  |              |              |\n         |        +---------+--------+
      \             |              |\n         |                  |QoS NSLP Reserve
      \                     |\n         |                  +---------------..............--------->\n
      \        |                  |                                      |\n         |
      \                 |                     QoS NSLP Response|\n         |QoS NSLP
      Response <---------------..............---------+\n         <------------------+
      \                                     |\n         |                  |                        QoS
      NSLP Query|\n         |QoS NSLP Query    <---------------..............---------+\n
      \        <------------------+                                      |\n         |QoS
      NSLP Reserve  |                                      |\n         +------------------>
      QAR                   |              |\n         |                  +- - - -
      -<<AAA>>- - - ->              |\n         |                  |                   +---+---------+
      \   |\n         |                  |                   |Authorize    |    |\n
      \        |                  |                   |QoS resources|    |\n         |
      \                 | QAA               +---+---------+    |\n         |                  <-
      - - - -<<AAA>>- - - -+              |\n         |        +---------+--------+
      \             |              |\n         |        |Install QoS state2|                             |\n
      \        |        |+ Authz  session  |                             |\n         |
      \       +---------+--------+                             |\n         |                  |
      \ QoS NSLP Reserve                    |\n         |                  +---------------..............--------->\n
      \        |                  |                     QoS NSLP Response|\n         |QoS
      NSLP Response <---------------..............---------+\n         <------------------+
      \                                     |\n         |                  |                                      |\n
      \        /------------------+--Data Flow---------------------------\\\n         \\------------------+--------------------------------------/\n
      \        |                  |                                      |\n         .-.-.-.-.
      \ SIP signaling\n         ---------  QoS NSLP signaling\n         - - - - -
      \ Diameter QoS Application messages\n         =========  Mapping of objects
      between QoS and AAA protocol\n             Figure 12: QoS Authorization Example
      - Pull Mode\n   The communication starts with SIP signaling between the two
      endpoints\n   and the SIP proxy for negotiation and authorization of the requested\n
      \  service and its parameters (see Figure 12).  As a part of the\n   process,
      the SIP proxy verifies whether the user at Host A is\n   authorized to use the
      requested service (and potentially the ability\n   to be charged for the service
      usage).  Negotiated session parameters\n   are provided to the end-host.\n   Subsequently,
      Host A initiates a QoS signaling message towards Host\n   B. It sends a QoS
      NSLP Reserve message, in which it includes\n   description of the required QoS
      (QSPEC object) and authorization data\n   for negotiated service session (part
      of the POLICY_DATA object).\n   Authorization data includes, as a minimum, the
      identity of the AE\n   (e.g., the SIP proxy) and an identifier of the application-service\n
      \  session for which QoS resources are requested.\n   A QoS NSLP reserve message
      is intercepted and processed by the first\n   QoS-aware Network Element.  The
      NE uses the Diameter QoS application\n   to request authorization for the received
      QoS reservation request.\n   The identity of the AE (in this case, the SIP server
      that is co-\n   located with a Diameter server) is put into the Destination-Host
      AVP,\n   any additional session authorization data is encapsulated into the\n
      \  QoS-Authorization-Data AVP, and the description of the QoS resources\n   is
      included into the QoS-Resources AVP.  These AVPs are included into\n   a QoS
      Authorization Request message, which is sent to the AE.\n   A QAR message will
      be routed through the AAA network to the AE.  The\n   AE verifies the requested
      QoS against the QoS resources negotiated\n   for the service session and replies
      with a QoS-Authorization-Answer\n   (QAA) message.  It carries the authorization
      result (Result-Code AVP)\n   and the description of the authorized QoS parameters
      (QoS-Resources\n   AVP), as well as duration of the authorization session\n
      \  (Authorization-Lifetime AVP).\n   The NE interacts with the Traffic Control
      function and installs the\n   authorized QoS resources and forwards the QoS
      NSLP reserve message\n   farther along the data path.  Moreover, the NE may
      serve as a\n   signaling proxy and process the QoS signaling (e.g., initiation
      or\n   termination of QoS signaling) based on the QoS decision received from\n
      \  the Authorizing Entity.\n"
    title: 9.1.  Example Call Flow for Pull Mode (Success Case)
  - contents:
    - "9.2.  Example Call Flow for Pull Mode (Failure Case)\n   This section repeats
      the scenario outlined in Section 9.1; however,\n   in this case, we show a session
      authorization failure instead of\n   success.  Failures can occur in various
      steps throughout the protocol\n   execution, and in this example, we assume
      that the Diameter QAR\n   request processed by the Diameter server leads to
      an unsuccessful\n   result.  The QAA message responds, in this example, with
      a permanent\n   error \"DIAMETER_AUTHORIZATION_REJECTED\" (5003) set in the
      Result-Code\n   AVP.  When the NE receives this response, it discontinues the
      QoS\n   reservation signaling downstream and provides an error message back\n
      \  to the end-host that initiated the QoS signaling request.  The QoS\n   NSLP
      response signaling message would in this case carry an INFO_SPEC\n   object
      indicating the permanent failure as \"Authorization failure\"\n   (0x02).\n
      \    End-Host                                 SIP Proxy  Correspondent\n   requesting
      QoS                            (DQA Server)        Node\n         |                                          |
      \             |\n       ..|...................SIP Signaling..........|..............|..\n
      \      . |  Invite (SDP)                            |              | .\n       .
      +.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.->              | .\n       . |  100
      Trying                              |              | .\n       . <.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-+
      \ Invite (SDP)| .\n       . |                                          +-.-.-.....-.-.>
      .\n       . |                                          |  180 SDP'    | .\n
      \      . |                                          <-.-.-.....-.-.+ .\n       .
      |                                 +--------+--------+     | .\n       . |                                 |Authorize
      session|     | .\n       . |                                 |   parameters
      \   |     | .\n       . | 180 (Session parameters)        +--------+--------+
      \    | .\n       . <.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-+              |
      .\n       ..|..........................................|... ..........|..\n
      \        |                                          |              |\n         |
      \          +------------+                 |              |\n         |           |
      \    NE     |                 |              |\n         |           |(DQA Client)|
      \                |              |\n         |           +------+-----+                 |
      \             |\n         |                  |                       |              |\n
      \        |QoS NSLP Reserve  |                       |              |\n         +------------------>
      QAR                   |              |\n         | (POLICY_DATA>v   +- - - -
      -<<AAA>>- - - ->              |\n         |  QSPEC)  v   >===>(Destination-Host,
      \    |              |\n         |      v   >=======>QoS-Authorization-Data++------------+
      |\n         |      >===========>QoS-Resources)        |Authorize    | |\n         |
      \                 |                      |QoS resources| |\n         |                  |
      \                     ++------------+ |\n         |                  | QAA                   |
      \             |\n         |                  <- - - - -<<AAA>>- - - -+              |\n
      \        |                  |(Result-Code = 5003)   |              |\n         |
      \                 |                       |              |\n         |QoS NSLP
      Response |                       |              |\n         |(with error 0x02)
      |                       |              |\n         <------------------+                       |
      \             |\n         |                  |                       |              |\n
      \        |                  |                       |              |\n         .-.-.-.-.
      \ SIP signaling\n         ---------  QoS NSLP signaling\n         - - - - -
      \ Diameter QoS Application messages\n         =========  Mapping of objects
      between QoS and AAA protocol\n      Figure 13: QoS Authorization Example - Pull
      Mode (Failure Case)\n"
    title: 9.2.  Example Call Flow for Pull Mode (Failure Case)
  - contents:
    - "9.3.  Example Call Flow for Push Mode\n   This section presents an example
      of the interaction between the end-\n   host and Diameter QoS application entities
      using Push mode.  The\n   application-layer signaling is, in this example, provided
      using SIP.\n   Signaling for a QoS resource reservation is done using the QoS
      NSLP.\n   The authorization of the QoS reservation request is done by the\n
      \  Diameter QoS application (DQA).\n    End-Host              NE                  SIP
      Proxy  Correspondent\n  requesting QoS      (DQA Client)           (DQA Server)
      \       Node\n        |                  |                          |              |\n
      \     ..|..................|...SIP Signaling..........|..............|..\n      .
      | Invite(SDP Offer)|                          |              | .\n      . +.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.+-.-.-.-.-.-.->|
      .\n      . |                  |                          |   180        | .\n
      \     . |<-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.+-.-.-.-.-.-.-.| .\n      ..|.............................................|..............|..\n
      \       |                  |                +---------+-------------+|\n        |
      \                 |                |  Authorize Request    ||\n        |                  |
      \               |  Keep Session Data    ||\n        |                  |                |/Authz-time,Session-Id/||\n
      \       |                  |                +---------+-------------+|\n        |
      \                 |                          |              |\n        |                  |<--
      - -- - QIR - -- - -- -+              |\n        |                  |(Initial
      Request,Decision |              |\n        |                  |(QoS-Resources,Authz-time)|
      \             |\n        |          +-------+---------+                |              |\n
      \       |          |Install QoS State|                |              |\n        |
      \         |       +         |                |              |\n        |          |
      Authz  Session  |                |              |\n        |          | /Authz-time/
      \   |                |              |\n        |          +-------+---------+
      \               |              |\n        |                  + - - -- - QIA
      - - - - - ->|              |\n        |                  |     (Result-Code,
      \       |              |\n        |                  |      QoS-Resources)      |
      \             |\n        |                  |               +----------+------------+
      |\n        |                  |               |     Successful        | |\n
      \       |                  |               |     QoS Reservation   | |\n        |
      \                 |               +----------+------------+ |\n      ..|.............................................|..............|..\n
      \     . |                  |                          |              | .\n      .
      |                  |                          |  200 OK (SDP)| .\n      . |
      \                 |                          <-.-.-.....-.-.+ .\n      . |                  |
      \                +--------+-----------+  | .\n      . |                  |                 |
      \  Activate Session |  | .\n      . |                  |                 |   Parameters
      \      |  | .\n      . |                  |                 +--------+-----------+
      \ | .\n      . | 200 (SDP)        |                          |              |
      .\n      . <.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.+              | .\n
      \     ..|.............................................|..............|..\n        |
      \                 <- - - - - - RAR - - - - - +              |\n        |        +---------+--------+
      \                |              |\n        |        |Activate QoS State|                 |
      \             |\n        |        +---------+--------+                 |              |\n
      \       |                  +- - - - - - RAA - - - - - >              |\n        |
      \                 |                                         |\n        /------------------+-----Data
      Flow---------------------------\\\n        \\------------------+-----------------------------------------/\n
      \       |                  |                                         |\n        .-.-.-.-.
      \ SIP signaling\n        - - - - -  Diameter QoS Application messages\n             Figure
      14: QoS Authorization Example - Push Mode\n   The communication starts with
      SIP signaling between the two endpoints\n   and the SIP proxy for negotiation
      and authorization of the requested\n   service and its parameters (see Figure
      14).  As a part of the\n   process, the SIP proxy verifies whether the user
      at Host A is\n   authorized to use the requested service (and potentially the
      ability\n   to be charged for the service usage).\n   A few implementation choices
      exist regarding the decision about when\n   to initiate the QoS reservation.
      \ [MMUSIC-MEDIA] discusses this\n   aspect with a focus on firewalling.  In
      the example above, the DQA\n   server is triggered to authorize the QoS request
      based on session\n   parameters from the Session Description Protocol (SDP)
      payload.  It\n   will use a QIR message to do so.  For this example message
      flow, we\n   assume a two-stage commit, i.e., the SIP proxy interacts with the
      NE\n   twice.  First, it only prepares the QoS reservation, and then, with\n
      \  the arrival of the 200 OK, the QoS reservation is activated.\n   This example
      does not describe how the DQA server learns which DQA\n   client to contact.
      \ We assume pre-configuration in this example.  In\n   any case, the address
      of the DQA client is put into the Destination-\n   Host AVP, the description
      of the QoS resources is included into the\n   QoS-Resources AVP, and the duration
      of the authorization session is\n   carried in the Authorization-Lifetime AVP.\n
      \  When the DQA client receives the QIR, it interacts with the Traffic\n   Control
      function and reserves the authorized QoS resources\n   accordingly.  At this
      point in time, the QoS reservation is not yet\n   activated.\n   When a 200
      OK is returned, the DQA server may verify the accepted QoS\n   against the pre-authorized
      QoS resources and send a Diameter RAR\n   message to the DQA client in the NE
      for activating the installed\n   policies and commit the resource allocation.\n"
    title: 9.3.  Example Call Flow for Push Mode
  title: 9.  Examples
- contents:
  - "10.  IANA Considerations\n   This section contains the namespaces that have either
    been created in\n   this specification or had their values assigned to existing\n
    \  namespaces managed by IANA.\n"
  - contents:
    - "10.1.  AVP Codes\n   IANA has allocated two AVP codes to the registry defined
      in\n   [RFC3588]:\n   Registry:\n   AVP Code         AVP Name                      Reference\n
      \  -----------------------------------------------------------\n     579        QoS-Authorization-Data
      \          Section 7.2\n     580        Bound-Auth-Session-Id            Section
      7.2\n"
    title: 10.1.  AVP Codes
  - contents:
    - "10.2.  Application IDs\n   IANA has allocated the following application ID
      from the registry\n   defined in [RFC3588] (using the next available value from
      the\n   7-16777215 range).\n   Registry:\n   ID values           Name                         Reference\n
      \  -----------------------------------------------------------\n     9           Diameter
      QoS application           Section 5\n"
    title: 10.2.  Application IDs
  - contents:
    - "10.3.  Command Codes\n   IANA has allocated command code values from the registry
      defined in\n   [RFC3588].\n   Registry:\n   Code Value  Name                                Reference\n
      \  -----------------------------------------------------------\n   326         QoS-Authorization-Request
      (QAR)     Section 5.1\n   326         QoS-Authorization-Answer  (QAA)     Section
      5.2\n   327         QoS-Install-Request (QIR)           Section 5.3\n   327
      \        QoS-Install-Answer (QIA)            Section 5.4\n"
    title: 10.3.  Command Codes
  title: 10.  IANA Considerations
- contents:
  - "11.  Security Considerations\n   This document describes a mechanism for performing
    authorization of a\n   QoS reservation at a third-party entity.  The Authorizing
    Entity\n   needs sufficient information to make such an authorization decision\n
    \  and this information may come from various sources, including the\n   application-layer
    signaling, the Diameter protocol (with its security\n   mechanisms), policy information
    stored available with a AAA server,\n   and a QoS signaling protocol.\n   Below
    there is a discussion about considerations for the Diameter QoS\n   interaction
    between an Authorizing Entity and a Network Element.\n   Security between the
    Authorizing Entity and the Network Element has a\n   number of components: authentication,
    authorization, integrity, and\n   confidentiality.\n   Authentication refers to
    confirming the identity of an originator for\n   all datagrams received from the
    originator.  Lack of authentication\n   of Diameter messages between the Authorizing
    Entity and the Network\n   Element can seriously jeopardize the fundamental service
    rendered by\n   the Network Element.  A consequence of not authenticating the
    message\n   sender by the Network Element would be that an attacker could spoof\n
    \  the identity of a \"legitimate\" Authorizing Entity in order to\n   allocate
    resources, change resource assignments, or free resources.\n   The adversary can
    also manipulate the state at the Network Element in\n   such a way that it leads
    to a denial-of-service attack by, for\n   example, setting the allowed bandwidth
    to zero or allocating the\n   entire bandwidth available to a single flow.\n   A
    consequence of not authenticating the Network Element to an\n   Authorizing Entity
    is that an attacker could impact the policy-based\n   admission control procedure
    operated by the Authorizing Entity that\n   provides a wrong view of the resources
    used in the network.  Failing\n   to provide the required credentials should be
    subject to logging.\n   Authorization refers to whether a particular Authorizing
    Entity is\n   authorized to signal a Network Element with requests for one or
    more\n   applications, adhering to a certain policy profile.  Failing the\n   authorization
    process might indicate a resource theft attempt or\n   failure due to administrative
    and/or credential deficiencies.  In\n   either case, the Network Element should
    take the proper measures to\n   log such attempts.\n   Integrity is required to
    ensure that a Diameter message has not been\n   maliciously altered.  The result
    of a lack of data integrity\n   enforcement in an untrusted environment could
    be that an imposter\n   will alter the messages exchanged between a Network Entity
    and an\n   Authorizing Entity potentially causing a denial of service.\n   Confidentiality
    protection of Diameter messages ensures that the\n   signaling data is accessible
    only to the authorized entities.  When\n   signaling messages from the Application
    Server (via the Authorizing\n   Entity towards the Network Element) traverse untrusted
    networks, lack\n   of confidentiality will allow eavesdropping and traffic analysis.\n
    \  Additionally, Diameter QoS messages may carry authorization tokens\n   that
    require confidentiality protection.\n   Diameter offers security mechanisms to
    deal with the functionality\n   demanded in the paragraphs above.  In particular,
    Diameter offers\n   communication security between neighboring Diameter peers
    using\n   Transport Layer Security (TLS) or IPsec.  Authorization capabilities\n
    \  are application specific and part of the overall implementation.\n"
  title: 11.  Security Considerations
- contents:
  - "12.  Acknowledgements\n   The authors would like to thank John Loughney and Allison
    Mankin for\n   their input to this document.  In September 2005, Robert Hancock,\n
    \  Jukka Manner, Cornelia Kappler, Xiaoming Fu, Georgios Karagiannis,\n   and
    Elwyn Davies provided a detailed review.  Robert also provided us\n   with good
    feedback earlier in 2005.  Jerry Ash provided us review\n   comments in late 2005/early
    2006.  Rajith R provided some inputs to\n   the document in early 2007.\n   We
    would also like to thanks Alexey Melnikov, Adrian Farrel, and\n   Robert Sparks
    for their IESG reviews.\n"
  title: 12.  Acknowledgements
- contents:
  - "13.  Contributors\n   The authors would like to thank Tseno Tsenov and Frank
    Alfano for\n   starting the Diameter Quality of Service work within the IETF,
    for\n   their significant contributions and for being the driving force for\n
    \  the first few draft versions.\n"
  title: 13.  Contributors
- contents:
  - '14.  References

    '
  - contents:
    - "14.1.  Normative References\n   [RFC2119]       Bradner, S., \"Key words for
      use in RFCs to Indicate\n                   Requirement Levels\", BCP 14, RFC
      2119, March 1997.\n   [RFC3588]       Calhoun, P., Loughney, J., Guttman, E.,
      Zorn, G., and\n                   J. Arkko, \"Diameter Base Protocol\", RFC
      3588,\n                   September 2003.\n   [RFC4005]       Calhoun, P., Zorn,
      G., Spence, D., and D. Mitton,\n                   \"Diameter Network Access
      Server Application\",\n                   RFC 4005, August 2005.\n   [RFC5624]
      \      Korhonen, J., Tschofenig, H., and E. Davies, \"Quality\n                   of
      Service Parameters for Usage with Diameter\",\n                   RFC 5624,
      August 2009.\n   [RFC5777]       Korhonen, J., Tschofenig, H., Arumaithurai,
      M.,\n                   Jones, M., and A. Lior, \"Traffic Classification and\n
      \                  Quality of Service (QoS) Attributes for Diameter\",\n                   RFC
      5777, February 2010.\n"
    title: 14.1.  Normative References
  - contents:
    - "14.2.  Informative References\n   [MMUSIC-MEDIA]  Stucker, B. and H. Tschofenig,
      \"Analysis of Middlebox\n                   Interactions for Signaling Protocol
      Communication\n                   along the Media Path\", Work in Progress,
      March 2009.\n   [NSIS-NTLP]     Schulzrinne, H. and M. Stiemerling, \"GIST:
      General\n                   Internet Signalling Transport\", Work in Progress,\n
      \                  June 2009.\n   [NSIS-QOS]      Manner, J., Karagiannis, G.,
      and A. McDonald, \"NSLP\n                   for Quality-of-Service Signaling\",
      Work in Progress,\n                   January 2010.\n   [RFC2205]       Braden,
      B., Zhang, L., Berson, S., Herzog, S., and S.\n                   Jamin, \"Resource
      ReSerVation Protocol (RSVP) --\n                   Version 1 Functional Specification\",
      RFC 2205,\n                   September 1997.\n   [RFC2211]       Wroclawski,
      J., \"Specification of the Controlled-Load\n                   Network Element
      Service\", RFC 2211, September 1997.\n   [RFC2212]       Shenker, S., Partridge,
      C., and R. Guerin,\n                   \"Specification of Guaranteed Quality
      of Service\",\n                   RFC 2212, September 1997.\n   [RFC2474]       Nichols,
      K., Blake, S., Baker, F., and D. Black,\n                   \"Definition of
      the Differentiated Services Field (DS\n                   Field) in the IPv4
      and IPv6 Headers\", RFC 2474,\n                   December 1998.\n   [RFC2753]
      \      Yavatkar, R., Pendarakis, D., and R. Guerin, \"A\n                   Framework
      for Policy-based Admission Control\",\n                   RFC 2753, January
      2000.\n   [RFC2865]       Rigney, C., Willens, S., Rubens, A., and W. Simpson,\n
      \                  \"Remote Authentication Dial In User Service\n                   (RADIUS)\",
      RFC 2865, June 2000.\n   [RFC3261]       Rosenberg, J., Schulzrinne, H., Camarillo,
      G.,\n                   Johnston, A., Peterson, J., Sparks, R., Handley, M.,\n
      \                  and E. Schooler, \"SIP: Session Initiation Protocol\",\n
      \                  RFC 3261, June 2002.\n   [RFC3313]       Marshall, W., \"Private
      Session Initiation Protocol\n                   (SIP) Extensions for Media Authorization\",
      RFC 3313,\n                   January 2003.\n   [RFC3520]       Hamer, L-N.,
      Gage, B., Kosinski, B., and H. Shieh,\n                   \"Session Authorization
      Policy Element\", RFC 3520,\n                   April 2003.\n   [RFC3521]       Hamer,
      L-N., Gage, B., and H. Shieh, \"Framework for\n                   Session Set-up
      with Media Authorization\", RFC 3521,\n                   April 2003.\n   [RFC4282]
      \      Aboba, B., Beadles, M., Arkko, J., and P. Eronen,\n                   \"The
      Network Access Identifier\", RFC 4282,\n                   December 2005.\n
      \  [RFC4566]       Handley, M., Jacobson, V., and C. Perkins, \"SDP:\n                   Session
      Description Protocol\", RFC 4566, July 2006.\n   [RFC5246]       Dierks, T.
      and E. Rescorla, \"The Transport Layer\n                   Security (TLS) Protocol
      Version 1.2\", RFC 5246,\n                   August 2008.\n"
    title: 14.2.  Informative References
  title: 14.  References
- contents:
  - "Authors' Addresses\n   Dong Sun (editor)\n   Alcatel-Lucent\n   600 Mountain
    Ave\n   Murray Hill, NJ  07974\n   USA\n   Phone: +1 908 582 2617\n   EMail: d.sun@alcatel-lucent.com\n
    \  Peter J. McCann\n   Motorola Labs\n   1301 E. Algonquin Rd\n   Schaumburg,
    IL  60196\n   USA\n   Phone: +1 847 576 3440\n   EMail: pete.mccann@motorola.com\n
    \  Hannes Tschofenig\n   Nokia Siemens Networks\n   Linnoitustie 6\n   Espoo  02600\n
    \  Finland\n   Phone: +358 (50) 4871445\n   EMail: Hannes.Tschofenig@gmx.net\n
    \  URI:   http://www.tschofenig.priv.at\n   Tina Tsou\n   Huawei\n   Shenzhen,\n
    \  P.R.C\n   EMail: tena@huawei.com\n   Avri Doria\n   Lulea University of Technology\n
    \  Arbetsvetenskap\n   Lulea,   SE-97187\n   Sweden\n   EMail: avri@ltu.se\n   Glen
    Zorn (editor)\n   Network Zen\n   1310 East Thomas Street\n   #306\n   Seattle,
    Washington  98102\n   USA\n   Phone: +1 (206) 377-9035\n   EMail: gwz@net-zen.net\n"
  title: Authors' Addresses
