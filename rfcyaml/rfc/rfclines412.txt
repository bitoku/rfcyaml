The attached document is the HELP file for the Utah 10 implementation of the User FTP Process.
This is what the user has typed on his console when he types 'HELP
and as such is the only documention produced to date.
FTP User Documentation November 27, 1972 I. Control Characters
There are several control characters that have meaning to the FTP Process.
First, the abort character is <control
> (SUB), next for editing, only <control r>, <control a>, <control h>, <control v>,
<control w>, <alt mode>, <eol>, <space>, <control x
> and <rub out> have any meaning, <control a> (SOH) and <control h
> (BS) are the character delete keys.
> is the word delete character, Note: When dowing the ' funktion, this character will delete the entire line typed.
control v> says take the next character literally.
(ESC) terminates the command giving helpful noise words, <eol
> and <space> are terminators also.
These last two will give no command completion or noise words.
All three echo as a space however.
(CAN) and <rub out> (DEL) are the command abort characters.
<control r> (DC2) will retype the line as the command interpreter sees it.
as a prompter, for initial commands, it will type out all commands that begin with that particular character string.
If it is typed in a sub  command field, it will type out the prompt message only if it is the first character typed.
At all other times, it will be accepted as part of the typed string.
The FTP user process is designed to make transferring files from one host on the ARPANET to another much easier than it has been up until now.
To this end, the command language was designed to be as natural as possible.
The command interpreter is, of course, part of this idea.
Therefore, to help the user as much as possible, there are several ways to find out what is expected in the form of commands, file names, user  names, etc.
When the user has typed nothing, typing a ?
will cause the interpreter to type out all the commands that are available to the user.
If the user has typed anything at all, then it will respond with all commands that begin with the particular character string.
So that the command language was as easy to learn as possible
, the command interpreter will 'see' nothing that is not part of a legal command.
If the user types anything that is not expected, the character is not echoed and a bell is echoed instead.
Brief Command Listing The commands that are expected and their syntax are listed below.
UPPER and lower case letters are identical.
<decimal host number> <octal host number> ;<
any string> (useful for comments to a person that is linked to you)
> RETREIVE <remote file> (to)
> GET <remote file> (to)
SEND <local file> (to) <remote file> STORE
<local file> (to) <remote file> APPEND <local file
> (to) <remote file> RENAME <remote file> (to be) <new remote file name>
<file group> (to) <file group
> (see detailed description below)
LOGOUT DDT LIST <file group> (to file) <local file name> SOCKET (NOT IMPLEMENTED YET)
ALLOCATE <decimal number of bytes> QUIT foreign host)
HOST <any valid ARPANET host name or number>
USER <remote user name> PASSWORD <password for remote user's name> ACCOUNT <string or number for remote user's name
STATUS (see description of status command below)
LOGIN <user name> <password> <optional account> <to host> BYTE <decimal byte size> TYPE <type descriptor> STRUCTURE <structure descriptor> TENEX ASCII VERBOSE IV.
Detailed Description of the Commands
The commands and their syntax are described in greater detail blow.
The words in parenthesis are noise words.
upper and lower case are identical.
Unless otherwise noted in the command description, all commands described are implemented.
<host name> or <host number
Performs the ICP to the indicated host with explanatory remarks if the ICP is not possible.
Sets the mode of the data transfer connection according to the following sub commandos:
bit stream, end of file is indicated by the data connection closing.
formats (or expects formatted) data into blocks.
Forces TYPE ASCII and BYTE 8.
This command sends the appropiate commands to the foreign host, then sends the data using the TELNET codes for EOR and EOF as per the FTP Protocol.
Of the above sub commands, only MODE STREAM and MODE TEXT are implemented at present.
Sends the retr command to the remote server, sets up the data connection according to any previous MODE, TYPE, BYTE commands.
Puts the data coming on the the data connection into the local file specified.
> See description of RETREIVE.
> Accepts a local file name, does the formatting according to any previous BYTE, TYPE, MODE commands and sends it to the foreign host.
Does the same as a store except that the file is appended to the remote file rather that just writing over the file.
<file name> (to be) <new file name
Accepts the name of n old remote file and asks for a new file name, sends the appropiate commands and names to the foreign host causing the old file name to be replaced by the new file name.
This command causes the remote file to be marked for deletion.
It does require that the command be confirmed twice.
Causes the server to terminate the current session with the user.
The program will return to the EXEC MODE when the command has been acknowledged by the remote server.
This command does a variety of things.
it allows the user do describe a file group.
The  's may be for foreign files or local files according to the following sub commands: REMOTE (remote file group) <remote file grouping>
: Causes the user FTP to ask the server for the file in <remote file grouping>.
Then asks the user to specify where each file is to go.
A typical sequence might look like the following: !
copy remote (remote file group) ftp.
follow with the above line being repeated for each file in the remote file group.]
local file group>: Causes the user FTP to accept the file group specified, and send the file names to the server leaving off the <directory name> and version number of the local file.
The user may not specify  'd devices of  'd directorys.
A line for this might look like the following: !
copy local (local file group) ftp.
Next, if the user does not specify any  's for either the remote file or the local file, this command is exactly like the RETREIVE or STORE command described earlier.
See description of BYE command for more details.
Causes the user process to close all connections (if necessary), all files (if necessary), and reset the programs parameters to their defaults.
If DDT is loaded, just starts DDT.
If DDT is not loaded, it will load DDT and then start it at its initial start up location.
This command will casue an abnormal interrupt if DDT is not found.
LIST (file group) <remote file group> (to file)
Esentially causes the remote server to do a directory command.
and since the listing will come on the data connection, the user must specify a local file.
A sample line might look like the following: !
[ok] SOCKET <socket descriptor> Will accept a socket descriptor for the data to go to or come from.
At present it is NOT IMPLEMENTED because we have not decided on the format of the command to the server.
ALLOCATE <decimal number of bytes
Accepts as its argument a decimal number of bytes (of the specified size) telling the server how many bytes of storage to reserve for the next store of append.
Returns the console to the EXEC.
The program may be continued with no harm done.
This command allows the user to send arbitrary strings to the remote server.
At present, when talking to a TENEX site, it is only useful for doing the 'MAIL' command.
Other sites may have help commands of whatever.
HOST <ARPANET host name of number> Allows the user to specify an ARPANET host without actually connecting to the host.
This specified host will be the ont that is connected to (or the attempt will be made anyway) when the next 'immediate' command is executed.
EG: LOGIN, RETREIVE, STORE, LIST, etc.
Sets the user name for the remote system.
Useful for systems that require no password for the specified name.
Does nothing until an user must be 'logged into' the remote system.
The programm knows this and so will not let the user execute any commands (RETREIVE, STORE, APPEND, LIST, STATUS, RENAME, DELETE) until he has at least specified a remote user name.
The LOGIN command does this as does this command.
STATUS (of the) <sub cmd
> Accepts as its argument one of the following sub commands: SERVICE (at host) <ARPANET host name or number
>: Attempts to perform the ICP to the specified host.
Does not disturb any existing connections.
<ARPANET host name or number>
: See description of STATUS SERVICE above.
STATUS (of file) <remote file group>:
Similar to the LIST command described above except that the listing does not gone back on the data connection but on the TELNET connection.
See LIST command for more details.
: Just sneds the STAT command.
Typically, is good for finding out where your are and perhaps who you are.
PASSWORD (is) <passowrd for remote user's name
Sets the password for the remote user's name.
It is NOT echoed and does nothing until the next 'immediate' command is executed.
ACCOUNT (is) <account number or string> Accepts a string of number that can be charged for any activity the user specifies.
Useful only for systems that require this information of course.
Also does nothing until the next immediate command is executed.
the format of this command is identical to the TENEX login command.
It accepts a user name, password, and an optional account number.
If no host has been specified, it will ask for the host to be connected to.
This command will cause the ICP to take place if necessary.
BYTE (size is) <decimal byte size
This command sets the byte size for the data connection.
The default byte size is 8 bytes.
Type (is) <type descriptor> Takes as its argument one of the following subcommands:
Shorthand that sets TYPE IMAGE and BYTE 36.
Says that the data will be Ebcdic.
Says that the data is an Ascii print file with ASA vertical format controls.
Forces the user and server FTP to accept whatever byte size the user has specified.
For the present, this type is treated the same as for IMAGE TYPE.
Does the same as LOCAL.
Just forces the user and server FTP to accept the specified byte size without doing any translation as is done for ASCII type.
For most efficient usage of this command, the matching byte size should be BYTE 36 when using TENEX sites as servers.
Sets TYPE ASCII and 8 bit bytes.
Of the above sub commands, only PRINT and EBCDIC are not implemented yet.
STRUCTURE (is) <file structure descriptor
> Accepts as its argument one of the following sub commands:
Says the data on the data connection has record structure information contained in it.
Since TENEX NOT support record structured files per se, this mode only useful for sending text files to or retreiving text files from non TENEX sites.
The <EOL> in these files is converted to the TELNET EOR code for transmission and EOR to <EOL> etc.
Says the data stream has no record structure information in it.
TENEX See description under TYPE TENEX.
ASCII See description under TYPE ASCII.
This command sets the command completion/no completion flag.
The program assumes the NO VERBOSE mode and thus does not complete commands when <space> or <eol> is used as a command terminator
It also causes the noise words to be typed if in the verbose mode.
V. Sample Session using the FTP
The following scenario shows some uses of the FTP.
Everything that the user types is underlined.
1.38 LOGIN (USER) HICKS (PASSOWRD) (
1200 JOB 24 ON TTY2 11
NOV 72 1:51 TERMINAL (TYPE IS)
4 ftp FTP User Process 1.10 5
login (user) network (password) (account) 4 (to host)
10 CONNECTION IS OPEN TO CASE 10.
FTP Server 1.14.0 at SAT 11 NOV 72 2:00 EST !
confirm with carriage return tenex !
copy remote (remote group) ftp.
< IMAGE retreive of <NETWORK>
< IMAGE retreive of <NETWORK>
FTP.HELP;5 (to file) FTP.HELP;1 < IMAGE retreive of <NETWORK
usc isi Closing connections to CASE 10.
CONNECTION IS OPEN TO USC ISI.
USC ISI FTP Server 1.14.0 at SAT 11 NOV 72
account number or string for remote user's name log (user) hicks (password)
send (local file) ftp.sav;5 (to remote file)
ftp.sav < STORE of <HICKS>FTP.SAV;P777752;a , IMAGE type, started.
cp r acs.mac (to local file)
< IMAGE Retreive of <HICKS
Local file group,  's ok TENEX sites only, copy 1 ftp.
< Store of <HICKS>FTP.MAC;1;P777752;A1, IMAGE type, Started.
< Store of <HICKS>FTP.SAV;2;P777753;A1, IMAGE type, Started.
< copy of <HICKS>FTP.HELP;1;P777752;A1 IMAGE type, Started, < Transfer completed.
logout [logout message go here]
[ This RFC was put into machine readable form for entry ]
[ into the online RFC archives by Gottfried Janik 6/97 ]
