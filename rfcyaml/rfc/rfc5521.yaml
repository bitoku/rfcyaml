- contents:
  - "   Extensions to the Path Computation Element Communication Protocol\n                      (PCEP)
    for Route Exclusions\n"
  title: __initial_text__
- contents:
  - "Status of This Memo\n   This document specifies an Internet standards track protocol
    for the\n   Internet community, and requests discussion and suggestions for\n
    \  improvements.  Please refer to the current edition of the \"Internet\n   Official
    Protocol Standards\" (STD 1) for the standardization state\n   and status of this
    protocol.  Distribution of this memo is unlimited.\n"
  title: Status of This Memo
- contents:
  - "Copyright Notice\n   Copyright (c) 2009 IETF Trust and the persons identified
    as the\n   document authors.  All rights reserved.\n   This document is subject
    to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents
    in effect on the date of\n   publication of this document (http://trustee.ietf.org/license-info).\n
    \  Please review these documents carefully, as they describe your rights\n   and
    restrictions with respect to this document.\n   This document may contain material
    from IETF Documents or IETF\n   Contributions published or made publicly available
    before November\n   10, 2008.  The person(s) controlling the copyright in some
    of this\n   material may not have granted the IETF Trust the right to allow\n
    \  modifications of such material outside the IETF Standards Process.\n   Without
    obtaining an adequate license from the person(s) controlling\n   the copyright
    in such materials, this document may not be modified\n   outside the IETF Standards
    Process, and derivative works of it may\n   not be created outside the IETF Standards
    Process, except to format\n   it for publication as an RFC or to translate it
    into languages other\n   than English.\n"
  title: Copyright Notice
- contents:
  - "Abstract\n   The Path Computation Element (PCE) provides functions of path\n
    \  computation in support of traffic engineering (TE) in Multi-Protocol\n   Label
    Switching (MPLS) and Generalized MPLS (GMPLS) networks.\n   When a Path Computation
    Client (PCC) requests a PCE for a route, it\n   may be useful for the PCC to specify,
    as constraints to the path\n   computation, abstract nodes, resources, and Shared
    Risk Link Groups\n   (SRLGs) that are to be explicitly excluded from the computed
    route.\n   Such constraints are termed \"route exclusions\".\n   The PCE Communication
    Protocol (PCEP) is designed as a communication\n   protocol between PCCs and PCEs.
    \ This document presents PCEP\n   extensions for route exclusions.\n"
  title: Abstract
- contents:
  - "Table of Contents\n   1.  Introduction .................................................
    3\n       1.1.  Conventions Used in This Document .......................3\n   2.
    \ Protocol Procedures and Extensions ........................... 4\n       2.1.
    \ Exclude Route Object (XRO) ............................. 4\n             2.1.1.
    \ Definition ..................................... 4\n             2.1.2.  Processing
    Rules ............................... 8\n       2.2.  Explicit Route Exclusion
    ............................... 9\n             2.2.1.  Definition .....................................
    9\n             2.2.2.  Processing Rules .............................. 10\n   3.
    \ Exclude Route with Confidentiality .......................... 11\n       3.1.
    \ Exclude Route Object (XRO) Carrying Path-Key .......... 11\n             3.1.1.
    \ Definition .................................... 11\n             3.1.2.  Processing
    Rules .............................. 12\n   4.  IANA Considerations .........................................
    13\n       4.1.  PCEP Objects .......................................... 13\n
    \      4.2.  New Subobject for the Include Route Object ............ 13\n       4.3.
    \ Error Object Field Values ............................. 13\n       4.4.  Exclude
    Route Flags ................................... 14\n   5.  Manageability Considerations
    ................................ 14\n   6.  Security Considerations .....................................
    14\n   7.  References .................................................. 15\n
    \      7.1.  Normative References .................................. 15\n       7.2.
    \ Informative References ................................ 15\n   Acknowledgements
    ................................................ 16\n"
  title: Table of Contents
- contents:
  - "1.  Introduction\n   The Path Computation Element (PCE) defined in [RFC4655]
    is an entity\n   that is capable of computing a network path or route based on
    a\n   network graph, and applying computational constraints.  A Path\n   Computation
    Client (PCC) may make requests to a PCE for paths to be\n   computed.\n   When
    a PCC requests a PCE for a route, it may be useful for the PCC\n   to specify
    abstract nodes, resources, and Shared Risk Link Groups\n   (SRLGs) that are to
    be explicitly excluded from the route.\n   For example, disjoint paths for inter-domain
    Label Switched Paths\n   (LSPs) may be computed by cooperation between PCEs, each
    of which\n   computes segments of the paths across one domain.  In order to\n
    \  achieve path computation for a secondary (backup) path, a PCE may act\n   as
    a PCC to request another PCE for a route that must be\n   node/link/SRLG disjoint
    from the primary (working) path.  Another\n   example is where a network operator
    wants a path to avoid specified\n   nodes for administrative reasons, perhaps
    because the specified nodes\n   will be out-of-service in the near future.\n   [RFC4657]
    specifies generic requirements for a communication protocol\n   between PCCs and
    PCEs.  Generic constraints described in [RFC4657]\n   include route exclusions
    for links, nodes, and SRLGs.  That is, the\n   requirement for support of route
    exclusions within the PCC-PCE\n   communication protocol is already established.\n
    \  The PCE communication protocol (PCEP) is designed as a communication\n   protocol
    between PCCs and PCEs and is defined in [RFC5440].  This\n   document presents
    PCEP extensions to satisfy the requirements for\n   route exclusions as described
    in Sections 5.1.4 and 5.1.16 of\n   [RFC4657].\n   Note that MPLS-TE and GMPLS
    signaling extensions for communicating\n   route exclusions between network nodes
    for specific Label Switched\n   Paths (LSPs) are described in [RFC4874].  Route
    exclusions may be\n   specified during provisioning requests for specific LSPs
    by setting\n   the mplsTunnelHopInclude object of MPLS-TE-STD-MIB defined in\n
    \  [RFC3812] to false (2).\n"
  - contents:
    - "1.1.  Conventions Used in This Document\n   The key words \"MUST\", \"MUST
      NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\",
      \"RECOMMENDED\",  \"MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted
      as described in RFC 2119 [RFC2119].\n"
    title: 1.1.  Conventions Used in This Document
  title: 1.  Introduction
- contents:
  - "2.  Protocol Procedures and Extensions\n   This section describes the procedures
    adopted by a PCE handling a\n   request for path computation with route exclusions
    received from a\n   PCC, and defines how those exclusions are encoded.\n   There
    are two types of route exclusion described in [RFC4874].\n   1. Exclusion of certain
    abstract nodes or resources from the whole\n      path.  This set of abstract
    nodes is referred to as the Exclude\n      Route List.\n   2. Exclusion of certain
    abstract nodes or resources between a\n      specific pair of abstract nodes present
    in an explicit path.  Such\n      specific exclusions are referred to as an Explicit
    Route\n      Exclusion.\n   This document defines protocol extensions to allow
    a PCC to specify\n   both types of route exclusions to a PCE on a path computation\n
    \  request.\n   A new PCEP object, the Exclude Route Object (XRO), is defined
    to\n   convey the Exclude Route List.  The existing Include Route Object\n   (IRO)
    in PCEP [RFC5440] is modified by introducing a new IRO\n   subobject, the Explicit
    Exclusion Route subobject (EXRS), to convey\n   Explicit Route Exclusions.\n"
  - contents:
    - '2.1.  Exclude Route Object (XRO)

      '
    - contents:
      - "2.1.1.  Definition\n   The XRO is OPTIONAL and MAY be carried within Path
        Computation\n   Request (PCReq) and Path Computation Reply (PCRep) messages.\n
        \  When present in a PCReq message, the XRO provides a list of network\n   resources
        that the PCE is requested to exclude from the path that it\n   computes.  Flags
        associated with each list member instruct the PCE as\n   to whether the network
        resources must be excluded from the computed\n   path, or whether the PCE
        should make best efforts to exclude the\n   resources from the computed path.\n
        \  The XRO MAY be used on a PCRep message that carries the NO-PATH\n   object
        (i.e., one that reports a path computation failure) to\n   indicate the set
        of elements of the original XRO that prevented the\n   PCE from finding a
        path.\n   The XRO MAY also be used on a PCRep message for a successful path\n
        \  computation when the PCE wishes to provide a set of exclusions to be\n
        \  signaled during LSP setup using the extensions to Resource\n   Reservation
        Protocol (RSVP)-TE [RFC4874].\n   The XRO Object-Class is 17.\n   The XRO
        Object-Type is 1.\n       0                   1                   2                   3\n
        \      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \     |        Reserved               |   Flags                     |F|\n
        \     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \     |                                                               |\n
        \     //                        (Subobjects)                         //\n
        \     |                                                               |\n
        \     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \                         Figure 1: XRO Body Format\n   Reserved: 16 bits
        - MUST be set to zero on transmission and SHOULD be\n   ignored on receipt.\n
        \  Flags: 16 bits - The following flags are currently defined:\n      F (Fail
        - 1 bit): when set, the requesting PCC requires the\n      computation of
        a new path for an existing TE LSP that has failed.\n      If the F bit is
        set, the path of the existing TE LSP MUST be\n      provided in the PCReq
        message by means of a Record Route Object\n      (RRO) defined in [RFC5440].
        \ This allows the path computation to\n      take into account the previous
        path and reserved resources to\n      avoid double bandwidth booking should
        the Traffic Engineering\n      Database (TED) have not yet been updated or
        the corresponding\n      resources not be yet been released.  This will usually
        be used in\n      conjunction with the exclusion from the path computation
        of the\n      failed resource that caused the LSP to fail.\n   Subobjects:
        The XRO is made up of one or more subobject(s).  An XRO\n   with no subobjects
        MUST NOT be sent and SHOULD be ignored on receipt.\n   In the following subobject
        definitions, a set of fields have\n   consistent meaning as follows:\n   X\n
        \     The X-bit indicates whether the exclusion is mandatory or desired.\n
        \     0 indicates that the resource specified MUST be excluded from the\n
        \     path computed by the PCE.  1 indicates that the resource specified\n
        \     SHOULD be excluded from the path computed by the PCE, but MAY be\n      included
        subject to PCE policy and the absence of a viable path\n      that meets the
        other constraints and excludes the resource.\n   Type\n      The type of the
        subobject.  The following subobject types are\n      defined.\n      Type
        \          Subobject\n      -------------+-------------------------------\n
        \     1              IPv4 prefix\n      2              IPv6 prefix\n      4
        \             Unnumbered Interface ID\n      32             Autonomous system
        number\n      34             SRLG\n   Length\n      The length of the subobject
        including the Type and Length fields.\n   Prefix Length\n      Where present,
        this field can be used to indicate a set of\n      addresses matching a prefix.
        \ If the subobject indicates a single\n      address, the prefix length MUST
        be set to the full length of the\n      address.\n   Attribute\n      The
        Attribute field indicates how the exclusion subobject is to be\n      interpreted.\n
        \  0 Interface\n      The subobject is to be interpreted as an interface or
        set of\n      interfaces.  All interfaces identified by the subobject are
        to be\n      excluded from the computed path according to the setting of the\n
        \     X-bit.  This value is valid only for subobject types 1, 2, and 3.\n
        \  1 Node\n      The subobject is to be interpreted as a node or set of nodes.
        \ All\n      nodes identified by the subobject are to be excluded from the\n
        \     computed path according to the setting of the X-bit.  This value\n      is
        valid only for subobject types 1, 2, 3, and 4.\n   2 SRLG\n      The subobject
        identifies an SRLG explicitly or indicates all of\n      the SRLGs associated
        with the resource or resources identified by\n      the subobject.  Resources
        that share any SRLG with those\n      identified are to be excluded from the
        computed path according to\n      the setting of the X-bit.  This value is
        valid for all subobjects.\n   Reserved\n      Reserved fields within subobjects
        MUST be transmitted as zero and\n      SHOULD be ignored on receipt.\n   The
        subobjects are encoded as follows:\n   IPv4 prefix Subobject\n    0                   1
        \                  2                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3
        4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \  |X|  Type = 1   |     Length    | IPv4 address (4 bytes)        |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \  | IPv4 address (continued)      | Prefix Length |   Attribute   |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \  IPv6 prefix Subobject\n    0                   1                   2                   3\n
        \   0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \  |X|  Type = 2   |     Length    | IPv6 address (16 bytes)       |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \  | IPv6 address (continued)                                      |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \  | IPv6 address (continued)                                      |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \  | IPv6 address (continued)                                      |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \  | IPv6 address (continued)      | Prefix Length |   Attribute   |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \  Unnumbered Interface ID Subobject\n    0                   1                   2
        \                  3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3
        4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \  |X|  Type = 3   |     Length    |    Reserved   |  Attribute    |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \  |                        TE Router ID                           |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \  |                        Interface ID                           |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \  The TE Router ID and Interface ID fields are as defined in [RFC3477].\n
        \  Autonomous System Number Subobject\n    0                   1                   2
        \                  3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3
        4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \  |X|  Type = 4   |     Length    |      2-Octet AS Number        |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \  Note that as in other PCEP objects [RFC5440] and RSVP-TE objects\n   [RFC3209],
        no support for 4-octet Autonomous System (AS) Numbers is\n   provided.  It
        is anticipated that, as 4-octet AS Numbers become more\n   common, both PCEP
        and RSVP-TE will be updated in a consistent way to\n   add this support.\n
        \  SRLG Subobject\n    0                   1                   2                   3\n
        \   0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \  |X|  Type = 5   |     Length    |       SRLG Id (4 bytes)       |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \  |      SRLG Id (continued)      |    Reserved   |  Attribute    |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \  The Attribute SHOULD be set to two (2) and SHOULD be ignored on\n   receipt.\n"
      title: 2.1.1.  Definition
    - contents:
      - "2.1.2.  Processing Rules\n   A PCC builds an XRO to encode all of the resources
        that it wishes the\n   PCE to exclude from the path that it is requested to
        compute.  For\n   each exclusion, the PCC clears the X-bit to indicate that
        the PCE is\n   required to exclude the resources, or sets the X-bit to indicate
        that\n   the PCC simply desires that the resources are excluded.  For each\n
        \  exclusion, the PCC also sets the Attribute field to indicate how the\n
        \  PCE should interpret the contents of the exclusion subobject.\n   When
        a PCE receives a PCReq message it looks for an XRO to see if\n   exclusions
        are required.  If the PCE finds more than one XRO, it MUST\n   use the first
        one in the message and MUST ignore subsequent\n   instances.\n   If the PCE
        does not recognize the XRO, it MUST return a PCErr message\n   with Error-Type
        \"Unknown Object\" as described in [RFC5440].\n   If the PCE is unwilling
        or unable to process the XRO, it MUST return\n   a PCErr message with the
        Error-Type \"Not supported object\" and follow\n   the relevant procedures
        described in [RFC5440].\n   If the PCE processes the XRO and attempts to compute
        a path, it MUST\n   adhere to the requested exclusions as expressed in the
        XRO.  That is,\n   the returned path MUST NOT include any resources encoded
        with the\n   X-bit clear, and SHOULD NOT include any with the X-bit set unless\n
        \  alternate paths that match the other constraints expressed in the\n   PCReq
        are unavailable.\n   When a PCE returns a path in a PCRep, it MAY also supply
        an XRO.  An\n   XRO in a PCRep message with the NO-PATH object indicates that
        the set\n   of elements of the original XRO prevented the PCE from finding
        a\n   path.  On the other hand, if an XRO is present in a PCRep message\n
        \  without a NO-PATH object, the PCC SHOULD apply the contents using the\n
        \  same rules as in [RFC4874] and the PCC or a corresponding LSR SHOULD\n
        \  signal an RSVP-TE XRO to indicate the exclusions that downstream LSRs\n
        \  should apply.  This may be particularly useful in per-domain path\n   computation
        scenarios [RFC5152].\n"
      title: 2.1.2.  Processing Rules
    title: 2.1.  Exclude Route Object (XRO)
  - contents:
    - '2.2.  Explicit Route Exclusion

      '
    - contents:
      - "2.2.1.  Definition\n   Explicit Route Exclusion defines network elements
        that must not or\n   should not be used on the path between two abstract nodes
        or\n   resources explicitly indicated in the Include Route Object (IRO)\n
        \  [RFC5440].  This information is encoded by defining a new subobject\n   for
        the IRO.\n   The new IRO subobject, the Explicit Exclusion Route subobject
        (EXRS),\n   has type 33 (see Section 4).  The EXRS contains one or more\n
        \  subobjects in its own right.  An EXRS MUST NOT be sent with no\n   subobjects,
        and if received with no subobjects, MUST be ignored.\n   The format of the
        EXRS is as follows:\n    0                   1                   2                   3\n
        \   0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \  |L|    Type     |     Length    |           Reserved            |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \  |                                                               |\n   //
        \               One or more EXRS subobjects                  //\n   |                                                               |\n
        \  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   L\n
        \     MUST be set to zero on transmission and MUST be ignored on\n      receipt.\n
        \  Reserved\n      MUST be set to zero on transmission and SHOULD be ignored
        on\n      receipt.\n   The EXRS subobject may carry any of the subobjects
        defined for\n   inclusion in the XRO by this document or by future documents.
        \ The\n   meanings of the fields of the XRO subobjects are unchanged when
        the\n   subobjects are included in an EXRS, except that scope of the\n   exclusion
        is limited to the single hop between the previous and\n   subsequent elements
        in the IRO.\n"
      title: 2.2.1.  Definition
    - contents:
      - "2.2.2.  Processing Rules\n   A PCC that supplies a partial explicit route
        to a PCE in an IRO MAY\n   also specify explicit exclusions by including one
        or more EXRSs in\n   the IRO.\n   If a PCE that does not support the use of
        EXRS receives an IRO in a\n   PCReq message that contains an EXRS, it will
        respond according to the\n   rules for a malformed object as described in
        [RFC5440].  The PCE MAY\n   also include the IRO in the PCErr to indicate
        in which case the IRO\n   SHOULD be terminated immediately after the unrecognized
        EXRS.\n   If a PCE that supports the EXRS in an IRO parses an IRO and\n   encounters
        an EXRS that contains a subobject that it does not support\n   or recognize,
        it MUST act according to the setting of the X-bit in\n   the subobject.  If
        the X-bit is clear, the PCE MUST respond with a\n   PCErr with Error-Type
        \"Unrecognized EXRS subobject\" and set the\n   Error-Value to the EXRS subobject
        type code (see Section 4).  If the\n   X-bit is set, the PCE MAY respond with
        a PCErr as already stated or\n   MAY ignore the EXRS subobject: this choice
        is a local policy\n   decision.\n   If a PCE parses an IRO and encounters
        an EXRS subobject that it\n   recognizes, it MUST act according to the requirements
        expressed in\n   the subobject.  That is, if the X-bit is clear, the PCE MUST
        NOT\n   produce a path that includes any resource identified by the EXRS\n
        \  subobject in the path between the previous abstract node in the IRO\n   and
        the next abstract node in the IRO.  If the X-bit is set, the PCE\n   SHOULD
        NOT produce a path that includes any resource identified by\n   the EXRS subobject
        in the path between the previous abstract node in\n   the IRO and the next
        abstract node in the IRO unless it is not\n   possible to construct a path
        that avoids that resource while still\n   complying with the other constraints
        expressed in the PCReq message.\n   A successful path computation reported
        in a PCRep message MUST\n   include an ERO to specify the path that has been
        computed as\n   specified in [RFC5440].  That ERO MAY contain specific route\n
        \  exclusions using the EXRS as specified in [RFC4874].\n   If the path computation
        fails and a PCErr is returned with a NO-PATH\n   object, the PCE MAY include
        an IRO to report the hops that could not\n   be complied with as described
        in [RFC5440], and that IRO MAY include\n   EXRSs.\n"
      title: 2.2.2.  Processing Rules
    title: 2.2.  Explicit Route Exclusion
  title: 2.  Protocol Procedures and Extensions
- contents:
  - '3.  Exclude Route with Confidentiality

    '
  - contents:
    - '3.1.  Exclude Route Object (XRO) Carrying Path-Key

      '
    - contents:
      - "3.1.1.  Definition\n   In PCE-based inter-domain diverse path computation,
        an XRO may be\n   used to find a backup (secondary) path.  A sequential path\n
        \  computation approach may be applied for this purpose, where a working\n
        \  (primary) path route is computed first and a backup path route that\n   must
        be a node/link/SRLG disjoint route from the working path is then\n   computed
        [RFC5298].  Backward Recursive Path Computation (BRPC) may\n   be used for
        inter-domain path computation [RFC5441].\n   In some cases of inter-domain
        computation (e.g., where domains are\n   administered by different service
        providers), confidentiality must be\n   kept.  For primary path computation,
        to preserve confidentiality,\n   instead of explicitly expressing the computed
        route, Path-Key\n   Subobjects (PKSs) [RFC5520] are carried in the Explicit
        Route Object\n   (ERO) in the PCRep Message.\n   Therefore, during inter-domain
        diverse path computation, it may be\n   necessary to request diversity from
        a path that is not fully known\n   and where a segment of the path is represented
        by a PKS.  This means\n   that a PKS may be present as a subobject of the
        XRO on a PCReq\n   message.\n   The format and definition of PKS when it appears
        as an XRO subobject\n   are as defined in [RFC5520], except for the definition
        of the L bit.\n   The L bit of the PKS subobject in the XRO MUST be ignored.\n"
      title: 3.1.1.  Definition
    - contents:
      - "3.1.2.  Processing Rules\n   Consider that BRPC is applied for both working
        and backup path\n   computation in a sequential manner.  First, PCC requests
        PCE for the\n   computation of a working path.  After BRPC processing has
        completed,\n   the PCC receives the results of the working-path computation\n
        \  expressed in an ERO in a PCRep message.  The ERO may include PKSs if\n
        \  certain segments of the path are to be kept confidential.\n   For backup
        path computation, when the PCC constructs a PCReq Message,\n   it includes
        the entire working-path in the XRO so that the computed\n   path is node/link
        disjoint from the working path.  The XRO may also\n   include SRLGs to ensure
        SRLG diversity from the working path.  If the\n   working path ERO includes
        PKS subobjects, these are also included in\n   the XRO to allow the PCE to
        ensure diversity.\n   A set of PCEs for backup path computation may be the
        same as ones for\n   working path computation, or they may be different.\n
        \  - Identical PCEs\n      In the case where the same PCEs are used for both
        path\n      computations, the processing is as follows.  During the process
        of\n      BRPC for backup path computation, a PCE may encounter a PKS as it\n
        \     processes the XRO when it creates a virtual path tree (VPT) in its\n
        \     own domain.  The PCE retrieves the PCE-ID from the PKS, recognizes\n
        \     itself, and converts the PKS into a set of XRO subobjects that it\n
        \     uses for the local calculation to create the VPT.  The XRO\n      subobjects
        created in this way MUST NOT be shared with other PCEs.\n      Other operations
        are the same as BRPC.\n   - Different PCEs\n      In the case where a set
        of PCEs for backup path computation is\n      different from the ones used
        for working path computation, the\n      processing is as follows.  If a PCE
        encounters a PKS in an XRO\n      when it is creating a virtual path tree
        in its own domain, the PCE\n      retrieves the PCE-ID from the PKS and sends
        a PCReq message to the\n      identified PCE to expand the PKS.  The PCE computing
        the VPT\n      treats the path segment in the response as a set of XRO subobjects\n
        \     in performing its path computation.  The XRO subobjects determined\n
        \     in this way MUST NOT be shared with other PCEs.\n"
      title: 3.1.2.  Processing Rules
    title: 3.1.  Exclude Route Object (XRO) Carrying Path-Key
  title: 3.  Exclude Route with Confidentiality
- contents:
  - '4.  IANA Considerations

    '
  - contents:
    - "4.1.  PCEP Objects\n   The \"PCEP Parameters\" registry contains a subregistry
      \"PCEP Objects\".\n   IANA has made the following allocations from this registry.\n
      \     Object   Name                                          Reference\n      Class\n
      \     17       XRO                                           [RFC5521]\n                 Object-Type\n
      \                  1: Route exclusion\n   This object should be registered as
      being allowed to carry the\n   following subobjects:\n      Subobject Type                                         Reference\n
      \       1  IPv4 prefix                                       [RFC3209]\n        2
      \ IPv6 prefix                                       [RFC3209]\n        4  Unnumbered
      Interface ID                           [RFC3477]\n       32  Autonomous system
      number                          [RFC3209]\n       34  SRLG                                              [RFC4874]\n
      \      64  Path-Key with 32-bit PCE ID                       [RFC5520]\n       65
      \ Path-Key with 128-bit PCE ID                      [RFC5520]\n"
    title: 4.1.  PCEP Objects
  - contents:
    - "4.2.  New Subobject for the Include Route Object\n   The \"PCEP Parameters\"
      registry contains a subregistry \"PCEP Objects\"\n   with an entry for the Include
      Route Object (IRO).\n   IANA added a further subobject that can be carried in
      the IRO as\n   follows:\n   Subobject Type                                         Reference\n
      \  33  Explicit Exclusion Route subobject (EXRS)          [RFC4874]\n"
    title: 4.2.  New Subobject for the Include Route Object
  - contents:
    - "4.3.  Error Object Field Values\n   The \"PCEP Parameters\" registry contains
      a subregistry \"Error Types\n   and Values\".  IANA made the following allocations
      from this\n   subregistry.\n   Error\n   Type  Meaning                                            Reference\n
      \  11    Unrecognized EXRS subobject                        [RFC5521]\n"
    title: 4.3.  Error Object Field Values
  - contents:
    - "4.4.  Exclude Route Flags\n   IANA created a subregistry of the \"PCEP Parameters\"
      for the bits\n   carried in the Flags field of the Exclude Route Object (XRO).
      \ The\n   subregistry is called \"XRO Flag Field\".\n   New bits may be allocated
      only by an IETF Consensus action.\n   The field contains 16 bits numbered from
      bit 0 as the most\n   significant bit.\n      Bit      Name    Description                          Reference\n
      \     15       F-bit   Fail                                 [RFC5221]\n"
    title: 4.4.  Exclude Route Flags
  title: 4.  IANA Considerations
- contents:
  - "5.  Manageability Considerations\n   A MIB module for management of the PCEP
    is being specified in a\n   separate document [PCEP-MIB].  That MIB module allows
    examination of\n   individual PCEP messages, in particular requests, responses
    and\n   errors.\n   The MIB module MUST be extended to include the ability to
    view the\n   route exclusion extensions defined in this document.\n   Several
    local policy decisions should be made at the PCE.  Firstly,\n   the exact behavior
    with regard to desired exclusions must be\n   available for examination by an
    operator and may be configurable.\n   Second, the behavior on receipt of an unrecognized
    XRO or EXRS\n   subobject with the X-bit set should be configurable and must be\n
    \  available for inspection.  The inspection and control of these local\n   policy
    choices may be part of the PCEP MIB module.\n"
  title: 5.  Manageability Considerations
- contents:
  - "6.  Security Considerations\n   The new exclude route mechanisms defined in this
    document allow finer\n   and more specific control of the path computed by a PCE.
    \ Such\n   control increases the risk if a PCEP message is intercepted,\n   modified,
    or spoofed because it allows the attacker to exert control\n   over the path that
    the PCE will compute or to make the path\n   computation impossible.  Therefore,
    the security techniques described\n   in [RFC5440] are considered more important.\n
    \  Note, however, that the route exclusion mechanisms also provide the\n   operator
    with the ability to route around vulnerable parts of the\n   network and may be
    used to increase overall network security.\n"
  title: 6.  Security Considerations
- contents:
  - '7.  References

    '
  - contents:
    - "7.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use
      in RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119, March
      1997.\n   [RFC3209]  Awduche, D., Berger, L., Gan, D., Li, T., Srinivasan, V.,\n
      \             and G. Swallow, \"RSVP-TE: Extensions to RSVP for LSP\n              Tunnels\",
      RFC 3209, December 2001.\n   [RFC5152]  Vasseur, JP., Ed., Ayyangar, A., Ed.,
      and R. Zhang, \"A\n              Per-Domain Path Computation Method for Establishing\n
      \             Inter-Domain Traffic Engineering (TE) Label Switched Paths\n              (LSPs)\",
      RFC 5152, February 2008.\n   [RFC5440]  Vasseur, JP., Ed., and JL. Le Roux,
      Ed., \"Path Computation\n              Element (PCE) Communication Protocol
      (PCEP)\", RFC 5440,\n              March 2009.\n   [RFC5441]  Vasseur, JP.,
      Ed., Zhang, R., Bitar, N., and JL. Le Roux,\n              \"A Backward-Recursive
      PCE-Based Computation (BRPC)\n              Procedure to Compute Shortest Constrained
      Inter-Domain\n              Traffic Engineering Label Switched Paths\", RFC
      5441, April\n              2009.\n   [RFC5520]  Bradford, R., Ed., Vasseur,
      JP., and A. Farrel,\n              \"Preserving Topology Confidentiality in
      Inter-Domain Path\n              Computation Using a Path-Key-Based Mechanism\",
      RFC 5520,\n              April 2009.\n"
    title: 7.1.  Normative References
  - contents:
    - "7.2.  Informative References\n   [PCEP-MIB] Koushik, A. S. K., and E. Stephan,
      \"PCE Communication\n              Protocol(PCEP) Management Information Base\",
      Work in\n              Progress, November 2008.\n   [RFC3477]  Kompella, K.
      and Y. Rekhter, \"Signalling Unnumbered Links\n              in Resource ReSerVation
      Protocol - Traffic Engineering\n              (RSVP-TE)\", RFC 3477, January
      2003.\n   [RFC3812]  Srinivasan, C., Viswanathan, A., and T. Nadeau,\n              \"Multiprotocol
      Label Switching (MPLS) Traffic Engineering\n              (TE) Management Information
      Base (MIB)\", RFC 3812, June\n              2004.\n   [RFC4655]  Farrel, A.,
      Vasseur, J.-P., and J. Ash, \"A Path\n              Computation Element (PCE)-Based
      Architecture\", RFC 4655,\n              August 2006.\n   [RFC4657]  Ash, J.,
      Ed., and J. Le Roux, Ed., \"Path Computation\n              Element (PCE) Communication
      Protocol Generic\n              Requirements\", RFC 4657, September 2006.\n
      \  [RFC4874]  Lee, CY., Farrel, A., and S. De Cnodder, \"Exclude Routes -\n
      \             Extension to Resource ReserVation Protocol-Traffic\n              Engineering
      (RSVP-TE)\", RFC 4874, April 2007.\n   [RFC5298]  Takeda, T., Ed., Farrel, A.,
      Ed., Ikejiri, Y., and JP.\n              Vasseur, \"Analysis of Inter-Domain
      Label Switched Path\n              (LSP) Recovery\", RFC 5298, August 2008.\n"
    title: 7.2.  Informative References
  title: 7.  References
- contents:
  - "Acknowledgements\n   The authors would like to thank Fabien Verhaeghe for valuable\n
    \  comments on subobject formats.  Thanks to Magnus Westerlund, Dan\n   Romascanu,
    Tim Polk, and Dave Ward for comments during IESG review.\n"
  title: Acknowledgements
- contents:
  - "Authors' Addresses\n   Eiji Oki\n   University of Electro-Communications\n   1-5-1
    Chofugaoka\n   Chofu, Tokyo  182-8585\n   JAPAN\n   EMail: oki@ice.uec.ac.jp\n
    \  Tomonori Takeda\n   NTT\n   3-9-11 Midori-cho,\n   Musashino-shi, Tokyo 180-8585,
    Japan\n   EMail: takeda.tomonori@lab.ntt.co.jp\n   Adrian Farrel\n   Old Dog Consulting\n
    \  EMail: adrian@olddog.co.uk\n"
  title: Authors' Addresses
