- title: __initial_text__
  contents:
  - '                 The Hitchhikers Guide to the Internet

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This RFC is being distributed to members of the Internet\
    \ community in\n   order to make available some \"hints\" which will allow new\
    \ network\n   participants to understand how the direction of the Internet is\
    \ set,\n   how to acquire online information and how to be a good Internet\n \
    \  neighbor.  While the information discussed may not be relevant to the\n   research\
    \ problems of the Internet, it may be interesting to a number\n   of researchers\
    \ and implementors.  No standards are defined or\n   specified in this memo. \
    \ Distribution of this memo is unlimited.\n"
- title: 'NOTICE:'
  contents:
  - "NOTICE:\n   The hitchhikers guide to the Internet is a very unevenly edited memo\n\
    \   and contains many passages which simply seemed to its editors like a\n   good\
    \ idea at the time.  It is an indispensable companion to all those\n   who are\
    \ keen to make sense of life in an infinitely complex and\n   confusing Internet,\
    \ for although it cannot hope to be useful or\n   informative on all matters,\
    \ it does make the reassuring claim that\n   where it is inaccurate, it is at\
    \ least definitively inaccurate.  In\n   cases of major discrepancy it is always\
    \ reality that's got it wrong.\n   And remember, DON'T PANIC.  (Apologies to Douglas\
    \ Adams.)\n"
- title: Purpose and Audience
  contents:
  - "Purpose and Audience\n   This document assumes that one is familiar with the\
    \ workings of a\n   non-connected simple IP network (e.g., a few 4.3 BSD systems\
    \ on an\n   Ethernet not connected to anywhere else).  Appendix A contains\n \
    \  remedial information to get one to this point.  Its purpose is to get\n   that\
    \ person, familiar with a simple net, versed in the \"oral\n   tradition\" of\
    \ the Internet to the point that that net can be\n   connected to the Internet\
    \ with little danger to either.  It is not a\n   tutorial, it consists of pointers\
    \ to other places, literature, and\n   hints which are not normally documented.\
    \  Since the Internet is a\n   dynamic environment, changes to this document will\
    \ be made regularly.\n   The author welcomes comments and suggestions.  This is\
    \ especially\n   true of terms for the glossary (definitions are not necessary).\n"
- title: What is the Internet?
  contents:
  - "What is the Internet?\n   In the beginning there was the ARPANET, a wide area\
    \ experimental\n   network connecting hosts and terminal servers together.  Procedures\n\
    \   were set up to regulate the allocation of addresses and to create\n   voluntary\
    \ standards for the network.  As local area networks became\n   more pervasive,\
    \ many hosts became gateways to local networks.  A\n   network layer to allow\
    \ the interoperation of these networks was\n   developed and called Internet Protocol\
    \ (IP).  Over time other groups\n   created long haul IP based networks (NASA,\
    \ NSF, states...).  These\n   nets, too, interoperate because of IP.  The collection\
    \ of all of\n   these interoperating networks is the Internet.\n   A few groups\
    \ provide much of the information services on the\n   Internet.  Information Sciences\
    \ Institute (ISI) does much of the\n   standardization and allocation work of\
    \ the Internet acting as the\n   Internet Assigned Numbers Authority (IANA). \
    \ SRI International\n   provides the principal information services for the Internet\
    \ by\n   operating the Network Information Center (NIC).  In fact, after you\n\
    \   are connected to the Internet most of the information in this\n   document\
    \ can be retrieved from the SRI-NIC.  Bolt Beranek and Newman\n   (BBN) provides\
    \ information services for CSNET (the CIC) and NSFNET\n   (the NNSC), and Merit\
    \ provides information services for NSFNET (the\n   NIS).\n"
- title: Operating the Internet
  contents:
  - "Operating the Internet\n   Each network, be it the ARPANET, NSFNET or a regional\
    \ network, has\n   its own operations center.  The ARPANET is run by BBN, Inc.\
    \ under\n   contract from DCA (on behalf of DARPA).  Their facility is called\
    \ the\n   Network Operations Center or NOC.  Merit, Inc. operates NSFNET from\n\
    \   yet another and completely seperate NOC.  It goes on to the regionals\n  \
    \ having similar facilities to monitor and keep watch over the goings\n   on of\
    \ their portion of the Internet.  In addition, they all should\n   have some knowledge\
    \ of what is happening to the Internet in total.\n   If a problem comes up, it\
    \ is suggested that a campus network liaison\n   should contact the network operator\
    \ to which he is directly\n   connected.  That is, if you are connected to a regional\
    \ network\n   (which is gatewayed to the NSFNET, which is connected to the\n \
    \  ARPANET...) and have a problem, you should contact your regional\n   network\
    \ operations center.\n"
- title: RFCs
  contents:
  - "RFCs\n   The internal workings of the Internet are defined by a set of\n   documents\
    \ called RFCs (Request for Comments).  The general process\n   for creating an\
    \ RFC is for someone wanting something formalized to\n   write a document describing\
    \ the issue and mailing it to Jon Postel\n   (Postel@ISI.EDU).  He acts as a referee\
    \ for the proposal.  It is then\n   commented upon by all those wishing to take\
    \ part in the discussion\n   (electronically of course).  It may go through multiple\
    \ revisions.\n   Should it be generally accepted as a good idea, it will be assigned\
    \ a\n   number and filed with the RFCs.\n   There are two independent categorizations\
    \ of protocols.  The first is\n   the state of standardization which is one of\
    \ \"standard\", \"draft\n   standard\", \"proposed\", \"experimental\", or \"\
    historic\".  The second is\n   the status of this protocol which is one of \"\
    required\",\n   \"recommended\", \"elective\", or \"not recommended\".  One could\
    \ expect a\n   particular protocol to move along the scale of status from elective\n\
    \   to required at the same time as it moves along the scale of\n   standardization\
    \ from proposed to standard.\n   A Required Standard protocol (e.g., RFC-791,\
    \ The Internet Protocol)\n   must be implemented on any host connected to the\
    \ Internet.\n   Recommended Standard protocols are generally implemented by network\n\
    \   hosts.  Lack of them does not preclude access to the Internet, but\n   may\
    \ impact its usability.  RFC-793 (Transmission Control Protocol) is\n   a Recommended\
    \ Standard protocol.  Elective Proposed protocols were\n   discussed and agreed\
    \ to, but their application has never come into\n   wide use.  This may be due\
    \ to the lack of wide need for the specific\n   application (RFC-937, The Post\
    \ Office Protocol) or that, although\n   technically superior, ran against other\
    \ pervasive approaches.  It is\n   suggested that should the facility be required\
    \ by a particular site,\n   an implementation be done in accordance with the RFC.\
    \  This insures\n   that, should the idea be one whose time has come, the implementation\n\
    \   will be in accordance with some standard and will be generally\n   usable.\n\
    \   Informational RFCs contain factual information about the Internet and\n  \
    \ its operation (RFC-1010, Assigned Numbers).  Finally, as the Internet\n   and\
    \ technology have grown, some RFCs have become unnecessary.  These\n   obsolete\
    \ RFCs cannot be ignored, however.  Frequently when a change\n   is made to some\
    \ RFC that causes a new one to be issued obsoleting\n   others, the new RFC may\
    \ only contains explanations and motivations\n   for the change.  Understanding\
    \ the model on which the whole facility\n   is based may involve reading the original\
    \ and subsequent RFCs on the\n   topic.  (Appendix B contains a list of what are\
    \ considered to be the\n   major RFCs necessary for understanding the Internet).\n\
    \   Only a few RFCs actually specify standards, most RFCs are for\n   information\
    \ or discussion purposes.  To find out what the current\n   standards are see\
    \ the RFC titled \"IAB Official Protocol Standards\"\n   (most recently published\
    \ as RFC-1100).\n"
- title: The Network Information Center (NIC)
  contents:
  - "The Network Information Center (NIC)\n   The NIC is a facility available to all\
    \ Internet users which provides\n   information to the community.  There are three\
    \ means of NIC contact:\n   network, telephone, and mail.  The network accesses\
    \ are the most\n   prevalent.  Interactive access is frequently used to do queries\
    \ of\n   NIC service overviews, look up user and host names, and scan lists of\n\
    \   NIC documents.  It is available by using\n      %telnet nic.ddn.mil\n   on\
    \ a BSD system, and following the directions provided by a user\n   friendly prompter.\
    \  From poking around in the databases provided, one\n   might decide that a document\
    \ named NETINFO:NUG.DOC (The Users Guide\n   to the ARPANET) would be worth having.\
    \  It could be retrieved via an\n   anonymous FTP.  An anonymous FTP would proceed\
    \ something like the\n   following.  (The dialogue may vary slightly depending\
    \ on the\n   implementation of FTP you are using).\n     %ftp nic.ddn.mil\n  \
    \   Connected to nic.ddn.mil\n     220 NIC.DDN.MIL FTP Server 5Z(47)-6 at Wed\
    \ 17-Jun-87 12:00 PDT\n     Name (nic.ddn.mil:myname): anonymous\n     331 ANONYMOUS\
    \ user ok, send real ident as password.\n     Password: myname\n     230 User\
    \ ANONYMOUS logged in at Wed 17-Jun-87 12:01 PDT, job 15.\n     ftp> get netinfo:nug.doc\n\
    \     200 Port 18.144 at host 128.174.5.50 accepted.\n     150 ASCII retrieve\
    \ of <NETINFO>NUG.DOC.11 started.\n     226 Transfer Completed 157675 (8) bytes\
    \ transferred\n     local: netinfo:nug.doc  remote:netinfo:nug.doc\n     157675\
    \ bytes in 4.5e+02 seconds (0.34 Kbytes/s)\n     ftp> quit\n     221 QUIT command\
    \ received. Goodbye.\n   (Another good initial document to fetch is NETINFO:WHAT-THE-NIC-\n\
    \   DOES.TXT).\n   Questions of the NIC or problems with services can be asked\
    \ of or\n   reported to using electronic mail.  The following addresses can be\n\
    \   used:\n     NIC@NIC.DDN.MIL         General user assistance, document requests\n\
    \     REGISTRAR@NIC.DDN.MIL   User registration and WHOIS updates\n     HOSTMASTER@NIC.DDN.MIL\
    \  Hostname and domain changes and updates\n     ACTION@NIC.DDN.MIL      SRI-NIC\
    \ computer operations\n     SUGGESTIONS@NIC.DDN.MIL Comments on NIC publications\
    \ and services\n   For people without network access, or if the number of documents\
    \ is\n   large, many of the NIC documents are available in printed form for a\n\
    \   small charge.  One frequently ordered document for starting sites is\n   a\
    \ compendium of major RFCs.  Telephone access is used primarily for\n   questions\
    \ or problems with network access.  (See appendix B for\n   mail/telephone contact\
    \ numbers).\n"
- title: The NSFNET Network Service Center
  contents:
  - "The NSFNET Network Service Center\n   The NSFNET Network Service Center (NNSC),\
    \ located at BBN Systems and\n   Technologies Corp., is a project of the University\
    \ Corporation for\n   Atmospheric Research under agreement with the National Science\n\
    \   Foundation.  The NNSC provides support to end-users of NSFNET should\n   they\
    \ have questions or encounter problems traversing the network.\n   The NNSC, which\
    \ has information and documents online and in printed\n   form, distributes news\
    \ through network mailing lists, bulletins, and\n   online reports.  NNSC publications\
    \ include a hardcopy newsletter, the\n   NSF Network News, which contains articles\
    \ of interest to network\n   users and the Internet Resource Guide, which lists\
    \ facilities (such\n   as supercomputer centers and on-line library catalogues)\
    \ accessible\n   from the Internet.  The Resource Guide can be obtained via anonymous\n\
    \   ftp to nnsc.nsf.net in the directory resource-guide, or by joining\n   the\
    \ resource guide mailing list (send a subscription request to\n   Resource-Guide-Request@NNSC.NSF.NET.)\n"
- title: Mail Reflectors
  contents:
  - "Mail Reflectors\n   The way most people keep up to date on network news is through\n\
    \   subscription to a number of mail reflectors (also known as mail\n   exploders).\
    \  Mail reflectors are special electronic mailboxes which,\n   when they receive\
    \ a message, resend it to a list of other mailboxes.\n   This in effect creates\
    \ a discussion group on a particular topic.\n   Each subscriber sees all the mail\
    \ forwarded by the reflector, and if\n   one wants to put his \"two cents\" in\
    \ sends a message with the comments\n   to the reflector.\n   The general format\
    \ to subscribe to a mail list is to find the address\n   reflector and append\
    \ the string -REQUEST to the mailbox name (not the\n   host name).  For example,\
    \ if you wanted to take part in the mailing\n   list for NSFNET reflected by NSFNET-INFO@MERIT.EDU,\
    \ one sends a\n   request to NSFNET-INFO-REQUEST@MERIT.EDU.  This may be a wonderful\n\
    \   scheme, but the problem is that you must know the list exists in the\n   first\
    \ place.  It is suggested that, if you are interested, you read\n   the mail from\
    \ one list (like NSFNET-INFO) and you will probably\n   become familiar with the\
    \ existence of others.  A registration service\n   for mail reflectors is provided\
    \ by the NIC in the files\n   NETINFO:INTEREST-GROUPS-1.TXT, NETINFO:INTEREST-GROUPS-2.TXT,\n\
    \   NETINFO:INTEREST-GROUPS-3.TXT, through NETINFO:INTEREST-GROUPS-9.TXT.\n  \
    \ The NSFNET-INFO mail reflector is targeted at those people who have a\n   day\
    \ to day interest in the news of the NSFNET (the backbone, regional\n   network,\
    \ and Internet inter-connection site workers).  The messages\n   are reflected\
    \ by a central location and are sent as separate messages\n   to each subscriber.\
    \  This creates hundreds of messages on the wide\n   area networks where bandwidth\
    \ is the scarcest.\n   There are two ways in which a campus could spread the news\
    \ and not\n   cause these messages to inundate the wide area networks.  One is\
    \ to\n   re-reflect the message on the campus.  That is, set up a reflector on\n\
    \   a local machine which forwards the message to a campus distribution\n   list.\
    \  The other is to create an alias on a campus machine which\n   places the messages\
    \ into a notesfile on the topic.  Campus users who\n   want the information could\
    \ access the notesfile and see the messages\n   that have been sent since their\
    \ last access.  One might also elect to\n   have the campus wide area network\
    \ liaison screen the messages in\n   either case and only forward those which\
    \ are considered of merit.\n   Either of these schemes allows one message to be\
    \ sent to the campus,\n   while allowing wide distribution within.\n"
- title: Address Allocation
  contents:
  - "Address Allocation\n   Before a local network can be connected to the Internet\
    \ it must be\n   allocated a unique IP address.  These addresses are allocated\
    \ by\n   SRI-NIC.  The allocation process consists of getting an application\n\
    \   form.  Send a message to Hostmaster@NIC.DDN.MIL and ask for the\n   template\
    \ for a connected address.  This template is filled out and\n   mailed back to\
    \ the hostmaster.  An address is allocated and e-mailed\n   back to you.  This\
    \ can also be done by postal mail (Appendix B).\n   IP addresses are 32 bits long.\
    \  It is usually written as four decimal\n   numbers separated by periods (e.g.,\
    \ 192.17.5.100).  Each number is\n   the value of an octet of the 32 bits.  Some\
    \ networks might choose to\n   organize themselves as very flat (one net with\
    \ a lot of nodes) and\n   some might organize hierarchically (many interconnected\
    \ nets with\n   fewer nodes each and a backbone).  To provide for these cases,\n\
    \   addresses were differentiated into class A, B, and C networks.  This\n   classification\
    \ had to with the interpretation of the octets.  Class A\n   networks have the\
    \ first octet as a network address and the remaining\n   three as a host address\
    \ on that network.  Class C addresses have\n   three octets of network address\
    \ and one of host.  Class B is split\n   two and two.  Therefore, there is an\
    \ address space for a few large\n   nets, a reasonable number of medium nets and\
    \ a large number of small\n   nets.  The high order bits in the first octet are\
    \ coded to tell the\n   address format.  There are very few unallocated class\
    \ A nets, so a\n   very good case must be made for them.  So as a practical matter,\
    \ one\n   has to choose between Class B and Class C when placing an order.\n \
    \  (There are also class D (Multicast) and E (Experimental) formats.\n   Multicast\
    \ addresses will likely come into greater use in the near\n   future, but are\
    \ not frequently used yet).\n   In the past, sites requiring multiple network\
    \ addresses requested\n   multiple discrete addresses (usually Class C).  This\
    \ was done because\n   much of the software available (notably 4.2BSD) could not\
    \ deal with\n   subnetted addresses.  Information on how to reach a particular\n\
    \   network (routing information) must be stored in Internet gateways and\n  \
    \ packet switches.  Some of these nodes have a limited capability to\n   store\
    \ and exchange routing information (limited to about 700\n   networks).  Therefore,\
    \ it is suggested that any campus announce (make\n   known to the Internet) no\
    \ more than two discrete network numbers.\n   If a campus expects to be constrained\
    \ by this, it should consider\n   subnetting.  Subnetting (RFC-950) allows one\
    \ to announce one address\n   to the Internet and use a set of addresses on the\
    \ campus.  Basically,\n   one defines a mask which allows the network to differentiate\
    \ between\n   the network portion and host portion of the address.  By using a\n\
    \   different mask on the Internet and the campus, the address can be\n   interpreted\
    \ in multiple ways.  For example, if a campus requires two\n   networks internally\
    \ and has the 32,000 addresses beginning\n   128.174.X.X (a Class B address) allocated\
    \ to it, the campus could\n   allocate 128.174.5.X to one part of campus and 128.174.10.X\
    \ to\n   another.  By advertising 128.174 to the Internet with a subnet mask\n\
    \   of FF.FF.00.00, the Internet would treat these two addresses as one.\n   Within\
    \ the campus a mask of FF.FF.FF.00 would be used, allowing the\n   campus to treat\
    \ the addresses as separate entities. (In reality, you\n   don't pass the subnet\
    \ mask of FF.FF.00.00 to the Internet, the octet\n   meaning is implicit in its\
    \ being a class B address).\n   A word of warning is necessary.  Not all systems\
    \ know how to do\n   subnetting.  Some 4.2BSD systems require additional software.\
    \  4.3BSD\n   systems subnet as released.  Other devices and operating systems\
    \ vary\n   in the problems they have dealing with subnets.  Frequently, these\n\
    \   machines can be used as a leaf on a network but not as a gateway\n   within\
    \ the subnetted portion of the network.  As time passes and more\n   systems become\
    \ 4.3BSD based, these problems should disappear.\n   There has been some confusion\
    \ in the past over the format of an IP\n   broadcast address.  Some machines used\
    \ an address of all zeros to\n   mean broadcast and some all ones.  This was confusing\
    \ when machines\n   of both type were connected to the same network.  The broadcast\n\
    \   address of all ones has been adopted to end the grief.  Some systems\n   (e.g.,\
    \ 4.3 BSD) allow one to choose the format of the broadcast\n   address.  If a\
    \ system does allow this choice, care should be taken\n   that the all ones format\
    \ is chosen.  (This is explained in RFC-1009\n   and RFC-1010).\n"
- title: Internet Problems
  contents:
  - "Internet Problems\n   There are a number of problems with the Internet.  Solutions\
    \ to the\n   problems range from software changes to long term research projects.\n\
    \   Some of the major ones are detailed below:\n   Number of Networks\n      When\
    \ the Internet was designed it was to have about 50 connected\n      networks.\
    \  With the explosion of networking, the number is now\n      approaching 1000.\
    \  The software in a group of critical gateways\n      (called the core gateways)\
    \ are not able to pass or store much more\n      than that number.  In the short\
    \ term, core reallocation and\n      recoding has raised the number slightly.\n\
    \   Routing Issues\n      Along with sheer mass of the data necessary to route\
    \ packets to a\n      large number of networks, there are many problems with the\n\
    \      updating, stability, and optimality of the routing algorithms.\n      Much\
    \ research is being done in the area, but the optimal solution\n      to these\
    \ routing problems is still years away.  In most cases, the\n      the routing\
    \ we have today works, but sub-optimally and sometimes\n      unpredictably. \
    \ The current best hope for a good routing protocol\n      is something known\
    \ as OSPFIGP which will be generally available\n      from many router manufacturers\
    \ within a year.\n   Trust Issues\n      Gateways exchange network routing information.\
    \  Currently, most\n      gateways accept on faith that the information provided\
    \ about the\n      state of the network is correct.  In the past this was not\
    \ a big\n      problem since most of the gateways belonged to a single\n     \
    \ administrative entity (DARPA).  Now, with multiple wide area\n      networks\
    \ under different administrations, a rogue gateway\n      somewhere in the net\
    \ could cripple the Internet.  There is design\n      work going on to solve both\
    \ the problem of a gateway doing\n      unreasonable things and providing enough\
    \ information to reasonably\n      route data between multiply connected networks\
    \ (multi-homed\n      networks).\n   Capacity & Congestion\n      Some portions\
    \ of the Internet are very congested during the busy\n      part of the day. \
    \ Growth is dramatic with some networks\n      experiencing growth in traffic\
    \ in excess of 20% per month.\n      Additional bandwidth is planned, but delivery\
    \ and budgets might\n      not allow supply to keep up.\n"
- title: Setting Direction and Priority
  contents:
  - "Setting Direction and Priority\n   The Internet Activities Board (IAB), currently\
    \ chaired by Vint Cerf\n   of NRI, is responsible for setting the technical direction,\n\
    \   establishing standards, and resolving problems in the Internet.\n   The current\
    \ IAB members are:\n           Vinton Cerf          - Chairman\n           David\
    \ Clark          - IRTF Chairman\n           Phillip Gross        - IETF Chairman\n\
    \           Jon Postel           - RFC Editor\n           Robert Braden      \
    \  - Executive Director\n           Hans-Werner Braun    - NSFNET Liaison\n  \
    \         Barry Leiner         - CCIRN Liaison\n           Daniel Lynch      \
    \   - Vendor Liaison\n           Stephen Kent         - Internet Security\n  \
    \ This board is supported by a Research Task Force (chaired by Dave\n   Clark\
    \ of MIT) and an Engineering Task Force (chaired by Phill Gross\n   of NRI).\n\
    \   The Internet Research Task Force has the following Research Groups:\n    \
    \        Autonomous Networks            Deborah Estrin\n            End-to-End\
    \ Services            Bob Braden\n            Privacy                        Steve\
    \ Kent\n            User Interfaces                Keith Lantz\n   The Internet\
    \ Engineering Task Force has the following technical\n   areas:\n           Applications\
    \                    TBD\n           Host Protocols                  Craig Partridge\n\
    \           Internet Protocols              Noel Chiappa\n           Routing \
    \                        Robert Hinden\n           Network Management        \
    \      David Crocker\n           OSI Interoperability            Ross Callon,\
    \ Robert Hagen\n           Operations                      TBD\n           Security\
    \                        TBD\n   The Internet Engineering Task Force has the following\
    \ Working Groups:\n            ALERTMAN                       Louis Steinberg\n\
    \            Authentication                 Jeff Schiller\n            CMIP over\
    \ TCP                  Lee LaBarre\n            Domain Names                 \
    \  Paul Mockapetris\n            Dynamic Host Config            Ralph Droms\n\
    \            Host Requirements              Bob Braden\n            Interconnectivity\
    \              Guy Almes\n            Internet MIB                   Craig Partridge\n\
    \            Joint Management               Susan Hares\n            LAN Mgr MIB\
    \                    Amatzia Ben-Artzi\n            NISI                     \
    \      Karen Bowers\n            NM Serial Interface            Jeff Case\n  \
    \          NOC Tools                      Bob Enger\n            OSPF        \
    \                   Mike Petry\n            Open Systems Routing           Marianne\
    \ Lepp\n            OSI Interoperability           Ross Callon\n            PDN\
    \ Routing Group              CH Rokitansky\n            Performance and CC   \
    \          Allison Mankin\n            Point - Point IP               Drew Perkins\n\
    \            ST and CO-IP                   Claudio Topolcic\n            Telnet\
    \                         Dave Borman\n            User Documents            \
    \     Karen Roubicek\n            User Services                  Karen Bowers\n"
- title: Routing
  contents:
  - "Routing\n   Routing is the algorithm by which a network directs a packet from\
    \ its\n   source to its destination.  To appreciate the problem, watch a small\n\
    \   child trying to find a table in a restaurant.  From the adult point\n   of\
    \ view, the structure of the dining room is seen and an optimal\n   route easily\
    \ chosen.  The child, however, is presented with a set of\n   paths between tables\
    \ where a good path, let alone the optimal one to\n   the goal is not discernible.\n\
    \   A little more background might be appropriate.  IP gateways (more\n   correctly\
    \ routers) are boxes which have connections to multiple\n   networks and pass\
    \ traffic between these nets.  They decide how the\n   packet is to be sent based\
    \ on the information in the IP header of the\n   packet and the state of the network.\
    \  Each interface on a router has\n   an unique address appropriate to the network\
    \ to which it is\n   connected.  The information in the IP header which is used\
    \ is\n   primarily the destination address.  Other information (e.g., type of\n\
    \   service) is largely ignored at this time.  The state of the network\n   is\
    \ determined by the routers passing information among themselves.\n   The distribution\
    \ of the database (what each node knows), the form of\n   the updates, and metrics\
    \ used to measure the value of a connection,\n   are the parameters which determine\
    \ the characteristics of a routing\n   protocol.\n   Under some algorithms, each\
    \ node in the network has complete\n   knowledge of the state of the network (the\
    \ adult algorithm).  This\n   implies the nodes must have larger amounts of local\
    \ storage and\n   enough CPU to search the large tables in a short enough time\n\
    \   (remember, this must be done for each packet).  Also, routing updates\n  \
    \ usually contain only changes to the existing information (or you\n   spend a\
    \ large amount of the network capacity passing around megabyte\n   routing updates).\
    \  This type of algorithm has several problems.\n   Since the only way the routing\
    \ information can be passed around is\n   across the network and the propagation\
    \ time is non-trivial, the view\n   of the network at each node is a correct historical\
    \ view of the\n   network at varying times in the past.  (The adult algorithm,\
    \ but\n   rather than looking directly at the dining area, looking at a\n   photograph\
    \ of the dining room.  One is likely to pick the optimal\n   route and find a\
    \ bus-cart has moved in to block the path after the\n   photo was taken).  These\
    \ inconsistencies can cause circular routes\n   (called routing loops) where once\
    \ a packet enters it is routed in a\n   closed path until its time to live (TTL)\
    \ field expires and it is\n   discarded.\n   Other algorithms may know about only\
    \ a subset of the network.  To\n   prevent loops in these protocols, they are\
    \ usually used in a\n   hierarchical network.  They know completely about their\
    \ own area, but\n   to leave that area they go to one particular place (the default\n\
    \   gateway).  Typically these are used in smaller networks (campus or\n   regional).\n\
    \   Routing protocols in current use:\n   Static (no protocol-table/default routing)\n\
    \      Don't laugh.  It is probably the most reliable, easiest to\n      implement,\
    \ and least likely to get one into trouble for a small\n      network or a leaf\
    \ on the Internet.  This is, also, the only method\n      available on some CPU-operating\
    \ system combinations.  If a host is\n      connected to an Ethernet which has\
    \ only one gateway off of it, one\n      should make that the default gateway\
    \ for the host and do no other\n      routing.  (Of course, that gateway may pass\
    \ the reachability\n      information somehow on the other side of itself.)\n\
    \      One word of warning, it is only with extreme caution that one\n      should\
    \ use static routes in the middle of a network which is also\n      using dynamic\
    \ routing.  The routers passing dynamic information\n      are sometimes confused\
    \ by conflicting dynamic and static routes.\n      If your host is on an ethernet\
    \ with multiple routers to other\n      networks on it and the routers are doing\
    \ dynamic routing among\n      themselves, it is usually better to take part in\
    \ the dynamic\n      routing than to use static routes.\n   RIP\n      RIP is\
    \ a routing protocol based on XNS (Xerox Network System)\n      adapted for IP\
    \ networks.  It is used by many routers (Proteon,\n      cisco, UB...) and many\
    \ BSD Unix systems.  BSD systems typically\n      run a program called \"routed\"\
    \ to exchange information with other\n      systems running RIP.  RIP works best\
    \ for nets of small diameter\n      (few hops) where the links are of equal speed.\
    \  The reason for\n      this is that the metric used to determine which path\
    \ is best is\n      the hop-count.  A hop is a traversal across a gateway.  So,\
    \ all\n      machines on the same Ethernet are zero hops away.  If a router\n\
    \      connects connects two networks directly, a machine on the other\n     \
    \ side of the router is one hop away.  As the routing information is\n      passed\
    \ through a gateway, the gateway adds one to the hop counts\n      to keep them\
    \ consistent across the network.  The diameter of a\n      network is defined\
    \ as the largest hop-count possible within a\n      network.  Unfortunately, a\
    \ hop count of 16 is defined as infinity\n      in RIP meaning the link is down.\
    \  Therefore, RIP will not allow\n      hosts separated by more than 15 gateways\
    \ in the RIP space to\n      communicate.\n      The other problem with hop-count\
    \ metrics is that if links have\n      different speeds, that difference is not\
    \ reflected in the hop-\n      count.  So a one hop satellite link (with a .5\
    \ sec delay) at 56kb\n      would be used instead of a two hop T1 connection.\
    \  Congestion can\n      be viewed as a decrease in the efficacy of a link.  So,\
    \ as a link\n      gets more congested, RIP will still know it is the best hop-count\n\
    \      route and congest it even more by throwing more packets on the\n      queue\
    \ for that link.\n      RIP was originally not well documented in the community\
    \ and people\n      read BSD code to find out how RIP really worked.  Finally,\
    \ it was\n      documented in RFC-1058.\n   Routed\n      The routed program,\
    \ which does RIP for 4.2BSD systems, has many\n      options.  One of the most\
    \ frequently used is: \"routed -q\" (quiet\n      mode) which means listen to\
    \ RIP information, but never broadcast\n      it.  This would be used by a machine\
    \ on a network with multiple\n      RIP speaking gateways.  It allows the host\
    \ to determine which\n      gateway is best (hopwise) to use to reach a distant\
    \ network.  (Of\n      course, you might want to have a default gateway to prevent\
    \ having\n      to pass all the addresses known to the Internet around with RIP.)\n\
    \      There are two ways to insert static routes into routed; the\n      /etc/gateways\
    \ file, and the \"route add\" command.  Static routes\n      are useful if you\
    \ know how to reach a distant network, but you are\n      not receiving that route\
    \ using RIP.  For the most part the \"route\n      add\" command is preferable\
    \ to use.  The reason for this is that\n      the command adds the route to that\
    \ machine's routing table but\n      does not export it through RIP.  The /etc/gateways\
    \ file takes\n      precedence over any routing information received through a\
    \ RIP\n      update.  It is also broadcast as fact in RIP updates produced by\n\
    \      the host without question, so if a mistake is made in the\n      /etc/gateways\
    \ file, that mistake will soon permeate the RIP space\n      and may bring the\
    \ network to its knees.\n      One of the problems with routed is that you have\
    \ very little\n      control over what gets broadcast and what doesn't.  Many\
    \ times in\n      larger networks where various parts of the network are under\n\
    \      different administrative controls, you would like to pass on\n      through\
    \ RIP only nets which you receive from RIP and you know are\n      reasonable.\
    \  This prevents people from adding IP addresses to the\n      network which may\
    \ be illegal and you being responsible for passing\n      them on to the Internet.\
    \  This type of reasonability checks are\n      not available with routed and\
    \ leave it usable, but inadequate for\n      large networks.\n   Hello (RFC-891)\n\
    \      Hello is a routing protocol which was designed and implemented in\n   \
    \   a experimental software router called a \"Fuzzball\" which runs on a\n   \
    \   PDP-11.  It does not have wide usage, but is the routing protocol\n      formerly\
    \ used on the initial NSFNET backbone.  The data\n      transferred between nodes\
    \ is similar to RIP (a list of networks\n      and their metrics).  The metric,\
    \ however, is milliseconds of\n      delay.  This allows Hello to be used over\
    \ nets of various link\n      speeds and performs better in congestive situations.\n\
    \      One of the most interesting side effects of Hello based networks\n    \
    \  is their great timekeeping ability.  If you consider the problem\n      of\
    \ measuring delay on a link for the metric, you find that it is\n      not an\
    \ easy thing to do.  You cannot measure round trip time since\n      the return\
    \ link may be more congested, of a different speed, or\n      even not there.\
    \  It is not really feasible for each node on the\n      network to have a builtin\
    \ WWV (nationwide radio time standard)\n      receiver.  So, you must design an\
    \ algorithm to pass around time\n      between nodes over the network links where\
    \ the delay in\n      transmission can only be approximated.  Hello routers do\
    \ this and\n      in a nationwide network maintain synchronized time within\n\
    \      milliseconds. (See also the Network Time Protocol, RFC-1059.)\n   Gateway\
    \ Gateway Protocol (GGP RFC-823)\n      The core gateways originally used GGP\
    \ to exchange information\n      among themselves.  This is a \"distance-vector\"\
    \ algorithm.  The new\n      core gateways use a \"link-state\" algorithm.\n \
    \  NSFNET SPF (RFC-1074)\n      The current NSFNET Backbone routers use a version\
    \ of the ANSI IS-\n      IS and ISO ES-IS routing protocol.  This is a \"shortest\
    \ path\n      first\" (SPF) algorithm which is in the class of \"link-state\"\n\
    \      algorithms.\n   Exterior Gateway Protocol (EGP RFC-904)\n      EGP is not\
    \ strictly a routing protocol, it is a reachability\n      protocol.  It tells\
    \ what nets can be reached through what gateway,\n      but not how good the connection\
    \ is.  It is the standard by which\n      gateways exchange network reachability\
    \ information with the core\n      gateways.  It is generally used between autonomous\
    \ systems.  There\n      is a metric passed around by EGP, but its usage is not\n\
    \      standardized formally.  The metric's value ranges from 0 to 255\n     \
    \ with smaller values considered \"better\".  Some implementations\n      consider\
    \ the value 255 to mean unreachable.  Many routers talk EGP\n      so they can\
    \ be used to interface to routers of different\n      manufacture or operated\
    \ by different administrations.  For\n      example, when a router of the NSFNET\
    \ Backbone exchanges routing or\n      reachability information with a gateway\
    \ of a regional network EGP\n      is used.\n   Gated\n      So we have regional\
    \ and campus networks talking RIP among\n      themselves and the DDN and NSFNET\
    \ speaking EGP.  How do they\n      interoperate?  In the beginning, there was\
    \ static routing.  The\n      problem with doing static routing in the middle\
    \ of the network is\n      that it is broadcast to the Internet whether it is\
    \ usable or not.\n      Therefore, if a net becomes unreachable and you try to\
    \ get there,\n      dynamic routing will immediately issue a net unreachable to\
    \ you.\n      Under static routing the routers would think the net could be\n\
    \      reached and would continue trying until the application gave up\n     \
    \ (in 2 or more minutes).  Mark Fedor, then of Cornell, attempted to\n      solve\
    \ these problems with a replacement for routed called gated.\n      Gated talks\
    \ RIP to RIP speaking hosts, EGP to EGP speakers, and\n      Hello to Hello'ers.\
    \  These speakers frequently all live on one\n      Ethernet, but luckily (or\
    \ unluckily) cannot understand each others\n      ruminations.  In addition, under\
    \ configuration file control it can\n      filter the conversion.  For example,\
    \ one can produce a\n      configuration saying announce RIP nets via Hello only\
    \ if they are\n      specified in a list and are reachable by way of a RIP broadcast\
    \ as\n      well.  This means that if a rogue network appears in your local\n\
    \      site's RIP space, it won't be passed through to the Hello side of\n   \
    \   the world.  There are also configuration options to do static\n      routing\
    \ and name trusted gateways.\n      This may sound like the greatest thing since\
    \ sliced bread, but\n      there is a catch called metric conversion.  You have\
    \ RIP measuring\n      in hops, Hello measuring in milliseconds, and EGP using\
    \ arbitrary\n      small numbers.  The big questions is how many hops to a\n \
    \     millisecond, how many milliseconds in the EGP number 3....  Also,\n    \
    \  remember that infinity (unreachability) is 16 to RIP, 30000 or so\n      to\
    \ Hello, and 8 to the DDN with EGP.  Getting all these metrics to\n      work\
    \ well together is no small feat.  If done incorrectly and you\n      translate\
    \ an RIP of 16 into an EGP of 6, everyone in the ARPANET\n      will still think\
    \ your gateway can reach the unreachable and will\n      send every packet in\
    \ the world your way.  Gated is available via\n      anonymous FTP from devvax.tn.cornell.edu\
    \ in directory pub/gated.\n"
- title: Names
  contents:
  - "Names\n   All routing across the network is done by means of the IP address\n\
    \   associated with a packet.  Since humans find it difficult to remember\n  \
    \ addresses like 128.174.5.50, a symbolic name register was set up at\n   the\
    \ NIC where people would say, \"I would like my host to be named\n   uiucuxc\"\
    .  Machines connected to the Internet across the nation would\n   connect to the\
    \ NIC in the middle of the night, check modification\n   dates on the hosts file,\
    \ and if modified, move it to their local\n   machine.  With the advent of workstations\
    \ and micros, changes to the\n   host file would have to be made nightly.  It\
    \ would also be very labor\n   intensive and consume a lot of network bandwidth.\
    \  RFC-1034 and a\n   number of others describe Domain Name Service (DNS), a distributed\n\
    \   data base system for mapping names into addresses.\n   We must look a little\
    \ more closely into what's in a name.  First,\n   note that an address specifies\
    \ a particular connection on a specific\n   network.  If the machine moves, the\
    \ address changes.  Second, a\n   machine can have one or more names and one or\
    \ more network addresses\n   (connections) to different networks.  Names point\
    \ to a something\n   which does useful work (i.e., the machine) and IP addresses\
    \ point to\n   an interface on that provider.  A name is a purely symbolic\n \
    \  representation of a list of addresses on the network.  If a machine\n   moves\
    \ to a different network, the addresses will change but the name\n   could remain\
    \ the same.\n   Domain names are tree structured names with the root of the tree\
    \ at\n   the right.  For example:\n                             uxc.cso.uiuc.edu\n\
    \   is a machine called \"uxc\" (purely arbitrary), within the subdomains\n  \
    \ of the U of I, and \"uiuc\" (the University of Illinois at Urbana),\n   registered\
    \ with \"edu\" (the set of educational institutions).\n   A simplified model of\
    \ how a name is resolved is that on the user's\n   machine there is a resolver.\
    \  The resolver knows how to contact\n   across the network a root name server.\
    \  Root servers are the base of\n   the tree structured data retrieval system.\
    \  They know who is\n   responsible for handling first level domains (e.g., 'edu').\
    \  What\n   root servers to use is an installation parameter. From the root\n\
    \   server the resolver finds out who provides 'edu' service.  It\n   contacts\
    \ the 'edu' name server which supplies it with a list of\n   addresses of servers\
    \ for the subdomains (like 'uiuc').  This action\n   is repeated with the sub-domain\
    \ servers until the final subdomain\n   returns a list of addresses of interfaces\
    \ on the host in question.\n   The user's machine then has its choice of which\
    \ of these addresses to\n   use for communication.\n   A group may apply for its\
    \ own domain name (like 'uiuc' above).  This\n   is done in a manner similar to\
    \ the IP address allocation.  The only\n   requirements are that the requestor\
    \ have two machines reachable from\n   the Internet, which will act as name servers\
    \ for that domain.  Those\n   servers could also act as servers for subdomains\
    \ or other servers\n   could be designated as such.  Note that the servers need\
    \ not be\n   located in any particular place, as long as they are reachable for\n\
    \   name resolution.  (U of I could ask Michigan State to act on its\n   behalf\
    \ and that would be fine.)  The biggest problem is that someone\n   must do maintenance\
    \ on the database.  If the machine is not\n   convenient, that might not be done\
    \ in a timely fashion.  The other\n   thing to note is that once the domain is\
    \ allocated to an\n   administrative entity, that entity can freely allocate subdomains\n\
    \   using what ever manner it sees fit.\n   The Berkeley Internet Name Domain\
    \ (BIND) Server implements the\n   Internet name server for UNIX systems.  The\
    \ name server is a\n   distributed data base system that allows clients to name\
    \ resources\n   and to share that information with other network hosts.  BIND\
    \ is\n   integrated with 4.3BSD and is used to lookup and store host names,\n\
    \   addresses, mail agents, host information, and more.  It replaces the\n   /etc/hosts\
    \ file or host name lookup.  BIND is still an evolving\n   program.  To keep up\
    \ with reports on operational problems, future\n   design decisions, etc., join\
    \ the BIND mailing list by sending a\n   request to Bind-Request@UCBARPA.BERKELEY.EDU.\
    \  BIND can also be\n   obtained via anonymous FTP from ucbarpa.berkeley.edu.\n\
    \   There are several advantages in using BIND.  One of the most\n   important\
    \ is that it frees a host from relying on /etc/hosts being up\n   to date and\
    \ complete.  Within the .uiuc.edu domain, only a few hosts\n   are included in\
    \ the host table distributed by SRI.  The remainder are\n   listed locally within\
    \ the BIND tables on uxc.cso.uiuc.edu (the server\n   machine for most of the\
    \ .uiuc.edu domain).  All are equally reachable\n   from any other Internet host\
    \ running BIND, or any DNS resolver.\n   BIND can also provide mail forwarding\
    \ information for interior hosts\n   not directly reachable from the Internet.\
    \  These hosts an either be\n   on non-advertised networks, or not connected to\
    \ an IP network at all,\n   as in the case of UUCP-reachable hosts (see RFC-974).\
    \  More\n   information on BIND is available in the \"Name Server Operations Guide\n\
    \   for BIND\" in UNIX System Manager's Manual, 4.3BSD release.\n   There are\
    \ a few special domains on the network, like NIC.DDN.MIL.\n   The hosts database\
    \ at the NIC.  There are others of the form\n   NNSC.NSF.NET.  These special domains\
    \ are used sparingly, and require\n   ample justification.  They refer to servers\
    \ under the administrative\n   control of the network rather than any single organization.\
    \  This\n   allows for the actual server to be moved around the net while the\n\
    \   user interface to that machine remains constant.  That is, should BBN\n  \
    \ relinquish control of the NNSC, the new provider would be pointed to\n   by\
    \ that name.\n   In actuality, the domain system is a much more general and complex\n\
    \   system than has been described.  Resolvers and some servers cache\n   information\
    \ to allow steps in the resolution to be skipped.\n   Information provided by\
    \ the servers can be arbitrary, not merely IP\n   addresses.  This allows the\
    \ system to be used both by non-IP networks\n   and for mail, where it may be\
    \ necessary to give information on\n   intermediate mail bridges.\n"
- title: What's wrong with Berkeley Unix
  contents:
  - "What's wrong with Berkeley Unix\n   University of California at Berkeley has\
    \ been funded by DARPA to\n   modify the Unix system in a number of ways.  Included\
    \ in these\n   modifications is support for the Internet protocols.  In earlier\n\
    \   versions (e.g., BSD 4.2) there was good support for the basic\n   Internet\
    \ protocols (TCP, IP, SMTP, ARP) which allowed it to perform\n   nicely on IP\
    \ Ethernets and smaller Internets.  There were\n   deficiencies, however, when\
    \ it was connected to complicated networks.\n   Most of these problems have been\
    \ resolved under the newest release\n   (BSD 4.3).  Since it is the springboard\
    \ from which many vendors have\n   launched Unix implementations (either by porting\
    \ the existing code or\n   by using it as a model), many implementations (e.g.,\
    \ Ultrix) are\n   still based on BSD 4.2.  Therefore, many implementations still\
    \ exist\n   with the BSD 4.2 problems.  As time goes on, when BSD 4.3 trickles\n\
    \   through vendors as new release, many of the problems will be\n   resolved.\
    \  Following is a list of some problem scenarios and their\n   handling under\
    \ each of these releases.\n   ICMP redirects\n      Under the Internet model,\
    \ all a system needs to know to get\n      anywhere in the Internet is its own\
    \ address, the address of where\n      it wants to go, and how to reach a gateway\
    \ which knows about the\n      Internet.  It doesn't have to be the best gateway.\
    \  If the system\n      is on a network with multiple gateways, and a host sends\
    \ a packet\n      for delivery to a gateway which feels another directly connected\n\
    \      gateway is more appropriate, the gateway sends the sender a\n      message.\
    \  This message is an ICMP redirect, which politely says,\n      \"I'll deliver\
    \ this message for you, but you really ought to use\n      that gateway over there\
    \ to reach this host\".  BSD 4.2 ignores\n      these messages.  This creates\
    \ more stress on the gateways and the\n      local network, since for every packet\
    \ sent, the gateway sends a\n      packet to the originator.  BSD 4.3 uses the\
    \ redirect to update its\n      routing tables, will use the route until it times\
    \ out, then revert\n      to the use of the route it thinks is should use.  The\
    \ whole\n      process then repeats, but it is far better than one per packet.\n\
    \   Trailers\n      An application (like FTP) sends a string of octets to TCP\
    \ which\n      breaks it into chunks, and adds a TCP header.  TCP then sends\n\
    \      blocks of data to IP which adds its own headers and ships the\n      packets\
    \ over the network.  All this prepending of the data with\n      headers causes\
    \ memory moves in both the sending and the receiving\n      machines.  Someone\
    \ got the bright idea that if packets were long\n      and they stuck the headers\
    \ on the end (they became trailers), the\n      receiving machine could put the\
    \ packet on the beginning of a page\n      boundary and if the trailer was OK\
    \ merely delete it and transfer\n      control of the page with no memory moves\
    \ involved.  The problem is\n      that trailers were never standardized and most\
    \ gateways don't know\n      to look for the routing information at the end of\
    \ the block.  When\n      trailers are used, the machine typically works fine\
    \ on the local\n      network (no gateways involved) and for short blocks through\n\
    \      gateways (on which trailers aren't used).  So TELNET and FTP's of\n   \
    \   very short files work just fine and FTP's of long files seem to\n      hang.\
    \  On BSD 4.2 trailers are a boot option and one should make\n      sure they\
    \ are off when using the Internet.  BSD 4.3 negotiates\n      trailers, so it\
    \ uses them on its local net and doesn't use them\n      when going across the\
    \ network.\n   Retransmissions\n      TCP fires off blocks to its partner at the\
    \ far end of the\n      connection.  If it doesn't receive an acknowledgement\
    \ in a\n      reasonable amount of time it retransmits the blocks.  The\n    \
    \  determination of what is reasonable is done by TCP's\n      retransmission\
    \ algorithm.\n      There is no correct algorithm but some are better than others,\n\
    \      where worse is measured by the number of retransmissions done\n      unnecessarily.\
    \  BSD 4.2 had a retransmission algorithm which\n      retransmitted quickly and\
    \ often.  This is exactly what you would\n      want if you had a bunch of machines\
    \ on an Ethernet (a low delay\n      network of large bandwidth).  If you have\
    \ a network of relatively\n      longer delay and scarce bandwidth (e.g., 56kb\
    \ lines), it tends to\n      retransmit too aggressively.  Therefore, it makes\
    \ the networks and\n      gateways pass more traffic than is really necessary\
    \ for a given\n      conversation.  Retransmission algorithms do adapt to the\
    \ delay of\n      the network after a few packets, but 4.2's adapts slowly in\
    \ delay\n      situations.  BSD 4.3 does a lot better and tries to do the best\n\
    \      for both worlds.  It fires off a few retransmissions really\n      quickly\
    \ assuming it is on a low delay network, and then backs off\n      very quickly.\
    \  It also allows the delay to be about 4 minutes\n      before it gives up and\
    \ declares the connection broken.\n      Even better than the original 4.3 code\
    \ is a version of TCP with a\n      retransmission algorithm developed by Van\
    \ Jacobson of LBL.  He did\n      a lot of research into how the algorithm works\
    \ on real networks\n      and modified it to get both better throughput and be\
    \ friendlier to\n      the network.  This code has been integrated into the later\n\
    \      releases of BSD 4.3 and can be fetched anonymously from\n      ucbarpa.berkeley.edu\
    \ in directory 4.3.\n   Time to Live\n      The IP packet header contains a field\
    \ called the time to live\n      (TTL) field.  It is decremented each time the\
    \ packet traverses a\n      gateway.  TTL was designed to prevent packets caught\
    \ in routing\n      loops from being passed forever with no hope of delivery.\
    \  Since\n      the definition bears some likeness to the RIP hop count, some\n\
    \      misguided systems have set the TTL field to 15 because the\n      unreachable\
    \ flag in RIP is 16.  Obviously, no networks could have\n      more than 15 hops.\
    \  The RIP space where hops are limited ends when\n      RIP is not used as a\
    \ routing protocol any more (e.g., when NSFnet\n      starts transporting the\
    \ packet).  Therefore, it is quite easy for\n      a packet to require more than\
    \ 15 hops.  These machines will\n      exhibit the behavior of being able to reach\
    \ some places but not\n      others even though the routing information appears\
    \ correct.\n      Solving the problem typically requires kernel patches so it\
    \ may be\n      difficult if source is not available.\n"
- title: Appendix A - References to Remedial Information
  contents:
  - 'Appendix A - References to Remedial Information

    '
- title: '-----------------------------------------------'
  contents:
  - "-----------------------------------------------\n  [1]  Quarterman and Hoskins,\
    \ \"Notable Computer Networks\",\n       Communications of the ACM, Vol. 29, No.\
    \ 10, pp. 932-971, October\n       1986.\n  [2]  Tannenbaum, A., \"Computer Networks\"\
    , Prentice Hall, 1981.\n  [3]  Hedrick, C., \"Introduction to the Internet Protocols\"\
    , Via\n       Anonymous FTP from topaz.rutgers.edu, directory pub/tcp-ip-docs,\n\
    \       file tcp-ip-intro.doc.\n  [4]  Comer, D., \"Internetworking with TCP/IP:\
    \ Principles, Protocols,\n       and Architecture\", Copyright 1988,  by Prentice-Hall,\
    \ Inc.,\n       Englewood Cliffs, NJ,  07632 ISBN 0-13-470154-2.\n"
- title: Appendix B - List of Major RFCs
  contents:
  - 'Appendix B - List of Major RFCs

    '
- title: '-------------------------------'
  contents:
  - '-------------------------------

    '
- title: This list of key "Basic Beige" RFCs was compiled by J.K. Reynolds.  This
  contents:
  - 'This list of key "Basic Beige" RFCs was compiled by J.K. Reynolds.  This

    '
- title: is the 30 August 1989 edition of the list.
  contents:
  - 'is the 30 August 1989 edition of the list.

    '
- title: RFC-768       User Datagram Protocol (UDP)
  contents:
  - 'RFC-768       User Datagram Protocol (UDP)

    '
- title: RFC-791       Internet Protocol (IP)
  contents:
  - 'RFC-791       Internet Protocol (IP)

    '
- title: RFC-792       Internet Control Message Protocol (ICMP)
  contents:
  - 'RFC-792       Internet Control Message Protocol (ICMP)

    '
- title: RFC-793       Transmission Control Protocol (TCP)
  contents:
  - 'RFC-793       Transmission Control Protocol (TCP)

    '
- title: RFC-821       Simple Mail Transfer Protocol (SMTP)
  contents:
  - 'RFC-821       Simple Mail Transfer Protocol (SMTP)

    '
- title: RFC-822       Standard for the Format of ARPA Internet Text Messages
  contents:
  - 'RFC-822       Standard for the Format of ARPA Internet Text Messages

    '
- title: RFC-826       Ethernet Address Resolution Protocol
  contents:
  - 'RFC-826       Ethernet Address Resolution Protocol

    '
- title: RFC-854       Telnet Protocol
  contents:
  - 'RFC-854       Telnet Protocol

    '
- title: RFC-862       Echo Protocol
  contents:
  - 'RFC-862       Echo Protocol

    '
- title: RFC-894       A Standard for the Transmission of IP
  contents:
  - "RFC-894       A Standard for the Transmission of IP\n              Datagrams\
    \ over Ethernet Networks\n"
- title: RFC-904       Exterior Gateway Protocol
  contents:
  - 'RFC-904       Exterior Gateway Protocol

    '
- title: RFC-919       Broadcasting Internet Datagrams
  contents:
  - 'RFC-919       Broadcasting Internet Datagrams

    '
- title: RFC-922       Broadcasting Internet Datagrams in the Presence of Subnets
  contents:
  - 'RFC-922       Broadcasting Internet Datagrams in the Presence of Subnets

    '
- title: RFC-950       Internet Standard Subnetting Procedure
  contents:
  - 'RFC-950       Internet Standard Subnetting Procedure

    '
- title: RFC-951       Bootstrap Protocol (BOOTP)
  contents:
  - 'RFC-951       Bootstrap Protocol (BOOTP)

    '
- title: RFC-959       File Transfer Protocol (FTP)
  contents:
  - 'RFC-959       File Transfer Protocol (FTP)

    '
- title: 'RFC-966       Host Groups: A Multicast Extension to the Internet Protocol'
  contents:
  - 'RFC-966       Host Groups: A Multicast Extension to the Internet Protocol

    '
- title: RFC-974       Mail Routing and the Domain System
  contents:
  - 'RFC-974       Mail Routing and the Domain System

    '
- title: RFC-1000      The Request for Comments Reference Guide
  contents:
  - 'RFC-1000      The Request for Comments Reference Guide

    '
- title: RFC-1009      Requirements for Internet Gateways
  contents:
  - 'RFC-1009      Requirements for Internet Gateways

    '
- title: RFC-1010      Assigned Numbers
  contents:
  - 'RFC-1010      Assigned Numbers

    '
- title: RFC-1011      Official Internet Protocols
  contents:
  - 'RFC-1011      Official Internet Protocols

    '
- title: RFC-1012      Bibliography of Request for Comments 1 through 999
  contents:
  - 'RFC-1012      Bibliography of Request for Comments 1 through 999

    '
- title: RFC-1034      Domain Names - Concepts and Facilities
  contents:
  - 'RFC-1034      Domain Names - Concepts and Facilities

    '
- title: RFC-1035      Domain Names - Implementation
  contents:
  - 'RFC-1035      Domain Names - Implementation

    '
- title: RFC-1042      A Standard for the Transmission of IP
  contents:
  - "RFC-1042      A Standard for the Transmission of IP\n              Datagrams\
    \ over IEEE 802 Networks\n"
- title: RFC-1048      BOOTP Vendor Information Extensions
  contents:
  - 'RFC-1048      BOOTP Vendor Information Extensions

    '
- title: RFC-1058      Routing Information Protocol
  contents:
  - 'RFC-1058      Routing Information Protocol

    '
- title: RFC-1059      Network Time Protocol (NTP)
  contents:
  - 'RFC-1059      Network Time Protocol (NTP)

    '
- title: RFC-1065      Structure and Identification of
  contents:
  - "RFC-1065      Structure and Identification of\n              Management Information\
    \ for TCP/IP-based internets\n"
- title: RFC-1066      Management Information Base for Network
  contents:
  - "RFC-1066      Management Information Base for Network\n              Management\
    \ of TCP/IP-based internets\n"
- title: RFC-1084      BOOTP Vendor Information Extensions
  contents:
  - 'RFC-1084      BOOTP Vendor Information Extensions

    '
- title: RFC-1087      Ethics and the Internet
  contents:
  - 'RFC-1087      Ethics and the Internet

    '
- title: RFC-1095      The Common Management Information
  contents:
  - "RFC-1095      The Common Management Information\n              Services and Protocol\
    \ over TCP/IP (CMOT)\n"
- title: RFC-1098      A Simple Network Management Protocol (SNMP)
  contents:
  - 'RFC-1098      A Simple Network Management Protocol (SNMP)

    '
- title: RFC-1100      IAB Official Protocol Standards
  contents:
  - 'RFC-1100      IAB Official Protocol Standards

    '
- title: RFC-1101      DNS Encoding of Network Names and Other Types
  contents:
  - 'RFC-1101      DNS Encoding of Network Names and Other Types

    '
- title: RFC-1112      Host Extensions for IP Multicasting
  contents:
  - 'RFC-1112      Host Extensions for IP Multicasting

    '
- title: RFC-1117      Internet Numbers
  contents:
  - 'RFC-1117      Internet Numbers

    '
- title: 'Note:  This list is a portion of a list of RFC''s by topic that may be'
  contents:
  - 'Note:  This list is a portion of a list of RFC''s by topic that may be

    '
- title: retrieved from the NIC under NETINFO:RFC-SETS.TXT (anonymous FTP, of
  contents:
  - 'retrieved from the NIC under NETINFO:RFC-SETS.TXT (anonymous FTP, of

    '
- title: course).
  contents:
  - 'course).

    '
- title: The following list is not necessary for connection to the Internet,
  contents:
  - 'The following list is not necessary for connection to the Internet,

    '
- title: but is useful in understanding the domain system, mail system, and
  contents:
  - 'but is useful in understanding the domain system, mail system, and

    '
- title: 'gateways:'
  contents:
  - 'gateways:

    '
- title: RFC-974        Mail Routing and the Domain System
  contents:
  - 'RFC-974        Mail Routing and the Domain System

    '
- title: RFC-1009       Requirements for Internet Gateways
  contents:
  - 'RFC-1009       Requirements for Internet Gateways

    '
- title: RFC-1034       Domain Names - Concepts and Facilities
  contents:
  - 'RFC-1034       Domain Names - Concepts and Facilities

    '
- title: RFC-1035       Domain Names - Implementation and Specification
  contents:
  - 'RFC-1035       Domain Names - Implementation and Specification

    '
- title: RFC-1101       DNS Encoding of Network Names and Other Types
  contents:
  - 'RFC-1101       DNS Encoding of Network Names and Other Types

    '
- title: Appendix C - Contact Points for Network Information
  contents:
  - 'Appendix C - Contact Points for Network Information

    '
- title: '---------------------------------------------------'
  contents:
  - '---------------------------------------------------

    '
- title: Network Information Center (NIC)
  contents:
  - "Network Information Center (NIC)\n      DDN Network Information Center\n    \
    \  SRI International, Room EJ291\n      333 Ravenswood Avenue\n      Menlo Park,\
    \ CA 94025\n      (800) 235-3155 or (415) 859-3695\n      NIC@NIC.DDN.MIL\n"
- title: NSF Network Service Center (NNSC)
  contents:
  - "NSF Network Service Center (NNSC)\n      NNSC\n      BBN Systems and Technology\
    \ Corporation\n      10 Moulton St.\n      Cambridge, MA 02238\n      (617) 873-3400\n\
    \      NNSC@NNSC.NSF.NET\n"
- title: NSF Network Information Service (NIS)
  contents:
  - "NSF Network Information Service (NIS)\n      NIS\n      Merit Inc.\n      University\
    \ of Michigan\n      1075 Beal Avenue\n      Ann Arbor, MI 48109\n      (313)\
    \ 763-4897\n      INFO@NIS.NSF.NET\n"
- title: CIC
  contents:
  - "CIC\n      CSNET Coordination and Information Center\n      Bolt Beranek and\
    \ Newman Inc.\n      10 Moulton Street\n      Cambridge, MA 02238\n      (617)\
    \ 873-2777\n      INFO@SH.CS.NET\n"
- title: Glossary
  contents:
  - 'Glossary

    '
- title: '--------'
  contents:
  - "--------\n   autonomous system\n      A set of gateways under a single administrative\
    \ control and using\n      compatible and consistent routing procedures.  Generally\
    \ speaking,\n      the gateways run by a particular organization.  Since a gateway\
    \ is\n      connected to two (or more) networks it is not usually correct to\n\
    \      say that a gateway is in a network.  For example, the gateways\n      that\
    \ connect regional networks to the NSF Backbone network are run\n      by Merit\
    \ and form an autonomous system.  Another example, the\n      gateways that connect\
    \ campuses to NYSERNET are run by NYSER and\n      form an autonomous system.\n\
    \   core gateway\n      The innermost gateways of the Internet.  These gateways\
    \ have a\n      total picture of the reachability to all networks known to the\n\
    \      Internet.  They then redistribute reachability information to\n      their\
    \ neighbor gateways speaking EGP.  It is from them your EGP\n      agent (there\
    \ is one acting for you somewhere if you can reach the\n      core of the Internet)\
    \ finds out it can reach all the nets on the\n      Internet.  Which is then passed\
    \ to you via Hello, gated, RIP.  The\n      core gateways mostly connect campuses\
    \ to the ARPANET, or\n      interconnect the ARPANET and the MILNET, and are run\
    \ by BBN.\n   count to infinity\n      The symptom of a routing problem where\
    \ routing information is\n      passed in a circular manner through multiple gateways.\
    \  Each\n      gateway increments the metric appropriately and passes it on. \
    \ As\n      the metric is passed around the loop, it increments to ever\n    \
    \  increasing values until it reaches the maximum for the routing\n      protocol\
    \ being used, which typically denotes a link outage.\n   hold down\n      When\
    \ a router discovers a path in the network has gone down\n      announcing that\
    \ that path is down for a minimum amount of time\n      (usually at least two\
    \ minutes).  This allows for the propagation\n      of the routing information\
    \ across the network and prevents the\n      formation of routing loops.\n   split\
    \ horizon\n      When a router (or group of routers working in consort) accept\n\
    \      routing information from multiple external networks, but do not\n     \
    \ pass on information learned from one external network to any\n      others.\
    \  This is an attempt to prevent bogus routes to a network\n      from being propagated\
    \ because of gossip or counting to infinity.\n   DDN\n      Defense Data Network\
    \ the collective name for the ARPANET and\n      MILNET.  Used frequently because\
    \ although they are seperate\n      networks the operational and informational\
    \ foci are the same.\n"
- title: Security Considerations
  contents:
  - "Security Considerations\n   Security and privacy protection is a serious matter\
    \ and too often\n   nothing is done about it.  There are some known security bugs\n\
    \   (especially in access control) in BSD Unix and in some\n   implementations\
    \ of network services.  The hitchhikers guide does not\n   discuss these issues\
    \ (too bad).\n"
- title: Author's Address
  contents:
  - "Author's Address\n   Ed Krol\n   University of Illinois\n   195 DCL\n   1304\
    \ West Springfield Avenue\n   Urbana, IL  61801-4399\n   Phone: (217) 333-7886\n\
    \   EMail: Krol@UXC.CSO.UIUC.EDU\n"
