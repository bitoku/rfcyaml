- contents:
  - " Path Computation Element Communication Protocol (PCEP) Extensions for\n            PCE-Initiated
    LSP Setup in a Stateful PCE Model\n"
  title: __initial_text__
- contents:
  - "Abstract\n   The Path Computation Element Communication Protocol (PCEP) provides\n
    \  mechanisms for Path Computation Elements (PCEs) to perform path\n   computations
    in response to Path Computation Client (PCC) requests.\n   The extensions for
    stateful PCE provide active control of\n   Multiprotocol Label Switching (MPLS)
    Traffic Engineering Label\n   Switched Paths (TE LSPs) via PCEP, for a model where
    the PCC\n   delegates control over one or more locally configured LSPs to the\n
    \  PCE.  This document describes the creation and deletion of\n   PCE-initiated
    LSPs under the stateful PCE model.\n"
  title: Abstract
- contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This
    document is a product of the Internet Engineering Task Force\n   (IETF).  It represents
    the consensus of the IETF community.  It has\n   received public review and has
    been approved for publication by the\n   Internet Engineering Steering Group (IESG).
    \ Further information on\n   Internet Standards is available in Section 2 of RFC
    7841.\n   Information about the current status of this document, any errata,\n
    \  and how to provide feedback on it may be obtained at\n   https://www.rfc-editor.org/info/rfc8281.\n"
  title: Status of This Memo
- contents:
  - "Copyright Notice\n   Copyright (c) 2017 IETF Trust and the persons identified
    as the\n   document authors.  All rights reserved.\n   This document is subject
    to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n
    \  (https://trustee.ietf.org/license-info) in effect on the date of\n   publication
    of this document.  Please review these documents\n   carefully, as they describe
    your rights and restrictions with respect\n   to this document.  Code Components
    extracted from this document must\n   include Simplified BSD License text as described
    in Section 4.e of\n   the Trust Legal Provisions and are provided without warranty
    as\n   described in the Simplified BSD License.\n"
  title: Copyright Notice
- contents:
  - "Table of Contents\n   1.  Introduction  . . . . . . . . . . . . . . . . . . .
    . . . . .   4\n   2.  Terminology . . . . . . . . . . . . . . . . . . . . . .
    . . .   4\n     2.1.  Requirements Language . . . . . . . . . . . . . . . . .
    .   5\n   3.  Architectural Overview  . . . . . . . . . . . . . . . . . . .   5\n
    \    3.1.  Motivation  . . . . . . . . . . . . . . . . . . . . . . .   5\n     3.2.
    \ Operation Overview  . . . . . . . . . . . . . . . . . . .   6\n   4.  Support
    of PCE-Initiated LSPs . . . . . . . . . . . . . . . .   7\n     4.1.  STATEFUL-PCE-CAPABILITY
    TLV . . . . . . . . . . . . . . .   8\n   5.  PCE-Initiated LSP Instantiation
    and Deletion  . . . . . . . .   8\n     5.1.  The LSP Initiate Request  . . .
    . . . . . . . . . . . . .   8\n     5.2.  The R Flag in the SRP Object  . . .
    . . . . . . . . . . .  10\n     5.3.  LSP Instantiation . . . . . . . . . . .
    . . . . . . . . .  10\n       5.3.1.  The Create Flag . . . . . . . . . . . .
    . . . . . . .  12\n       5.3.2.  The SPEAKER-ENTITY-ID TLV . . . . . . . . .
    . . . . .  13\n     5.4.  LSP Deletion  . . . . . . . . . . . . . . . . . . .
    . . .  13\n   6.  LSP Delegation and Cleanup  . . . . . . . . . . . . . . . .
    .  14\n   7.  LSP State Synchronization . . . . . . . . . . . . . . . . . .  15\n
    \  8.  IANA Considerations . . . . . . . . . . . . . . . . . . . . .  15\n     8.1.
    \ PCEP Messages . . . . . . . . . . . . . . . . . . . . . .  15\n     8.2.  LSP
    Object  . . . . . . . . . . . . . . . . . . . . . . .  15\n     8.3.  SRP object
    \ . . . . . . . . . . . . . . . . . . . . . . .  16\n     8.4.  STATEFUL-PCE-CAPABILITY
    TLV . . . . . . . . . . . . . . .  16\n     8.5.  PCEP-Error Object . . . . .
    . . . . . . . . . . . . . . .  17\n   9.  Security Considerations . . . . . .
    . . . . . . . . . . . . .  18\n     9.1.  Malicious PCE . . . . . . . . . . .
    . . . . . . . . . . .  18\n     9.2.  Malicious PCC . . . . . . . . . . . . .
    . . . . . . . . .  18\n   10. References  . . . . . . . . . . . . . . . . . .
    . . . . . . .  19\n     10.1.  Normative References . . . . . . . . . . . . .
    . . . . .  19\n     10.2.  Informative References . . . . . . . . . . . . . .
    . . .  19\n   Acknowledgments . . . . . . . . . . . . . . . . . . . . . . . .
    .  20\n   Authors' Addresses  . . . . . . . . . . . . . . . . . . . . . . .  20\n"
  title: Table of Contents
- contents:
  - "1.  Introduction\n   [RFC5440] describes the Path Computation Element Communication\n
    \  Protocol (PCEP).  PCEP defines the communication between a Path\n   Computation
    Client (PCC) and a Path Computation Element (PCE), or\n   between PCE and PCE,
    enabling computation of Multiprotocol Label\n   Switching (MPLS) for Traffic Engineering
    Label Switched Path (TE LSP)\n   characteristics.\n   [RFC8231] specifies a set
    of extensions to PCEP to enable stateful\n   control of TE LSPs between and across
    PCEP sessions in compliance\n   with [RFC4657].  It includes:\n   o  mechanisms
    to effect LSP State Synchronization between PCCs and\n      PCEs\n   o  delegation
    of control of LSPs to PCEs\n   o  PCE control of timing and sequence of path computations
    within and\n      across PCEP sessions\n   It focuses on a model where LSPs are
    configured on the PCC, and\n   control over them is delegated to the PCE.\n   This
    document describes the setup, maintenance, and teardown of\n   PCE-initiated LSPs
    under the stateful PCE model, without the need for\n   local configuration on
    the PCC, thus allowing for a dynamic network\n   that is centrally controlled
    and deployed.\n"
  title: 1.  Introduction
- contents:
  - "2.  Terminology\n   This document uses the following terms defined in [RFC5440]:
    PCC,\n   PCE, and PCEP Peer.\n   This document uses the following terms defined
    in [RFC8051]: Stateful\n   PCE and Delegation.\n   This document uses the following
    terms defined in [RFC8231]:\n   Redelegation Timeout Interval, State Timeout Interval,
    LSP State\n   Report, and LSP Update Request.\n   The following terms are defined
    in this document:\n   PCE-initiated LSP:  LSP that is instantiated as a result
    of a request\n      from the PCE.\n   The message formats in this document are
    specified using Routing\n   Backus-Naur Form (RBNF) encoding as specified in [RFC5511].\n"
  - contents:
    - "2.1.  Requirements Language\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\",
      \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"NOT
      RECOMMENDED\", \"MAY\", and\n   \"OPTIONAL\" in this document are to be interpreted
      as described in\n   BCP 14 [RFC2119] [RFC8174] when, and only when, they appear
      in all\n   capitals, as shown here.\n"
    title: 2.1.  Requirements Language
  title: 2.  Terminology
- contents:
  - '3.  Architectural Overview

    '
  - contents:
    - "3.1.  Motivation\n   [RFC8231] provides active control over LSPs that are locally\n
      \  configured on the PCC.  This model relies on the Label Edge Router\n   (LER)
      taking an active role in delegating locally configured LSPs to\n   the PCE and
      is well suited in environments where the LSP placement is\n   fairly static.
      \ However, in environments where the LSP placement\n   needs to change in response
      to application demands, it is useful to\n   support dynamic creation and teardown
      of LSPs.  The ability for a PCE\n   to trigger the creation of LSPs on demand
      can be seamlessly\n   integrated into a controller-based network architecture,
      where\n   intelligence in the controller can determine when and where to set
      up\n   paths.\n   A possible use case is a software-defined network, where applications\n
      \  request network resources and paths from the network infrastructure.\n   For
      example, an application can request a path with certain\n   constraints between
      two Label Switching Routers (LSRs) by contacting\n   the PCE.  The PCE can compute
      a path satisfying the constraints, and\n   instruct the head end LSR to instantiate
      and signal it.  When the\n   path is no longer required by the application,
      the PCE can request\n   its teardown.\n   Another use case is dynamically adjusting
      aggregate bandwidth between\n   two points in the network using multiple LSPs.
      \ This functionality is\n   very similar to auto-bandwidth, but it allows for
      providing the\n   desired capacity through multiple LSPs.  This approach overcomes
      two\n   of the limitations auto-bandwidth can experience: 1) growing the\n   capacity
      between the endpoints beyond the capacity of individual\n   links in the path
      and 2) achieving good bin packing through use of\n   several small LSPs instead
      of a single large one.  The number of LSPs\n   varies based on the demand, and
      LSPs are created and deleted\n   dynamically to satisfy the bandwidth requirements.\n
      \  Another use case is demand engineering, where a PCE with visibility\n   into
      both the network state and the demand matrix can anticipate and\n   optimize
      how traffic is distributed across the infrastructure.  Such\n   optimizations
      may require creating new paths across the\n   infrastructure.\n"
    title: 3.1.  Motivation
  - contents:
    - "3.2.  Operation Overview\n   This document defines the new I flag in the STATEFUL-PCE-CAPABILITY\n
      \  TLV to indicate that the sender supports PCE-initiated LSPs (see\n   details
      in Section 4.1).  A PCC or PCE sets this flag in the Open\n   message during
      the PCEP initialization phase to indicate that it\n   supports the procedures
      of this document.\n   This document defines a new PCEP message, the LSP Initiate
      Request\n   (PCInitiate) message, which a PCE can send to a PCC to request the\n
      \  initiation or deletion of an LSP.  The decision when to instantiate\n   or
      delete a PCE-initiated LSP is out of the scope of this document.\n   The PCE
      sends a PCInitiate message to the PCC to request the\n   initiation of an LSP.
      \ The PCC creates the LSP using the attributes\n   communicated by the PCE and
      local values for any unspecified\n   parameters.  The PCC generates a Path Computation
      State Report\n   (PCRpt) for the LSP, carrying a newly assigned PLSP-ID for
      the LSP\n   and delegating the LSP to the PCE via the Delegate flag in the LSP\n
      \  object.\n   The PCE can update the attributes of the LSP by sending subsequent\n
      \  Path Computation Update Request (PCUpd) messages.  Subsequent PCRpt\n   and
      PCUpd messages that the PCC and PCE, respectively, send for the\n   LSP will
      carry the PCC-assigned PLSP-ID, which uniquely identifies\n   the LSP.  See
      details in Section 5.3.\n   The PCE sends a PCInitiate message to the PCC to
      request the deletion\n   of an LSP.  To indicate a delete operation, this document
      defines the\n   new R flag in the Stateful PCE Request Parameter (SRP) object
      in the\n   PCInitiate message, as described in Section 5.2.  As a result of
      the\n   deletion request, the PCC removes the LSP and sends a PCRpt for the\n
      \  removed state.  See details in Section 5.4.\n   Figure 1 illustrates these
      message exchanges.\n         +-+-+                            +-+-+\n         |PCC|
      \                           |PCE|\n         +-+-+                            +-+-+\n
      \          |                                |\n           |<--PCInitiate-------------------|
      (Initiate LSP)\n           |                                |\n           |---PCRpt,
      PLSP_ID=1, D=1------->| (Confirm initiation)\n           |            .                   |\n
      \          |            .                   |\n           |                                |\n
      \          |<--PCUpd, PLSP_ID=1-------------| (Update LSP)\n           |                                |\n
      \          |---PCRpt, PLSP_ID=1, D=1------->| (Confirm update)\n           |
      \           .                   |\n           |            .                   |\n
      \          |                                |\n           |<--PCInitiate, PLSP_ID=1,
      R=1---| (Delete LSP)\n           |                                |\n           |---PCRpt,
      PLSP_ID=1, R=1------->| (Confirm delete)\n                  Figure 1: PCE-Initiated
      LSP Life Cycle\n"
    title: 3.2.  Operation Overview
  title: 3.  Architectural Overview
- contents:
  - "4.  Support of PCE-Initiated LSPs\n   A PCEP speaker indicates its ability to
    support PCE-initiated LSPs\n   during the PCEP initialization phase, as follows.
    \ When the PCEP\n   session is created, it sends an Open message with an OPEN
    object that\n   contains the STATEFUL-PCE-CAPABILITY TLV, as defined in [RFC8231].
    \ A\n   new flag, the I (LSP-INSTANTIATION-CAPABILITY) flag, is introduced to\n
    \  this TLV to indicate support for instantiation of PCE-initiated LSPs.\n   A
    PCE can initiate LSPs only for PCCs that advertised this\n   capability.  A PCC
    will follow the procedures described in this\n   document only on sessions where
    the PCE advertised the I flag.\n"
  - contents:
    - "4.1.  STATEFUL-PCE-CAPABILITY TLV\n   The format of the STATEFUL-PCE-CAPABILITY
      TLV is defined in [RFC8231]\n   and included here for easy reference with the
      addition of the new I\n   flag.\n      0                   1                   2
      \                  3\n      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3
      4 5 6 7 8 9 0 1\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \    |               Type            |            Length=4           |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \    |              Flags                                      |I|S|U|\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-++-+-+-+-+-+-+-+-+-+-++-+-+-+-+-+\n
      \              Figure 2: STATEFUL-PCE-CAPABILITY TLV Format\n   A new flag is
      defined to indicate the sender's support for LSP\n   instantiation by a PCE:\n
      \  I (LSP-INSTANTIATION-CAPABILITY -- 1 bit):  If set to 1 by a PCC, the\n      I
      flag indicates that the PCC allows instantiation of an LSP by a\n      PCE.
      \ If set to 1 by a PCE, the I flag indicates that the PCE\n      supports instantiating
      LSPs.  The LSP-INSTANTIATION-CAPABILITY\n      flag must be set by both the
      PCC and PCE in order to enable\n      PCE-initiated LSP instantiation.\n"
    title: 4.1.  STATEFUL-PCE-CAPABILITY TLV
  title: 4.  Support of PCE-Initiated LSPs
- contents:
  - "5.  PCE-Initiated LSP Instantiation and Deletion\n   To initiate an LSP, a PCE
    sends a PCInitiate message to a PCC.  The\n   message format, objects, and TLVs
    are discussed separately below for\n   the creation and the deletion cases.\n"
  - contents:
    - "5.1.  The LSP Initiate Request\n   An LSP Initiate Request (PCInitiate) message
      is a PCEP message sent\n   by a PCE to a PCC to trigger LSP instantiation or
      deletion.  The\n   Message-Type field of the PCEP common header for the PCInitiate\n
      \  message is set to 12.  The PCInitiate message MUST include the SRP\n   and
      the LSP objects and MAY contain other objects, as discussed later\n   in this
      section.\n   The format of a PCInitiate message is as follows:\n     <PCInitiate
      Message> ::= <Common Header>\n                              <PCE-initiated-lsp-list>\n
      \  Where:\n     <Common Header> is defined in RFC 5440\n     <PCE-initiated-lsp-list>
      ::= <PCE-initiated-lsp-request>\n                                  [<PCE-initiated-lsp-list>]\n
      \    <PCE-initiated-lsp-request> ::= (<PCE-initiated-lsp-instantiation>|\n                                      <PCE-initiated-lsp-deletion>)\n
      \    <PCE-initiated-lsp-instantiation> ::= <SRP>\n                                           <LSP>\n
      \                                          [<END-POINTS>]\n                                           <ERO>\n
      \                                          [<attribute-list>]\n     <PCE-initiated-lsp-deletion>
      ::= <SRP>\n                                      <LSP>\n   Where:\n     <attribute-list>
      is defined in RFC 5440 and extended by\n     PCEP extensions.\n   The LSP object
      is defined in [RFC8231].  The END-POINTS and Explicit\n   Route Objects (EROs)
      are defined in [RFC5440].\n   The SRP object is defined in [RFC8231].  The SRP
      object contains an\n   SRP-ID-number that is unique within a PCEP session.  The
      PCE\n   increments the last-used SRP-ID-number before it sends each\n   PCInitiate
      message.  The PCC MUST echo the value of the SRP-ID-number\n   in PCEP Error
      (PCErr) and PCRpt messages that it sends as a result of\n   the PCInitiate;
      this allows the PCE to correlate them with the\n   corresponding PCInitiate
      message.\n"
    title: 5.1.  The LSP Initiate Request
  - contents:
    - "5.2.  The R Flag in the SRP Object\n   The format of the SRP object is defined
      in [RFC8231] and included\n   here for easy reference with the addition of the
      new R flag.\n       0                   1                   2                   3\n
      \      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \     |                          Flags                              |R|\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \     |                        SRP-ID-number                          |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \     |                                                               |\n      //
      \                     Optional TLVs                          //\n      |                                                               |\n
      \     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n                      Figure
      3: The SRP Object Format\n   A new flag is defined to indicate a delete operation
      initiated by the\n   PCE:\n   R (LSP-REMOVE -- 1 bit):  If set to 0, it indicates
      a request to\n      create an LSP.  If set to 1, it indicates a request to remove
      an\n      LSP.\n"
    title: 5.2.  The R Flag in the SRP Object
  - contents:
    - "5.3.  LSP Instantiation\n   The LSP is instantiated by sending a PCInitiate
      message.  The LSP is\n   set up using RSVP-TE.  Extensions for other setup methods
      are outside\n   the scope of this document.\n   The PCInitiate message, when
      used to instantiate an LSP, MUST contain\n   an LSP object with the reserved
      PLSP-ID 0.  The LSP object MUST\n   include the SYMBOLIC-PATH-NAME TLV, which
      is used to correlate\n   between the PCC-assigned PLSP-ID and the LSP.\n   The
      PCInitiate message, when used to instantiate an LSP, MUST contain\n   an ERO
      for the LSP.\n   For an instantiation request of an RSVP-signaled LSP, the destination\n
      \  address may be needed.  The PCC MAY determine it from a provided\n   object
      (e.g., ERO) or a local decision.  Alternatively, the\n   END-POINTS object MAY
      be included to explicitly convey the\n   destination addresses to be used in
      the RSVP-TE signaling.  The\n   source address MUST be either specified or left
      for the PCC to choose\n   by setting it to \"0.0.0.0\" (if the destination is
      an IPv4 address) or\n   \"::\" (if the destination is an IPv6 address).\n   The
      PCE MAY include various attributes as per [RFC5440].  The PCC\n   MUST use these
      values in the LSP instantiation and local values for\n   unspecified parameters.
      \ After the LSP setup, the PCC MUST send a\n   PCRpt to the PCE, reflecting
      these values.  The SRP object in the\n   PCRpt message MUST echo the value of
      the PCInitiate message that\n   triggered the setup.  LSPs that were instantiated
      as a result of a\n   PCInitiate message MUST have the Create flag (Section 5.3.1)
      set in\n   the LSP object.\n   If the PCC receives a PCInitiate message with
      a non-zero PLSP-ID and\n   the R flag in the SRP object set to zero, then it
      MUST send a PCErr\n   message with Error-type=19 (Invalid Operation) and Error-value=8\n
      \  (Non-zero PLSP-ID in the LSP Initiate Request).\n   If the PCC receives a
      PCInitiate message without an ERO and the R\n   flag in the SRP object set to
      zero, then it MUST send a PCErr message\n   with Error-type=6 (Mandatory Object
      missing) and Error-value=9 (ERO\n   object missing).\n   If the PCC receives
      a PCInitiate message without a SYMBOLIC-PATH-NAME\n   TLV, then it MUST send
      a PCErr message with Error-type=10 (Reception\n   of an invalid object) and
      Error-value=8 (SYMBOLIC-PATH-NAME TLV\n   missing).\n   The PCE MUST NOT provide
      a symbolic path name that conflicts with the\n   symbolic path name of any existing
      LSP in the PCC.  (Existing LSPs\n   may be either statically configured or initiated
      by another PCE.)  If\n   there is a conflict with the symbolic path name of
      an existing LSP,\n   the PCC MUST send a PCErr message with Error-type=23 (Bad
      Parameter\n   value) and Error-value=1 (SYMBOLIC-PATH-NAME in use).  The only\n
      \  exception to this rule is for LSPs for which the State Timeout\n   Interval
      timer is running (see Section 6).\n   If the PCC determines that the LSP parameters
      proposed in the\n   PCInitiate message are unacceptable, it MUST send a PCErr
      message\n   with Error-type=24 (PCE instantiation error) and Error-value=1\n
      \  (Unacceptable instantiation parameters).  If the PCC encounters an\n   internal
      error during the processing of the PCInitiate message, it\n   MUST send a PCErr
      message with Error-type=24 (PCE instantiation\n   error) and Error-value=2 (Internal
      error).\n   A PCC MUST relay errors it encounters in the setup of a PCE-initiated\n
      \  LSP to the PCE by sending a PCErr message with Error-type=24 (PCE\n   instantiation
      error) and Error-value=3 (Signaling error).  The PCErr\n   message MUST echo
      the SRP-ID-number of the PCInitiate message.  The\n   PCEP-ERROR object SHOULD
      include the RSVP_ERROR_SPEC TLV (if an RSVP\n   ERROR_SPEC object was returned
      to the PCC by a downstream node).\n   After the LSP is set up, errors in RSVP
      signaling are reported in\n   PCRpt messages, as described in [RFC8231].\n   On
      successful completion of the LSP instantiation, the PCC MUST send\n   a PCRpt
      message.  The LSP object message MUST contain a non-zero\n   PLSP-ID that uniquely
      identifies the LSP within this PCC and MUST\n   have the Create flag (Section
      5.3.1) and Delegate flag set.  The SRP\n   object MUST contain an SRP-ID-number
      that echoes the value from the\n   PCInitiate message that triggered the setup.
      \ The PCRpt MUST include\n   the attributes that the PCC used to instantiate
      the LSP.\n   A PCC SHOULD be able to place a limit on either the number of LSPs
      or\n   the percentage of resources that are allocated to honor PCE-initiated\n
      \  LSP requests.  As soon as that limit is reached, the PCC MUST send a\n   PCErr
      message with Error-type=19 (Invalid Operation) and\n   Error-value=6 (PCE-initiated
      LSP limit reached) and is free to drop\n   any incoming PCInitiate messages
      without additional processing.\n   Similarly, the PCE SHOULD be able to place
      a limit on either the\n   number of PCInitiate messages pending for a particular
      PCC or the\n   time it waits for a response (positive or negative) to a PCInitiate\n
      \  message from a PCC, and it MAY take further action (such as closing\n   the
      session or removing all its LSPs) if this limit is reached.\n"
    - contents:
      - "5.3.1.  The Create Flag\n   The LSP object is defined in [RFC8231] and included
        here for easy\n   reference with the addition of the new Create (C) flag.\n
        \     0                   1                   2                   3\n      0
        1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \    |                PLSP-ID                |Flags  |C|  O  |A|R|S|D|\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \    //                        TLVs                                 //\n     |
        \                                                              |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \                     Figure 4: The LSP Object Format\n   A new flag, the
        C flag, is introduced.  On a PCRpt message, the C\n   flag set to 1 indicates
        that this LSP was created via a PCInitiate\n   message.  The C flag MUST be
        set to 1 on each PCRpt message for the\n   LSP's duration of existence.  The
        C flag allows PCEs to be aware of\n   which LSPs were PCE initiated (a state
        that would otherwise only be\n   known by the PCC and the PCE that initiated
        them).\n"
      title: 5.3.1.  The Create Flag
    - contents:
      - "5.3.2.  The SPEAKER-ENTITY-ID TLV\n   The optional SPEAKER-ENTITY-ID TLV
        defined in [RFC8232] MAY be\n   included in the LSP object in a PCRpt message
        as an optional TLV for\n   LSPs for which the C flag is 1.  The SPEAKER-ENTITY-ID
        TLV identifies\n   the PCE that initiated the creation of the LSP on all PCEP
        sessions,\n   a state that would otherwise only be known by the PCC and the
        PCE\n   that initiated the LSP.  If the TLV appears in a PCRpt for an LSP
        for\n   which the C flag is 0, the LSP MUST be ignored, and the PCE MUST send\n
        \  a PCErr message with Error-type=23 (Bad parameter value) and\n   Error-value=2
        (Speaker identity included for an LSP that is not PCE\n   initiated).\n"
      title: 5.3.2.  The SPEAKER-ENTITY-ID TLV
    title: 5.3.  LSP Instantiation
  - contents:
    - "5.4.  LSP Deletion\n   A PCE can initiate the removal of a PCE-initiated LSP
      by sending a\n   PCInitiate message with an LSP object carrying the PLSP-ID
      of the LSP\n   to be removed and an SRP object with the R flag set (see\n   Section
      5.2).  A PLSP-ID of zero removes all LSPs with the C flag set\n   to 1 (in their
      LSP object) that are delegated to the PCE.\n   If the PLSP-ID is unknown, the
      PCC MUST send a PCErr message with\n   Error-type=19 (Invalid Operation) and
      Error-value=3 (Unknown PLSP-ID)\n   [RFC8231].\n   If the PLSP-ID specified
      in the PCInitiate message is not delegated\n   to the PCE, the PCC MUST send
      a PCErr message with Error-type=19\n   (Invalid operation) and Error-value=1
      (LSP is not delegated)\n   [RFC8231].\n   If the PLSP-ID specified in the PCInitiate
      message was not created by\n   a PCE, the PCC MUST send a PCErr message with
      Error-type=19 (Invalid\n   operation) and Error-value=9 (LSP is not PCE initiated).\n
      \  Following the removal of the LSP, the PCC MUST send a PCRpt as\n   described
      in [RFC8231].  The SRP object in the PCRpt MUST include the\n   SRP-ID-number
      from the PCInitiate message that triggered the removal.\n   The R flag in the
      SRP object MUST be set.\n"
    title: 5.4.  LSP Deletion
  title: 5.  PCE-Initiated LSP Instantiation and Deletion
- contents:
  - "6.  LSP Delegation and Cleanup\n   The PCC MUST delegate PCE-initiated LSPs to
    the PCE upon\n   instantiation.  The PCC MUST set the delegation bit to 1 in the
    PCRpt\n   that includes the assigned PLSP-ID.\n   The PCC MUST NOT revoke the
    delegation for a PCE-initiated LSP on an\n   active PCEP session.  Therefore,
    all PCRpt messages from the PCC to\n   the PCE that owns the delegation MUST have
    the delegation bit set to\n   1.  If the PCE that owns the delegation receives
    a PCRpt message with\n   the delegation bit set to 0, then it MUST send a PCErr
    message with\n   Error-type=19 (Invalid Operation) and Error-value=7 (Delegation
    for\n   PCE-initiated LSP cannot be revoked).  The PCE MAY further react by\n
    \  closing the session.\n   Control over a PCE-initiated LSP can revert to the
    PCC in two ways.\n   A PCE MAY return a delegation to the PCC to allow for LSP
    transfer\n   between PCEs.  Alternatively, the PCC gains control of an LSP if
    the\n   PCEP session that it was delegated on fails and the Redelegation\n   Timeout
    Interval timer expires.  In both cases, the LSP becomes an\n   orphan until the
    expiration of the State Timeout Interval timer\n   [RFC8231].\n   The PCC MAY
    attempt to redelegate an orphaned LSP by following the\n   procedures of [RFC8231].
    \ Alternatively, if the orphaned LSP was\n   PCE-initiated, then a PCE MAY obtain
    control over it, as follows.\n   A PCE (either the original or one of its backups)
    sends a PCInitiate\n   message that includes just the SRP and LSP objects and
    carries the\n   PLSP-ID of the LSP it wants to take control of.  If the PCC receives\n
    \  a PCInitiate message with a PLSP-ID pointing to an orphaned\n   PCE-initiated
    LSP, then it MUST redelegate that LSP to the PCE.  Any\n   other non-zero PLSP-ID
    MUST result in the generation of a PCErr\n   message using the rules described
    in Section 5.4.  The State Timeout\n   Interval timer for the LSP is stopped upon
    the redelegation.  After\n   obtaining control of the LSP, the PCE may remove
    it using the\n   procedures described in this document.\n   The State Timeout
    Interval timer ensures that a PCE crash does not\n   result in automatic and immediate
    disruption for the services using\n   PCE-initiated LSPs.  PCE-initiated LSPs
    are not removed immediately\n   upon PCE failure.  Instead, they are cleaned up
    on the expiration of\n   this timer.  This allows for network cleanup without
    manual\n   intervention.  The PCC MUST support removal of PCE-initiated LSPs as\n
    \  one of the behaviors applied on expiration of the State Timeout\n   Interval
    timer.  The behavior MUST be picked based on local policy\n   and can result in
    either LSP removal or reverting to operator-defined\n   default parameters.\n"
  title: 6.  LSP Delegation and Cleanup
- contents:
  - "7.  LSP State Synchronization\n   LSP State Synchronization procedures are described
    in Section 5.6 of\n   [RFC8231].  During State Synchronization, a PCC reports
    the state of\n   its LSPs to the PCE using PCRpt messages, setting the SYNC flag
    in\n   the LSP object.  For PCE-initiated LSPs, the PCC MUST also set the\n   Create
    flag in the LSP object and MAY include the SPEAKER-ENTITY-ID\n   TLV identifying
    the PCE that requested the LSP creation.  At the end\n   of State Synchronization,
    the PCE SHOULD send a PCInitiate message to\n   initiate any missing LSPs and/or
    remove any LSPs that are not wanted.\n   Under some circumstances, depending on
    the deployment, it might be\n   preferable for a PCE not to send this PCInitiate
    immediately, or at\n   all.  For example, the PCC may be a slow device, or the
    operator\n   might prefer not to disrupt active flows.\n"
  title: 7.  LSP State Synchronization
- contents:
  - "8.  IANA Considerations\n   As detailed below, IANA has allocated code points
    for the protocol\n   elements defined in this document.\n"
  - contents:
    - "8.1.  PCEP Messages\n   IANA has registered the following message type within
      the \"PCEP\n   Messages\" subregistry of the PCEP Numbers registry.  (Note that
      the\n   early allocation for this message type was called \"Initiate\"; it has\n
      \  been changed as follows.)\n               Value     Meaning                  Reference\n
      \              -----     --------------------     -------------\n                 12
      \     LSP Initiate Request     RFC 8281\n"
    title: 8.1.  PCEP Messages
  - contents:
    - "8.2.  LSP Object\n   [RFC8231] defines the LSP object; per that RFC, IANA created
      a\n   registry to manage the value of the LSP object's Flag field.  IANA\n   has
      allocated a new bit in the \"LSP Object Flag Field\" subregistry,\n   as follows:\n
      \                   Bit     Description       Reference\n                    ---
      \    -----------       -------------\n                     4      Create            RFC
      8281\n"
    title: 8.2.  LSP Object
  - contents:
    - "8.3.  SRP object\n   IANA has created a new subregistry, named \"SRP Object
      Flag Field\",\n   within the \"Path Computation Element Protocol (PCEP) Numbers\"\n
      \  registry, to manage the Flag field of the SRP object.  New values are\n   to
      be assigned by Standards Action [RFC8126].  Each bit is tracked\n   with the
      following qualities: bit number (counting from bit 0 as the\n   most significant
      bit), description, and defining RFC.\n   The following values are defined in
      this document:\n                    Bit     Description       Reference\n                    ---
      \    -----------       -------------\n                     31     LSP-Remove
      \       RFC 8281\n"
    title: 8.3.  SRP object
  - contents:
    - "8.4.  STATEFUL-PCE-CAPABILITY TLV\n   [RFC8231] defines the STATEFUL-PCE-CAPABILITY
      TLV; per that RFC, IANA\n   created a registry to manage the value of the STATEFUL-PCE-CAPABILITY\n
      \  TLV's Flag field.  IANA has allocated a new bit in the STATEFUL-PCE-\n   CAPABILITY
      TLV Flag Field registry, as follows:\n            Bit  Description                      Reference\n
      \           ---  -------------------------------- -------------\n             29
      \ LSP-INSTANTIATION-CAPABILITY (I) RFC 8281\n"
    title: 8.4.  STATEFUL-PCE-CAPABILITY TLV
  - contents:
    - "8.5.  PCEP-Error Object\n   IANA has registered the following error types and
      error values within\n   the \"PCEP-ERROR Object Error Types and Values\" subregistry
      of the\n   PCEP Numbers registry.\n   Error-Type  Meaning\n   ----------  --------------\n
      \     10       Reception of an invalid object\n                Error-value=8:
      \ SYMBOLIC-PATH-NAME TLV missing\n      19       Invalid Operation\n                Error-value=6:
      \ PCE-initiated LSP limit reached\n                Error-value=7:  Delegation
      for PCE-initiated LSP cannot\n                                 be revoked\n
      \               Error-value=8:  Non-zero PLSP-ID in LSP Initiate Request\n                Error-value=9:
      \ LSP is not PCE initiated\n                Error-value=10: PCE-initiated operation-frequency
      limit\n                                 reached\n      23       Bad parameter
      value\n                Error-value=1:  SYMBOLIC-PATH-NAME in use\n                Error-value=2:
      \ Speaker identity included for an LSP\n                                 that
      is not PCE initiated\n      24       LSP instantiation error\n                Error-value=1:
      \ Unacceptable instantiation parameters\n                Error-value=2:  Internal
      error\n                Error-value=3:  Signaling error\n"
    title: 8.5.  PCEP-Error Object
  title: 8.  IANA Considerations
- contents:
  - "9.  Security Considerations\n   The security considerations described in [RFC8231]
    apply to the\n   extensions described in this document.  Additional considerations\n
    \  related to a malicious PCE are introduced.\n"
  - contents:
    - "9.1.  Malicious PCE\n   The LSP instantiation mechanism described in this document
      allows a\n   PCE to generate state on the PCC and throughout the network.  As
      a\n   result, it introduces a new attack vector: an attacker may flood the\n
      \  PCC with LSP instantiation requests and consume network and LSR\n   resources
      by either spoofing messages or compromising the PCE itself.\n   A PCC can protect
      itself from such an attack by imposing a limit on\n   either the number of LSPs
      or the percentage of resources that are\n   allocated to honor PCE-initiated
      LSP requests.  As soon as that limit\n   is reached, the PCC MUST send a PCErr
      message with Error-type=19\n   (Invalid Operation) and Error-value=6 (PCE-initiated
      LSP limit\n   reached) and is free to drop any incoming PCInitiate messages
      for LSP\n   initiation without additional processing.\n   Rapid flaps triggered
      by the PCE can also be an attack vector.  A PCC\n   can protect itself from
      such an attack by imposing a limit on the\n   number of flaps per unit of time
      that it allows a PCE to generate.\n   As soon as that limit is reached, a PCC
      MUST send a PCErr message\n   with Error-type=19 (Invalid Operation) and Error-value=10\n
      \  (PCE-initiated operation-frequency limit reached) and is free to\n   treat
      the session as having reached the limit in terms of resources\n   allocated
      to honor PCE-initiated LSP requests, either permanently or\n   for a locally-defined
      cool-off period.\n"
    title: 9.1.  Malicious PCE
  - contents:
    - "9.2.  Malicious PCC\n   The LSP instantiation mechanism described in this document
      requires\n   the PCE to keep state for LSPs that it instantiates and relies
      on the\n   PCC responding (with either a state report or an error message) to\n
      \  requests for LSP instantiation.  A malicious PCC or one that reached\n   the
      limit of the number of PCE-initiated LSPs can ignore PCE requests\n   and consume
      PCE resources.  A PCE can protect itself by imposing a\n   limit on the number
      of requests pending or by setting a timeout, and\n   it MAY take further action
      such as closing the session or removing\n   all the LSPs it initiated.\n"
    title: 9.2.  Malicious PCC
  title: 9.  Security Considerations
- contents:
  - '10.  References

    '
  - contents:
    - "10.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use
      in RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119,\n
      \             DOI 10.17487/RFC2119, March 1997,\n              <https://www.rfc-editor.org/info/rfc2119>.\n
      \  [RFC5440]  Vasseur, JP., Ed. and JL. Le Roux, Ed., \"Path Computation\n              Element
      (PCE) Communication Protocol (PCEP)\", RFC 5440,\n              DOI 10.17487/RFC5440,
      March 2009,\n              <https://www.rfc-editor.org/info/rfc5440>.\n   [RFC5511]
      \ Farrel, A., \"Routing Backus-Naur Form (RBNF): A Syntax\n              Used
      to Form Encoding Rules in Various Routing Protocol\n              Specifications\",
      RFC 5511, DOI 10.17487/RFC5511, April\n              2009, <https://www.rfc-editor.org/info/rfc5511>.\n
      \  [RFC8174]  Leiba, B., \"Ambiguity of Uppercase vs Lowercase in RFC\n              2119
      Key Words\", BCP 14, RFC 8174, DOI 10.17487/RFC8174,\n              May 2017,
      <https://www.rfc-editor.org/info/rfc8174>.\n   [RFC8231]  Crabbe, E., Minei,
      I., Medved, J., and R. Varga, \"Path\n              Computation Element Communication
      Protocol (PCEP)\n              Extensions for Stateful PCE\", RFC 8231,\n              DOI
      10.17487/RFC8231, September 2017,\n              <https://www.rfc-editor.org/info/rfc8231>.\n
      \  [RFC8232]  Crabbe, E., Minei, I., Medved, J., Varga, R., Zhang, X.,\n              and
      D. Dhody, \"Optimizations of Label Switched Path State\n              Synchronization
      Procedures for a Stateful PCE\", RFC 8232,\n              DOI 10.17487/RFC8232,
      September 2017,\n              <https://www.rfc-editor.org/info/rfc8232>.\n"
    title: 10.1.  Normative References
  - contents:
    - "10.2.  Informative References\n   [RFC4657]  Ash, J., Ed. and J. Le Roux, Ed.,
      \"Path Computation\n              Element (PCE) Communication Protocol Generic\n
      \             Requirements\", RFC 4657, DOI 10.17487/RFC4657, September\n              2006,
      <https://www.rfc-editor.org/info/rfc4657>.\n   [RFC8051]  Zhang, X., Ed. and
      I. Minei, Ed., \"Applicability of a\n              Stateful Path Computation
      Element (PCE)\", RFC 8051,\n              DOI 10.17487/RFC8051, January 2017,\n
      \             <https://www.rfc-editor.org/info/rfc8051>.\n   [RFC8126]  Cotton,
      M., Leiba, B., and T. Narten, \"Guidelines for\n              Writing an IANA
      Considerations Section in RFCs\", BCP 26,\n              RFC 8126, DOI 10.17487/RFC8126,
      June 2017,\n              <https://www.rfc-editor.org/info/rfc8126>.\n"
    title: 10.2.  Informative References
  title: 10.  References
- contents:
  - "Acknowledgments\n   We would like to thank Jan Medved, Ambrose Kwong, Ramon Casellas,\n
    \  Cyril Margaria, Dhruv Dhody, Raveendra Trovi, and Jon Hardwick for\n   their
    contributions to this document.\n"
  title: Acknowledgments
- contents:
  - "Authors' Addresses\n   Edward Crabbe\n   Individual Contributor\n   Email: edward.crabbe@gmail.com\n
    \  Ina Minei\n   Google, Inc.\n   1600 Amphitheatre Parkway\n   Mountain View,
    CA  94043\n   United States of America\n   Email: inaminei@google.com\n   Siva
    Sivabalan\n   Cisco Systems, Inc.\n   170 West Tasman Dr.\n   San Jose, CA  95134\n
    \  United States of America\n   Email: msiva@cisco.com\n   Robert Varga\n   Pantheon
    Technologies SRO\n   Mlynske Nivy 56\n   Bratislava  821 05\n   Slovakia\n   Email:
    robert.varga@pantheon.tech\n"
  title: Authors' Addresses
