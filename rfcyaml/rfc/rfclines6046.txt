Abstract The Incident Object Description Exchange Format (IODEF) defines a common XML format for document exchange, and Real time Inter network Defense (RID) defines extensions to IODEF intended for the cooperative handling of security incidents within consortia of network operators and enterprises.
This document specifies a transport protocol for RID based upon the passing of RID messages over HTTP/TLS (Transport Layer Security).
The Incident Object Description Exchange Format (IODEF)
[RFC5070] describes an XML document format for the purpose of exchanging data between Computer Security Incident Response Teams (CSIRTs) or those responsible for security incident handling for network providers (NPs).
The defined document format provides an easy way for CSIRTs to exchange data in a way that can be easily parsed.
IODEF defines a message format, not a transport protocol, as the sharing of messages is assumed to be out of scope in order to allow CSIRTs to exchange and store messages in a way most suited to their established incident handling processes.
However, Real time Inter network Defense (RID) [RFC6045] does require a specification of a transport protocol to ensure interoperability among members in a RID consortium.
This document specifies the transport of RID messages within HTTP [RFC2616] Request and Response messages transported over Transport Layer Security (TLS) [RFC5246] (herein, HTTP/TLS).
Note that any IODEF message may also be transported using this mechanism, by sending it as a RID Report message.
The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in [RFC2119].
Transmission of RID Messages over HTTP/TLS
This section specifies the details of the transport of RID messages over HTTP/TLS.
In this arrangement, each RID server is both an HTTP/ TLS server and an HTTP/TLS client.
When a RID message must be sent, the sending RID system connects to the receiving RID system and sends the message, optionally receiving a message in reply.
All RID systems MUST be prepared to accept HTTP/TLS connections from any RID peer with which it communicates, in order to support callback for delayed replies (see below).
[RFC3205] contains a number of important considerations when using HTTP for application protocols.
These include the size of the payload for the application, whether the application will use a web browser, whether the protocol should be defined on a port other than 80, and if the security provided through HTTP/TLS suits the needs of the new application.
It is acknowledged within the scope of these concerns that HTTP/TLS is not ideally suited for RID transport, as the former is a client  server protocol and the latter a message exchange protocol; however, the ease of implementation of RID systems over HTTP/TLS outweighs these concerns.
Consistent with BCP 56, RID systems will listen for TCP connections on port 4590.
Every RID system participating in a consortium MUST listen for HTTP/TLS connections on the assigned port.
Table 1 lists the allowable RID message types in an HTTP Response for a given RID message type in the Request.
A RID system MUST be prepared to handle an HTTP Response of the given type(s)
when sending the corresponding HTTP Request.
A RID system MUST NOT send an HTTP Response containing any RID message other than the one corresponding to the one sent in the HTTP Request.
As the queries and replies in a RID message exchange may be significantly separated in time, the receiving RID system MAY return 202 Accepted, terminate the connection, and at a later time connect to the requesting RID system and send the RID reply in an HTTP Request.
This mechanism is referred to in this document as "RID callback".
When performing RID callback, a responding system MUST connect to the network  and transport layer addresses from which the original request was sent; there is no mechanism in RID for redirected callback.
While a RID system SHOULD return the reply in an HTTP Response if it is available immediately or within a generally accepted HTTP client timeout (about thirty seconds), this is not mandatory, and as such RID systems MUST be prepared for a query to be met with a 202 Accepted, an empty Response body, a connection termination, and a callback.
Note that all RID messages require a response from the receiving RID system, so
a sending RID system can expect either an immediate response or a callback.
RID systems accepting a callback message in an HTTP Request MUST return 202 Accepted.
Table 1 lists the allowable request/response pairs for RID.
For security purposes, RID systems SHOULD NOT return 3xx Redirection response codes, and MUST NOT follow any 3xx Redirection.
When a RID system's address changes, contact point information within the consortium must be updated out of band.
If a RID system receives an improper RID message in an HTTP Request, it MUST return an appropriate 4xx Client Error result code to the requesting RID system.
If a RID system cannot process a RID message received in an HTTP Request due to an error on its own side, it MUST return an appropriate 5xx Server Error result code to the requesting RID system.
Note that HTTP provides no mechanism for signaling to a server that a response body is not a valid RID message.
If a RID system receives an improper RID message in an HTTP Response, or cannot process a RID message received in an HTTP Response due to an error on its own side, it MUST log the error and present it to the RID system administrator for handling; the error logging format is an implementation detail and is considered out of scope for this specification.
RID systems MUST support and SHOULD use HTTP/1.1 persistent connections as described in [RFC2616].
RID systems MUST support chunked transfer encoding on the HTTP server side to allow the implementation of clients that do not need to precalculate message sizes before constructing HTTP headers.
RID systems MUST use TLS for confidentiality, identification, and strong mutual authentication as in [RFC2818]; see Section 4 below for details.
All security considerations of related documents MUST be considered, especially the Incident Object Description Exchange Format (IODEF)
The transport described herein is built on the foundation of these documents; the security considerations contained therein are incorporated by reference.
For transport confidentiality, identification, and authentication, TLS with mutual authentication MUST be used to secure the HTTP connection as in [RFC2818].
The session MUST use non NULL ciphersuites for authentication, integrity, and confidentiality; sessions MAY be renegotiated within these constraints.
Although TLS implementations typically support the older Secure Socket Layer (SSL) protocol, a RID peer MUST NOT request, offer, or use SSL 2.0, due to known security vulnerabilities in this protocol; see Appendix E of [RFC5246] for more.
Each RID consortium SHOULD use a trusted public key infrastructure (PKI) to manage identities for RID systems participating in TLS connections.
At minimum, each RID system MUST trust a set of X.509 Issuer identities ("Certificate Authorities")
[RFC5280] to directly authenticate RID system peers with which it is willing to exchange information, and/or a specific white list of X.509 Subject identities of RID system peers.
RID systems MUST provide for the verification of the identity of a RID system peer presenting a valid and trusted certificate, by verifying the fully qualified domain name or other network layer identifier against that stored in the certificate, if available.
More information on best practices in peer identity verification is available in [TLS SERVER ID].
IANA Considerations Consistent with BCP 56
[RFC3205], since RID over HTTP/TLS is a substantially new service, and should be controlled at the consortium member network's border differently
than HTTP/TLS, it requires a new port number.
IANA has assigned port 4590
/tcp to RID with the service name RID over HTTP/TLS.
