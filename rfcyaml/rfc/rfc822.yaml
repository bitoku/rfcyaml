- title: __initial_text__
  contents:
  - "     RFC #  822\n     Obsoletes:  RFC #733  (NIC #41952)\n                  \
    \      STANDARD FOR THE FORMAT OF\n                        ARPA INTERNET TEXT\
    \ MESSAGES\n                              August 13, 1982\n                  \
    \           David H. Crocker\n                      Dept. of Electrical Engineering\n\
    \                 University of Delaware, Newark, DE  19711\n                \
    \      Network:  DCrocker @ UDel-Relay\n     Standard for ARPA Internet Text Messages\n\
    \                             TABLE OF CONTENTS\n     PREFACE ....................................................\
    \   ii\n     1.  INTRODUCTION ...........................................    1\n\
    \         1.1.  Scope ............................................    1\n    \
    \     1.2.  Communication Framework ..........................    2\n     2. \
    \ NOTATIONAL CONVENTIONS .................................    3\n     3.  LEXICAL\
    \ ANALYSIS OF MESSAGES ...........................    5\n         3.1.  General\
    \ Description ..............................    5\n         3.2.  Header Field\
    \ Definitions .........................    9\n         3.3.  Lexical Tokens ...................................\
    \   10\n         3.4.  Clarifications ...................................   11\n\
    \     4.  MESSAGE SPECIFICATION ..................................   17\n    \
    \     4.1.  Syntax ...........................................   17\n        \
    \ 4.2.  Forwarding .......................................   19\n         4.3.\
    \  Trace Fields .....................................   20\n         4.4.  Originator\
    \ Fields ................................   21\n         4.5.  Receiver Fields\
    \ ..................................   23\n         4.6.  Reference Fields .................................\
    \   23\n         4.7.  Other Fields .....................................   24\n\
    \     5.  DATE AND TIME SPECIFICATION ............................   26\n    \
    \     5.1.  Syntax ...........................................   26\n        \
    \ 5.2.  Semantics ........................................   26\n     6.  ADDRESS\
    \ SPECIFICATION ..................................   27\n         6.1.  Syntax\
    \ ...........................................   27\n         6.2.  Semantics ........................................\
    \   27\n         6.3.  Reserved Address .................................   33\n\
    \     7.  BIBLIOGRAPHY ...........................................   34\n    \
    \                         APPENDIX\n     A.  EXAMPLES ...............................................\
    \   36\n     B.  SIMPLE FIELD PARSING ...................................   40\n\
    \     C.  DIFFERENCES FROM RFC #733 ..............................   41\n    \
    \ D.  ALPHABETICAL LISTING OF SYNTAX RULES ...................   44\n     Standard\
    \ for ARPA Internet Text Messages\n                                  PREFACE\n\
    \          By 1977, the Arpanet employed several informal standards for\n    \
    \ the  text  messages (mail) sent among its host computers.  It was\n     felt\
    \ necessary to codify these practices and  provide  for  those\n     features\
    \  that  seemed  imminent.   The result of that effort was\n     Request for Comments\
    \ (RFC) #733, \"Standard for the Format of ARPA\n     Network Text Message\",\
    \ by Crocker, Vittal, Pogran, and Henderson.\n     The specification attempted\
    \ to avoid major  changes  in  existing\n     software, while permitting several\
    \ new features.\n          This document revises the specifications  in  RFC \
    \ #733,  in\n     order  to  serve  the  needs  of the larger and more complex\
    \ ARPA\n     Internet.  Some of RFC #733's features failed  to  gain  adequate\n\
    \     acceptance.   In  order to simplify the standard and the software\n    \
    \ that follows it, these features have been removed.   A  different\n     addressing\
    \  scheme  is  used, to handle the case of inter-network\n     mail; and the concept\
    \ of re-transmission has been introduced.\n          This specification is intended\
    \ for use in the ARPA Internet.\n     However, an attempt has been made to free\
    \ it of any dependence on\n     that environment, so that it can be applied to\
    \ other network text\n     message systems.\n          The specification of RFC\
    \ #733 took place over the course  of\n     one  year, using the ARPANET mail\
    \ environment, itself, to provide\n     an on-going forum for discussing the capabilities\
    \ to be included.\n     More  than  twenty individuals, from across the country,\
    \ partici-\n     pated in  the  original  discussion.   The  development  of \
    \ this\n     revised specification has, similarly, utilized network mail-based\n\
    \     group discussion.  Both specification efforts  greatly  benefited\n    \
    \ from the comments and ideas of the participants.\n          The syntax of the\
    \ standard,  in  RFC  #733,  was  originally\n     specified  in  the  Backus-Naur\
    \ Form (BNF) meta-language.  Ken L.\n     Harrenstien, of SRI International, was\
    \ responsible for  re-coding\n     the  BNF  into  an  augmented  BNF  that makes\
    \ the representation\n     smaller and easier to understand.\n     Standard for\
    \ ARPA Internet Text Messages\n     1.  INTRODUCTION\n     1.1.  SCOPE\n     \
    \     This standard specifies a syntax for text messages that  are\n     sent\
    \  among  computer  users, within the framework of \"electronic\n     mail\".\
    \  The standard supersedes  the  one  specified  in  ARPANET\n     Request  for\
    \ Comments #733, \"Standard for the Format of ARPA Net-\n     work Text Messages\"\
    .\n          In this context, messages are viewed as having  an  envelope\n  \
    \   and  contents.   The  envelope  contains  whatever information is\n     needed\
    \ to accomplish transmission  and  delivery.   The  contents\n     compose  the\
    \ object to be delivered to the recipient.  This stan-\n     dard applies only\
    \ to the format and some of the semantics of mes-\n     sage  contents.   It contains\
    \ no specification of the information\n     in the envelope.\n          However,\
    \ some message systems may use information  from  the\n     contents  to create\
    \ the envelope.  It is intended that this stan-\n     dard facilitate the acquisition\
    \ of such information by programs.\n          Some message systems may  store\
    \  messages  in  formats  that\n     differ  from the one specified in this standard.\
    \  This specifica-\n     tion is intended strictly as a definition of what message\
    \ content\n     format is to be passed BETWEEN hosts.\n     Note:  This standard\
    \ is NOT intended to dictate the internal for-\n            mats  used  by sites,\
    \ the specific message system features\n            that they are expected to\
    \ support, or any of  the  charac-\n            teristics  of  user interface\
    \ programs that create or read\n            messages.\n          A distinction\
    \ should be made between what the  specification\n     REQUIRES  and  what  it\
    \ ALLOWS.  Messages can be made complex and\n     rich with formally-structured\
    \ components of information or can be\n     kept small and simple, with a minimum\
    \ of such information.  Also,\n     the standard simplifies the interpretation\
    \  of  differing  visual\n     formats  in  messages;  only  the  visual  aspect\
    \ of a message is\n     affected and not the interpretation  of  information \
    \ within  it.\n     Implementors may choose to retain such visual distinctions.\n\
    \          The formal definition is divided into four levels.  The bot-\n    \
    \ tom level describes the meta-notation used in this document.  The\n     second\
    \ level describes basic lexical analyzers that  feed  tokens\n     to  higher-level\
    \  parsers.   Next is an overall specification for\n     messages; it permits\
    \ distinguishing individual fields.   Finally,\n     there is definition of the\
    \ contents of several structured fields.\n     Standard for ARPA Internet Text\
    \ Messages\n     1.2.  COMMUNICATION FRAMEWORK\n          Messages consist of\
    \ lines of text.   No  special  provisions\n     are  made for encoding drawings,\
    \ facsimile, speech, or structured\n     text.  No significant consideration has\
    \ been given  to  questions\n     of  data  compression  or to transmission and\
    \ storage efficiency,\n     and the standard tends to be free with the number\
    \  of  bits  con-\n     sumed.   For  example,  field  names  are specified as\
    \ free text,\n     rather than special terse codes.\n          A general \"memo\"\
    \ framework is used.  That is, a message con-\n     sists of some information\
    \ in a rigid format, followed by the main\n     part of the message, with a format\
    \ that is not specified in  this\n     document.   The  syntax of several fields\
    \ of the rigidly-formated\n     (\"headers\") section is defined in  this  specification;\
    \  some  of\n     these fields must be included in all messages.\n          The\
    \ syntax  that  distinguishes  between  header  fields  is\n     specified  separately\
    \  from  the  internal  syntax for particular\n     fields.  This separation is\
    \ intended to allow simple  parsers  to\n     operate on the general structure\
    \ of messages, without concern for\n     the detailed structure of individual\
    \ header fields.   Appendix  B\n     is provided to facilitate construction of\
    \ these parsers.\n          In addition to the fields specified in this document,\
    \ it  is\n     expected  that  other fields will gain common use.  As necessary,\n\
    \     the specifications for these \"extension-fields\" will be published\n  \
    \   through  the same mechanism used to publish this document.  Users\n     may\
    \ also  wish  to  extend  the  set  of  fields  that  they  use\n     privately.\
    \  Such \"user-defined fields\" are permitted.\n          The framework severely\
    \ constrains document tone and  appear-\n     ance and is primarily useful for\
    \ most intra-organization communi-\n     cations and  well-structured   inter-organization\
    \  communication.\n     It  also  can  be used for some types of inter-process\
    \ communica-\n     tion, such as simple file transfer and remote job entry.  A\
    \  more\n     robust  framework might allow for multi-font, multi-color, multi-\n\
    \     dimension encoding of information.  A  less  robust  one,  as  is\n    \
    \ present  in  most  single-machine  message  systems,  would  more\n     severely\
    \ constrain the ability to add fields and the decision  to\n     include specific\
    \ fields.  In contrast with paper-based communica-\n     tion, it is interesting\
    \ to note that the RECEIVER  of  a  message\n     can   exercise  an  extraordinary\
    \  amount  of  control  over  the\n     message's appearance.  The amount of actual\
    \ control available  to\n     message  receivers  is  contingent upon the capabilities\
    \ of their\n     individual message systems.\n     Standard for ARPA Internet\
    \ Text Messages\n     2.  NOTATIONAL CONVENTIONS\n          This specification\
    \ uses an augmented Backus-Naur Form  (BNF)\n     notation.  The differences from\
    \ standard BNF involve naming rules\n     and indicating repetition and \"local\"\
    \ alternatives.\n     2.1.  RULE NAMING\n          Angle brackets (\"<\", \">\"\
    ) are not  used,  in  general.   The\n     name  of  a rule is simply the name\
    \ itself, rather than \"<name>\".\n     Quotation-marks enclose literal text (which\
    \ may be  upper  and/or\n     lower  case).   Certain  basic  rules  are  in uppercase,\
    \ such as\n     SPACE, TAB, CRLF, DIGIT, ALPHA, etc.  Angle brackets are used\
    \  in\n     rule  definitions,  and  in  the rest of this  document, whenever\n\
    \     their presence will facilitate discerning the use of rule names.\n     2.2.\
    \  RULE1 / RULE2:  ALTERNATIVES\n          Elements separated by slash (\"/\"\
    ) are alternatives.   There-\n     fore \"foo / bar\" will accept foo or bar.\n\
    \     2.3.  (RULE1 RULE2):  LOCAL ALTERNATIVES\n          Elements enclosed in\
    \ parentheses are  treated  as  a  single\n     element.   Thus,  \"(elem  (foo\
    \  /  bar)  elem)\"  allows the token\n     sequences \"elem foo elem\" and \"\
    elem bar elem\".\n     2.4.  *RULE:  REPETITION\n          The character \"*\"\
    \ preceding an element indicates repetition.\n     The full form is:\n       \
    \                       <l>*<m>element\n     indicating at least <l> and at most\
    \ <m> occurrences  of  element.\n     Default values are 0 and infinity so that\
    \ \"*(element)\" allows any\n     number, including zero; \"1*element\" requires\
    \ at  least  one;  and\n     \"1*2element\" allows one or two.\n     2.5.  [RULE]:\
    \  OPTIONAL\n          Square brackets enclose optional elements; \"[foo  bar]\"\
    \   is\n     equivalent to \"*1(foo bar)\".\n     2.6.  NRULE:  SPECIFIC REPETITION\n\
    \          \"<n>(element)\" is equivalent to \"<n>*<n>(element)\"; that is,\n\
    \     exactly  <n>  occurrences  of (element). Thus 2DIGIT is a 2-digit\n    \
    \ number, and 3ALPHA is a string of three alphabetic characters.\n     Standard\
    \ for ARPA Internet Text Messages\n     2.7.  #RULE:  LISTS\n          A construct\
    \ \"#\" is defined, similar to \"*\", as follows:\n                          \
    \    <l>#<m>element\n     indicating at least <l> and at most <m> elements, each\
    \  separated\n     by  one  or more commas (\",\"). This makes the usual form\
    \ of lists\n     very easy; a rule such as '(element *(\",\" element))' can be\
    \ shown\n     as  \"1#element\".   Wherever this construct is used, null elements\n\
    \     are allowed, but do not  contribute  to  the  count  of  elements\n    \
    \ present.   That  is,  \"(element),,(element)\"  is  permitted,  but\n     counts\
    \ as only two elements.  Therefore, where at least one  ele-\n     ment  is required,\
    \ at least one non-null element must be present.\n     Default values are 0 and\
    \ infinity so that \"#(element)\" allows any\n     number,  including  zero; \
    \ \"1#element\" requires at least one; and\n     \"1#2element\" allows one or\
    \ two.\n     2.8.  ; COMMENTS\n          A semi-colon, set off some distance to\
    \  the  right  of  rule\n     text,  starts  a comment that continues to the end\
    \ of line.  This\n     is a simple way of including useful notes in  parallel\
    \  with  the\n     specifications.\n     Standard for ARPA Internet Text Messages\n\
    \     3.  LEXICAL ANALYSIS OF MESSAGES\n     3.1.  GENERAL DESCRIPTION\n     \
    \     A message consists of header fields and, optionally, a body.\n     The \
    \ body  is simply a sequence of lines containing ASCII charac-\n     ters.  It\
    \ is separated from the headers by a null line  (i.e.,  a\n     line with nothing\
    \ preceding the CRLF).\n     3.1.1.  LONG HEADER FIELDS\n        Each header field\
    \ can be viewed as a single, logical  line  of\n        ASCII  characters,  comprising\
    \  a field-name and a field-body.\n        For convenience, the field-body  portion\
    \  of  this  conceptual\n        entity  can be split into a multiple-line representation;\
    \ this\n        is called \"folding\".  The general rule is that wherever  there\n\
    \        may  be  linear-white-space  (NOT  simply  LWSP-chars), a CRLF\n    \
    \    immediately followed by AT LEAST one LWSP-char may instead  be\n        inserted.\
    \  Thus, the single line\n            To:  \"Joe & J. Harvey\" <ddd @Org>, JJV\
    \ @ BBN\n        can be represented as:\n            To:  \"Joe & J. Harvey\"\
    \ <ddd @ Org>,\n                    JJV@BBN\n        and\n            To:  \"\
    Joe & J. Harvey\"\n                            <ddd@ Org>, JJV\n             @BBN\n\
    \        and\n            To:  \"Joe &\n             J. Harvey\" <ddd @ Org>,\
    \ JJV @ BBN\n             The process of moving  from  this  folded   multiple-line\n\
    \        representation  of a header field to its single line represen-\n    \
    \    tation is called \"unfolding\".  Unfolding  is  accomplished  by\n      \
    \  regarding   CRLF   immediately  followed  by  a  LWSP-char  as\n        equivalent\
    \ to the LWSP-char.\n        Note:  While the standard  permits  folding  wherever\
    \  linear-\n               white-space is permitted, it is recommended that struc-\n\
    \               tured fields, such as those containing addresses, limit\n    \
    \           folding  to higher-level syntactic breaks.  For address\n        \
    \       fields, it  is  recommended  that  such  folding  occur\n     Standard\
    \ for ARPA Internet Text Messages\n               between addresses, after the\
    \ separating comma.\n     3.1.2.  STRUCTURE OF HEADER FIELDS\n        Once a field\
    \ has been unfolded, it may be viewed as being com-\n        posed of a field-name\
    \ followed by a colon (\":\"), followed by a\n        field-body, and  terminated\
    \  by  a  carriage-return/line-feed.\n        The  field-name must be composed\
    \ of printable ASCII characters\n        (i.e., characters that  have  values\
    \  between  33.  and  126.,\n        decimal, except colon).  The field-body may\
    \ be composed of any\n        ASCII characters, except CR or LF.  (While CR and/or\
    \ LF may be\n        present  in the actual text, they are removed by the action\
    \ of\n        unfolding the field.)\n        Certain field-bodies of headers may\
    \ be  interpreted  according\n        to  an  internal  syntax  that some systems\
    \ may wish to parse.\n        These  fields  are  called  \"structured   fields\"\
    .    Examples\n        include  fields containing dates and addresses.  Other\
    \ fields,\n        such as \"Subject\"  and  \"Comments\",  are  regarded  simply\
    \  as\n        strings of text.\n        Note:  Any field which has a field-body\
    \  that  is  defined  as\n               other  than  simply <text> is to be treated\
    \ as a struc-\n               tured field.\n               Field-names, unstructured\
    \ field bodies  and  structured\n               field bodies each are scanned\
    \ by their own, independent\n               \"lexical\" analyzers.\n     3.1.3.\
    \  UNSTRUCTURED FIELD BODIES\n        For some fields, such as \"Subject\" and\
    \ \"Comments\",  no  struc-\n        turing  is assumed, and they are treated\
    \ simply as <text>s, as\n        in the message body.  Rules of folding apply\
    \ to these  fields,\n        so  that  such  field  bodies  which occupy several\
    \ lines must\n        therefore have the second and successive lines indented\
    \ by  at\n        least one LWSP-char.\n     3.1.4.  STRUCTURED FIELD BODIES\n\
    \        To aid in the creation and reading of structured  fields,  the\n    \
    \    free  insertion   of linear-white-space (which permits folding\n        by\
    \ inclusion of CRLFs)  is  allowed  between  lexical  tokens.\n        Rather\
    \  than  obscuring  the  syntax  specifications for these\n        structured\
    \ fields with explicit syntax for this  linear-white-\n        space, the existence\
    \ of another \"lexical\" analyzer is assumed.\n        This analyzer does not\
    \ apply  for  unstructured  field  bodies\n        that  are  simply  strings\
    \  of  text, as described above.  The\n        analyzer provides  an  interpretation\
    \  of  the  unfolded  text\n     Standard for ARPA Internet Text Messages\n  \
    \      composing  the body of the field as a sequence of lexical sym-\n      \
    \  bols.\n        These symbols are:\n                     -  individual special\
    \ characters\n                     -  quoted-strings\n                     - \
    \ domain-literals\n                     -  comments\n                     -  atoms\n\
    \        The first four of these symbols  are  self-delimiting.   Atoms\n    \
    \    are not; they are delimited by the self-delimiting symbols and\n        by\
    \  linear-white-space.   For  the  purposes  of  regenerating\n        sequences\
    \  of  atoms  and quoted-strings, exactly one SPACE is\n        assumed to exist,\
    \ and should be used, between them.  (Also, in\n        the \"Clarifications\"\
    \ section on \"White Space\", below, note the\n        rules about treatment of\
    \ multiple contiguous LWSP-chars.)\n        So, for example, the folded body of\
    \ an address field\n            \":sysmail\"@  Some-Group. Some-Org,\n       \
    \     Muhammed.(I am  the greatest) Ali @(the)Vegas.WBA\n     Standard for ARPA\
    \ Internet Text Messages\n        is analyzed into the following lexical symbols\
    \ and types:\n                    :sysmail              quoted string\n      \
    \              @                     special\n                    Some-Group \
    \           atom\n                    .                     special\n        \
    \            Some-Org              atom\n                    ,               \
    \      special\n                    Muhammed              atom\n             \
    \       .                     special\n                    (I am  the greatest)\
    \  comment\n                    Ali                   atom\n                 \
    \   @                     atom\n                    (the)                 comment\n\
    \                    Vegas                 atom\n                    .       \
    \              special\n                    WBA                   atom\n     \
    \   The canonical representations for the data in these  addresses\n        are\
    \ the following strings:\n                        \":sysmail\"@Some-Group.Some-Org\n\
    \        and\n                            Muhammed.Ali@Vegas.WBA\n        Note:\
    \  For purposes of display, and when passing  such  struc-\n               tured\
    \ information to other systems, such as mail proto-\n               col  services,\
    \  there  must  be  NO  linear-white-space\n               between  <word>s  that\
    \ are separated by period (\".\") or\n               at-sign (\"@\") and exactly\
    \ one SPACE between  all  other\n               <word>s.  Also, headers should\
    \ be in a folded form.\n     Standard for ARPA Internet Text Messages\n     3.2.\
    \  HEADER FIELD DEFINITIONS\n          These rules show a field meta-syntax, without\
    \ regard for the\n     particular  type  or internal syntax.  Their purpose is\
    \ to permit\n     detection of fields; also, they present to  higher-level  parsers\n\
    \     an image of each field as fitting on one line.\n     field       =  field-name\
    \ \":\" [ field-body ] CRLF\n     field-name  =  1*<any CHAR, excluding CTLs,\
    \ SPACE, and \":\">\n     field-body  =  field-body-contents\n               \
    \     [CRLF LWSP-char field-body]\n     field-body-contents =\n              \
    \     <the ASCII characters making up the field-body, as\n                   \
    \ defined in the following sections, and consisting\n                    of combinations\
    \ of atom, quoted-string, and\n                    specials tokens, or else consisting\
    \ of texts>\n     Standard for ARPA Internet Text Messages\n     3.3.  LEXICAL\
    \ TOKENS\n          The following rules are used to define an underlying lexical\n\
    \     analyzer,  which  feeds  tokens to higher level parsers.  See the\n    \
    \ ANSI references, in the Bibliography.\n                                    \
    \             ; (  Octal, Decimal.)\n     CHAR        =  <any ASCII character>\
    \        ; (  0-177,  0.-127.)\n     ALPHA       =  <any ASCII alphabetic character>\n\
    \                                                 ; (101-132, 65.- 90.)\n    \
    \                                             ; (141-172, 97.-122.)\n     DIGIT\
    \       =  <any ASCII decimal digit>    ; ( 60- 71, 48.- 57.)\n     CTL      \
    \   =  <any ASCII control           ; (  0- 37,  0.- 31.)\n                  \
    \   character and DEL>          ; (    177,     127.)\n     CR          =  <ASCII\
    \ CR, carriage return>  ; (     15,      13.)\n     LF          =  <ASCII LF,\
    \ linefeed>         ; (     12,      10.)\n     SPACE       =  <ASCII SP, space>\
    \            ; (     40,      32.)\n     HTAB        =  <ASCII HT, horizontal-tab>\
    \   ; (     11,       9.)\n     <\">         =  <ASCII quote mark>           ;\
    \ (     42,      34.)\n     CRLF        =  CR LF\n     LWSP-char   =  SPACE /\
    \ HTAB                 ; semantics = SPACE\n     linear-white-space =  1*([CRLF]\
    \ LWSP-char)  ; semantics = SPACE\n                                          \
    \       ; CRLF => folding\n     specials    =  \"(\" / \")\" / \"<\" / \">\" /\
    \ \"@\"  ; Must be in quoted-\n                 /  \",\" / \";\" / \":\" / \"\\\
    \" / <\">  ;  string, to use\n                 /  \".\" / \"[\" / \"]\"      \
    \        ;  within a word.\n     delimiters  =  specials / linear-white-space\
    \ / comment\n     text        =  <any CHAR, including bare    ; => atoms, specials,\n\
    \                     CR & bare LF, but NOT       ;  comments and\n          \
    \           including CRLF>             ;  quoted-strings are\n              \
    \                                   ;  NOT recognized.\n     atom        =  1*<any\
    \ CHAR except specials, SPACE and CTLs>\n     quoted-string = <\"> *(qtext/quoted-pair)\
    \ <\">; Regular qtext or\n                                                 ; \
    \  quoted chars.\n     qtext       =  <any CHAR excepting <\">,     ; => may be\
    \ folded\n                     \"\\\" & CR, and including\n                  \
    \   linear-white-space>\n     domain-literal =  \"[\" *(dtext / quoted-pair) \"\
    ]\"\n     Standard for ARPA Internet Text Messages\n     dtext       =  <any CHAR\
    \ excluding \"[\",     ; => may be folded\n                     \"]\", \"\\\"\
    \ & CR, & including\n                     linear-white-space>\n     comment  \
    \   =  \"(\" *(ctext / quoted-pair / comment) \")\"\n     ctext       =  <any\
    \ CHAR excluding \"(\",     ; => may be folded\n                     \")\", \"\
    \\\" & CR, & including\n                     linear-white-space>\n     quoted-pair\
    \ =  \"\\\" CHAR                     ; may quote any char\n     phrase      =\
    \  1*word                       ; Sequence of words\n     word        =  atom\
    \ / quoted-string\n     3.4.  CLARIFICATIONS\n     3.4.1.  QUOTING\n        Some\
    \ characters are reserved for special interpretation,  such\n        as  delimiting\
    \ lexical tokens.  To permit use of these charac-\n        ters as uninterpreted\
    \ data, a quoting mechanism  is  provided.\n        To quote a character, precede\
    \ it with a backslash (\"\\\").\n        This mechanism is not fully general.\
    \  Characters may be quoted\n        only  within  a subset of the lexical constructs.\
    \  In particu-\n        lar, quoting is limited to use within:\n             \
    \                -  quoted-string\n                             -  domain-literal\n\
    \                             -  comment\n        Within these constructs, quoting\
    \ is REQUIRED for  CR  and  \"\\\"\n        and for the character(s) that delimit\
    \ the token (e.g., \"(\" and\n        \")\" for a comment).  However, quoting\
    \  is  PERMITTED  for  any\n        character.\n        Note:  In particular,\
    \ quoting is NOT permitted  within  atoms.\n               For  example  when\
    \  the local-part of an addr-spec must\n               contain a special character,\
    \ a quoted  string  must  be\n               used.  Therefore, a specification\
    \ such as:\n                            Full\\ Name@Domain\n               is\
    \ not legal and must be specified as:\n                            \"Full Name\"\
    @Domain\n     Standard for ARPA Internet Text Messages\n     3.4.2.  WHITE SPACE\n\
    \        Note:  In structured field bodies, multiple linear space ASCII\n    \
    \           characters  (namely  HTABs  and  SPACEs) are treated as\n        \
    \       single spaces and may freely surround any  symbol.   In\n            \
    \   all header fields, the only place in which at least one\n               LWSP-char\
    \ is REQUIRED is at the beginning of  continua-\n               tion lines in\
    \ a folded field.\n        When passing text to processes  that  do  not  interpret\
    \  text\n        according to this standard (e.g., mail protocol servers), then\n\
    \        NO linear-white-space characters should occur between a period\n    \
    \    (\".\") or at-sign (\"@\") and a <word>.  Exactly ONE SPACE should\n    \
    \    be used in place of arbitrary linear-white-space  and  comment\n        sequences.\n\
    \        Note:  Within systems conforming to this standard, wherever  a\n    \
    \           member of the list of delimiters is allowed, LWSP-chars\n        \
    \       may also occur before and/or after it.\n        Writers of  mail-sending\
    \  (i.e.,  header-generating)  programs\n        should realize that there is\
    \ no network-wide definition of the\n        effect of ASCII HT (horizontal-tab)\
    \ characters on the  appear-\n        ance  of  text  at another network host;\
    \ therefore, the use of\n        tabs in message headers, though permitted, is\
    \ discouraged.\n     3.4.3.  COMMENTS\n        A comment is a set of ASCII characters,\
    \ which is  enclosed  in\n        matching  parentheses  and which is not within\
    \ a quoted-string\n        The comment construct permits message originators to\
    \ add  text\n        which  will  be  useful  for  human readers, but which will\
    \ be\n        ignored by the formal semantics.  Comments should be  retained\n\
    \        while  the  message  is subject to interpretation according to\n    \
    \    this standard.  However, comments  must  NOT  be  included  in\n        other\
    \  cases,  such  as  during  protocol  exchanges with mail\n        servers.\n\
    \        Comments nest, so that if an unquoted left parenthesis  occurs\n    \
    \    in  a  comment  string,  there  must  also be a matching right\n        parenthesis.\
    \  When a comment acts as the delimiter  between  a\n        sequence of two lexical\
    \ symbols, such as two atoms, it is lex-\n        ically equivalent with a single\
    \ SPACE,  for  the  purposes  of\n        regenerating  the  sequence, such as\
    \ when passing the sequence\n        onto a mail protocol server.  Comments are\
    \  detected  as  such\n        only within field-bodies of structured fields.\n\
    \        If a comment is to be \"folded\" onto multiple lines,  then  the\n  \
    \      syntax  for  folding  must  be  adhered to.  (See the \"Lexical\n     Standard\
    \ for ARPA Internet Text Messages\n        Analysis of Messages\" section on \"\
    Folding Long Header  Fields\"\n        above,  and  the  section on \"Case Independence\"\
    \ below.)  Note\n        that  the  official  semantics  therefore  do  not  \"\
    see\"  any\n        unquoted CRLFs that are in comments, although particular pars-\n\
    \        ing programs may wish to note their presence.  For these  pro-\n    \
    \    grams,  it would be reasonable to interpret a \"CRLF LWSP-char\"\n      \
    \  as being a CRLF that is part of the comment; i.e., the CRLF is\n        kept\
    \  and  the  LWSP-char is discarded.  Quoted CRLFs (i.e., a\n        backslash\
    \ followed by a CR followed by a  LF)  still  must  be\n        followed by at\
    \ least one LWSP-char.\n     3.4.4.  DELIMITING AND QUOTING CHARACTERS\n     \
    \   The quote character (backslash) and  characters  that  delimit\n        syntactic\
    \  units  are not, generally, to be taken as data that\n        are part of the\
    \ delimited or quoted unit(s).   In  particular,\n        the   quotation-marks\
    \   that   define   a  quoted-string,  the\n        parentheses that define  a\
    \  comment  and  the  backslash  that\n        quotes  a  following  character\
    \  are  NOT  part of the quoted-\n        string, comment or quoted character.\
    \  A quotation-mark that is\n        to  be  part  of  a quoted-string, a parenthesis\
    \ that is to be\n        part of a comment and a backslash that is to be part\
    \ of either\n        must  each be preceded by the quote-character backslash (\"\
    \\\").\n        Note that the syntax allows any character to be quoted  within\n\
    \        a  quoted-string  or  comment; however only certain characters\n    \
    \    MUST be quoted to be included as data.  These  characters  are\n        the\
    \  ones that are not part of the alternate text group (i.e.,\n        ctext or\
    \ qtext).\n        The one exception to this rule  is  that  a  single  SPACE\
    \  is\n        assumed  to  exist  between  contiguous words in a phrase, and\n\
    \        this interpretation is independent of  the  actual  number  of\n    \
    \    LWSP-chars  that  the  creator  places  between the words.  To\n        include\
    \ more than one SPACE, the creator must make  the  LWSP-\n        chars be part\
    \ of a quoted-string.\n        Quotation marks that delimit a quoted string  and\
    \  backslashes\n        that  quote  the  following character should NOT accompany\
    \ the\n        quoted-string when the string is passed to processes  that  do\n\
    \        not interpret data according to this specification (e.g., mail\n    \
    \    protocol servers).\n     3.4.5.  QUOTED-STRINGS\n        Where permitted\
    \ (i.e., in words in structured fields)  quoted-\n        strings  are  treated\
    \  as a single symbol.  That is, a quoted-\n        string is equivalent to an\
    \ atom, syntactically.  If a  quoted-\n        string  is to be \"folded\" onto\
    \ multiple lines, then the syntax\n        for folding must be adhered to.  (See\
    \ the \"Lexical Analysis of\n     Standard for ARPA Internet Text Messages\n \
    \       Messages\"  section  on \"Folding Long Header Fields\" above, and\n  \
    \      the section on \"Case  Independence\"  below.)   Therefore,  the\n    \
    \    official  semantics  do  not  \"see\" any bare CRLFs that are in\n      \
    \  quoted-strings; however particular parsing programs  may  wish\n        to\
    \  note  their presence.  For such programs, it would be rea-\n        sonable\
    \ to interpret a \"CRLF LWSP-char\" as being a CRLF  which\n        is  part \
    \ of the quoted-string; i.e., the CRLF is kept and the\n        LWSP-char is discarded.\
    \  Quoted CRLFs (i.e., a backslash  fol-\n        lowed  by  a CR followed by\
    \ a LF) are also subject to rules of\n        folding, but the presence of the\
    \ quoting character (backslash)\n        explicitly  indicates  that  the  CRLF\
    \  is  data to the quoted\n        string.  Stripping off the first following\
    \ LWSP-char  is  also\n        appropriate when parsing quoted CRLFs.\n     3.4.6.\
    \  BRACKETING CHARACTERS\n        There is one type of bracket which must occur\
    \ in matched pairs\n        and may have pairs nested within each other:\n   \
    \         o   Parentheses (\"(\" and \")\") are used  to  indicate  com-\n   \
    \             ments.\n        There are three types of brackets which must occur\
    \ in  matched\n        pairs, and which may NOT be nested:\n            o   Colon/semi-colon\
    \ (\":\" and \";\") are   used  in  address\n                specifications  to\
    \  indicate that the included list of\n                addresses are to be treated\
    \ as a group.\n            o   Angle brackets (\"<\" and \">\")  are  generally\
    \  used  to\n                indicate  the  presence of a one machine-usable refer-\n\
    \                ence (e.g., delimiting mailboxes), possibly  including\n    \
    \            source-routing to the machine.\n            o   Square brackets (\"\
    [\" and \"]\") are used to indicate the\n                presence  of  a  domain-literal,\
    \ which the appropriate\n                name-domain  is  to  use  directly, \
    \ bypassing  normal\n                name-resolution mechanisms.\n     3.4.7.\
    \  CASE INDEPENDENCE\n        Except as noted, alphabetic strings may be represented\
    \ in  any\n        combination of upper and lower case.  The only syntactic units\n\
    \     Standard for ARPA Internet Text Messages\n        which requires preservation\
    \ of case information are:\n                    -  text\n                    -\
    \  qtext\n                    -  dtext\n                    -  ctext\n       \
    \             -  quoted-pair\n                    -  local-part, except \"Postmaster\"\
    \n        When matching any other syntactic unit, case is to be ignored.\n   \
    \     For  example, the field-names \"From\", \"FROM\", \"from\", and even\n \
    \       \"FroM\" are semantically equal and should all be treated ident-\n   \
    \     ically.\n        When generating these units, any mix of upper and  lower\
    \  case\n        alphabetic  characters  may  be  used.  The case shown in this\n\
    \        specification is suggested for message-creating processes.\n        Note:\
    \  The reserved local-part address unit, \"Postmaster\",  is\n               an\
    \  exception.   When  the  value \"Postmaster\" is being\n               interpreted,\
    \ it must be  accepted  in  any  mixture  of\n               case, including \"\
    POSTMASTER\", and \"postmaster\".\n     3.4.8.  FOLDING LONG HEADER FIELDS\n \
    \       Each header field may be represented on exactly one line  con-\n     \
    \   sisting  of the name of the field and its body, and terminated\n        by\
    \ a CRLF; this is what the parser sees.  For readability, the\n        field-body\
    \  portion of long header fields may be \"folded\" onto\n        multiple lines\
    \ of the actual field.  \"Long\" is commonly inter-\n        preted  to  mean\
    \ greater than 65 or 72 characters.  The former\n        length serves as a limit,\
    \ when the message is to be viewed  on\n        most  simple terminals which use\
    \ simple display software; how-\n        ever, the limit is not imposed by this\
    \ standard.\n        Note:  Some display software often can selectively fold lines,\n\
    \               to  suit  the display terminal.  In such cases, sender-\n    \
    \           provided  folding  can  interfere  with   the   display\n        \
    \       software.\n     3.4.9.  BACKSPACE CHARACTERS\n        ASCII BS characters\
    \ (Backspace, decimal 8) may be included  in\n        texts and quoted-strings\
    \ to effect overstriking.  However, any\n        use of backspaces which effects\
    \ an overstrike to the  left  of\n        the beginning of the text or quoted-string\
    \ is prohibited.\n     Standard for ARPA Internet Text Messages\n     3.4.10.\
    \  NETWORK-SPECIFIC TRANSFORMATIONS\n        During transmission through heterogeneous\
    \ networks, it may  be\n        necessary  to  force data to conform to a network's\
    \ local con-\n        ventions.  For example, it may be required that a CR  be\
    \  fol-\n        lowed  either by LF, making a CRLF, or by <null>, if the CR is\n\
    \        to stand alone).  Such transformations are reversed, when  the\n    \
    \    message exits that network.\n        When  crossing  network  boundaries,\
    \  the  message  should  be\n        treated  as  passing  through  two modules.\
    \  It will enter the\n        first module containing whatever network-specific\
    \  transforma-\n        tions  that  were  necessary  to  permit migration through\
    \ the\n        \"current\" network.  It then passes through the modules:\n   \
    \         o   Transformation Reversal\n                The \"current\" network's\
    \ idiosyncracies are removed and\n                the  message  is returned to\
    \ the canonical form speci-\n                fied in this standard.\n        \
    \    o   Transformation\n                The \"next\" network's local idiosyncracies\
    \ are  imposed\n                on the message.\n                            \
    \    ------------------\n                    From   ==>  | Remove Net-A   |\n\
    \                    Net-A       | idiosyncracies |\n                        \
    \        ------------------\n                                       ||\n     \
    \                                  \\/\n                                  Conformance\n\
    \                                  with standard\n                           \
    \            ||\n                                       \\/\n                \
    \                ------------------\n                                | Impose\
    \ Net-B   |  ==>  To\n                                | idiosyncracies |     \
    \  Net-B\n                                ------------------\n     Standard for\
    \ ARPA Internet Text Messages\n     4.  MESSAGE SPECIFICATION\n     4.1.  SYNTAX\n\
    \     Note:  Due to an artifact of the notational conventions, the syn-\n    \
    \        tax  indicates that, when present, some fields, must be in\n        \
    \    a particular order.  Header fields  are  NOT  required  to\n            occur\
    \  in  any  particular  order, except that the message\n            body must\
    \ occur AFTER  the  headers.   It  is  recommended\n            that,  if  present,\
    \  headers be sent in the order \"Return-\n            Path\", \"Received\", \"\
    Date\",  \"From\",  \"Subject\",  \"Sender\",\n            \"To\", \"cc\", etc.\n\
    \            This specification permits multiple  occurrences  of  most\n    \
    \        fields.   Except  as  noted,  their  interpretation is not\n        \
    \    specified here, and their use is discouraged.\n          The following syntax\
    \ for the bodies of various fields should\n     be  thought  of  as  describing\
    \  each field body as a single long\n     string (or line).  The \"Lexical Analysis\
    \ of Message\"  section  on\n     \"Long  Header Fields\", above, indicates how\
    \ such long strings can\n     be represented on more than one line in  the  actual\
    \  transmitted\n     message.\n     message     =  fields *( CRLF *text )    \
    \   ; Everything after\n                                                 ;  first\
    \ null line\n                                                 ;  is message body\n\
    \     fields      =    dates                      ; Creation time,\n         \
    \             source                     ;  author id & one\n                \
    \    1*destination                ;  address required\n                     *optional-field\
    \             ;  others optional\n     source      = [  trace ]              \
    \      ; net traversals\n                      originator                 ; original\
    \ mail\n                   [  resent ]                   ; forwarded\n     trace\
    \       =    return                     ; path to sender\n                   \
    \ 1*received                   ; receipt tags\n     return      =  \"Return-path\"\
    \ \":\" route-addr ; return address\n     received    =  \"Received\"    \":\"\
    \            ; one per relay\n                       [\"from\" domain]       \
    \    ; sending host\n                       [\"by\"   domain]           ; receiving\
    \ host\n                       [\"via\"  atom]             ; physical path\n \
    \                     *(\"with\" atom)             ; link/mail protocol\n    \
    \                   [\"id\"   msg-id]           ; receiver msg id\n          \
    \             [\"for\"  addr-spec]        ; initial form\n     Standard for ARPA\
    \ Internet Text Messages\n                        \";\"    date-time         ;\
    \ time received\n     originator  =   authentic                   ; authenticated\
    \ addr\n                   [ \"Reply-To\"   \":\" 1#address] )\n     authentic\
    \   =   \"From\"       \":\"   mailbox  ; Single author\n                 / (\
    \ \"Sender\"     \":\"   mailbox  ; Actual submittor\n                     \"\
    From\"       \":\" 1#mailbox) ; Multiple authors\n                           \
    \                      ;  or not sender\n     resent      =   resent-authentic\n\
    \                   [ \"Resent-Reply-To\"  \":\" 1#address] )\n     resent-authentic\
    \ =\n                 =   \"Resent-From\"      \":\"   mailbox\n             \
    \    / ( \"Resent-Sender\"    \":\"   mailbox\n                     \"Resent-From\"\
    \      \":\" 1#mailbox  )\n     dates       =   orig-date                   ;\
    \ Original\n                   [ resent-date ]               ; Forwarded\n   \
    \  orig-date   =  \"Date\"        \":\"   date-time\n     resent-date =  \"Resent-Date\"\
    \ \":\"   date-time\n     destination =  \"To\"          \":\" 1#address  ; Primary\n\
    \                 /  \"Resent-To\"   \":\" 1#address\n                 /  \"cc\"\
    \          \":\" 1#address  ; Secondary\n                 /  \"Resent-cc\"   \"\
    :\" 1#address\n                 /  \"bcc\"         \":\"  #address  ; Blind carbon\n\
    \                 /  \"Resent-bcc\"  \":\"  #address\n     optional-field =\n\
    \                 /  \"Message-ID\"        \":\"   msg-id\n                 /\
    \  \"Resent-Message-ID\" \":\"   msg-id\n                 /  \"In-Reply-To\" \
    \      \":\"  *(phrase / msg-id)\n                 /  \"References\"        \"\
    :\"  *(phrase / msg-id)\n                 /  \"Keywords\"          \":\"  #phrase\n\
    \                 /  \"Subject\"           \":\"  *text\n                 /  \"\
    Comments\"          \":\"  *text\n                 /  \"Encrypted\"         \"\
    :\" 1#2word\n                 /  extension-field              ; To be defined\n\
    \                 /  user-defined-field           ; May be pre-empted\n     msg-id\
    \      =  \"<\" addr-spec \">\"            ; Unique message id\n     Standard\
    \ for ARPA Internet Text Messages\n     extension-field =\n                  \
    \ <Any field which is defined in a document\n                    published as\
    \ a formal extension to this\n                    specification; none will have\
    \ names beginning\n                    with the string \"X-\">\n     user-defined-field\
    \ =\n                   <Any field which has not been defined\n              \
    \      in this specification or published as an\n                    extension\
    \ to this specification; names for\n                    such fields must be unique\
    \ and may be\n                    pre-empted by published extensions>\n     4.2.\
    \  FORWARDING\n          Some systems permit mail recipients to  forward  a  message,\n\
    \     retaining  the original headers, by adding some new fields.  This\n    \
    \ standard supports such a service, through the \"Resent-\" prefix to\n     field\
    \ names.\n          Whenever the string \"Resent-\" begins a field name, the field\n\
    \     has  the  same  semantics as a field whose name does not have the\n    \
    \ prefix.  However, the message is assumed to have  been  forwarded\n     by \
    \ an original recipient who attached the \"Resent-\" field.  This\n     new field\
    \ is treated as being more recent  than  the  equivalent,\n     original  field.\
    \   For  example, the \"Resent-From\", indicates the\n     person that forwarded\
    \ the message, whereas the \"From\" field indi-\n     cates the original author.\n\
    \          Use of such precedence  information  depends  upon  partici-\n    \
    \ pants'  communication needs.  For example, this standard does not\n     dictate\
    \ when a \"Resent-From:\" address should receive replies,  in\n     lieu of sending\
    \ them to the \"From:\" address.\n     Note:  In general, the \"Resent-\" fields\
    \ should be treated as con-\n            taining  a  set  of information that\
    \ is independent of the\n            set of original fields.  Information for\
    \  one  set  should\n            not  automatically be taken from the other. \
    \ The interpre-\n            tation of multiple \"Resent-\" fields, of the same\
    \ type,  is\n            undefined.\n          In the remainder of this specification,\
    \ occurrence of  legal\n     \"Resent-\"  fields  are treated identically with\
    \ the occurrence of\n     Standard for ARPA Internet Text Messages\n     fields\
    \ whose names do not contain this prefix.\n     4.3.  TRACE FIELDS\n         \
    \ Trace information is used to provide an audit trail of  mes-\n     sage  handling.\
    \   In  addition,  it indicates a route back to the\n     sender of the message.\n\
    \          The list of known \"via\" and  \"with\"  values  are  registered\n\
    \     with  the  Network  Information  Center, SRI International, Menlo\n    \
    \ Park, California.\n     4.3.1.  RETURN-PATH\n        This field  is  added \
    \ by  the  final  transport  system  that\n        delivers  the message to its\
    \ recipient.  The field is intended\n        to contain definitive information\
    \ about the address and  route\n        back to the message's originator.\n  \
    \      Note:  The \"Reply-To\" field is added  by  the  originator  and\n    \
    \           serves  to  direct  replies,  whereas the \"Return-Path\"\n      \
    \         field is used to identify a path back to  the  origina-\n          \
    \     tor.\n        While the syntax  indicates  that  a  route  specification\
    \  is\n        optional,  every attempt should be made to provide that infor-\n\
    \        mation in this field.\n     4.3.2.  RECEIVED\n        A copy of this\
    \ field is added by each transport  service  that\n        relays the message.\
    \  The information in the field can be quite\n        useful for tracing transport\
    \ problems.\n        The names of the sending  and  receiving  hosts  and  time-of-\n\
    \        receipt may be specified.  The \"via\" parameter may be used, to\n  \
    \      indicate what physical mechanism the message  was  sent  over,\n      \
    \  such  as  Arpanet or Phonenet, and the \"with\" parameter may be\n        used\
    \ to indicate the mail-,  or  connection-,  level  protocol\n        that  was\
    \  used, such as the SMTP mail protocol, or X.25 tran-\n        sport protocol.\n\
    \        Note:  Several \"with\" parameters may  be  included,  to  fully\n  \
    \             specify the set of protocols that were used.\n        Some transport\
    \ services queue mail; the internal message iden-\n        tifier that is assigned\
    \ to the message may be noted, using the\n        \"id\" parameter.  When the\
    \  sending  host  uses  a  destination\n        address specification that the\
    \ receiving host reinterprets, by\n     Standard for ARPA Internet Text Messages\n\
    \        expansion or transformation, the receiving host  may  wish  to\n    \
    \    record  the original specification, using the \"for\" parameter.\n      \
    \  For example, when a copy of mail is sent to the  member  of  a\n        distribution\
    \  list,  this  parameter may be used to record the\n        original address\
    \ that was used to specify the list.\n     4.4.  ORIGINATOR FIELDS\n         \
    \ The standard allows only a subset of the combinations possi-\n     ble  with\
    \ the From, Sender, Reply-To, Resent-From, Resent-Sender,\n     and Resent-Reply-To\
    \ fields.  The limitation is intentional.\n     4.4.1.  FROM / RESENT-FROM\n \
    \       This field contains the identity of the person(s)  who  wished\n     \
    \   this  message to be sent.  The message-creation process should\n        default\
    \ this field  to  be  a  single,  authenticated  machine\n        address,  indicating\
    \  the  AGENT  (person,  system or process)\n        entering the message.  If\
    \ this is not done, the \"Sender\" field\n        MUST  be  present.  If the \"\
    From\" field IS defaulted this way,\n        the \"Sender\" field is  optional\
    \  and  is  redundant  with  the\n        \"From\"  field.   In  all  cases, addresses\
    \ in the \"From\" field\n        must be machine-usable (addr-specs) and may not\
    \ contain  named\n        lists (groups).\n     4.4.2.  SENDER / RESENT-SENDER\n\
    \        This field contains the authenticated identity  of  the  AGENT\n    \
    \    (person,  system  or  process)  that sends the message.  It is\n        intended\
    \ for use when the sender is not the author of the mes-\n        sage,  or  to\
    \  indicate  who among a group of authors actually\n        sent the message.\
    \  If the contents of the \"Sender\" field would\n        be  completely  redundant\
    \  with  the  \"From\"  field,  then the\n        \"Sender\" field need not be\
    \ present and its use is  discouraged\n        (though  still legal).  In particular,\
    \ the \"Sender\" field MUST\n        be present if it is NOT the same as the \"\
    From\" Field.\n        The Sender mailbox  specification  includes  a  word  sequence\n\
    \        which  must correspond to a specific agent (i.e., a human user\n    \
    \    or a computer program) rather than a standard  address.   This\n        indicates\
    \  the  expectation  that  the field will identify the\n        single AGENT (person,\
    \  system,  or  process)  responsible  for\n        sending  the mail and not\
    \ simply include the name of a mailbox\n        from which the mail was sent.\
    \  For example in the  case  of  a\n        shared login name, the name, by itself,\
    \ would not be adequate.\n        The local-part address unit, which refers to\
    \  this  agent,  is\n        expected to be a computer system term, and not (for\
    \ example) a\n        generalized person reference which can  be  used  outside\
    \  the\n        network text message context.\n     Standard for ARPA Internet\
    \ Text Messages\n        Since the critical function served by the  \"Sender\"\
    \  field  is\n        identification  of  the agent responsible for sending mail\
    \ and\n        since computer programs cannot be held accountable  for  their\n\
    \        behavior, it is strongly recommended that when a computer pro-\n    \
    \    gram generates a message, the HUMAN  who  is  responsible  for\n        that\
    \ program be referenced as part of the \"Sender\" field mail-\n        box specification.\n\
    \     4.4.3.  REPLY-TO / RESENT-REPLY-TO\n        This field provides a general\
    \  mechanism  for  indicating  any\n        mailbox(es)  to which responses are\
    \ to be sent.  Three typical\n        uses for this feature can  be  distinguished.\
    \   In  the  first\n        case,  the  author(s) may not have regular machine-based\
    \ mail-\n        boxes and therefore wish(es) to indicate an alternate  machine\n\
    \        address.   In  the  second case, an author may wish additional\n    \
    \    persons to be made aware of, or responsible for,  replies.   A\n        somewhat\
    \  different  use  may be of some help to \"text message\n        teleconferencing\"\
    \ groups equipped with automatic  distribution\n        services:   include the\
    \ address of that service in the \"Reply-\n        To\" field of all messages\
    \  submitted  to  the  teleconference;\n        then  participants  can  \"reply\"\
    \  to conference submissions to\n        guarantee the correct distribution of\
    \ any submission of  their\n        own.\n        Note:  The \"Return-Path\" field\
    \ is added by the mail  transport\n               service,  at the time of final\
    \ deliver.  It is intended\n               to identify a path back to the orginator\
    \  of  the  mes-\n               sage.   The  \"Reply-To\"  field  is added by\
    \ the message\n               originator and is intended to direct replies.\n\
    \     4.4.4.  AUTOMATIC USE OF FROM / SENDER / REPLY-TO\n        For systems which\
    \ automatically  generate  address  lists  for\n        replies to messages, the\
    \ following recommendations are made:\n            o   The \"Sender\" field mailbox\
    \ should be sent  notices  of\n                any  problems in transport or delivery\
    \ of the original\n                messages.  If there is no  \"Sender\"  field,\
    \  then  the\n                \"From\" field mailbox should be used.\n       \
    \     o   The  \"Sender\"  field  mailbox  should  NEVER  be  used\n         \
    \       automatically, in a recipient's reply message.\n            o   If the\
    \ \"Reply-To\" field exists, then the reply  should\n                go to the\
    \ addresses indicated in that field and not to\n                the address(es)\
    \ indicated in the \"From\" field.\n     Standard for ARPA Internet Text Messages\n\
    \            o   If there is a \"From\" field, but no  \"Reply-To\"  field,\n\
    \                the  reply should be sent to the address(es) indicated\n    \
    \            in the \"From\" field.\n        Sometimes, a recipient may actually\
    \ wish to  communicate  with\n        the  person  that  initiated  the  message\
    \  transfer.  In such\n        cases, it is reasonable to use the \"Sender\" address.\n\
    \        This recommendation is intended  only  for  automated  use  of\n    \
    \    originator-fields  and is not intended to suggest that replies\n        may\
    \ not also be sent to other recipients of messages.   It  is\n        up  to \
    \ the  respective  mail-handling programs to decide what\n        additional facilities\
    \ will be provided.\n        Examples are provided in Appendix A.\n     4.5. \
    \ RECEIVER FIELDS\n     4.5.1.  TO / RESENT-TO\n        This field contains the\
    \ identity of the primary recipients  of\n        the message.\n     4.5.2.  CC\
    \ / RESENT-CC\n        This field contains the identity of  the  secondary  (informa-\n\
    \        tional) recipients of the message.\n     4.5.3.  BCC / RESENT-BCC\n \
    \       This field contains the identity of additional  recipients  of\n     \
    \   the  message.   The contents of this field are not included in\n        copies\
    \ of the message sent to the primary and secondary  reci-\n        pients.   Some\
    \  systems  may choose to include the text of the\n        \"Bcc\" field only\
    \ in the author(s)'s  copy,  while  others  may\n        also include it in the\
    \ text sent to all those indicated in the\n        \"Bcc\" list.\n     4.6.  REFERENCE\
    \ FIELDS\n     4.6.1.  MESSAGE-ID / RESENT-MESSAGE-ID\n             This field\
    \ contains a unique identifier  (the  local-part\n        address  unit)  which\
    \  refers to THIS version of THIS message.\n        The uniqueness of the message\
    \ identifier is guaranteed by  the\n        host  which  generates  it.  This\
    \ identifier is intended to be\n        machine readable and not necessarily meaningful\
    \ to humans.   A\n        message  identifier pertains to exactly one instantiation\
    \ of a\n        particular message; subsequent revisions to the message should\n\
    \     Standard for ARPA Internet Text Messages\n        each receive new message\
    \ identifiers.\n     4.6.2.  IN-REPLY-TO\n             The contents of this field\
    \ identify  previous  correspon-\n        dence  which this message answers. \
    \ Note that if message iden-\n        tifiers are used in this  field,  they \
    \ must  use  the  msg-id\n        specification format.\n     4.6.3.  REFERENCES\n\
    \             The contents of this field identify other  correspondence\n    \
    \    which  this message references.  Note that if message identif-\n        iers\
    \ are used, they must use the msg-id specification format.\n     4.6.4.  KEYWORDS\n\
    \             This field contains keywords  or  phrases,  separated  by\n    \
    \    commas.\n     4.7.  OTHER FIELDS\n     4.7.1.  SUBJECT\n             This\
    \ is intended to provide a summary,  or  indicate  the\n        nature, of the\
    \ message.\n     4.7.2.  COMMENTS\n             Permits adding text comments \
    \ onto  the  message  without\n        disturbing the contents of the message's\
    \ body.\n     4.7.3.  ENCRYPTED\n             Sometimes,  data  encryption  is\
    \  used  to  increase  the\n        privacy  of  message  contents.   If the body\
    \ of a message has\n        been encrypted, to keep its contents private, the\
    \  \"Encrypted\"\n        field  can be used to note the fact and to indicate\
    \ the nature\n        of the encryption.  The first <word> parameter  indicates\
    \  the\n        software  used  to  encrypt the body, and the second, optional\n\
    \        <word> is intended to  aid  the  recipient  in  selecting  the\n    \
    \    proper  decryption  key.   This  code word may be viewed as an\n        index\
    \ to a table of keys held by the recipient.\n        Note:  Unfortunately, headers\
    \ must contain envelope,  as  well\n               as  contents,  information.\
    \  Consequently, it is neces-\n               sary that they remain unencrypted,\
    \ so that  mail  tran-\n               sport   services   may   access   them.\
    \   Since  names,\n               addresses, and \"Subject\"  field  contents\
    \  may  contain\n     Standard for ARPA Internet Text Messages\n             \
    \  sensitive  information,  this  requirement limits total\n               message\
    \ privacy.\n             Names of encryption software are registered with the\
    \ Net-\n        work  Information Center, SRI International, Menlo Park, Cali-\n\
    \        fornia.\n     4.7.4.  EXTENSION-FIELD\n             A limited number\
    \ of common fields have  been  defined  in\n        this  document.   As  network\
    \ mail requirements dictate, addi-\n        tional fields may be standardized.\
    \   To  provide  user-defined\n        fields  with  a  measure  of  safety, \
    \ in name selection, such\n        extension-fields will never have names  that\
    \  begin  with  the\n        string \"X-\".\n             Names of Extension-fields\
    \ are registered with the Network\n        Information Center, SRI International,\
    \ Menlo Park, California.\n     4.7.5.  USER-DEFINED-FIELD\n             Individual\
    \ users of network mail are free to  define  and\n        use  additional  header\
    \  fields.   Such fields must have names\n        which are not already used in\
    \ the current specification or  in\n        any definitions of extension-fields,\
    \ and the overall syntax of\n        these user-defined-fields must conform to\
    \ this specification's\n        rules   for   delimiting  and  folding  fields.\
    \   Due  to  the\n        extension-field  publishing  process,  the  name  of\
    \  a  user-\n        defined-field may be pre-empted\n        Note:  The prefatory\
    \ string \"X-\" will never  be  used  in  the\n               names  of Extension-fields.\
    \  This provides user-defined\n               fields with a protected set of names.\n\
    \     Standard for ARPA Internet Text Messages\n     5.  DATE AND TIME SPECIFICATION\n\
    \     5.1.  SYNTAX\n     date-time   =  [ day \",\" ] date time        ; dd mm\
    \ yy\n                                                 ;  hh:mm:ss zzz\n     day\
    \         =  \"Mon\"  / \"Tue\" /  \"Wed\"  / \"Thu\"\n                 /  \"\
    Fri\"  / \"Sat\" /  \"Sun\"\n     date        =  1*2DIGIT month 2DIGIT       \
    \ ; day month year\n                                                 ;  e.g. 20\
    \ Jun 82\n     month       =  \"Jan\"  /  \"Feb\" /  \"Mar\"  /  \"Apr\"\n   \
    \              /  \"May\"  /  \"Jun\" /  \"Jul\"  /  \"Aug\"\n               \
    \  /  \"Sep\"  /  \"Oct\" /  \"Nov\"  /  \"Dec\"\n     time        =  hour zone\
    \                    ; ANSI and Military\n     hour        =  2DIGIT \":\" 2DIGIT\
    \ [\":\" 2DIGIT]\n                                                 ; 00:00:00\
    \ - 23:59:59\n     zone        =  \"UT\"  / \"GMT\"                ; Universal\
    \ Time\n                                                 ; North American : UT\n\
    \                 /  \"EST\" / \"EDT\"                ;  Eastern:  - 5/ - 4\n\
    \                 /  \"CST\" / \"CDT\"                ;  Central:  - 6/ - 5\n\
    \                 /  \"MST\" / \"MDT\"                ;  Mountain: - 7/ - 6\n\
    \                 /  \"PST\" / \"PDT\"                ;  Pacific:  - 8/ - 7\n\
    \                 /  1ALPHA                       ; Military: Z = UT;\n      \
    \                                           ;  A:-1; (J not used)\n          \
    \                                       ;  M:-12; N:+1; Y:+12\n              \
    \   / ( (\"+\" / \"-\") 4DIGIT )        ; Local differential\n               \
    \                                  ;  hours+min. (HHMM)\n     5.2.  SEMANTICS\n\
    \          If included, day-of-week must be the day implied by the date\n    \
    \ specification.\n          Time zone may be indicated in several ways.  \"UT\"\
    \ is Univer-\n     sal  Time  (formerly called \"Greenwich Mean Time\"); \"GMT\"\
    \ is per-\n     mitted as a reference to Universal Time.  The  military  standard\n\
    \     uses  a  single  character for each zone.  \"Z\" is Universal Time.\n  \
    \   \"A\" indicates one hour earlier, and \"M\" indicates 12  hours  ear-\n  \
    \   lier;  \"N\"  is  one  hour  later, and \"Y\" is 12 hours later.  The\n  \
    \   letter \"J\" is not used.  The other remaining two forms are  taken\n    \
    \ from ANSI standard X3.51-1975.  One allows explicit indication of\n     the\
    \ amount of offset from UT; the other uses  common  3-character\n     strings\
    \ for indicating time zones in North America.\n     Standard for ARPA Internet\
    \ Text Messages\n     6.  ADDRESS SPECIFICATION\n     6.1.  SYNTAX\n     address\
    \     =  mailbox                      ; one addressee\n                 /  group\
    \                        ; named list\n     group       =  phrase \":\" [#mailbox]\
    \ \";\"\n     mailbox     =  addr-spec                    ; simple address\n \
    \                /  phrase route-addr            ; name & addr-spec\n     route-addr\
    \  =  \"<\" [route] addr-spec \">\"\n     route       =  1#(\"@\" domain) \":\"\
    \           ; path-relative\n     addr-spec   =  local-part \"@\" domain     \
    \   ; global address\n     local-part  =  word *(\".\" word)             ; uninterpreted\n\
    \                                                 ; case-preserved\n     domain\
    \      =  sub-domain *(\".\" sub-domain)\n     sub-domain  =  domain-ref / domain-literal\n\
    \     domain-ref  =  atom                         ; symbolic reference\n     6.2.\
    \  SEMANTICS\n          A mailbox receives mail.  It is a  conceptual  entity\
    \  which\n     does  not necessarily pertain to file storage.  For example, some\n\
    \     sites may choose to print mail on their line printer and  deliver\n    \
    \ the output to the addressee's desk.\n          A mailbox specification comprises\
    \ a person, system  or  pro-\n     cess name reference, a domain-dependent string,\
    \ and a name-domain\n     reference.  The name reference is optional and is usually\
    \ used to\n     indicate  the  human name of a recipient.  The name-domain refer-\n\
    \     ence specifies a sequence of sub-domains.   The  domain-dependent\n    \
    \ string is uninterpreted, except by the final sub-domain; the rest\n     of the\
    \ mail service merely transmits it as a literal string.\n     6.2.1.  DOMAINS\n\
    \        A name-domain is a set of registered (mail)  names.   A  name-\n    \
    \    domain  specification  resolves  to  a subordinate name-domain\n        specification\
    \  or  to  a  terminal  domain-dependent   string.\n        Hence,  domain  specification\
    \  is  extensible,  permitting any\n        number of registration levels.\n \
    \    Standard for ARPA Internet Text Messages\n        Name-domains model a global,\
    \ logical, hierarchical  addressing\n        scheme.   The  model is logical,\
    \ in that an address specifica-\n        tion is related to name registration\
    \ and  is  not  necessarily\n        tied  to  transmission  path.   The  model's\
    \  hierarchy  is  a\n        directed graph, called an in-tree, such that there\
    \ is a single\n        path  from  the root of the tree to any node in the hierarchy.\n\
    \        If more than one path actually exists, they are considered  to\n    \
    \    be different addresses.\n        The root node is common to all addresses;\
    \ consequently, it  is\n        not  referenced.   Its  children  constitute \"\
    top-level\" name-\n        domains.  Usually, a service has access to its own\
    \ full domain\n        specification and to the names of all top-level name-domains.\n\
    \        The \"top\" of the domain addressing hierarchy -- a child of the\n  \
    \      root  --  is  indicated  by  the right-most field, in a domain\n      \
    \  specification.  Its child is specified to the left, its  child\n        to\
    \ the left, and so on.\n        Some groups provide formal registration services;\
    \  these  con-\n        stitute   name-domains   that  are  independent  logically\
    \  of\n        specific machines.  In addition, networks and machines  impli-\n\
    \        citly  compose name-domains, since their membership usually is\n    \
    \    registered in name tables.\n        In the case of formal registration, an\
    \ organization implements\n        a  (distributed)  data base which provides\
    \ an address-to-route\n        mapping service for addresses of the form:\n  \
    \                       person@registry.organization\n        Note that \"organization\"\
    \ is a logical  entity,  separate  from\n        any particular communication\
    \ network.\n        A mechanism for accessing \"organization\" is universally\
    \ avail-\n        able.   That mechanism, in turn, seeks an instantiation of the\n\
    \        registry; its location is not indicated in the address specif-\n    \
    \    ication.   It  is assumed that the system which operates under\n        the\
    \ name \"organization\" knows how to find a subordinate regis-\n        try. \
    \ The registry will then use the \"person\" string to deter-\n        mine where\
    \ to send the mail specification.\n        The latter,  network-oriented  case\
    \  permits  simple,  direct,\n        attachment-related address specification,\
    \ such as:\n                              user@host.network\n        Once the\
    \ network is accessed, it is expected  that  a  message\n        will  go  directly\
    \  to the host and that the host will resolve\n     Standard for ARPA Internet\
    \ Text Messages\n        the user name, placing the message in the user's mailbox.\n\
    \     6.2.2.  ABBREVIATED DOMAIN SPECIFICATION\n        Since any number of  levels\
    \  is  possible  within  the  domain\n        hierarchy,  specification  of  a\
    \  fully  qualified address can\n        become inconvenient.  This standard permits\
    \ abbreviated domain\n        specification, in a special case:\n            For\
    \ the address of  the  sender,  call  the  left-most\n            sub-domain \
    \ Level  N.   In a header address, if all of\n            the sub-domains above\
    \ (i.e., to the right of) Level  N\n            are  the same as those of the\
    \ sender, then they do not\n            have to appear in the specification. \
    \  Otherwise,  the\n            address must be fully qualified.\n           \
    \ This feature is subject  to  approval  by  local  sub-\n            domains.\
    \   Individual  sub-domains  may  require their\n            member systems, which\
    \ originate mail, to provide  full\n            domain  specification only.  When\
    \ permitted, abbrevia-\n            tions may be present  only  while  the  message\
    \  stays\n            within the sub-domain of the sender.\n            Use of\
    \ this mechanism requires the sender's sub-domain\n            to reserve the\
    \ names of all top-level domains, so that\n            full specifications can\
    \ be distinguished from abbrevi-\n            ated specifications.\n        For\
    \ example, if a sender's address is:\n                 sender@registry-A.registry-1.organization-X\n\
    \        and one recipient's address is:\n                recipient@registry-B.registry-1.organization-X\n\
    \        and another's is:\n                recipient@registry-C.registry-2.organization-X\n\
    \        then \".registry-1.organization-X\" need not be specified in the\n  \
    \      the  message,  but  \"registry-C.registry-2\"  DOES  have  to be\n    \
    \    specified.  That is, the first two addresses may  be  abbrevi-\n        ated,\
    \ but the third address must be fully specified.\n        When a message crosses\
    \ a domain boundary, all  addresses  must\n        be  specified  in  the  full\
    \ format, ending with the top-level\n        name-domain in the right-most field.\
    \  It is the responsibility\n        of  mail  forwarding services to ensure that\
    \ addresses conform\n     Standard for ARPA Internet Text Messages\n        with\
    \ this requirement.  In the case of abbreviated  addresses,\n        the  relaying\
    \  service must make the necessary expansions.  It\n        should be noted that\
    \ it often is difficult for such a  service\n        to locate all occurrences\
    \ of address abbreviations.  For exam-\n        ple, it will not be possible to\
    \ find such abbreviations within\n        the  body  of  the  message.   The \"\
    Return-Path\" field can aid\n        recipients in recovering from these errors.\n\
    \        Note:  When passing any portion of an addr-spec onto a process\n    \
    \           which  does  not interpret data according to this stan-\n        \
    \       dard (e.g., mail protocol servers).  There must  be  NO\n            \
    \   LWSP-chars  preceding  or  following the at-sign or any\n               delimiting\
    \ period (\".\"), such as  shown  in  the  above\n               examples,   and\
    \   only  ONE  SPACE  between  contiguous\n               <word>s.\n     6.2.3.\
    \  DOMAIN TERMS\n        A domain-ref must be THE official name of a registry,\
    \ network,\n        or  host.   It  is  a  symbolic  reference, within a name\
    \ sub-\n        domain.  At times, it is necessary to bypass standard  mechan-\n\
    \        isms  for  resolving  such  references,  using  more primitive\n    \
    \    information, such as a network host address  rather  than  its\n        associated\
    \ host name.\n        To permit such references, this standard provides the  domain-\n\
    \        literal  construct.   Its contents must conform with the needs\n    \
    \    of the sub-domain in which it is interpreted.\n        Domain-literals which\
    \ refer to domains within the ARPA  Inter-\n        net  specify  32-bit  Internet\
    \ addresses, in four 8-bit fields\n        noted in decimal, as described in Request\
    \ for  Comments  #820,\n        \"Assigned Numbers.\"  For example:\n        \
    \                         [10.0.3.19]\n        Note:  THE USE OF DOMAIN-LITERALS\
    \ IS STRONGLY DISCOURAGED.  It\n               is  permitted  only  as  a means\
    \ of bypassing temporary\n               system limitations, such as name tables\
    \ which  are  not\n               complete.\n        The names of \"top-level\"\
    \ domains, and  the  names  of  domains\n        under  in  the  ARPA Internet,\
    \ are registered with the Network\n        Information Center, SRI International,\
    \ Menlo Park, California.\n     6.2.4.  DOMAIN-DEPENDENT LOCAL STRING\n      \
    \  The local-part of an  addr-spec  in  a  mailbox  specification\n        (i.e.,\
    \  the  host's  name for the mailbox) is understood to be\n     Standard for ARPA\
    \ Internet Text Messages\n        whatever the receiving mail protocol server\
    \ allows.  For exam-\n        ple,  some systems do not understand mailbox references\
    \ of the\n        form \"P. D. Q. Bach\", but others do.\n        This specification\
    \ treats periods (\".\") as lexical separators.\n        Hence,  their  presence\
    \  in  local-parts which are not quoted-\n        strings, is detected.   However,\
    \  such  occurrences  carry  NO\n        semantics.  That is, if a local-part\
    \ has periods within it, an\n        address parser will divide the local-part\
    \ into several tokens,\n        but  the  sequence  of  tokens will be treated\
    \ as one uninter-\n        preted unit.  The sequence  will  be  re-assembled,\
    \  when  the\n        address is passed outside of the system such as to a mail\
    \ pro-\n        tocol service.\n        For example, the address:\n          \
    \                 First.Last@Registry.Org\n        is legal and does not require\
    \ the local-part to be  surrounded\n        with  quotation-marks.   (However,\
    \  \"First  Last\" DOES require\n        quoting.)  The local-part of the address,\
    \ when passed  outside\n        of  the  mail  system,  within  the  Registry.Org\
    \  domain,  is\n        \"First.Last\", again without quotation marks.\n     6.2.5.\
    \  BALANCING LOCAL-PART AND DOMAIN\n        In some cases, the boundary between\
    \ local-part and domain  can\n        be  flexible.  The local-part may be a simple\
    \ string, which is\n        used for the final determination of the  recipient's\
    \  mailbox.\n        All  other  levels  of  reference  are, therefore, part of\
    \ the\n        domain.\n        For some systems, in the case of abbreviated reference\
    \ to  the\n        local  and  subordinate  sub-domains,  it  may  be possible\
    \ to\n        specify only one reference within the domain  part  and  place\n\
    \        the  other,  subordinate  name-domain  references  within  the\n    \
    \    local-part.  This would appear as:\n                        mailbox.sub1.sub2@this-domain\n\
    \        Such a specification would be acceptable  to  address  parsers\n    \
    \    which  conform  to  RFC  #733,  but  do not support this newer\n        Internet\
    \ standard.  While contrary to the intent of this stan-\n        dard, the form\
    \ is legal.\n        Also, some sub-domains have a specification syntax which\
    \  does\n        not conform to this standard.  For example:\n               \
    \       sub-net.mailbox@sub-domain.domain\n     Standard for ARPA Internet Text\
    \ Messages\n        uses a different parsing  sequence  for  local-part  than\
    \  for\n        domain.\n        Note:  As a rule,  the  domain  specification\
    \  should  contain\n               fields  which  are  encoded  according to the\
    \ syntax of\n               this standard and which contain  generally-standardized\n\
    \               information.   The local-part specification should con-\n    \
    \           tain only that portion of the  address  which  deviates\n        \
    \       from the form or intention of the domain field.\n     6.2.6.  MULTIPLE\
    \ MAILBOXES\n        An individual may have several mailboxes and wish  to  receive\n\
    \        mail  at  whatever  mailbox  is  convenient  for the sender to\n    \
    \    access.  This standard does not provide a means of  specifying\n        \"\
    any member of\" a list of mailboxes.\n        A set of individuals may wish to\
    \ receive mail as a single unit\n        (i.e.,  a  distribution  list).  The\
    \ <group> construct permits\n        specification of such a list.  Recipient\
    \ mailboxes are  speci-\n        fied  within  the  bracketed  part (\":\" - \"\
    ;\").  A copy of the\n        transmitted message is to be  sent  to  each  mailbox\
    \  listed.\n        This  standard  does  not  permit  recursive  specification\
    \ of\n        groups within groups.\n        While a list must be named, it is\
    \ not required that  the  con-\n        tents  of  the  list be included.  In\
    \ this case, the <address>\n        serves only as an indication of group distribution\
    \  and  would\n        appear in the form:\n                                 \
    \   name:;\n        Some mail  services  may  provide  a  group-list  distribution\n\
    \        facility,  accepting  a single mailbox reference, expanding it\n    \
    \    to the full distribution list, and relaying the  mail  to  the\n        list's\
    \  members.   This standard provides no additional syntax\n        for indicating\
    \ such a  service.   Using  the  <group>  address\n        alternative,  while\
    \ listing one mailbox in it, can mean either\n        that the mailbox reference\
    \ will be expanded to a list or  that\n        there is a group with one member.\n\
    \     6.2.7.  EXPLICIT PATH SPECIFICATION\n        At times, a  message  originator\
    \  may  wish  to  indicate  the\n        transmission  path  that  a  message\
    \  should  follow.  This is\n        called source routing.  The normal addressing\
    \ scheme, used  in\n        an  addr-spec,  is  carefully separated from such\
    \ information;\n        the <route> portion of a route-addr is provided for such\
    \ occa-\n        sions.  It specifies the sequence of hosts and/or transmission\n\
    \     Standard for ARPA Internet Text Messages\n        services that are  to\
    \  be  traversed.   Both  domain-refs  and\n        domain-literals may be used.\n\
    \        Note:  The use of source routing is discouraged.   Unless  the\n    \
    \           sender has special need of path restriction, the choice\n        \
    \       of transmission route should be left to the mail  tran-\n            \
    \   sport service.\n     6.3.  RESERVED ADDRESS\n          It often is necessary\
    \ to send mail to a site, without  know-\n     ing  any  of its valid addresses.\
    \  For example, there may be mail\n     system dysfunctions, or a user may wish\
    \ to find  out  a  person's\n     correct address, at that site.\n          This\
    \ standard specifies a single, reserved  mailbox  address\n     (local-part) \
    \ which  is  to  be valid at each site.  Mail sent to\n     that address is to\
    \ be routed to  a  person  responsible  for  the\n     site's mail system or to\
    \ a person with responsibility for general\n     site operation.  The name of\
    \ the reserved local-part address is:\n                                Postmaster\n\
    \     so that \"Postmaster@domain\" is required to be valid.\n     Note:  This\
    \ reserved local-part must be  matched  without  sensi-\n            tivity to\
    \ alphabetic case, so that \"POSTMASTER\", \"postmas-\n            ter\", and\
    \ even \"poStmASteR\" is to be accepted.\n     Standard for ARPA Internet Text\
    \ Messages\n     7.  BIBLIOGRAPHY\n     ANSI.  \"USA Standard Code  for  Information\
    \  Interchange,\"  X3.4.\n        American  National Standards Institute: New\
    \ York (1968).  Also\n        in:  Feinler, E.  and J. Postel, eds., \"ARPANET\
    \ Protocol Hand-\n        book\", NIC 7104.\n     ANSI.  \"Representations of\
    \ Universal Time, Local  Time  Differen-\n        tials,  and United States Time\
    \ Zone References for Information\n        Interchange,\" X3.51-1975.  American\
    \ National Standards  Insti-\n        tute:  New York (1975).\n     Bemer, R.W.,\
    \ \"Time and the Computer.\"  In:  Interface  Age  (Feb.\n        1979).\n   \
    \  Bennett, C.J.  \"JNT Mail Protocol\".  Joint Network Team,  Ruther-\n     \
    \   ford and Appleton Laboratory:  Didcot, England.\n     Bhushan, A.K., Pogran,\
    \ K.T., Tomlinson,  R.S.,  and  White,  J.E.\n        \"Standardizing  Network\
    \  Mail  Headers,\"   ARPANET Request for\n        Comments No. 561, Network Information\
    \ Center  No.  18516;  SRI\n        International:  Menlo Park (September 1973).\n\
    \     Birrell, A.D., Levin, R.,  Needham,  R.M.,  and  Schroeder,  M.D.\n    \
    \    \"Grapevine:  An Exercise in Distributed Computing,\" Communica-\n      \
    \  tions of the ACM 25, 4 (April 1982), 260-274.\n     Crocker,  D.H.,  Vittal,\
    \  J.J.,  Pogran,  K.T.,  Henderson,  D.A.\n        \"Standard  for  the  Format\
    \  of  ARPA  Network  Text Message,\"\n        ARPANET Request for  Comments \
    \ No.  733,  Network  Information\n        Center  No.  41952.   SRI International:\
    \  Menlo Park (November\n        1977).\n     Feinler, E.J. and Postel, J.B. \
    \ ARPANET Protocol  Handbook,  Net-\n        work  Information  Center  No.  7104\
    \   (NTIS AD A003890).  SRI\n        International:  Menlo Park (April 1976).\n\
    \     Harary, F.   \"Graph  Theory\".   Addison-Wesley:   Reading,  Mass.\n  \
    \      (1969).\n     Levin, R. and Schroeder, M.  \"Transport  of  Electronic\
    \  Messages\n        through  a  Network,\"   TeleInformatics  79, pp. 29-33.\
    \  North\n        Holland (1979).  Also  as  Xerox  Palo  Alto  Research  Center\n\
    \        Technical Report CSL-79-4.\n     Myer, T.H. and Henderson, D.A.  \"Message\
    \ Transmission  Protocol,\"\n        ARPANET  Request  for  Comments,  No. 680,\
    \ Network Information\n        Center No. 32116.  SRI International:  Menlo Park\
    \ (1975).\n     Standard for ARPA Internet Text Messages\n     NBS.  \"Specification\
    \ of Message Format for Computer Based Message\n        Systems, Recommended Federal\
    \ Information Processing Standard.\"\n        National  Bureau   of   Standards:\
    \    Gaithersburg,   Maryland\n        (October 1981).\n     NIC.  Internet Protocol\
    \ Transition Workbook.  Network Information\n        Center,   SRI-International,\
    \  Menlo  Park,  California  (March\n        1982).\n     Oppen, D.C. and Dalal,\
    \ Y.K.  \"The Clearinghouse:  A Decentralized\n        Agent  for  Locating  Named\
    \  Objects in a Distributed Environ-\n        ment,\" OPD-T8103.  Xerox Office\
    \ Products Division:  Palo Alto,\n        CA. (October 1981).\n     Postel, J.B.\
    \  \"Assigned Numbers,\"  ARPANET Request for  Comments,\n        No. 820.  SRI\
    \ International:  Menlo Park (August 1982).\n     Postel, J.B.  \"Simple Mail\
    \ Transfer  Protocol,\"  ARPANET  Request\n        for Comments, No. 821.  SRI\
    \ International:  Menlo Park (August\n        1982).\n     Shoch, J.F.  \"Internetwork\
    \ naming, addressing  and  routing,\"  in\n        Proc. 17th IEEE Computer Society\
    \ International Conference, pp.\n        72-79, Sept. 1978, IEEE Cat. No. 78 CH\
    \ 1388-8C.\n     Su, Z. and Postel, J.  \"The Domain Naming Convention for Internet\n\
    \        User  Applications,\"  ARPANET  Request  for Comments, No. 819.\n   \
    \     SRI International:  Menlo Park (August 1982).\n     Standard for ARPA Internet\
    \ Text Messages\n                                 APPENDIX\n     A.  EXAMPLES\n\
    \     A.1.  ADDRESSES\n     A.1.1.  Alfred Neuman <Neuman@BBN-TENEXA>\n     A.1.2.\
    \  Neuman@BBN-TENEXA\n             These two \"Alfred Neuman\" examples have identical\
    \  seman-\n        tics, as far as the operation of the local host's mail sending\n\
    \        (distribution) program (also sometimes  called  its  \"mailer\")\n  \
    \      and  the remote host's mail protocol server are concerned.  In\n      \
    \  the first example, the  \"Alfred  Neuman\"  is  ignored  by  the\n        mailer,\
    \  as \"Neuman@BBN-TENEXA\" completely specifies the reci-\n        pient.  The\
    \ second example contains  no  superfluous  informa-\n        tion,  and,  again,\
    \  \"Neuman@BBN-TENEXA\" is the intended reci-\n        pient.\n        Note:\
    \  When the message crosses name-domain  boundaries,  then\n               these\
    \ specifications must be changed, so as to indicate\n               the remainder\
    \ of the hierarchy, starting with  the  top\n               level.\n     A.1.3.\
    \  \"George, Ted\" <Shared@Group.Arpanet>\n             This form might be used\
    \ to indicate that a single mailbox\n        is  shared  by several users.  The\
    \ quoted string is ignored by\n        the originating host's mailer, because\
    \  \"Shared@Group.Arpanet\"\n        completely specifies the destination mailbox.\n\
    \     A.1.4.  Wilt . (the  Stilt) Chamberlain@NBA.US\n             The \"(the\
    \  Stilt)\" is a comment, which is NOT included in\n        the  destination \
    \ mailbox  address  handed  to the originating\n        system's mailer.  The\
    \ local-part of the address is the  string\n        \"Wilt.Chamberlain\", with\
    \ NO space between the first and second\n        words.\n     A.1.5.  Address\
    \ Lists\n     Gourmets:  Pompous Person <WhoZiWhatZit@Cordon-Bleu>,\n        \
    \        Childs@WGBH.Boston, Galloping Gourmet@\n                ANT.Down-Under\
    \ (Australian National Television),\n                Cheapie@Discount-Liquors;,\n\
    \       Cruisers:  Port@Portugal, Jones@SEA;,\n         Another@Somewhere.SomeOrg\n\
    \     Standard for ARPA Internet Text Messages\n        This group list example\
    \ points out the use of comments and the\n        mixing of addresses and groups.\n\
    \     A.2.  ORIGINATOR ITEMS\n     A.2.1.  Author-sent\n             George Jones\
    \ logs into his host  as  \"Jones\".   He  sends\n        mail himself.\n    \
    \        From:  Jones@Group.Org\n        or\n            From:  George Jones <Jones@Group.Org>\n\
    \     A.2.2.  Secretary-sent\n             George Jones logs in as Jones on his\
    \  host.   His  secre-\n        tary,  who logs in as Secy sends mail for him.\
    \  Replies to the\n        mail should go to George.\n            From:    George\
    \ Jones <Jones@Group>\n            Sender:  Secy@Other-Group\n     A.2.3.  Secretary-sent,\
    \ for user of shared directory\n             George Jones' secretary sends mail\
    \  for  George.  Replies\n        should go to George.\n            From:    \
    \ George Jones<Shared@Group.Org>\n            Sender:   Secy@Other-Group\n   \
    \     Note that there need not be a space between  \"Jones\"  and  the\n     \
    \   \"<\",  but  adding a space enhances readability (as is the case\n       \
    \ in other examples.\n     A.2.4.  Committee activity, with one author\n     \
    \        George is a member of a committee.  He wishes to have any\n        replies\
    \ to his message go to all committee members.\n            From:     George Jones\
    \ <Jones@Host.Net>\n            Sender:   Jones@Host\n            Reply-To: The\
    \ Committee: Jones@Host.Net,\n                                     Smith@Other.Org,\n\
    \                                     Doe@Somewhere-Else;\n        Note  that\
    \  if  George  had  not  included  himself   in   the\n     Standard for ARPA\
    \ Internet Text Messages\n        enumeration  of  The  Committee,  he  would\
    \ not have gotten an\n        implicit reply; the presence of the  \"Reply-to\"\
    \  field  SUPER-\n        SEDES the sending of a reply to the person named in\
    \ the \"From\"\n        field.\n     A.2.5.  Secretary acting as full agent of\
    \ author\n             George Jones asks his secretary  (Secy@Host)  to  send\
    \  a\n        message for him in his capacity as Group.  He wants his secre-\n\
    \        tary to handle all replies.\n            From:     George Jones <Group@Host>\n\
    \            Sender:   Secy@Host\n            Reply-To: Secy@Host\n     A.2.6.\
    \  Agent for user without online mailbox\n             A friend  of  George's,\
    \  Sarah,  is  visiting.   George's\n        secretary  sends  some  mail to a\
    \ friend of Sarah in computer-\n        land.  Replies should go to George, whose\
    \ mailbox is Jones  at\n        Registry.\n            From:     Sarah Friendly\
    \ <Secy@Registry>\n            Sender:   Secy-Name <Secy@Registry>\n         \
    \   Reply-To: Jones@Registry.\n     A.2.7.  Agent for member of a committee\n\
    \             George's secretary sends out a message which was authored\n    \
    \    jointly by all the members of a committee.  Note that the name\n        of\
    \ the committee cannot be specified, since <group> names  are\n        not permitted\
    \ in the From field.\n            From:   Jones@Host,\n                    Smith@Other-Host,\n\
    \                    Doe@Somewhere-Else\n            Sender: Secy@SHost\n    \
    \ Standard for ARPA Internet Text Messages\n     A.3.  COMPLETE HEADERS\n    \
    \ A.3.1.  Minimum required\n     Date:     26 Aug 76 1429 EDT        Date:   \
    \  26 Aug 76 1429 EDT\n     From:     Jones@Registry.Org   or   From:     Jones@Registry.Org\n\
    \     Bcc:                                To:       Smith@Registry.Org\n     \
    \   Note that the \"Bcc\" field may be empty, while the  \"To\"  field\n     \
    \   is required to have at least one address.\n     A.3.2.  Using some of the\
    \ additional fields\n     Date:     26 Aug 76 1430 EDT\n     From:     George\
    \ Jones<Group@Host>\n     Sender:   Secy@SHOST\n     To:       \"Al Neuman\"@Mad-Host,\n\
    \               Sam.Irving@Other-Host\n     Message-ID:  <some.string@SHOST>\n\
    \     A.3.3.  About as complex as you're going to get\n     Date     :  27 Aug\
    \ 76 0932 PDT\n     From     :  Ken Davis <KDavis@This-Host.This-net>\n     Subject\
    \  :  Re: The Syntax in the RFC\n     Sender   :  KSecy@Other-Host\n     Reply-To\
    \ :  Sam.Irving@Reg.Organization\n     To       :  George Jones <Group@Some-Reg.An-Org>,\n\
    \                 Al.Neuman@MAD.Publisher\n     cc       :  Important folk:\n\
    \                   Tom Softwood <Balsa@Tree.Root>,\n                   \"Sam\
    \ Irving\"@Other-Host;,\n                 Standard Distribution:\n           \
    \        /main/davis/people/standard@Other-Host,\n                   \"<Jones>standard.dist.3\"\
    @Tops-20-Host>;\n     Comment  :  Sam is away on business. He asked me to handle\n\
    \                 his mail for him.  He'll be able to provide  a\n           \
    \      more  accurate  explanation  when  he  returns\n                 next week.\n\
    \     In-Reply-To: <some.string@DBM.Group>, George's message\n     X-Special-action:\
    \  This is a sample of user-defined field-\n                 names.  There could\
    \ also be a field-name\n                 \"Special-action\", but its name might\
    \ later be\n                 preempted\n     Message-ID: <4231.629.XYzi-What@Other-Host>\n\
    \     Standard for ARPA Internet Text Messages\n     B.  SIMPLE FIELD PARSING\n\
    \          Some mail-reading software systems may wish to perform  only\n    \
    \ minimal  processing,  ignoring  the internal syntax of structured\n     field-bodies\
    \ and treating them the  same  as  unstructured-field-\n     bodies.  Such software\
    \ will need only to distinguish:\n         o   Header fields from the message\
    \ body,\n         o   Beginnings of fields from lines which continue fields,\n\
    \         o   Field-names from field-contents.\n          The abbreviated set\
    \ of syntactic rules  which  follows  will\n     suffice  for  this  purpose.\
    \  It describes a limited view of mes-\n     sages and is a subset of the syntactic\
    \ rules provided in the main\n     part of this specification.  One small exception\
    \ is that the con-\n     tents of field-bodies consist only of text:\n     B.1.\
    \  SYNTAX\n     message         =   *field *(CRLF *text)\n     field         \
    \  =    field-name \":\" [field-body] CRLF\n     field-name      =  1*<any CHAR,\
    \ excluding CTLs, SPACE, and \":\">\n     field-body      =   *text [CRLF LWSP-char\
    \ field-body]\n     B.2.  SEMANTICS\n          Headers occur before the message\
    \ body and are terminated  by\n     a null line (i.e., two contiguous CRLFs).\n\
    \          A line which continues a header field begins with a SPACE or\n    \
    \ HTAB  character,  while  a  line  beginning a field starts with a\n     printable\
    \ character which is not a colon.\n          A field-name consists of one or \
    \ more  printable  characters\n     (excluding  colon,  space, and control-characters).\
    \  A field-name\n     MUST be contained on one line.  Upper and lower case are\
    \ not dis-\n     tinguished when comparing field-names.\n     Standard for ARPA\
    \ Internet Text Messages\n     C.  DIFFERENCES FROM RFC #733\n          The following\
    \ summarizes the differences between this  stan-\n     dard  and the one specified\
    \ in Arpanet Request for Comments #733,\n     \"Standard for the Format of ARPA\
    \  Network  Text  Messages\".   The\n     differences  are  listed  in the order\
    \ of their occurrence in the\n     current specification.\n     C.1.  FIELD DEFINITIONS\n\
    \     C.1.1.  FIELD NAMES\n        These now must be a sequence of  printable\
    \  characters.   They\n        may not contain any LWSP-chars.\n     C.2.  LEXICAL\
    \ TOKENS\n     C.2.1.  SPECIALS\n        The characters period (\".\"), left-square\
    \  bracket  (\"[\"),  and\n        right-square  bracket (\"]\") have been added.\
    \  For presentation\n        purposes, and when passing a specification to  a\
    \  system  that\n        does  not conform to this standard, periods are to be\
    \ contigu-\n        ous with their surrounding lexical tokens.   No  linear-white-\n\
    \        space  is  permitted  between them.  The presence of one LWSP-\n    \
    \    char between other tokens is still directed.\n     C.2.2.  ATOM\n       \
    \ Atoms may not contain SPACE.\n     C.2.3.  SPECIAL TEXT\n        ctext and qtext\
    \ have had backslash (\"\\\") added to the list  of\n        prohibited characters.\n\
    \     C.2.4.  DOMAINS\n        The lexical tokens  <domain-literal>  and  <dtext>\
    \  have  been\n        added.\n     C.3.  MESSAGE SPECIFICATION\n     C.3.1. \
    \ TRACE\n        The \"Return-path:\" and \"Received:\" fields have been specified.\n\
    \     Standard for ARPA Internet Text Messages\n     C.3.2.  FROM\n        The\
    \ \"From\" field must contain machine-usable addresses  (addr-\n        spec).\
    \   Multiple  addresses may be specified, but named-lists\n        (groups) may\
    \ not.\n     C.3.3.  RESENT\n        The meta-construct of prefacing field names\
    \  with  the  string\n        \"Resent-\"  has been added, to indicate that a\
    \ message has been\n        forwarded by an intermediate recipient.\n     C.3.4.\
    \  DESTINATION\n        A message must contain at least one destination address\
    \ field.\n        \"To\" and \"CC\" are required to contain at least one address.\n\
    \     C.3.5.  IN-REPLY-TO\n        The field-body is no longer a comma-separated\
    \ list, although a\n        sequence is still permitted.\n     C.3.6.  REFERENCE\n\
    \        The field-body is no longer a comma-separated list, although a\n    \
    \    sequence is still permitted.\n     C.3.7.  ENCRYPTED\n        A field has\
    \ been specified that permits  senders  to  indicate\n        that the body of\
    \ a message has been encrypted.\n     C.3.8.  EXTENSION-FIELD\n        Extension\
    \ fields are prohibited from beginning with the  char-\n        acters \"X-\"\
    .\n     C.4.  DATE AND TIME SPECIFICATION\n     C.4.1.  SIMPLIFICATION\n     \
    \   Fewer optional forms are permitted  and  the  list  of  three-\n        letter\
    \ time zones has been shortened.\n     C.5.  ADDRESS SPECIFICATION\n     Standard\
    \ for ARPA Internet Text Messages\n     C.5.1.  ADDRESS\n        The use of quoted-string,\
    \ and the \":\"-atom-\":\" construct, have\n        been  removed.   An  address\
    \  now  is  either a single mailbox\n        reference or is a named list of addresses.\
    \  The  latter  indi-\n        cates a group distribution.\n     C.5.2.  GROUPS\n\
    \        Group lists are now required to to have a name.   Group  lists\n    \
    \    may not be nested.\n     C.5.3.  MAILBOX\n        A mailbox specification\
    \  may  indicate  a  person's  name,  as\n        before.   Such  a  named  list\
    \  no longer may specify multiple\n        mailboxes and may not be nested.\n\
    \     C.5.4.  ROUTE ADDRESSING\n        Addresses now are taken to be absolute,\
    \ global specifications,\n        independent  of transmission paths.  The <route>\
    \ construct has\n        been provided, to permit explicit specification  of \
    \ transmis-\n        sion  path.   RFC  #733's  use  of multiple at-signs (\"\
    @\") was\n        intended as a general syntax  for  indicating  routing  and/or\n\
    \        hierarchical addressing.  The current standard separates these\n    \
    \    specifications and only one at-sign is permitted.\n     C.5.5.  AT-SIGN\n\
    \        The string \" at \" no longer is used as an  address  delimiter.\n  \
    \      Only at-sign (\"@\") serves the function.\n     C.5.6.  DOMAINS\n     \
    \   Hierarchical, logical name-domains have been added.\n     C.6.  RESERVED ADDRESS\n\
    \     The local-part \"Postmaster\" has been reserved, so that users  can\n  \
    \   be guaranteed at least one valid address at a site.\n     Standard for ARPA\
    \ Internet Text Messages\n     D.  ALPHABETICAL LISTING OF SYNTAX RULES\n    \
    \ address     =  mailbox                      ; one addressee\n              \
    \   /  group                        ; named list\n     addr-spec   =  local-part\
    \ \"@\" domain        ; global address\n     ALPHA       =  <any ASCII alphabetic\
    \ character>\n                                                 ; (101-132, 65.-\
    \ 90.)\n                                                 ; (141-172, 97.-122.)\n\
    \     atom        =  1*<any CHAR except specials, SPACE and CTLs>\n     authentic\
    \   =   \"From\"       \":\"   mailbox  ; Single author\n                 / (\
    \ \"Sender\"     \":\"   mailbox  ; Actual submittor\n                     \"\
    From\"       \":\" 1#mailbox) ; Multiple authors\n                           \
    \                      ;  or not sender\n     CHAR        =  <any ASCII character>\
    \        ; (  0-177,  0.-127.)\n     comment     =  \"(\" *(ctext / quoted-pair\
    \ / comment) \")\"\n     CR          =  <ASCII CR, carriage return>  ; (     15,\
    \      13.)\n     CRLF        =  CR LF\n     ctext       =  <any CHAR excluding\
    \ \"(\",     ; => may be folded\n                     \")\", \"\\\" & CR, & including\n\
    \                     linear-white-space>\n     CTL         =  <any ASCII control\
    \           ; (  0- 37,  0.- 31.)\n                     character and DEL>   \
    \       ; (    177,     127.)\n     date        =  1*2DIGIT month 2DIGIT     \
    \   ; day month year\n                                                 ;  e.g.\
    \ 20 Jun 82\n     dates       =   orig-date                   ; Original\n   \
    \                [ resent-date ]               ; Forwarded\n     date-time   =\
    \  [ day \",\" ] date time        ; dd mm yy\n                               \
    \                  ;  hh:mm:ss zzz\n     day         =  \"Mon\"  / \"Tue\" / \
    \ \"Wed\"  / \"Thu\"\n                 /  \"Fri\"  / \"Sat\" /  \"Sun\"\n    \
    \ delimiters  =  specials / linear-white-space / comment\n     destination = \
    \ \"To\"          \":\" 1#address  ; Primary\n                 /  \"Resent-To\"\
    \   \":\" 1#address\n                 /  \"cc\"          \":\" 1#address  ; Secondary\n\
    \                 /  \"Resent-cc\"   \":\" 1#address\n                 /  \"bcc\"\
    \         \":\"  #address  ; Blind carbon\n                 /  \"Resent-bcc\"\
    \  \":\"  #address\n     DIGIT       =  <any ASCII decimal digit>    ; ( 60- 71,\
    \ 48.- 57.)\n     domain      =  sub-domain *(\".\" sub-domain)\n     domain-literal\
    \ =  \"[\" *(dtext / quoted-pair) \"]\"\n     domain-ref  =  atom            \
    \             ; symbolic reference\n     dtext       =  <any CHAR excluding \"\
    [\",     ; => may be folded\n                     \"]\", \"\\\" & CR, & including\n\
    \                     linear-white-space>\n     extension-field =\n          \
    \         <Any field which is defined in a document\n                    published\
    \ as a formal extension to this\n                    specification; none will\
    \ have names beginning\n                    with the string \"X-\">\n     Standard\
    \ for ARPA Internet Text Messages\n     field       =  field-name \":\" [ field-body\
    \ ] CRLF\n     fields      =    dates                      ; Creation time,\n\
    \                      source                     ;  author id & one\n       \
    \             1*destination                ;  address required\n             \
    \        *optional-field             ;  others optional\n     field-body  =  field-body-contents\n\
    \                    [CRLF LWSP-char field-body]\n     field-body-contents =\n\
    \                   <the ASCII characters making up the field-body, as\n     \
    \               defined in the following sections, and consisting\n          \
    \          of combinations of atom, quoted-string, and\n                    specials\
    \ tokens, or else consisting of texts>\n     field-name  =  1*<any CHAR, excluding\
    \ CTLs, SPACE, and \":\">\n     group       =  phrase \":\" [#mailbox] \";\"\n\
    \     hour        =  2DIGIT \":\" 2DIGIT [\":\" 2DIGIT]\n                    \
    \                             ; 00:00:00 - 23:59:59\n     HTAB        =  <ASCII\
    \ HT, horizontal-tab>   ; (     11,       9.)\n     LF          =  <ASCII LF,\
    \ linefeed>         ; (     12,      10.)\n     linear-white-space =  1*([CRLF]\
    \ LWSP-char)  ; semantics = SPACE\n                                          \
    \       ; CRLF => folding\n     local-part  =  word *(\".\" word)            \
    \ ; uninterpreted\n                                                 ; case-preserved\n\
    \     LWSP-char   =  SPACE / HTAB                 ; semantics = SPACE\n     mailbox\
    \     =  addr-spec                    ; simple address\n                 /  phrase\
    \ route-addr            ; name & addr-spec\n     message     =  fields *( CRLF\
    \ *text )       ; Everything after\n                                         \
    \        ;  first null line\n                                                \
    \ ;  is message body\n     month       =  \"Jan\"  /  \"Feb\" /  \"Mar\"  /  \"\
    Apr\"\n                 /  \"May\"  /  \"Jun\" /  \"Jul\"  /  \"Aug\"\n      \
    \           /  \"Sep\"  /  \"Oct\" /  \"Nov\"  /  \"Dec\"\n     msg-id      =\
    \  \"<\" addr-spec \">\"            ; Unique message id\n     optional-field =\n\
    \                 /  \"Message-ID\"        \":\"   msg-id\n                 /\
    \  \"Resent-Message-ID\" \":\"   msg-id\n                 /  \"In-Reply-To\" \
    \      \":\"  *(phrase / msg-id)\n                 /  \"References\"        \"\
    :\"  *(phrase / msg-id)\n                 /  \"Keywords\"          \":\"  #phrase\n\
    \                 /  \"Subject\"           \":\"  *text\n                 /  \"\
    Comments\"          \":\"  *text\n                 /  \"Encrypted\"         \"\
    :\" 1#2word\n                 /  extension-field              ; To be defined\n\
    \                 /  user-defined-field           ; May be pre-empted\n     orig-date\
    \   =  \"Date\"        \":\"   date-time\n     originator  =   authentic     \
    \              ; authenticated addr\n                   [ \"Reply-To\"   \":\"\
    \ 1#address] )\n     phrase      =  1*word                       ; Sequence of\
    \ words\n     Standard for ARPA Internet Text Messages\n     qtext       =  <any\
    \ CHAR excepting <\">,     ; => may be folded\n                     \"\\\" & CR,\
    \ and including\n                     linear-white-space>\n     quoted-pair =\
    \  \"\\\" CHAR                     ; may quote any char\n     quoted-string =\
    \ <\"> *(qtext/quoted-pair) <\">; Regular qtext or\n                         \
    \                        ;   quoted chars.\n     received    =  \"Received\" \
    \   \":\"            ; one per relay\n                       [\"from\" domain]\
    \           ; sending host\n                       [\"by\"   domain]         \
    \  ; receiving host\n                       [\"via\"  atom]             ; physical\
    \ path\n                      *(\"with\" atom)             ; link/mail protocol\n\
    \                       [\"id\"   msg-id]           ; receiver msg id\n      \
    \                 [\"for\"  addr-spec]        ; initial form\n               \
    \         \";\"    date-time         ; time received\n     resent      =   resent-authentic\n\
    \                   [ \"Resent-Reply-To\"  \":\" 1#address] )\n     resent-authentic\
    \ =\n                 =   \"Resent-From\"      \":\"   mailbox\n             \
    \    / ( \"Resent-Sender\"    \":\"   mailbox\n                     \"Resent-From\"\
    \      \":\" 1#mailbox  )\n     resent-date =  \"Resent-Date\" \":\"   date-time\n\
    \     return      =  \"Return-path\" \":\" route-addr ; return address\n     route\
    \       =  1#(\"@\" domain) \":\"           ; path-relative\n     route-addr \
    \ =  \"<\" [route] addr-spec \">\"\n     source      = [  trace ]            \
    \        ; net traversals\n                      originator                 ;\
    \ original mail\n                   [  resent ]                   ; forwarded\n\
    \     SPACE       =  <ASCII SP, space>            ; (     40,      32.)\n    \
    \ specials    =  \"(\" / \")\" / \"<\" / \">\" / \"@\"  ; Must be in quoted-\n\
    \                 /  \",\" / \";\" / \":\" / \"\\\" / <\">  ;  string, to use\n\
    \                 /  \".\" / \"[\" / \"]\"              ;  within a word.\n  \
    \   sub-domain  =  domain-ref / domain-literal\n     text        =  <any CHAR,\
    \ including bare    ; => atoms, specials,\n                     CR & bare LF,\
    \ but NOT       ;  comments and\n                     including CRLF>        \
    \     ;  quoted-strings are\n                                                \
    \ ;  NOT recognized.\n     time        =  hour zone                    ; ANSI\
    \ and Military\n     trace       =    return                     ; path to sender\n\
    \                    1*received                   ; receipt tags\n     user-defined-field\
    \ =\n                   <Any field which has not been defined\n              \
    \      in this specification or published as an\n                    extension\
    \ to this specification; names for\n                    such fields must be unique\
    \ and may be\n                    pre-empted by published extensions>\n     word\
    \        =  atom / quoted-string\n     Standard for ARPA Internet Text Messages\n\
    \     zone        =  \"UT\"  / \"GMT\"                ; Universal Time\n     \
    \                                            ; North American : UT\n         \
    \        /  \"EST\" / \"EDT\"                ;  Eastern:  - 5/ - 4\n         \
    \        /  \"CST\" / \"CDT\"                ;  Central:  - 6/ - 5\n         \
    \        /  \"MST\" / \"MDT\"                ;  Mountain: - 7/ - 6\n         \
    \        /  \"PST\" / \"PDT\"                ;  Pacific:  - 8/ - 7\n         \
    \        /  1ALPHA                       ; Military: Z = UT;\n     <\">      \
    \   =  <ASCII quote mark>           ; (     42,      34.)\n"
