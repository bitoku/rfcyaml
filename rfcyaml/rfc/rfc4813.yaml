- title: __initial_text__
  contents:
  - '                       OSPF Link-Local Signaling

    '
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This memo defines an Experimental Protocol for the Internet\n\
    \   community.  It does not specify an Internet standard of any kind.\n   Discussion\
    \ and suggestions for improvement are requested.\n   Distribution of this memo\
    \ is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The IETF Trust (2007).\n"
- title: Abstract
  contents:
  - "Abstract\n   OSPF is a link-state intra-domain routing protocol used in IP\n\
    \   networks.  OSPF routers exchange information on a link using packets\n   that\
    \ follow a well-defined format.  The format of OSPF packets is not\n   flexible\
    \ enough to enable applications to exchange arbitrary data,\n   which may be necessary\
    \ in certain situations.  This memo describes a\n   vendor-specific, backward-compatible\
    \ technique to perform link-local\n   signaling, i.e., exchange arbitrary data\
    \ on a link.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................2\n\
    \   2. Proposed Solution ...............................................2\n  \
    \    2.1. Options Field ..............................................3\n    \
    \  2.2. LLS Data Block .............................................4\n      2.3.\
    \ LLS TLVs ...................................................5\n      2.4. Predefined\
    \ TLV .............................................5\n           2.4.1. Extended\
    \ Options TLV ................................5\n           2.4.2. Cryptographic\
    \ Authentication TLV ....................6\n   3. Backward Compatibility ..........................................7\n\
    \   4. Security Considerations .........................................7\n  \
    \ 5. IANA Considerations .............................................7\n   6.\
    \ References ......................................................8\n      6.1.\
    \ Normative References .......................................8\n      6.2. Informative\
    \ References .....................................8\n   Appendix A.  Acknowledgements\
    \ ......................................9\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   Formats of OSPF [RFC2328] packets are not very flexible\
    \ to provide an\n   acceptable mechanism for opaque data transfer.  However, this\
    \ appears\n   to be very useful to allow OSPF routers to do so.  An example where\n\
    \   such a technique could be used is exchanging some capabilities on a\n   link\
    \ (standard OSPF utilizes the Options field in Hello and Exchange\n   packets,\
    \ but there are not so many bits left in it).\n   One potential way of solving\
    \ this task could be introducing a new\n   packet type.  However, that would mean\
    \ introducing extra packets on\n   the network, which may not be desirable, so\
    \ this document describes\n   how to exchange data using existing, standard OSPF\
    \ packet types.\n"
- title: 2.  Proposed Solution
  contents:
  - "2.  Proposed Solution\n   To perform link-local signaling (LLS), OSPF routers\
    \ add a special\n   data block at the end of OSPF packets or right after the\n\
    \   authentication data block when cryptographic authentication is used.\n   Like\
    \ with OSPF cryptographic authentication, the length of the LLS-\n   block is\
    \ not included into the length of OSPF packet, but is included\n   in the IP packet\
    \ length.  Figure 1 illustrates how the LLS data block\n   is attached.\n    \
    \                     +---------------------+ --\n                         | IP\
    \ Header           | ^\n                         | Length = HL+X+Y+Z   | | Header\
    \ Length\n                         |                     | v\n               \
    \          +---------------------+ --\n                         | OSPF Header\
    \         | ^\n                         | Length = X          | |\n          \
    \               |.....................| | X\n                         |      \
    \               | |\n                         | OSPF Data           | |\n    \
    \                     |                     | v\n                         +---------------------+\
    \ --\n                         |                     | ^\n                   \
    \      | Authentication Data | | Y\n                         |               \
    \      | v\n                         +---------------------+ --\n            \
    \             |                     | ^\n                         |  LLS Data\
    \           | | Z\n                         |                     | v\n      \
    \                   +---------------------+ --\n                    Figure 1:\
    \ Attaching LLS Data Block\n   The LLS data block may be attached to OSPF packets\
    \ of two types --\n   type 1 (OSPF Hello), and type 2 (OSPF DBD).  The data included\
    \ in the\n   LLS block attached to a Hello packet may be used for dynamic\n  \
    \ signaling, since Hello packets may be sent at any moment in time.\n   However,\
    \ delivery of LLS data in Hello packets is not guaranteed.\n   The data sent with\
    \ Database Description (DBD) packets is guaranteed\n   to be delivered as part\
    \ of the adjacency forming process.\n   This memo does not specify how the data\
    \ transmitted by the LLS\n   mechanism should be interpreted by OSPF routers.\
    \  The interface\n   between the OSPF LLS component and its clients is implementation-\n\
    \   specific.\n"
- title: 2.1.  Options Field
  contents:
  - "2.1.  Options Field\n   A new bit, called L (L stands for LLS), is introduced\
    \ to the OSPF\n   Options field (see Figure 2).  The value of the bit is 0x10.\
    \  Routers\n   set the L-bit in Hello and DBD packets to indicate that the packet\n\
    \   contains the LLS data block.\n                     +---+---+---+---+---+---+---+---+\n\
    \                     | * | O | DC| L |N/P| MC| E | * |\n                    \
    \ +---+---+---+---+---+---+---+-+-+\n                        Figure 2: The Options\
    \ Field\n   L-bit\n      This bit is set only in Hello and DBD packets.  It is\
    \ not set in\n      OSPF Link State Advertisements (LSAs) and may be used in them\
    \ for\n      different purposes.\n"
- title: 2.2.  LLS Data Block
  contents:
  - "2.2.  LLS Data Block\n   The data block used for link-local signaling is formatted\
    \ as\n   described below (see Figure 3 for illustration).\n     0            \
    \       1                   2                   3\n     0 1 2 3 4 5 6 7 8 9 0\
    \ 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |            Checksum           |       LLS Data Length         |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |                                                               |\n    |\
    \                           LLS TLVs                            |\n    .     \
    \                                                          .\n    .          \
    \                                                     .\n    .               \
    \                                                .\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \                  Figure 3: Format of the LLS Data Block\n   Checksum\n     \
    \ The Checksum field contains the standard IP checksum of the entire\n      contents\
    \ of the LLS block.\n   LLS Length\n      The 16-bit LLS Data Length field contains\
    \ the length (in 32-bit\n      words) of the LLS block including the header and\
    \ payload.\n      Implementations should not use the Length field in the IP packet\n\
    \      header to determine the length of the LLS data block.\n   Note that if\
    \ the OSPF packet is cryptographically authenticated, the\n   LLS data block must\
    \ also be cryptographically authenticated.  In this\n   case, the regular LLS\
    \ checksum is not calculated and the LLS block\n   will contain a cryptographic\
    \ authentication TLV (see Section 2.4.2).\n   The rest of the block contains a\
    \ set of Type/Length/Value (TLV)\n   triplets as described in Section 2.3.  All\
    \ TLVs must be 32-bit\n   aligned (with padding if necessary).\n"
- title: 2.3.  LLS TLVs
  contents:
  - "2.3.  LLS TLVs\n   The contents of the LLS data block is constructed using TLVs.\
    \  See\n   Figure 4 for the TLV format.\n   The Type field contains the TLV ID\
    \ that is unique for each type of\n   TLVs.  The Length field contains the length\
    \ of the Value field (in\n   bytes) that is variable and contains arbitrary data.\n\
    \     0                   1                   2                   3\n     0 1\
    \ 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |            Type               |           Length              |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |                                                               |\n    .\
    \                                                               .\n    .     \
    \                        Value                             .\n    .          \
    \                                                     .\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \                       Figure 4: Format of LLS TLVs\n   Note that TLVs are always\
    \ padded to 32-bit boundary, but padding\n   bytes are not included in the TLV\
    \ Length field (though it is included\n   in the LLS Data Length field of the\
    \ LLS block header).\n"
- title: 2.4.  Predefined TLV
  contents:
  - '2.4.  Predefined TLV

    '
- title: 2.4.1.  Extended Options TLV
  contents:
  - "2.4.1.  Extended Options TLV\n   This subsection describes a TLV called Extended\
    \ Options (EO) TLV.\n   The format of EO-TLV is shown in Figure 5.\n   Bits in\
    \ the Value field do not have any semantics from the point of\n   view of the\
    \ LLS mechanism.  This field may be used to announce some\n   OSPF capabilities\
    \ that are link-specific.  Also, other OSPF\n   extensions may allocate bits in\
    \ the bit vector to perform boolean\n   link-local signaling.\n   The length of\
    \ the Value field in EO-TLV is 4 bytes.\n   The value of the Type field in EO-TLV\
    \ is 1.\n   EO-TLV should only appear once in the LLS data block.\n     0    \
    \               1                   2                   3\n     0 1 2 3 4 5 6\
    \ 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |             1                 |           Length              |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |                       Extended Options                        |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \                        Figure 5: Format of EO-TLV\n   Currently, [RFC4811] and\
    \ [RFC4812] use bits in the Extended Options\n   field of the EO-TLV.  The Extended\
    \ Options bits are also defined in\n   Section 5.\n"
- title: 2.4.2.  Cryptographic Authentication TLV
  contents:
  - "2.4.2.  Cryptographic Authentication TLV\n   This document defines a special\
    \ TLV that is used for cryptographic\n   authentication (CA-TLV) of the LLS data\
    \ block.  This TLV should be\n   included in the LLS block when the cryptographic\
    \ (MD5) authentication\n   is enabled on the corresponding interface.  The message\
    \ digest of the\n   LLS block should be calculated using the same key as that\
    \ used for\n   the main OSPF packet.  The cryptographic sequence number is included\n\
    \   in the TLV and must be the same as the one in the main OSPF packet\n   for\
    \ the LLS block to be considered authentic.\n   The TLV is constructed as shown\
    \ Figure 6.\n     0                   1                   2                  \
    \ 3\n     0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n  \
    \  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n    |  \
    \            2                |         AuthLen               |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |                         Sequence Number                       |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |                                                               |\n    .\
    \                                                               .\n    .     \
    \                      AuthData                            .\n    .          \
    \                                                     .\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \           Figure 6: Format of Cryptographic Authentication TLV\n   The value\
    \ of the Type field for CA-TLV is 2.\n   The Length field in the header contains\
    \ the length of the data\n   portion of the TLV that includes 4 bytes for the\
    \ sequence number and\n   the length of the message digest (MD5) block for the\
    \ whole LLS block\n   in bytes (this will always be 16 bytes for MD5).  So the\
    \ AuthLen\n   field will have value of 20.\n   The Sequence Number field contains\
    \ the cryptographic sequence number\n   that is used to prevent simple replay\
    \ attacks.  For the LLS block to\n   be considered authentic, the sequence number\
    \ in the CA-TLV must match\n   the sequence number in the OSPF packet.\n   The\
    \ AuthData field contains the message digest calculated for the LLS\n   data block.\n\
    \   The CA-TLV may appear in the LLS block only once.  Also, when\n   present,\
    \ this TLV should be the last in the LLS block.\n"
- title: 3.  Backward Compatibility
  contents:
  - "3.  Backward Compatibility\n   The modifications to OSPF packet formats are compatible\
    \ with standard\n   OSPF because LLS-incapable routers will not consider the extra\
    \ data\n   after the packet; i.e., the LLS data block will be ignored by routers\n\
    \   that do not support the LLS extension.\n"
- title: 4.  Security Considerations
  contents:
  - "4.  Security Considerations\n   The function described in this document does\
    \ not create any new\n   security issues for the OSPF protocol.  The described\
    \ technique\n   provides the same level of security as the OSPF protocol by allowing\n\
    \   LLS data to be authenticated (see Section 2.4.2 for more details).\n"
- title: 5.  IANA Considerations
  contents:
  - "5.  IANA Considerations\n   LLS TLV types are maintained by the IANA.  Extensions\
    \ to OSPF that\n   require a new LLS TLV type must be reviewed by a designated\
    \ expert\n   from the routing area.\n   Following the policies outlined in [RFC2434],\
    \ LLS type values in the\n   range of 0-32767 are allocated through an IETF consensus\
    \ action, and\n   LLS type values in the range of 32768-65536 are reserved for\
    \ private\n   and experimental use.\n   This document assigns LLS types 1 and\
    \ 2, as follows:\n        LLS Type    Name                                   \
    \   Reference\n            0       Reserved\n            1       Extended Options\
    \                          [RFC4813]\n            2       Cryptographic Authentication\
    \              [RFC4813]\n            3-32767 Reserved for assignment by the IANA\n\
    \        32768-65535 Private Use\n   This document also assigns the following\
    \ bits for the Extended\n   Options bits field in the EO-TLV outlined in Section\
    \ 2.4.1:\n        Extended Options Bit      Name                        Reference\n\
    \          0x00000001              LSDB Resynchronization (LR) [RFC4811]\n   \
    \       0x00000002              Restart Signal (RS-bit)     [RFC4812]\n   Other\
    \ Extended Options bits will be allocated through an IETF\n   consensus action.\n"
- title: 6.  References
  contents:
  - '6.  References

    '
- title: 6.1.  Normative References
  contents:
  - "6.1.  Normative References\n   [RFC2328]  Moy, J., \"OSPF Version 2\", STD 54,\
    \ RFC 2328, April 1998.\n   [RFC2434]  Narten, T. and H. Alvestrand, \"Guidelines\
    \ for Writing an\n              IANA Considerations Section in RFCs\", BCP 26,\
    \ RFC 2434,\n              October 1998.\n"
- title: 6.2.  Informative References
  contents:
  - "6.2.  Informative References\n   [RFC4811]  Nguyen, L., Roy, A., and A. Zinin,\
    \ \"OSPF Out-of-Band Link\n              State Database (LSDB) Resynchronization\"\
    , RFC 4811,\n              February 2007.\n   [RFC4812]  Nguyen, L., Roy, A.,\
    \ and A. Zinin, \"OSPF Restart\n              Signaling\", RFC 4812, February\
    \ 2007.\n"
- title: Appendix A.  Acknowledgments
  contents:
  - "Appendix A.  Acknowledgments\n   The authors would like to acknowledge Russ White\
    \ for his review of\n   this document.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Barry Friedman\n   Cisco Systems\n   225 West Tasman Drive\n\
    \   San Jose, CA  95134\n   USA\n   EMail: friedman@cisco.com\n   Liem Nguyen\n\
    \   Cisco Systems\n   225 West Tasman Drive\n   San Jose, CA  95134\n   USA\n\
    \   EMail: lhnguyen@cisco.com\n   Abhay Roy\n   Cisco Systems\n   225 West Tasman\
    \ Drive\n   San Jose, CA  95134\n   USA\n   EMail: akr@cisco.com\n   Derek Yeung\n\
    \   Cisco Systems\n   225 West Tasman Drive\n   San Jose, CA  95134\n   USA\n\
    \   EMail: myeung@cisco.com\n   Alex Zinin\n   Alcatel\n   Sunnyvale, CA\n   USA\n\
    \   EMail: zinin@psg.com\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The IETF Trust (2007).\n   This document\
    \ is subject to the rights, licenses and restrictions\n   contained in BCP 78,\
    \ and except as set forth therein, the authors\n   retain all their rights.\n\
    \   This document and the information contained herein are provided on an\n  \
    \ \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n  \
    \ OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY, THE IETF TRUST AND\n   THE\
    \ INTERNET ENGINEERING TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS\n   OR IMPLIED,\
    \ INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF\n   THE INFORMATION\
    \ HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY\
    \ OR FITNESS FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ procedures with respect to rights in RFC documents can be\n   found in BCP 78\
    \ and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat and any\n\
    \   assurances of licenses to be made available, or the result of an\n   attempt\
    \ made to obtain a general license or permission for the use of\n   such proprietary\
    \ rights by implementers or users of this\n   specification can be obtained from\
    \ the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n   The IETF\
    \ invites any interested party to bring to its attention any\n   copyrights, patents\
    \ or patent applications, or other proprietary\n   rights that may cover technology\
    \ that may be required to implement\n   this standard.  Please address the information\
    \ to the IETF at\n   ietf-ipr@ietf.org.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
