- contents:
  - '                         IMAP REPLACE Extension

    '
  title: __initial_text__
- contents:
  - "Abstract\n   This document defines an IMAP extension that can be used to replace\n
    \  an existing message in a message store with a new message.  Message\n   replacement
    is a common operation for clients that automatically save\n   drafts or notes
    as a user composes them.\n"
  title: Abstract
- contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This
    document is a product of the Internet Engineering Task Force\n   (IETF).  It represents
    the consensus of the IETF community.  It has\n   received public review and has
    been approved for publication by the\n   Internet Engineering Steering Group (IESG).
    \ Further information on\n   Internet Standards is available in Section 2 of RFC
    7841.\n   Information about the current status of this document, any errata,\n
    \  and how to provide feedback on it may be obtained at\n   https://www.rfc-editor.org/info/rfc8508.\n"
  title: Status of This Memo
- contents:
  - "Copyright Notice\n   Copyright (c) 2019 IETF Trust and the persons identified
    as the\n   document authors.  All rights reserved.\n   This document is subject
    to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n
    \  (https://trustee.ietf.org/license-info) in effect on the date of\n   publication
    of this document.  Please review these documents\n   carefully, as they describe
    your rights and restrictions with respect\n   to this document.  Code Components
    extracted from this document must\n   include Simplified BSD License text as described
    in Section 4.e of\n   the Trust Legal Provisions and are provided without warranty
    as\n   described in the Simplified BSD License.\n"
  title: Copyright Notice
- contents:
  - "Table of Contents\n   1.  Overview  . . . . . . . . . . . . . . . . . . . . .
    . . . . .   2\n   2.  Conventions Used in This Document . . . . . . . . . . .
    . . .   3\n   3.  REPLACE and UID REPLACE . . . . . . . . . . . . . . . . . .
    .   3\n     3.1.  Advertising Support for REPLACE . . . . . . . . . . . . .   3\n
    \    3.2.  REPLACE Command . . . . . . . . . . . . . . . . . . . . .   3\n     3.3.
    \ UID REPLACE Command . . . . . . . . . . . . . . . . . . .   4\n     3.4.  Semantics
    of REPLACE and UID REPLACE  . . . . . . . . . .   5\n     3.5.  IMAP State Diagram
    Impacts  . . . . . . . . . . . . . . .   6\n   4.  Interaction with Other Extensions
    . . . . . . . . . . . . . .   6\n     4.1.  ACL . . . . . . . . . . . . . . .
    . . . . . . . . . . . .   6\n     4.2.  CATENATE  . . . . . . . . . . . . . .
    . . . . . . . . . .   6\n     4.3.  UIDPLUS . . . . . . . . . . . . . . . . .
    . . . . . . . .   8\n     4.4.  IMAP Events in Sieve  . . . . . . . . . . . .
    . . . . . .   8\n     4.5.  CONDSTORE/QRESYNC . . . . . . . . . . . . . . . .
    . . . .   8\n     4.6.  OBJECTID  . . . . . . . . . . . . . . . . . . . . . .
    . .   8\n     4.7.  MULTIAPPEND . . . . . . . . . . . . . . . . . . . . . . .
    \  8\n   5.  Formal Syntax . . . . . . . . . . . . . . . . . . . . . . . .   9\n
    \  6.  Security Considerations . . . . . . . . . . . . . . . . . . .   9\n   7.
    \ IANA Considerations . . . . . . . . . . . . . . . . . . . . .   9\n   8.  References
    \ . . . . . . . . . . . . . . . . . . . . . . . . .   9\n     8.1.  Normative
    References  . . . . . . . . . . . . . . . . . .   9\n     8.2.  Informative References
    \ . . . . . . . . . . . . . . . . .  10\n   Acknowledgements  . . . . . . . .
    . . . . . . . . . . . . . . . .  11\n   Author's Address  . . . . . . . . . .
    . . . . . . . . . . . . . .  11\n"
  title: Table of Contents
- contents:
  - "1.  Overview\n   This document defines an IMAP ([RFC3501]) extension to facilitate
    the\n   replacement of an existing message with a new one.  This is\n   accomplished
    by defining a new REPLACE command and extending the\n   Unique Identifier (UID)
    command to allow UID REPLACE.\n   Since there is no replace function in the base
    IMAP specification,\n   clients have instead had to use a combination of three
    separate\n   commands issued in serial fashion; APPEND, STORE, and EXPUNGE.\n
    \  Pipelining of these three commands is not recommended since failure\n   of
    any individual command should prevent subsequent commands from\n   being executed
    lest the original message version be lost.\n   Because of the non-atomic nature
    of the existing sequence,\n   interruptions can leave messages in intermediate
    states that can be\n   seen and acted upon by other clients.  Such interruptions
    can also\n   strand older revisions of messages, thereby forcing the user to\n
    \  manually clean up multiple revisions of the same message in order to\n   avoid
    wasteful quota consumption.  Additionally, the existing\n   sequence can fail
    on APPEND due to an over-quota condition even\n   though the subsequent STORE/EXPUNGE
    would free up enough space for\n   the newly revised message.  And finally, server
    efficiencies may be\n   possible with a single logical message replacement operation
    as\n   compared to the existing APPEND/STORE/EXPUNGE sequence.\n   In its simplest
    form, the REPLACE command is a single-command\n   encapsulation of APPEND, STORE
    +flags \\DELETED, and UID EXPUNGE for a\n   message, except that it avoids any
    of the quota implications or\n   intermediate states associated with the three-command
    sequence.\n   Server developers are encouraged to implement REPLACE as an atomic\n
    \  operation to simplify error handling, minimize operational concerns,\n   and
    reduce potential security problems.  For systems where this is\n   not possible,
    communication with the requesting client must ensure no\n   confusion of message
    store state.  A server MUST NOT generate a\n   response code for the STORE +flags
    \\DELETED portion of the sequence.\n   Additionally, servers supporting the REPLACE
    command MUST NOT infer\n   any inheritance of content, flags, or annotations from
    the message\n   being replaced.\n"
  title: 1.  Overview
- contents:
  - "2.  Conventions Used in This Document\n   The key words \"MUST\", \"MUST NOT\",
    \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\",
    \"NOT RECOMMENDED\", \"MAY\", and\n   \"OPTIONAL\" in this document are to be
    interpreted as described in\n   BCP 14 [RFC2119] [RFC8174] when, and only when,
    they appear in all\n   capitals, as shown here.\n   Formal syntax is defined by
    [RFC5234].\n   Example lines prefaced by \"C:\" are sent by the client, and ones\n
    \  prefaced by \"S:\" are sent by the server.\n"
  title: 2.  Conventions Used in This Document
- contents:
  - '3.  REPLACE and UID REPLACE

    '
  - contents:
    - "3.1.  Advertising Support for REPLACE\n   Servers that implement the REPLACE
      extension will return \"REPLACE\" as\n   one of the supported capabilities in
      the CAPABILITY command response.\n"
    title: 3.1.  Advertising Support for REPLACE
  - contents:
    - "3.2.  REPLACE Command\n   Arguments:  message sequence number\n               mailbox
      name\n               OPTIONAL flag parenthesized list\n               OPTIONAL
      date/time string\n               message literal\n   Responses: no specific
      responses for this command\n   Result:     OK - replace completed\n               NO
      - replace error; can't remove specified message\n                    or can't
      add new message content\n               BAD - command unknown or arguments invalid\n
      \  Example:\n     C: A003 REPLACE 4 Drafts (\\Seen \\Draft) {312}\n     S: +
      Ready for literal data\n     C: Date: Thu, 1 Jan 2015 00:05:00 -0500 (EST)\n
      \    C: From: Fritz Schmidt <fritz.ze@example.org>\n     C: Subject: happy new
      year !!\n     C: To: miss.mitzy@example.org\n     C: Message-Id: <B238822388-0100000@example.org>\n
      \    C: MIME-Version: 1.0\n     C: Content-Type: TEXT/PLAIN; CHARSET=US-ASCII\n
      \    C:\n     C: Just saw the best fireworks show. Wish you were here.\n     C:\n
      \    S: * OK [APPENDUID 1 2000] Replacement Message ready\n     S: * 5 EXISTS\n
      \    S: * 4 EXPUNGE\n     S: A003 OK Replace completed\n"
    title: 3.2.  REPLACE Command
  - contents:
    - "3.3.  UID REPLACE Command\n   This extends the first form of the UID command
      (see Section 6.4.8 of\n   [RFC3501]) to add the REPLACE command defined above
      as a valid\n   argument.  This form of REPLACE uses a UID rather than a sequence\n
      \  number as its first parameter.\n   Example:\n     C: A004 UID REPLACE 2000
      Drafts (\\Seen \\Draft) {350}\n     S: + Ready for literal data\n     C: Date:
      Thu, 1 Jan 2015 00:06:00 -0500 (EST)\n     C: From: Fritz Schmidt <fritz.ze@example.org>\n
      \    C: Subject: happy new year !!\n     C: To: miss.mitzy@example.org\n     C:
      Message-Id: <B238822389-0100000@example.org>\n     C: MIME-Version: 1.0\n     C:
      Content-Type: TEXT/PLAIN; CHARSET=US-ASCII\n     C:\n     C: Just saw the best
      fireworks show. Wish you were here.\n     C: Hopefully next year you can join
      us.\n     C:\n     S: * OK [APPENDUID 1 2001] Replacement Message ready\n     S:
      * 5 EXISTS\n     S: * 4 EXPUNGE\n     S: A004 OK Replace completed\n"
    title: 3.3.  UID REPLACE Command
  - contents:
    - "3.4.  Semantics of REPLACE and UID REPLACE\n   The REPLACE and UID REPLACE
      commands take five arguments: a message\n   identifier, a named mailbox, an
      optional parenthesized flag list, an\n   optional message date/time string,
      and a message literal.  The\n   message literal will be appended to the named
      mailbox, and the\n   message specified by the message identifier will be removed
      from the\n   selected mailbox.  These operations will appear to the client as
      a\n   single action.  This has the same effect as the following sequence:\n
      \     1. APPEND\n      2. [UID] STORE +FLAGS.SILENT \\DELETED\n      3. UID
      EXPUNGE\n   In the cited sequence, the quota implications of APPEND are evaluated\n
      \  within the context of the pending EXPUNGE so that only the net quota\n   consumption
      is considered.  Additionally, the EXPUNGE portion of the\n   sequence only applies
      to the specified message, not all messages\n   flagged as \"\\Deleted\".\n   Although
      the effect of REPLACE is identical to the steps above, the\n   semantics are
      not identical; similar to MOVE [RFC6851], the\n   intermediate states do not
      occur and the response codes are\n   different.  In particular, the response
      codes for APPEND and EXPUNGE\n   will be returned while those for the STORE
      operation MUST NOT be\n   generated.\n   When an error occurs while processing
      REPLACE or UID REPLACE, the\n   server MUST NOT leave the selected mailbox in
      an inconsistent state;\n   any untagged EXPUNGE response MUST NOT be sent until
      all actions are\n   successfully completed.\n   While it may be common for the
      named mailbox argument to match the\n   selected mailbox for the common use
      case of replacing a draft, the\n   REPLACE extension intentionally does not
      require the two to be the\n   same.  As an example, it's possible to use the
      REPLACE command to\n   replace a message in the \\Drafts special-use mailbox
      (see Section 2\n   of [RFC6154]) with a message in the \\Sent special-use mailbox\n
      \  following message submission.\n   Because of the similarity of REPLACE to
      APPEND, extensions that\n   affect APPEND affect REPLACE in the same way.  Response
      codes such as\n   TRYCREATE (see Section 6.3.11 of [RFC3501]), along with those
      defined\n   by extensions, are sent as appropriate.  See Section 4 for more\n
      \  information about how REPLACE interacts with other IMAP extensions.\n"
    title: 3.4.  Semantics of REPLACE and UID REPLACE
  - contents:
    - "3.5.  IMAP State Diagram Impacts\n   Unlike the APPEND command, which is valid
      in the authenticated state,\n   the REPLACE and UID REPLACE commands MUST only
      be valid in the\n   selected state.  This difference from APPEND is necessary
      since\n   REPLACE operates on message sequence numbers.  Additionally, the\n
      \  REPLACE extension intentionally follows the convention for UID\n   commands
      found in Section 6.4.8 of [RFC3501] in that the UID variant\n   of the command
      does not support use from the authenticated state.\n"
    title: 3.5.  IMAP State Diagram Impacts
  title: 3.  REPLACE and UID REPLACE
- contents:
  - "4.  Interaction with Other Extensions\n   This section describes how REPLACE
    interacts with some other IMAP\n   extensions.\n"
  - contents:
    - "4.1.  ACL\n   The Access Control List (ACL) rights [RFC4314] required for UID\n
      \  REPLACE are the union of the ACL rights required for UID STORE and\n   UID
      EXPUNGE in the current mailbox, and APPEND in the target mailbox.\n"
    title: 4.1.  ACL
  - contents:
    - "4.2.  CATENATE\n   Servers supporting both REPLACE and CATENATE [RFC4469] MUST
      support\n   the additional append-data and resp-text-code elements defined in\n
      \  Section 5 (\"Formal Syntax\") of [RFC4469] in conjunction with the\n   REPLACE
      command.  When combined with CATENATE, REPLACE can become\n   quite an efficient
      way of message manipulation.\n   Example:\n     User composes message and attaches
      photo\n     ----------------------------------------\n     C: A010 APPEND Drafts
      (\\Seen \\Draft) {1201534}\n     S: + Ready for literal data\n     C: Date:
      Thu, 1 Jan 2015 00:10:00 -0500 (EST)\n     C: From: Fritz Schmidt <fritz.ze@example.org>\n
      \    C: Message-ID: <B238822388-0100003@example.org>\n     C: MIME-Version:
      1.0\n     C: Content-Type: multipart/mixed;\n     C:         boundary=\"------------030305060306060609050804\"\n
      \    C:\n     C: --------------030305060306060609050804\n     C: Content-Type:
      text/plain; charset=utf-8; format=flowed\n     C: Content-Transfer-Encoding:
      7bit\n     C:\n     C: Here is picture from the fireworks\n     C:\n     C:
      Yours...\n     C: Fritz\n     C:\n     C: --------------030305060306060609050804\n
      \    C: Content-Type: image/jpeg;\n     C:         name=\"Fireworks.jpg\"\n
      \    C: Content-Transfer-Encoding: base64\n     C: Content-Disposition: attachment;\n
      \    C:         filename=\"Fireworks.jpg\"\n     C:\n       <large base64 encoded
      part goes here>\n     C:\n     C: --------------030305060306060609050804--\n
      \    S: A010 OK [APPENDUID 1 3002] APPEND complete\n     User completes message
      with To: and Subject: fields\n     ---------------------------------------------------\n
      \    C: A011 UID REPLACE 3002 Drafts CATENATE (TEXT {71}\n     S: + Ready for
      literal data\n     C: To: Mitzy <miss.mitzy@example.org>\n     C: Subject: My
      view of the fireworks\n     C:  URL \"/Drafts/;UID=3002\")\n     S: * OK [APPENDUID
      1 3003] Replacement Message ready\n     S: * 5 EXISTS\n     S: * 4 EXPUNGE\n
      \    S: A011 OK REPLACE completed\n"
    title: 4.2.  CATENATE
  - contents:
    - "4.3.  UIDPLUS\n   Servers supporting both REPLACE and UIDPLUS [RFC4315] SHOULD
      send\n   APPENDUID in response to a UID REPLACE command.  For additional\n   information,
      see Section 3 of [RFC4315].  Servers implementing\n   REPLACE and UIDPLUS are
      also advised to send the APPENDUID response\n   code in an untagged OK before
      sending the EXPUNGE or replaced\n   responses.  (Sending APPENDUID in the tagged
      OK as described in the\n   UIDPLUS specification means that the client first
      receives EXPUNGE\n   for a message and afterwards APPENDUID for the new message.
      \ It can\n   be unnecessarily difficult to process that sequence usefully.)\n"
    title: 4.3.  UIDPLUS
  - contents:
    - "4.4.  IMAP Events in Sieve\n   REPLACE applies to IMAP events in Sieve [RFC6785]
      in the same way\n   that APPEND does.  Therefore, REPLACE can cause a Sieve
      script to be\n   invoked with the imap.cause set to \"APPEND\".  Because the\n
      \  intermediate state of STORE +FLAGS.SILENT \\DELETED is not exposed by\n   REPLACE,
      no action will be taken that results in an imap.cause of\n   FLAG.\n"
    title: 4.4.  IMAP Events in Sieve
  - contents:
    - "4.5.  CONDSTORE/QRESYNC\n   Servers implementing both REPLACE and CONDSTORE/QRESYNC
      [RFC7162]\n   MUST treat the message being replaced as if it were being removed\n
      \  with a UID EXPUNGE command.  Sections 3.2.9 and 3.2.10 of [RFC7162]\n   are
      particularly relevant for this condition.\n"
    title: 4.5.  CONDSTORE/QRESYNC
  - contents:
    - "4.6.  OBJECTID\n   Servers implementing both REPLACE and OBJECTID [RFC8474]
      MUST return\n   different EMAILIDs for both the replaced and replacing messages.
      \ The\n   only exception to this is the case outlined in Section 5.1 (\"EMAILID\n
      \  Identifier for Identical Messages\") of [RFC8474] when the server\n   detects
      that both messages' immutable content is identical.\n"
    title: 4.6.  OBJECTID
  - contents:
    - "4.7.  MULTIAPPEND\n   The REPLACE extension has no interaction with MULTIAPPEND
      [RFC3502].\n   This document explicitly does not outline a method for replacing\n
      \  multiple messages concurrently.\n"
    title: 4.7.  MULTIAPPEND
  title: 4.  Interaction with Other Extensions
- contents:
  - "5.  Formal Syntax\n   The following syntax specification uses the Augmented Backus-Naur\n
    \  Form (ABNF) notation as specified in [RFC5234].  [RFC3501] defines\n   the
    non-terminals \"capability\",\"command-select\", \"mailbox\",\n   \"seq-number\",
    and \"uid\".  [RFC4466] defines the non-terminal\n   \"append-message\".\n   Except
    as noted otherwise, all alphabetic characters are case\n   insensitive.  The use
    of uppercase or lowercase characters to define\n   token strings is for editorial
    clarity only.  Implementations MUST\n   accept these strings in a case-insensitive
    fashion.\n   capability     =/ \"REPLACE\"\n   command-select =/ replace\n   replace
    \       = \"REPLACE\" SP seq-number SP mailbox append-message\n   uid            =/
    \"UID\" SP replace\n"
  title: 5.  Formal Syntax
- contents:
  - "6.  Security Considerations\n   This document is believed to add no security
    problems beyond those\n   that may already exist with the base IMAP specification.
    \ The REPLACE\n   command may actually prevent some potential security problems
    because\n   it avoids intermediate message states that could possibly be\n   exploited
    by an attacker.\n"
  title: 6.  Security Considerations
- contents:
  - "7.  IANA Considerations\n   The IANA has added REPLACE to the \"IMAP Capabilities\"
    registry at\n   <https://www.iana.org/assignments/imap-capabilities>.\n"
  title: 7.  IANA Considerations
- contents:
  - '8.  References

    '
  - contents:
    - "8.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use
      in RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119,\n
      \             DOI 10.17487/RFC2119, March 1997,\n              <https://www.rfc-editor.org/info/rfc2119>.\n
      \  [RFC3501]  Crispin, M., \"INTERNET MESSAGE ACCESS PROTOCOL - VERSION\n              4rev1\",
      RFC 3501, DOI 10.17487/RFC3501, March 2003,\n              <https://www.rfc-editor.org/info/rfc3501>.\n
      \  [RFC4314]  Melnikov, A., \"IMAP4 Access Control List (ACL) Extension\",\n
      \             RFC 4314, DOI 10.17487/RFC4314, December 2005,\n              <https://www.rfc-editor.org/info/rfc4314>.\n
      \  [RFC4315]  Crispin, M., \"Internet Message Access Protocol (IMAP) -\n              UIDPLUS
      extension\", RFC 4315, DOI 10.17487/RFC4315,\n              December 2005, <https://www.rfc-editor.org/info/rfc4315>.\n
      \  [RFC4466]  Melnikov, A. and C. Daboo, \"Collected Extensions to IMAP4\n              ABNF\",
      RFC 4466, DOI 10.17487/RFC4466, April 2006,\n              <https://www.rfc-editor.org/info/rfc4466>.\n
      \  [RFC4469]  Resnick, P., \"Internet Message Access Protocol (IMAP)\n              CATENATE
      Extension\", RFC 4469, DOI 10.17487/RFC4469, April\n              2006, <https://www.rfc-editor.org/info/rfc4469>.\n
      \  [RFC5234]  Crocker, D., Ed. and P. Overell, \"Augmented BNF for Syntax\n
      \             Specifications: ABNF\", STD 68, RFC 5234,\n              DOI 10.17487/RFC5234,
      January 2008,\n              <https://www.rfc-editor.org/info/rfc5234>.\n   [RFC6785]
      \ Leiba, B., \"Support for Internet Message Access Protocol\n              (IMAP)
      Events in Sieve\", RFC 6785, DOI 10.17487/RFC6785,\n              November 2012,
      <https://www.rfc-editor.org/info/rfc6785>.\n   [RFC7162]  Melnikov, A. and D.
      Cridland, \"IMAP Extensions: Quick Flag\n              Changes Resynchronization
      (CONDSTORE) and Quick Mailbox\n              Resynchronization (QRESYNC)\",
      RFC 7162,\n              DOI 10.17487/RFC7162, May 2014,\n              <https://www.rfc-editor.org/info/rfc7162>.\n
      \  [RFC8174]  Leiba, B., \"Ambiguity of Uppercase vs Lowercase in RFC\n              2119
      Key Words\", BCP 14, RFC 8174, DOI 10.17487/RFC8174,\n              May 2017,
      <https://www.rfc-editor.org/info/rfc8174>.\n   [RFC8474]  Gondwana, B., Ed.,
      \"IMAP Extension for Object\n              Identifiers\", RFC 8474, DOI 10.17487/RFC8474,
      September\n              2018, <https://www.rfc-editor.org/info/rfc8474>.\n"
    title: 8.1.  Normative References
  - contents:
    - "8.2.  Informative References\n   [RFC3502]  Crispin, M., \"Internet Message
      Access Protocol (IMAP) -\n              MULTIAPPEND Extension\", RFC 3502, DOI
      10.17487/RFC3502,\n              March 2003, <https://www.rfc-editor.org/info/rfc3502>.\n
      \  [RFC6154]  Leiba, B. and J. Nicolson, \"IMAP LIST Extension for\n              Special-Use
      Mailboxes\", RFC 6154, DOI 10.17487/RFC6154,\n              March 2011, <https://www.rfc-editor.org/info/rfc6154>.\n
      \  [RFC6851]  Gulbrandsen, A. and N. Freed, Ed., \"Internet Message\n              Access
      Protocol (IMAP) - MOVE Extension\", RFC 6851,\n              DOI 10.17487/RFC6851,
      January 2013,\n              <https://www.rfc-editor.org/info/rfc6851>.\n"
    title: 8.2.  Informative References
  title: 8.  References
- contents:
  - "Acknowledgements\n   The author would like to thank the participants of IMAPEXT
    with\n   particular thanks to Arnt Gulbrandsen, Alexey Melnikov, Chris Newman,\n
    \  and Bron Gondwana for their specific contributions.\n"
  title: Acknowledgements
- contents:
  - "Author's Address\n   Stuart Brandt\n   Verizon\n   22001 Loudoun County Parkway\n
    \  Ashburn, VA  20147\n   United States of America\n   Email: stujenerin@aol.com\n"
  title: Author's Address
