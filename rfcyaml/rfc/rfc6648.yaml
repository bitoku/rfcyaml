- title: __initial_text__
  contents:
  - "           Deprecating the \"X-\" Prefix and Similar Constructs\n           \
    \             in Application Protocols\n"
- title: Abstract
  contents:
  - "Abstract\n   Historically, designers and implementers of application protocols\n\
    \   have often distinguished between standardized and unstandardized\n   parameters\
    \ by prefixing the names of unstandardized parameters with\n   the string \"X-\"\
    \ or similar constructs.  In practice, that convention\n   causes more problems\
    \ than it solves.  Therefore, this document\n   deprecates the convention for\
    \ newly defined parameters with textual\n   (as opposed to numerical) names in\
    \ application protocols.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This memo documents an Internet Best Current Practice.\n\
    \   This document is a product of the Internet Engineering Task Force\n   (IETF).\
    \  It represents the consensus of the IETF community.  It has\n   received public\
    \ review and has been approved for publication by the\n   Internet Engineering\
    \ Steering Group (IESG).  Further information on\n   BCPs is available in Section\
    \ 2 of RFC 5741.\n   Information about the current status of this document, any\
    \ errata,\n   and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc6648.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2012 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................2\n\
    \   2. Recommendations for Implementers of Application Protocols .......4\n  \
    \ 3. Recommendations for Creators of New Parameters ..................4\n   4.\
    \ Recommendations for Protocol Designers ..........................4\n   5. Security\
    \ Considerations .........................................5\n   6. IANA Considerations\
    \ .............................................5\n   7. Acknowledgements ................................................5\n\
    \   Appendix A.  Background ............................................6\n  \
    \ Appendix B.  Analysis ..............................................7\n   References\
    \ ........................................................10\n      Normative\
    \ References ...........................................10\n      Informative\
    \ References .........................................10\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   Many application protocols use parameters with textual (as\
    \ opposed to\n   numerical) names to identify data (media types, header fields\
    \ in\n   Internet mail messages and HTTP requests, vCard parameters and\n   properties,\
    \ etc.).  Historically, designers and implementers of\n   application protocols\
    \ have often distinguished between standardized\n   and unstandardized parameters\
    \ by prefixing the names of\n   unstandardized parameters with the string \"X-\"\
    \ or similar constructs\n   (e.g., \"x.\"), where the \"X\" is commonly understood\
    \ to stand for\n   \"eXperimental\" or \"eXtension\".\n   Under this convention,\
    \ the name of a parameter not only identified\n   the data, but also embedded\
    \ the status of the parameter into the name\n   itself: a parameter defined in\
    \ a specification produced by a\n   recognized standards development organization\
    \ (or registered\n   according to processes defined in such a specification) did\
    \ not start\n   with \"X-\" or similar constructs, whereas a parameter defined\
    \ outside\n   such a specification or process started with \"X-\" or similar\n\
    \   constructs.\n   As explained more fully under Appendix A, this convention\
    \ was\n   encouraged for many years in application protocols such as file\n  \
    \ transfer, email, and the World Wide Web.  In particular, it was\n   codified\
    \ for email by [RFC822] (via the distinction between\n   \"Extension-fields\"\
    \ and \"user-defined-fields\"), but then removed by\n   [RFC2822] based on implementation\
    \ and deployment experience.  A\n   similar progression occurred for SIP technologies\
    \ with regard to the\n   \"P-\" header, as explained in [RFC5727].  The reasoning\
    \ behind those\n   changes is explored under Appendix B.\n   In short, although\
    \ in theory the \"X-\" convention was a good way to\n   avoid collisions (and\
    \ attendant interoperability problems) between\n   standardized parameters and\
    \ unstandardized parameters, in practice\n   the benefits have been outweighed\
    \ by the costs associated with the\n   leakage of unstandardized parameters into\
    \ the standards space.\n   This document generalizes from the experience of the\
    \ email and SIP\n   communities by doing the following:\n   1.  Deprecates the\
    \ \"X-\" convention for newly defined parameters in\n       application protocols,\
    \ including new parameters for established\n       protocols.  This change applies\
    \ even where the \"X-\" convention\n       was only implicit, and not explicitly\
    \ provided, such as was done\n       for email in [RFC822].\n   2.  Makes specific\
    \ recommendations about how to proceed in a world\n       without the distinction\
    \ between standardized and unstandardized\n       parameters (although only for\
    \ parameters with textual names, not\n       parameters that are expressed as\
    \ numbers, which are out of the\n       scope of this document).\n   3.  Does\
    \ not recommend against the practice of private, local,\n       preliminary, experimental,\
    \ or implementation-specific parameters,\n       only against the use of \"X-\"\
    \ and similar constructs in the names\n       of such parameters.\n   4.  Makes\
    \ no recommendation as to whether existing \"X-\" parameters\n       ought to\
    \ remain in use or be migrated to a format without the\n       \"X-\"; this is\
    \ a matter for the creators or maintainers of those\n       parameters.\n   5.\
    \  Does not override existing specifications that legislate the use\n       of\
    \ \"X-\" for particular application protocols (e.g., the \"x-name\"\n       token\
    \ in [RFC5545]); this is a matter for the designers of those\n       protocols.\n\
    \   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\"\
    ,\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"NOT RECOMMENDED\", \"MAY\"\
    , and\n   \"OPTIONAL\" in this document are to be interpreted as described in\n\
    \   [RFC2119].\n"
- title: 2.  Recommendations for Implementers of Application Protocols
  contents:
  - "2.  Recommendations for Implementers of Application Protocols\n   Implementations\
    \ of application protocols MUST NOT make any\n   assumptions about the status\
    \ of a parameter, nor take automatic\n   action regarding a parameter, based solely\
    \ on the presence or absence\n   of \"X-\" or a similar construct in the parameter's\
    \ name.\n"
- title: 3.  Recommendations for Creators of New Parameters
  contents:
  - "3.  Recommendations for Creators of New Parameters\n   Creators of new parameters\
    \ to be used in the context of application\n   protocols:\n   1.  SHOULD assume\
    \ that all parameters they create might become\n       standardized, public, commonly\
    \ deployed, or usable across\n       multiple implementations.\n   2.  SHOULD\
    \ employ meaningful parameter names that they have reason to\n       believe are\
    \ currently unused.\n   3.  SHOULD NOT prefix their parameter names with \"X-\"\
    \ or similar\n       constructs.\n   Note: If the relevant parameter name space\
    \ has conventions about\n   associating parameter names with those who create\
    \ them, a parameter\n   name could incorporate the organization's name or primary\
    \ domain name\n   (see Appendix B for examples).\n"
- title: 4.  Recommendations for Protocol Designers
  contents:
  - "4.  Recommendations for Protocol Designers\n   Designers of new application protocols\
    \ that allow extensions using\n   parameters:\n   1.  SHOULD establish registries\
    \ with potentially unlimited value-\n       spaces, defining both permanent and\
    \ provisional registries if\n       appropriate.\n   2.  SHOULD define simple,\
    \ clear registration procedures.\n   3.  SHOULD mandate registration of all non-private\
    \ parameters,\n       independent of the form of the parameter names.\n   4. \
    \ SHOULD NOT prohibit parameters with an \"X-\" prefix or similar\n       constructs\
    \ from being registered.\n   5.  MUST NOT stipulate that a parameter with an \"\
    X-\" prefix or\n       similar constructs needs to be understood as unstandardized.\n\
    \   6.  MUST NOT stipulate that a parameter without an \"X-\" prefix or\n    \
    \   similar constructs needs to be understood as standardized.\n"
- title: 5.  Security Considerations
  contents:
  - "5.  Security Considerations\n   Interoperability and migration issues with security-critical\n\
    \   parameters can result in unnecessary vulnerabilities (see Appendix B\n   for\
    \ further discussion).\n   As a corollary to the recommendation provided under\
    \ Section 2,\n   implementations MUST NOT assume that standardized parameters\
    \ are\n   \"secure\" whereas unstandardized parameters are \"insecure\", based\n\
    \   solely on the names of such parameters.\n"
- title: 6.  IANA Considerations
  contents:
  - "6.  IANA Considerations\n   This document does not modify registration procedures\
    \ currently in\n   force for various application protocols.  However, such procedures\n\
    \   might be updated in the future to incorporate the best practices\n   defined\
    \ in this document.\n"
- title: 7.  Acknowledgements
  contents:
  - "7.  Acknowledgements\n   Thanks to Claudio Allocchio, Adam Barth, Nathaniel Borenstein,\
    \ Eric\n   Burger, Stuart Cheshire, Al Constanzo, Dave Cridland, Ralph Droms,\n\
    \   Martin Duerst, Frank Ellermann, J.D. Falk, Ned Freed, Tony Finch,\n   Randall\
    \ Gellens, Tony Hansen, Ted Hardie, Joe Hildebrand, Alfred\n   Hoenes, Paul Hoffman,\
    \ Eric Johnson, Scott Kelly, Scott Kitterman,\n   John Klensin, Graham Klyne,\
    \ Murray Kucherawy, Eliot Lear, John\n   Levine, Bill McQuillan, Alexey Melnikov,\
    \ Subramanian Moonesamy, Keith\n   Moore, Ben Niven-Jenkins, Zoltan Ordogh, Tim\
    \ Petch, Dirk Pranke,\n   Randy Presuhn, Julian Reschke, Dan Romascanu, Doug Royer,\
    \ Andrew\n   Sullivan, Henry Thompson, Martin Thomson, Matthew Wild, Nicolas\n\
    \   Williams, Tim Williams, Mykyta Yevstifeyev, and Kurt Zeilenga for\n   their\
    \ feedback.\n"
- title: Appendix A.  Background
  contents:
  - "Appendix A.  Background\n   The beginnings of the \"X-\" convention can be found\
    \ in a suggestion\n   made by Brian Harvey in 1975 with regard to FTP parameters\
    \ [RFC691]:\n      Thus, FTP servers which care about the distinction between\
    \ Telnet\n      print and non-print could implement SRVR N and SRVR T.  Ideally\n\
    \      the SRVR parameters should be registered with Jon Postel to avoid\n   \
    \   conflicts, although it is not a disaster if two sites use the same\n     \
    \ parameter for different things.  I suggest that parameters be\n      allowed\
    \ to be more than one letter, and that an initial letter X\n      be used for\
    \ really local idiosyncracies [sic].\n   This \"X\" prefix was subsequently used\
    \ in [RFC737], [RFC743], and\n   [RFC775].  This usage was noted in [RFC1123]:\n\
    \      FTP allows \"experimental\" commands, whose names begin with \"X\".\n \
    \     If these commands are subsequently adopted as standards, there may\n   \
    \   still be existing implementations using the \"X\" form....  All FTP\n    \
    \  implementations SHOULD recognize both forms of these commands, by\n      simply\
    \ equating them with extra entries in the command lookup\n      table.\n   The\
    \ \"X-\" convention has been used for email header fields since at\n   least the\
    \ publication of [RFC822] in 1982, which distinguished\n   between \"Extension-fields\"\
    \ and \"user-defined-fields\" as follows:\n      The prefatory string \"X-\" will\
    \ never be used in the names of\n      Extension-fields.  This provides user-defined\
    \ fields with a\n      protected set of names.\n   That rule was restated by [RFC1154]\
    \ as follows:\n      Keywords beginning with \"X-\" are permanently reserved to\n\
    \      implementation-specific use.  No standard registered encoding\n      keyword\
    \ will ever begin with \"X-\".\n   This convention continued with various specifications\
    \ for media types\n   ([RFC2045], [RFC2046], [RFC2047]), HTTP headers ([RFC2068],\n\
    \   [RFC2616]), vCard parameters and properties ([RFC2426]), Uniform\n   Resource\
    \ Names ([RFC3406]), Lightweight Directory Access Protocol\n   (LDAP) field names\
    \ ([RFC4512]), and other application technologies.\n   However, use of the \"\
    X-\" prefix in email headers was effectively\n   deprecated between the publication\
    \ of [RFC822] in 1982 and the\n   publication of [RFC2822] in 2001 by removing\
    \ the distinction between\n   the \"extension-field\" construct and the \"user-defined-field\"\
    \n   construct (a similar change happened with regard to Session\n   Initiation\
    \ Protocol \"P-\" headers when [RFC3427] was obsoleted by\n   [RFC5727]).\n  \
    \ Despite the fact that parameters containing the \"X-\" string have been\n  \
    \ effectively deprecated in email headers, they continue to be used in\n   a wide\
    \ variety of application protocols.  The two primary situations\n   motivating\
    \ such use are:\n   1.  Experiments that are intended to possibly be standardized\
    \ in the\n       future, if they are successful.\n   2.  Extensions that are intended\
    \ to never be standardized because\n       they are intended only for implementation-specific\
    \ use or for\n       local use on private networks.\n   Use of this naming convention\
    \ is not mandated by the Internet\n   Standards Process [BCP9] or IANA registration\
    \ rules [BCP26].  Rather,\n   it is an individual choice by each specification\
    \ that references the\n   convention or each administrative process that chooses\
    \ to use it.  In\n   particular, some Standards Track RFCs have interpreted the\
    \ convention\n   in a normative way (e.g., [RFC822] and [RFC5451]).\n"
- title: Appendix B.  Analysis
  contents:
  - "Appendix B.  Analysis\n   The primary problem with the \"X-\" convention is that\
    \ unstandardized\n   parameters have a tendency to leak into the protected space\
    \ of\n   standardized parameters, thus introducing the need for migration from\n\
    \   the \"X-\" name to a standardized name.  Migration, in turn, introduces\n\
    \   interoperability issues (and sometimes security issues) because older\n  \
    \ implementations will support only the \"X-\" name and newer\n   implementations\
    \ might support only the standardized name.  To\n   preserve interoperability,\
    \ newer implementations simply support the\n   \"X-\" name forever, which means\
    \ that the unstandardized name has\n   become a de facto standard (thus obviating\
    \ the need for segregation\n   of the name space into standardized and unstandardized\
    \ areas in the\n   first place).\n   We have already seen this phenomenon at work\
    \ with regard to FTP in\n   the quote from [RFC1123] in Appendix A.  The HTTP\
    \ community had the\n   same experience with the \"x-gzip\" and \"x-compress\"\
    \ media types, as\n   noted in [RFC2068]:\n      For compatibility with previous\
    \ implementations of HTTP,\n      applications should consider \"x-gzip\" and\
    \ \"x-compress\" to be\n      equivalent to \"gzip\" and \"compress\" respectively.\n\
    \   A similar example can be found in [RFC5064], which defined the\n   \"Archived-At\"\
    \ message header field but also found it necessary to\n   define and register\
    \ the \"X-Archived-At\" field:\n      For backwards compatibility, this document\
    \ also describes the\n      X-Archived-At header field, a precursor of the Archived-At\
    \ header\n      field.  The X-Archived-At header field MAY also be parsed, but\n\
    \      SHOULD NOT be generated.\n   One of the original reasons for segregation\
    \ of name spaces into\n   standardized and unstandardized areas was the perceived\
    \ difficulty of\n   registering names.  However, the solution to that problem\
    \ has been\n   simpler registration rules, such as those provided by [RFC3864]\
    \ and\n   [RFC4288].  As explained in [RFC4288]:\n      [W]ith the simplified\
    \ registration procedures described above for\n      vendor and personal trees,\
    \ it should rarely, if ever, be necessary\n      to use unregistered experimental\
    \ types.  Therefore, use of both\n      \"x-\" and \"x.\" forms is discouraged.\n\
    \   For some name spaces, another helpful practice has been the\n   establishment\
    \ of separate registries for permanent names and\n   provisional names, as in\
    \ [RFC4395].\n   Furthermore, often standardization of a unstandardized parameter\n\
    \   leads to subtly different behavior (e.g., the standardized version\n   might\
    \ have different security properties as a result of security\n   review provided\
    \ during the standardization process).  If implementers\n   treat the old, unstandardized\
    \ parameter and the new, standardized\n   parameter as equivalent, interoperability\
    \ and security problems can\n   ensue.  Analysis of unstandardized parameters\
    \ to detect and correct\n   flaws is, in general, a good thing and is not intended\
    \ to be\n   discouraged by the lack of distinction in element names.  If an\n\
    \   originally unstandardized parameter or protocol element is\n   standardized\
    \ and the new form has differences that affect\n   interoperability or security\
    \ properties, it would be inappropriate\n   for implementations to treat the old\
    \ form as identical to the new\n   form.\n   For similar considerations with regard\
    \ to the \"P-\" convention in the\n   Session Initiation Protocol, see [RFC5727].\n\
    \   In some situations, segregating the parameter name space used in a\n   given\
    \ application protocol can be justified:\n   1.  When it is extremely unlikely\
    \ that some parameters will ever be\n       standardized.  In this case, implementation-specific\
    \ and private-\n       use parameters could at least incorporate the organization's\
    \ name\n       (e.g., \"ExampleInc-foo\" or, consistent with [RFC4288],\n    \
    \   \"VND.ExampleInc.foo\") or primary domain name (e.g.,\n       \"com.example.foo\"\
    \ or a Uniform Resource Identifier [RFC3986] such\n       as \"http://example.com/foo\"\
    ).  In rare cases, truly experimental\n       parameters could be given meaningless\
    \ names such as nonsense\n       words, the output of a hash function, or Universally\
    \ Unique\n       Identifiers (UUIDs) [RFC4122].\n   2.  When parameter names might\
    \ have significant meaning.  This case\n       too is rare, since implementers\
    \ can almost always find a synonym\n       for an existing term (e.g., \"urgency\"\
    \ instead of \"priority\") or\n       simply invent a more creative name (e.g.,\
    \ \"get-it-there-fast\").\n       The existence of multiple similarly named parameters\
    \ can be\n       confusing, but this is true regardless if there is an attempt\
    \ to\n       segregate standardized and unstandardized parameters (e.g.,\n   \
    \    \"X-Priority\" can be confused with \"Urgency\").\n   3.  When parameter\
    \ names need to be very short (e.g., as in [RFC5646]\n       for language tags).\
    \  In this case, it can be more efficient to\n       assign numbers instead of\
    \ human-readable names (e.g., as in\n       [RFC2939] for DHCP options) and to\
    \ leave a certain numeric range\n       for implementation-specific extensions\
    \ or private use (e.g., as\n       with the codec numbers used with the Session\
    \ Description Protocol\n       [RFC4566]).\n   There are three primary objections\
    \ to deprecating the \"X-\" convention\n   as a best practice for application\
    \ protocols:\n   1.  Implementers might mistake one parameter for another parameter\n\
    \       that has a similar name; a rigid distinction such as an \"X-\"\n     \
    \  prefix can make this clear.  However, in practice, implementers\n       are\
    \ forced to blur the distinction (e.g., by treating \"X-foo\" as\n       a de\
    \ facto standard), so it inevitably becomes meaningless.\n   2.  Collisions are\
    \ undesirable, and it would be bad for both a\n       standardized parameter \"\
    foo\" and a unstandardized parameter \"foo\"\n       to exist simultaneously.\
    \  However, names are almost always cheap,\n       so an experimental, implementation-specific,\
    \ or private-use name\n       of \"foo\" does not prevent a standards development\
    \ organization\n       from issuing a similarly creative name such as \"bar\"\
    .\n   3.  [BCP82] is entitled \"Assigning Experimental and Testing Numbers\n \
    \      Considered Useful\" and therefore implies that the \"X-\" prefix is\n \
    \      also useful for experimental parameters.  However, BCP 82\n       addresses\
    \ the need for protocol numbers when the pool of such\n       numbers is strictly\
    \ limited (e.g., DHCP options) or when a number\n       is absolutely required\
    \ even for purely experimental purposes\n       (e.g., the Protocol field of the\
    \ IP header).  In almost all\n       application protocols that make use of protocol\
    \ parameters\n       (including email headers, media types, HTTP headers, vCard\n\
    \       parameters and properties, URNs, and LDAP field names), the name\n   \
    \    space is not limited or constrained in any way, so there is no\n       need\
    \ to assign a block of names for private use or experimental\n       purposes\
    \ (see also [BCP26]).\n   Therefore, it appears that segregating the parameter\
    \ space into a\n   standardized area and a unstandardized area has few, if any,\
    \ benefits\n   and has at least one significant cost in terms of interoperability.\n"
- title: References
  contents:
  - 'References

    '
- title: Normative References
  contents:
  - "Normative References\n   [RFC2119]  Bradner, S., \"Key words for use in RFCs\
    \ to Indicate\n              Requirement Levels\", BCP 14, RFC 2119, March 1997.\n"
- title: Informative References
  contents:
  - "Informative References\n   [BCP9]     Bradner, S., \"The Internet Standards Process\
    \ -- Revision\n              3\", BCP 9, RFC 2026, October 1996.\n   [BCP26] \
    \   Narten, T. and H. Alvestrand, \"Guidelines for Writing an\n              IANA\
    \ Considerations Section in RFCs\", BCP 26, RFC 5226,\n              May 2008.\n\
    \   [BCP82]    Narten, T., \"Assigning Experimental and Testing Numbers\n    \
    \          Considered Useful\", BCP 82, RFC 3692, January 2004.\n   [RFC691] \
    \  Harvey, B., \"One more try on the FTP\", RFC 691, June 1975.\n   [RFC737] \
    \  Harrenstien, K., \"FTP extension: XSEN\", RFC 737,\n              October 1977.\n\
    \   [RFC743]   Harrenstien, K., \"FTP extension: XRSQ/XRCP\", RFC 743,\n     \
    \         December 1977.\n   [RFC775]   Mankins, D., Franklin, D., and A. Owen,\
    \ \"Directory\n              oriented FTP commands\", RFC 775, December 1980.\n\
    \   [RFC822]   Crocker, D., \"Standard for the format of ARPA Internet\n     \
    \         text messages\", STD 11, RFC 822, August 1982.\n   [RFC1123]  Braden,\
    \ R., \"Requirements for Internet Hosts - Application\n              and Support\"\
    , STD 3, RFC 1123, October 1989.\n   [RFC1154]  Robinson, D. and R. Ullmann, \"\
    Encoding header field for\n              internet messages\", RFC 1154, April\
    \ 1990.\n   [RFC2045]  Freed, N. and N. Borenstein, \"Multipurpose Internet Mail\n\
    \              Extensions (MIME) Part One: Format of Internet Message\n      \
    \        Bodies\", RFC 2045, November 1996.\n   [RFC2046]  Freed, N. and N. Borenstein,\
    \ \"Multipurpose Internet Mail\n              Extensions (MIME) Part Two: Media\
    \ Types\", RFC 2046,\n              November 1996.\n   [RFC2047]  Moore, K., \"\
    MIME (Multipurpose Internet Mail Extensions)\n              Part Three: Message\
    \ Header Extensions for Non-ASCII Text\",\n              RFC 2047, November 1996.\n\
    \   [RFC2068]  Fielding, R., Gettys, J., Mogul, J., Nielsen, H., and T.\n    \
    \          Berners-Lee, \"Hypertext Transfer Protocol -- HTTP/1.1\",\n       \
    \       RFC 2068, January 1997.\n   [RFC2426]  Dawson, F. and T. Howes, \"vCard\
    \ MIME Directory Profile\",\n              RFC 2426, September 1998.\n   [RFC2616]\
    \  Fielding, R., Gettys, J., Mogul, J., Frystyk, H.,\n              Masinter,\
    \ L., Leach, P., and T. Berners-Lee, \"Hypertext\n              Transfer Protocol\
    \ -- HTTP/1.1\", RFC 2616, June 1999.\n   [RFC2822]  Resnick, P., \"Internet Message\
    \ Format\", RFC 2822,\n              April 2001.\n   [RFC2939]  Droms, R., \"\
    Procedures and IANA Guidelines for Definition\n              of New DHCP Options\
    \ and Message Types\", BCP 43, RFC 2939,\n              September 2000.\n   [RFC3406]\
    \  Daigle, L., van Gulik, D., Iannella, R., and P. Faltstrom,\n              \"\
    Uniform Resource Names (URN) Namespace Definition\n              Mechanisms\"\
    , BCP 66, RFC 3406, October 2002.\n   [RFC3427]  Mankin, A., Bradner, S., Mahy,\
    \ R., Willis, D., Ott, J.,\n              and B. Rosen, \"Change Process for the\
    \ Session Initiation\n              Protocol (SIP)\", RFC 3427, December 2002.\n\
    \   [RFC3864]  Klyne, G., Nottingham, M., and J. Mogul, \"Registration\n     \
    \         Procedures for Message Header Fields\", BCP 90, RFC 3864,\n        \
    \      September 2004.\n   [RFC3986]  Berners-Lee, T., Fielding, R., and L. Masinter,\
    \ \"Uniform\n              Resource Identifier (URI): Generic Syntax\", STD 66,\n\
    \              RFC 3986, January 2005.\n   [RFC4122]  Leach, P., Mealling, M.,\
    \ and R. Salz, \"A Universally\n              Unique IDentifier (UUID) URN Namespace\"\
    , RFC 4122,\n              July 2005.\n   [RFC4288]  Freed, N. and J. Klensin,\
    \ \"Media Type Specifications and\n              Registration Procedures\", BCP\
    \ 13, RFC 4288, December 2005.\n   [RFC4395]  Hansen, T., Hardie, T., and L. Masinter,\
    \ \"Guidelines and\n              Registration Procedures for New URI Schemes\"\
    , BCP 35,\n              RFC 4395, February 2006.\n   [RFC4512]  Zeilenga, K.,\
    \ \"Lightweight Directory Access Protocol\n              (LDAP): Directory Information\
    \ Models\", RFC 4512,\n              June 2006.\n   [RFC4566]  Handley, M., Jacobson,\
    \ V., and C. Perkins, \"SDP: Session\n              Description Protocol\", RFC\
    \ 4566, July 2006.\n   [RFC5064]  Duerst, M., \"The Archived-At Message Header\
    \ Field\",\n              RFC 5064, December 2007.\n   [RFC5451]  Kucherawy, M.,\
    \ \"Message Header Field for Indicating\n              Message Authentication\
    \ Status\", RFC 5451, April 2009.\n   [RFC5545]  Desruisseaux, B., \"Internet\
    \ Calendaring and Scheduling\n              Core Object Specification (iCalendar)\"\
    , RFC 5545,\n              September 2009.\n   [RFC5646]  Phillips, A. and M.\
    \ Davis, \"Tags for Identifying\n              Languages\", BCP 47, RFC 5646,\
    \ September 2009.\n   [RFC5727]  Peterson, J., Jennings, C., and R. Sparks, \"\
    Change Process\n              for the Session Initiation Protocol (SIP) and the\
    \ Real-\n              time Applications and Infrastructure Area\", BCP 67,\n\
    \              RFC 5727, March 2010.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Peter Saint-Andre\n   Cisco Systems, Inc.\n   1899 Wynkoop\
    \ Street, Suite 600\n   Denver, CO  80202\n   USA\n   Phone: +1-303-308-3282\n\
    \   EMail: psaintan@cisco.com\n   Dave Crocker\n   Brandenburg InternetWorking\n\
    \   675 Spruce Dr.\n   Sunnyvale, CA\n   USA\n   Phone: +1.408.246.8253\n   EMail:\
    \ dcrocker@bbiw.net\n   URI:   http://bbiw.net\n   Mark Nottingham\n   Rackspace\n\
    \   EMail: mnot@mnot.net\n   URI:   http://www.mnot.net\n"
