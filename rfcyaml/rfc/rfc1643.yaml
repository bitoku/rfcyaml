- title: __initial_text__
  contents:
  - "                   Definitions of Managed Objects for\n                   the\
    \ Ethernet-like Interface Types\n"
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   Introduction .............................................\
    \    1\n   1. The SNMP Network Management Framework .................    2\n \
    \  1.1 Object Definitions ...................................    2\n   2. Change\
    \ Log ............................................    2\n   3. Overview ..............................................\
    \    3\n   3.1 Relation to RFC 1213 .................................    4\n \
    \  3.2 Relation to RFC 1573 .................................    4\n   3.2.1 Layering\
    \ Model .....................................    4\n   3.2.2 Virtual Circuits\
    \ ...................................    4\n   3.2.3 ifTestTable ........................................\
    \    4\n   3.2.4 ifRcvAddressTable ..................................    5\n \
    \  3.2.5 ifPhysAddress ......................................    5\n   3.2.6 ifType\
    \ .............................................    6\n   4. Definitions ...........................................\
    \    6\n   5. Acknowledgements ......................................   16\n \
    \  6. References ............................................   17\n   7. Security\
    \ Considerations ...............................   19\n   8. Author's Address\
    \ ......................................   19\n"
- title: Introduction
  contents:
  - "Introduction\n   This memo defines a portion of the Management Information Base\
    \ (MIB)\n   for use with network management protocols in the Internet community.\n\
    \   In particular, it defines objects for managing ethernet-like objects.\n  \
    \ This memo also includes a MIB module.  This MIB module corrects minor\n   errors\
    \ in the earlier versions of this MIB: RFC 1623 [20], and RFC\n   1398 [15].\n"
- title: 1.  The SNMP Network Management Framework
  contents:
  - "1.  The SNMP Network Management Framework\n   The SNMP Network Management Framework\
    \ consists of three major\n   components.  They are:\n      o    STD 16/RFC 1155\
    \ [3] which defines the SMI, the mechanisms\n           used for describing and\
    \ naming objects for the purpose of\n           management.  STD 16/RFC 1212 [13]\
    \ defines a more concise\n           description mechanism, which is wholly consistent\
    \ with\n           the SMI.\n      o    RFC 1156 [4] which defines MIB-I, the\
    \ core set of managed\n           objects for the Internet suite of protocols.\
    \  STD 17/RFC\n           1213 [6] defines MIB-II, an evolution of MIB-I based\
    \ on\n           implementation experience and new operational\n           requirements.\n\
    \      o    STD 15/RFC 1157 [5] which defines the SNMP, the protocol\n       \
    \    used for network access to managed objects.\n   The Framework permits new\
    \ objects to be defined for the purpose of\n   experimentation and evaluation.\n"
- title: 1.1.  Object Definitions
  contents:
  - "1.1.  Object Definitions\n   Managed objects are accessed via a virtual information\
    \ store, termed\n   the Management Information Base or MIB.  Objects in the MIB\
    \ are\n   defined using the subset of Abstract Syntax Notation One (ASN.1) [7]\n\
    \   defined in the SMI [16].  In particular, each object object type is\n   named\
    \ by an OBJECT IDENTIFIER, an administratively assigned name.\n   The object type\
    \ together with an object instance serves to uniquely\n   identify a specific\
    \ instantiation of the object.  For human\n   convenience, we often use a textual\
    \ string, termed the descriptor, to\n   refer to the object type.\n"
- title: 2.  Change Log
  contents:
  - "2.  Change Log\n   This section enumerates changes made to RFC 1398 to produce\
    \ this\n   document.\n    (1)   A section describing the applicability of various\
    \ parts\n          of RFC 1573 to ethernet-like interfaces has been added.\n \
    \   (2)   A minor error in the description of the TDR test was\n          fixed.\n\
    \    (3)   A loopback test was defined to replace the standard\n          loopback\
    \ test that was defined in RFC 1229.\n    (4)   The description of dot3CollFrequencies\
    \ was made a bit\n          clearer.\n    (5)   A new object, EtherChipset, has\
    \ been added. This object\n          replaces the ifExtnsChipSet object, which\
    \ has been\n          removed per the Interface MIB Evolution effort.\n    (6)\
    \   Several minor editorial changes, spelling corrections,\n          grammar\
    \ and punctuation corrections, and so forth, were\n          made.\n"
- title: 3.  Overview
  contents:
  - "3.  Overview\n   Instances of these object types represent attributes of an interface\n\
    \   to an ethernet-like communications medium.  At present, ethernet-like\n  \
    \ media are identified by three values of the ifType object in the\n   Internet-standard\
    \ MIB:\n         ethernet-csmacd(6)\n         iso88023-csmacd(7)\n         starLan(11)\n\
    \   For these interfaces, the value of the ifSpecific variable in the\n   MIB-II\
    \ [6] has the OBJECT IDENTIFIER value:\n      dot3    OBJECT IDENTIFER ::= { transmission\
    \ 7 }\n   The definitions presented here are based on the IEEE 802.3 Layer\n \
    \  Management Specification [9], as originally interpreted by Frank\n   Kastenholz\
    \ then of Interlan in [10].  Implementors of these MIB\n   objects should note\
    \ that the IEEE document explicitly describes (in\n   the form of Pascal pseudocode)\
    \ when, where, and how various MAC\n   attributes are measured.  The IEEE document\
    \ also describes the\n   effects of MAC actions that may be invoked by manipulating\
    \ instances\n   of the MIB objects defined here.\n   To the extent that some of\
    \ the attributes defined in [9] are\n   represented by previously defined objects\
    \ in the Internet-standard\n   MIB or in the Generic Interface Extensions MIB\
    \ [11], such attributes\n   are not redundantly represented by objects defined\
    \ in this memo.\n   Among the attributes represented by objects defined in other\
    \ memos\n   are the number of octets transmitted or received on a particular\n\
    \   interface, the number of frames transmitted or received on a\n   particular\
    \ interface, the promiscuous status of an interface, the MAC\n   address of an\
    \ interface, and multicast information associated with an\n   interface.\n"
- title: 3.1.  Relation to RFC 1213
  contents:
  - "3.1.  Relation to RFC 1213\n   This section applies only when this MIB is used\
    \ in conjunction with\n   the \"old\" (i.e., pre-RFC 1573) interface group.\n\
    \   The relationship between an ethernet-like interface and an interface\n   in\
    \ the context of the Internet-standard MIB is one-to-one.  As such,\n   the value\
    \ of an ifIndex object instance can be directly used to\n   identify corresponding\
    \ instances of the objects defined herein.\n"
- title: 3.2.  Relation to RFC 1573
  contents:
  - "3.2.  Relation to RFC 1573\n   RFC 1573, the Interface MIB Evolution, requires\
    \ that any MIB which is\n   an adjunct of the Interface MIB, clarify specific\
    \ areas within the\n   Interface MIB.  These areas were intentionally left vague\
    \ in RFC 1573\n   to avoid over constraining the MIB, thereby precluding management\
    \ of\n   certain media-types.\n   Section 3.3 of RFC 1573 enumerates several areas\
    \ which a media-\n   specific MIB must clarify.  Each of these areas is addressed\
    \ in a\n   following subsection.  The implementor is referred to RFC 1573 in\n\
    \   order to understand the general intent of these areas.\n"
- title: 3.2.1.  Layering Model
  contents:
  - "3.2.1.  Layering Model\n   This MIB does not provide for layering.  There are\
    \ no sublayers.\n   EDITOR'S NOTE:\n      I could forsee the development of an\
    \ 802.2 and enet-transceiver\n      MIB.  They could be higher and lower sublayers,\
    \ respectively.  All\n      that THIS document should do is allude to the possibilities\
    \ and\n      urge the implementor to be aware of the possibility and that they\n\
    \      may have requirements which supersede the requirements in this\n      document.\n"
- title: 3.2.2.  Virtual Circuits
  contents:
  - "3.2.2.  Virtual Circuits\n   This medium does not support virtual circuits and\
    \ this area is not\n   applicable to this MIB.\n"
- title: 3.2.3.  ifTestTable
  contents:
  - "3.2.3.  ifTestTable\n   This MIB defines two tests for media which are instumented\
    \ with this\n   MIB; TDR and Loopback.  Implementation of these tests is not\n\
    \   required.  Many common interface chips do not support one or both of\n   these\
    \ tests.\n   These two tests are provided as a convenience, allowing a common\n\
    \   method to invoke the test.\n   Standard MIBs do not include objects in which\
    \ to return the results\n   of the TDR test.  Any needed objects MUST be provided\
    \ in the vendor\n   specific MIB.\n"
- title: 3.2.4.  ifRcvAddressTable
  contents:
  - "3.2.4.  ifRcvAddressTable\n   This table contains all IEEE 802.3 addresses, unicast,\
    \ multicast, and\n   broadcast, for which this interface will receive packets\
    \ and forward\n   them up to a higher layer entity for local consumption.  The\
    \ format\n   of the address, contained in ifRcvAddressAddress, is the same as\
    \ for\n   ifPhysAddress.\n   In the event that the interface is part of a MAC\
    \ bridge, this table\n   does not include unicast addresses which are accepted\
    \ for possible\n   forwarding out some other port.  This table is explicitly not\n\
    \   intended to provide a bridge address filtering mechanism.\n"
- title: 3.2.5.  ifPhysAddress
  contents:
  - "3.2.5.  ifPhysAddress\n   This object contains the IEEE 802.3 address which is\
    \ placed in the\n   source-address field of any Ethernet, Starlan, or IEEE 802.3\
    \ frames\n   that originate at this interface.  Usually this will be kept in ROM\n\
    \   on the interface hardware.  Some systems may set this address via\n   software.\n\
    \   In a system where there are several such addresses the designer has a\n  \
    \ tougher choice.  The address chosen should be the one most likely to\n   be\
    \ of use to network management (e.g.  the address placed in ARP\n   responses\
    \ for systems which are primarily IP systems).\n   If the designer truly can not\
    \ chose, use of the factory- provided ROM\n   address is suggested.\n   If the\
    \ address can not be determined, an octet string of zero length\n   should be\
    \ returned.\n   The address is stored in binary in this object.  The address is\n\
    \   stored in \"canonical\" bit order, that is, the Group Bit is positioned\n\
    \   as the low-order bit of the first octet.  Thus, the first byte of a\n   multicast\
    \ address would have the bit 0x01 set.\n"
- title: 3.2.6.  ifType
  contents:
  - "3.2.6.  ifType\n   This MIB applies to interfaces which have any of the following\
    \ three\n   ifType values:\n         ethernet-csmacd(6)\n         iso88023-csmacd(7)\n\
    \         starLan(11)\n   Interfaces with any of these ifType values map to the\
    \ EtherLike-MIB\n   in the same manner.  The EtherLike-MIB applies equally to\
    \ all three\n   types; there are no implementation differences.\n"
- title: 4.  Definitions
  contents:
  - "4.  Definitions\n   EtherLike-MIB DEFINITIONS ::= BEGIN\n      IMPORTS\n    \
    \      Counter, Gauge         FROM RFC1155-SMI\n          ifIndex, transmission\
    \  FROM RFC1213-MIB\n          OBJECT-TYPE            FROM RFC-1212;\n       --\
    \ This MIB module uses the extended OBJECT-TYPE macro as\n       -- defined in\
    \ RFC-1212.\n      dot3    OBJECT IDENTIFIER ::= { transmission 7 }\n      --\
    \ the Ethernet-like Statistics group\n       dot3StatsTable  OBJECT-TYPE\n   \
    \         SYNTAX     SEQUENCE OF Dot3StatsEntry\n            ACCESS     not-accessible\n\
    \            STATUS     mandatory\n            DESCRIPTION\n             \"Statistics\
    \ for a collection of ethernet-like\n             interfaces attached to a particular\
    \ system.\"\n            ::= { dot3 2 }\n       dot3StatsEntry   OBJECT-TYPE\n\
    \            SYNTAX      Dot3StatsEntry\n            ACCESS      not-accessible\n\
    \            STATUS      mandatory\n            DESCRIPTION\n              \"\
    Statistics for a particular interface to an\n              ethernet-like medium.\"\
    \n            INDEX     { dot3StatsIndex }\n            ::= { dot3StatsTable 1\
    \ }\n       Dot3StatsEntry ::= SEQUENCE {\n            dot3StatsIndex        \
    \              INTEGER,\n            dot3StatsAlignmentErrors            Counter,\n\
    \            dot3StatsFCSErrors                  Counter,\n            dot3StatsSingleCollisionFrames\
    \      Counter,\n            dot3StatsMultipleCollisionFrames    Counter,\n  \
    \          dot3StatsSQETestErrors              Counter,\n            dot3StatsDeferredTransmissions\
    \      Counter,\n            dot3StatsLateCollisions             Counter,\n  \
    \          dot3StatsExcessiveCollisions        Counter,\n            dot3StatsInternalMacTransmitErrors\
    \  Counter,\n            dot3StatsCarrierSenseErrors         Counter,\n      \
    \      dot3StatsFrameTooLongs              Counter,\n            dot3StatsInternalMacReceiveErrors\
    \   Counter,\n            dot3StatsEtherChipSet               OBJECT IDENTIFIER\n\
    \       }\n       dot3StatsIndex   OBJECT-TYPE\n            SYNTAX      INTEGER\n\
    \            ACCESS      read-only\n            STATUS      mandatory\n      \
    \      DESCRIPTION\n              \"An index value that uniquely identifies an\n\
    \              interface to an ethernet-like medium.  The\n              interface\
    \ identified by a particular value of\n              this index is the same interface\
    \ as identified\n              by the same value of ifIndex.\"\n            ::=\
    \ { dot3StatsEntry 1 }\n       dot3StatsAlignmentErrors   OBJECT-TYPE\n      \
    \      SYNTAX     Counter\n            ACCESS     read-only\n            STATUS\
    \     mandatory\n            DESCRIPTION\n             \"A count of frames received\
    \ on a particular\n             interface that are not an integral number of\n\
    \             octets in length and do not pass the FCS check.\n             The\
    \ count represented by an instance of this\n             object is incremented\
    \ when the alignmentError\n             status is returned by the MAC service\
    \ to the\n             LLC (or other MAC user). Received frames for\n        \
    \     which multiple error conditions obtain are,\n             according to the\
    \ conventions of IEEE 802.3\n             Layer Management, counted exclusively\
    \ according\n             to the error status presented to the LLC.\"\n      \
    \      REFERENCE\n            \"IEEE 802.3 Layer Management\"\n            ::=\
    \ { dot3StatsEntry 2 }\n       dot3StatsFCSErrors   OBJECT-TYPE\n            SYNTAX\
    \      Counter\n            ACCESS      read-only\n            STATUS      mandatory\n\
    \            DESCRIPTION\n            \"A count of frames received on a particular\n\
    \            interface that are an integral number of octets\n            in length\
    \ but do not pass the FCS check.\n            The count represented by an instance\
    \ of this\n            object is incremented when the frameCheckError\n      \
    \      status is returned by the MAC service to the\n            LLC (or other\
    \ MAC user). Received frames for\n            which multiple error conditions\
    \ obtain are,\n            according to the conventions of IEEE 802.3\n      \
    \      Layer Management, counted exclusively according\n            to the error\
    \ status presented to the LLC.\"\n            REFERENCE\n            \"IEEE 802.3\
    \ Layer Management\"\n            ::= { dot3StatsEntry 3 }\n       dot3StatsSingleCollisionFrames\
    \   OBJECT-TYPE\n            SYNTAX      Counter\n            ACCESS      read-only\n\
    \            STATUS      mandatory\n            DESCRIPTION\n            \"A count\
    \ of successfully transmitted frames on\n            a particular interface for\
    \ which transmission\n            is inhibited by exactly one collision.\n   \
    \         A frame that is counted by an instance of this\n            object is\
    \ also counted by the corresponding\n            instance of either the ifOutUcastPkts,\n\
    \            ifOutMulticastPkts, or ifOutBroadcastPkts,\n            and is not\
    \ counted by the corresponding\n            instance of the dot3StatsMultipleCollisionFrames\n\
    \            object.\"\n            REFERENCE\n            \"IEEE 802.3 Layer\
    \ Management\"\n            ::= { dot3StatsEntry 4 }\n       dot3StatsMultipleCollisionFrames\
    \   OBJECT-TYPE\n            SYNTAX      Counter\n            ACCESS      read-only\n\
    \            STATUS      mandatory\n            DESCRIPTION\n            \"A count\
    \ of successfully transmitted frames on\n            a particular interface for\
    \ which transmission\n             is inhibited by more than one collision.\n\
    \            A frame that is counted by an instance of this\n            object\
    \ is also counted by the corresponding\n            instance of either the ifOutUcastPkts,\n\
    \            ifOutMulticastPkts, or ifOutBroadcastPkts,\n            and is not\
    \ counted by the corresponding\n            instance of the dot3StatsSingleCollisionFrames\n\
    \            object.\"\n            REFERENCE\n            \"IEEE 802.3 Layer\
    \ Management\"\n            ::= { dot3StatsEntry 5 }\n       dot3StatsSQETestErrors\
    \   OBJECT-TYPE\n            SYNTAX     Counter\n            ACCESS     read-only\n\
    \            STATUS     mandatory\n            DESCRIPTION\n            \"A count\
    \ of times that the SQE TEST ERROR\n            message is generated by the PLS\
    \ sublayer for a\n            particular interface. The SQE TEST ERROR\n     \
    \       message is defined in section 7.2.2.2.4 of\n            ANSI/IEEE 802.3-1985\
    \ and its generation is\n            described in section 7.2.4.6 of the same\n\
    \            document.\"\n            REFERENCE\n            \"ANSI/IEEE Std 802.3-1985\
    \ Carrier Sense\n            Multiple Access with Collision Detection Access\n\
    \            Method and Physical Layer Specifications\"\n            ::= { dot3StatsEntry\
    \ 6 }\n       dot3StatsDeferredTransmissions   OBJECT-TYPE\n            SYNTAX\
    \      Counter\n            ACCESS      read-only\n            STATUS      mandatory\n\
    \            DESCRIPTION\n            \"A count of frames for which the first\n\
    \            transmission attempt on a particular interface\n            is delayed\
    \ because the medium is busy.\n            The count represented by an instance\
    \ of this\n            object does not include frames involved in\n          \
    \  collisions.\"\n            REFERENCE\n            \"IEEE 802.3 Layer Management\"\
    \n            ::= { dot3StatsEntry 7 }\n       dot3StatsLateCollisions   OBJECT-TYPE\n\
    \            SYNTAX      Counter\n            ACCESS      read-only\n        \
    \    STATUS      mandatory\n            DESCRIPTION\n            \"The number\
    \ of times that a collision is\n            detected on a particular interface\
    \ later than\n            512 bit-times into the transmission of a\n         \
    \   packet.\n            Five hundred and twelve bit-times corresponds\n     \
    \       to 51.2 microseconds on a 10 Mbit/s system. A\n            (late) collision\
    \ included in a count\n            represented by an instance of this object is\n\
    \            also considered as a (generic) collision for\n            purposes\
    \ of other collision-related\n            statistics.\"\n            REFERENCE\n\
    \            \"IEEE 802.3 Layer Management\"\n            ::= { dot3StatsEntry\
    \ 8 }\n       dot3StatsExcessiveCollisions   OBJECT-TYPE\n            SYNTAX \
    \   Counter\n            ACCESS    read-only\n            STATUS    mandatory\n\
    \            DESCRIPTION\n            \"A count of frames for which transmission\
    \ on a\n            particular interface fails due to excessive\n            collisions.\"\
    \n            REFERENCE\n            \"IEEE 802.3 Layer Management\"\n       \
    \     ::= { dot3StatsEntry 9 }\n       dot3StatsInternalMacTransmitErrors   OBJECT-TYPE\n\
    \            SYNTAX    Counter\n            ACCESS    read-only\n            STATUS\
    \    mandatory\n            DESCRIPTION\n            \"A count of frames for which\
    \ transmission on a\n            particular interface fails due to an internal\n\
    \            MAC sublayer transmit error. A frame is only\n            counted\
    \ by an instance of this object if it is\n            not counted by the corresponding\
    \ instance of\n            either the dot3StatsLateCollisions object, the\n  \
    \          dot3StatsExcessiveCollisions object, or the\n            dot3StatsCarrierSenseErrors\
    \ object.\n            The precise meaning of the count represented by\n     \
    \       an instance of this object is implementation-\n            specific. \
    \ In particular, an instance of this\n            object may represent a count\
    \ of transmission\n            errors on a particular interface that are not\n\
    \            otherwise counted.\"\n            REFERENCE\n            \"IEEE 802.3\
    \ Layer Management\"\n            ::= { dot3StatsEntry 10 }\n       dot3StatsCarrierSenseErrors\
    \   OBJECT-TYPE\n            SYNTAX    Counter\n            ACCESS    read-only\n\
    \            STATUS    mandatory\n            DESCRIPTION\n            \"The number\
    \ of times that the carrier sense\n            condition was lost or never asserted\
    \ when\n            attempting to transmit a frame on a particular\n         \
    \   interface.\n            The count represented by an instance of this\n   \
    \         object is incremented at most once per\n            transmission attempt,\
    \ even if the carrier sense\n            condition fluctuates during a transmission\n\
    \            attempt.\"\n            REFERENCE\n            \"IEEE 802.3 Layer\
    \ Management\"\n            ::= { dot3StatsEntry 11 }\n       -- { dot3StatsEntry\
    \ 12 } is not assigned\n       dot3StatsFrameTooLongs   OBJECT-TYPE\n        \
    \    SYNTAX    Counter\n            ACCESS    read-only\n            STATUS  \
    \  mandatory\n            DESCRIPTION\n            \"A count of frames received\
    \ on a particular\n            interface that exceed the maximum permitted\n \
    \           frame size.\n            The count represented by an instance of this\n\
    \            object is incremented when the frameTooLong\n            status is\
    \ returned by the MAC service to the\n            LLC (or other MAC user). Received\
    \ frames for\n            which multiple error conditions obtain are,\n      \
    \      according to the conventions of IEEE 802.3\n            Layer Management,\
    \ counted exclusively according\n            to the error status presented to\
    \ the LLC.\"\n            REFERENCE\n            \"IEEE 802.3 Layer Management\"\
    \n            ::= { dot3StatsEntry 13 }\n       -- { dot3StatsEntry 14 } is not\
    \ assigned\n       -- { dot3StatsEntry 15 } is not assigned\n       dot3StatsInternalMacReceiveErrors\
    \   OBJECT-TYPE\n            SYNTAX    Counter\n            ACCESS    read-only\n\
    \            STATUS    mandatory\n            DESCRIPTION\n            \"A count\
    \ of frames for which reception on a\n            particular interface fails due\
    \ to an internal\n            MAC sublayer receive error. A frame is only\n  \
    \          counted by an instance of this object if it is\n            not counted\
    \ by the corresponding instance of\n            either the dot3StatsFrameTooLongs\
    \ object, the\n            dot3StatsAlignmentErrors object, or the\n         \
    \   dot3StatsFCSErrors object.\n            The precise meaning of the count represented\
    \ by\n            an instance of this object is implementation-\n            specific.\
    \  In particular, an instance of this\n            object may represent a count\
    \ of receive errors\n            on a particular interface that are not\n    \
    \        otherwise counted.\"\n            REFERENCE\n            \"IEEE 802.3\
    \ Layer Management\"\n            ::= { dot3StatsEntry 16 }\n       dot3StatsEtherChipSet\
    \   OBJECT-TYPE\n            SYNTAX        OBJECT IDENTIFIER\n            ACCESS\
    \        read-only\n            STATUS        mandatory\n            DESCRIPTION\n\
    \            \"This object contains an OBJECT IDENTIFIER\n            which identifies\
    \ the chipset used to\n            realize the interface. Ethernet-like\n    \
    \        interfaces are typically built out of\n            several different\
    \ chips. The MIB implementor\n            is presented with a decision of which\
    \ chip\n            to identify via this object. The implementor\n           \
    \ should identify the chip which is usually\n            called the Medium Access\
    \ Control chip.\n            If no such chip is easily identifiable,\n       \
    \     the implementor should identify the chip\n            which actually gathers\
    \ the transmit\n            and receive statistics and error\n            indications.\
    \ This would allow a\n            manager station to correlate the\n         \
    \   statistics and the chip generating\n            them, giving it the ability\
    \ to take\n            into account any known anomalies\n            in the chip.\"\
    \n            ::= { dot3StatsEntry 17 }\n       -- the Ethernet-like Collision\
    \ Statistics group\n       -- Implementation of this group is optional; it is\
    \ appropriate\n       -- for all systems which have the necessary metering\n \
    \      dot3CollTable  OBJECT-TYPE\n            SYNTAX    SEQUENCE OF Dot3CollEntry\n\
    \            ACCESS    not-accessible\n            STATUS    mandatory\n     \
    \       DESCRIPTION\n            \"A collection of collision histograms for a\n\
    \            particular set of interfaces.\"\n            ::= { dot3 5 }\n   \
    \    dot3CollEntry  OBJECT-TYPE\n            SYNTAX    Dot3CollEntry\n       \
    \     ACCESS    not-accessible\n            STATUS    mandatory\n            DESCRIPTION\n\
    \            \"A cell in the histogram of per-frame\n            collisions for\
    \ a particular interface.  An\n            instance of this object represents\
    \ the\n            frequency of individual MAC frames for which\n            the\
    \ transmission (successful or otherwise) on a\n            particular interface\
    \ is accompanied by a\n            particular number of media collisions.\"\n\
    \            INDEX     { ifIndex, dot3CollCount }\n            ::= { dot3CollTable\
    \ 1 }\n       Dot3CollEntry ::= SEQUENCE {\n            dot3CollCount        INTEGER,\n\
    \            dot3CollFrequencies  Counter\n       }\n       -- { dot3CollEntry\
    \ 1 } is no longer in use\n       dot3CollCount  OBJECT-TYPE\n            SYNTAX\
    \    INTEGER (1..16)\n            ACCESS    not-accessible\n            STATUS\
    \    mandatory\n            DESCRIPTION\n            \"The number of per-frame\
    \ media collisions for\n            which a particular collision histogram cell\n\
    \            represents the frequency on a particular\n            interface.\"\
    \n            ::= { dot3CollEntry 2 }\n       dot3CollFrequencies   OBJECT-TYPE\n\
    \            SYNTAX    Counter\n            ACCESS    read-only\n            STATUS\
    \    mandatory\n            DESCRIPTION\n            \"A count of individual MAC\
    \ frames for which the\n            transmission (successful or otherwise) on\
    \ a\n            particular interface occurs after the\n            frame has\
    \ experienced exactly the number\n            of collisions in the associated\n\
    \            dot3CollCount object.\n            For example, a frame which is\
    \ transmitted\n            on interface 77 after experiencing\n            exactly\
    \ 4 collisions would be indicated\n            by incrementing only dot3CollFrequencies.77.4.\n\
    \            No other instance of dot3CollFrequencies would\n            be incremented\
    \ in this example.\"\n            ::= { dot3CollEntry 3 }\n       --  802.3 Tests\n\
    \       dot3Tests   OBJECT IDENTIFIER ::= { dot3 6 }\n       dot3Errors  OBJECT\
    \ IDENTIFIER ::= { dot3 7 }\n       --  TDR Test\n       -- The Time-Domain Reflectometry\
    \ (TDR) test is specific\n       -- to ethernet-like interfaces with the exception\
    \ of\n       -- 10BaseT and 10BaseF. The TDR value may be useful\n       -- in\
    \ determining the approximate distance to a cable fault.\n       -- It is advisable\
    \ to repeat this test to check for a\n       -- consistent resulting TDR value,\
    \ to verify that there\n       -- is a fault.\n       dot3TestTdr OBJECT IDENTIFIER\
    \ ::= { dot3Tests 1 }\n       -- A TDR test returns as its result the time interval,\n\
    \       -- measured in 10 MHz ticks or 100 nsec units, between\n       -- the\
    \ start of TDR test transmission and the subsequent\n       -- detection of a\
    \ collision or deassertion of carrier.  On\n       -- successful completion of\
    \ a TDR test, the result is\n       -- stored as the value of the appropriate\
    \ instance of the\n       -- MIB object dot3TestTdrValue, and the OBJECT IDENTIFIER\n\
    \       -- of that instanceis stored in the corresponding instance\n       --\
    \ of ifExtnsTestCode (thereby indicating where the\n       -- result has been\
    \ stored).\n       -- Loopback Test\n       -- Another test is the full-duplex\
    \ loopback test.\n       -- This test configures the MAC chip and executes\n \
    \      -- an internal loopback test of memory, data paths,\n       -- and the\
    \ MAC chip logic.  This loopback test can\n       -- only be executed if the interface\
    \ is offline.\n       -- Once the test has completed, the MAC chip should\n  \
    \     -- be reinitialized for network operation, but it\n       -- should remain\
    \ offline.\n       dot3TestLoopBack OBJECT IDENTIFIER ::= { dot3Tests 2 }\n  \
    \     -- If an error occurs during a test, the object\n       -- ifTestResult\
    \ (defined in RFC1573) will be set\n       -- to failed(7).  The following two\
    \ OBJECT\n       -- IDENTIFIERs may be used to provided more\n       -- information\
    \ as values for ifTestCode.\n                -- couldn't initialize MAC chip for\
    \ test\n       dot3ErrorInitError     OBJECT IDENTIFIER ::= { dot3Errors 1 }\n\
    \                -- expected data not received (or not\n                -- received\
    \ correctly) in loopback test\n       dot3ErrorLoopbackError OBJECT IDENTIFIER\
    \ ::= { dot3Errors 2 }\n       -- RFC1573 does away with the interface chipset\
    \ object.\n       -- The following OBJECT IDENTIFIER definitions are\n       --\
    \ retained for purposes of backwards compatibility\n       -- with pre-RFC1573\
    \ systems.\n       --  802.3 Hardware Chipsets\n       -- The object ifExtnsChipSet\
    \ is provided in RFC1229 to\n       -- identify the MAC hardware used to communcate\
    \ on an\n       -- interface.  The following hardware chipsets are\n       --\
    \ provided for 802.3:\n       dot3ChipSets          OBJECT IDENTIFIER ::= { dot3\
    \ 8 }\n       dot3ChipSetAMD        OBJECT IDENTIFIER ::= { dot3ChipSets 1 }\n\
    \       dot3ChipSetAMD7990    OBJECT IDENTIFIER ::= { dot3ChipSetAMD 1 }\n   \
    \    dot3ChipSetAMD79900   OBJECT IDENTIFIER ::= { dot3ChipSetAMD 2 }\n      \
    \ dot3ChipSetAMD79C940  OBJECT IDENTIFIER ::= { dot3ChipSetAMD 3 }\n       dot3ChipSetIntel\
    \      OBJECT IDENTIFIER ::= { dot3ChipSets 2 }\n       dot3ChipSetIntel82586\
    \ OBJECT IDENTIFIER ::= { dot3ChipSetIntel 1 }\n       dot3ChipSetIntel82596 OBJECT\
    \ IDENTIFIER ::= { dot3ChipSetIntel 2 }\n       dot3ChipSetSeeq       OBJECT IDENTIFIER\
    \ ::= { dot3ChipSets 3 }\n       dot3ChipSetSeeq8003   OBJECT IDENTIFIER ::= {\
    \ dot3ChipSetSeeq 1 }\n       dot3ChipSetNational      OBJECT IDENTIFIER ::= {\
    \ dot3ChipSets 4 }\n       dot3ChipSetNational8390  OBJECT IDENTIFIER ::=\n  \
    \                                { dot3ChipSetNational 1 }\n       dot3ChipSetNationalSonic\
    \ OBJECT IDENTIFIER ::=\n                                  { dot3ChipSetNational\
    \ 2 }\n       dot3ChipSetFujitsu       OBJECT IDENTIFIER ::= { dot3ChipSets 5\
    \ }\n       dot3ChipSetFujitsu86950  OBJECT IDENTIFIER ::=\n                 \
    \                 { dot3ChipSetFujitsu 1 }\n       dot3ChipSetDigital       OBJECT\
    \ IDENTIFIER ::= { dot3ChipSets 6 }\n       dot3ChipSetDigitalDC21040  OBJECT\
    \ IDENTIFIER ::=\n                                  { dot3ChipSetDigital 1 }\n\
    \       -- For those chipsets not represented above, OBJECT IDENTIFIER\n     \
    \  -- assignment is required in other documentation, e.g., assignment\n      \
    \ -- within that part of the registration tree delegated to\n       -- individual\
    \ enterprises (see RFC1155).\n   END\n"
- title: 5.  Acknowledgements
  contents:
  - "5.  Acknowledgements\n   This document was produced by the Ethernet MIB Working\
    \ Group.\n   This document is based on the Proposed Standard Ethernet MIB, RFC\n\
    \   1284 [14], of which Jihn Cook of Chipcom was the editor.  The\n   Ethernet\
    \ MIB Working Group gathered implementation experience of the\n   variables specified\
    \ in RFC 1284 and used that information to develop\n   this revised MIB.\n   RFC\
    \ 1284, in turn, is based on a document written by Frank Kastenholz\n   of Interlan\
    \ entitled IEEE 802.3 Layer Management Draft M compatible\n   MIB for TCP/IP Networks\
    \ [10].  This document has been modestly\n   reworked, initially by the SNMP Working\
    \ Group, and then by the\n   Transmission Working Group, to reflect the current\
    \ conventions for\n   defining objects for MIB interfaces.  James Davin, of the\
    \ MIT\n   Laboratory for Computer Science, and Keith McCloghrie of Hughes LAN\n\
    \   Systems, contributed to later drafts of this memo. Marshall Rose of\n   Performance\
    \ Systems International, Inc. converted the document into\n   its current concise\
    \ format. Anil Rijsinghani of DEC contributed text\n   that more adequately describes\
    \ the TDR test.  Thanks to Frank\n   Kastenholz of Interlan and Louis Steinberg\
    \ of IBM for their\n   experimentation.\n"
- title: 6.  References
  contents:
  - "6.  References\n   [1] Cerf, V., \"IAB Recommendations for the Development of\
    \ Internet\n       Network Management Standards\", RFC 1052, NRI, April 1988.\n\
    \   [2] Cerf, V., \"Report of the Second Ad Hoc Network Management Review\n  \
    \     Group\", RFC 1109, NRI, August 1989.\n   [3] Rose M., and K. McCloghrie,\
    \ \"Structure and Identification of\n       Management Information for TCP/IP-based\
    \ internets\", STD 16, RFC\n       1155, Performance Systems International, Hughes\
    \ LAN Systems, May\n       1990.\n   [4] McCloghrie K., and M. Rose, \"Management\
    \ Information Base for\n       Network Management of TCP/IP-based internets\"\
    , RFC 1156, Hughes\n       LAN Systems, Performance Systems International, May\
    \ 1990.\n   [5] Case, J., Fedor, M., Schoffstall, M., and J. Davin, \"Simple\n\
    \       Network Management Protocol\", STD 15, RFC 1157, SNMP Research,\n    \
    \   Performance Systems International, Performance Systems\n       International,\
    \ MIT Laboratory for Computer Science, May 1990.\n   [6] McCloghrie K., and M.\
    \ Rose, Editors, \"Management Information Base\n       for Network Management\
    \ of TCP/IP-based internets\", STD 17, RFC\n       1213, Performance Systems International,\
    \ March 1991.\n   [7] Information processing systems - Open Systems Interconnection\
    \ -\n       Specification of Abstract Syntax Notation One (ASN.1),\n       International\
    \ Organization for Standardization, International\n       Standard 8824, December\
    \ 1987.\n   [8] Information processing systems - Open Systems Interconnection\
    \ -\n       Specification of Basic Encoding Rules for Abstract Notation One\n\
    \       (ASN.1), International Organization for Standardization,\n       International\
    \ Standard 8825, December 1987.\n   [9] IEEE, \"IEEE 802.3 Layer Management\"\
    , November 1988.\n  [10] Kastenholz, F., \"IEEE 802.3 Layer Management Draft compatible\
    \ MIB\n       for TCP/IP Networks\", electronic mail message to mib-\n       wg@nnsc.nsf.net,\
    \ 9 June 1989.\n  [11] McCloghrie, K., Editor, \"Extensions to the Generic-Interface\n\
    \       MIB\", RFC 1229, Hughes LAN Systems, Inc., May 1991.\n  [12] IEEE, \"\
    Carrier Sense Multiple Access with Collision Detection\n       (CSMA/CD) Access\
    \ Method and Physical Layer Specifications\",\n       ANSI/IEEE Std 802.3-1985.\n\
    \  [13] Rose, M., and K. McCloghrie, Editors, \"Concise MIB Definitions\",\n \
    \      RFC 1212, Performance Systems International, Hughes LAN Systems,\n    \
    \   March 1991.\n  [14] Cook, J., Editor, \"Definitions of Managed Objects for\
    \ Ethernet-\n       Like Interface Types\", RFC 1284, Chipcom Corporation, December\n\
    \       1991.\n  [15] Kastenholz, F., \"Definitions of Managed Objects for the\n\
    \       Ethernet-like Interface Types\", RFC 1398, FTP Software, Inc.,\n     \
    \  January 1993.\n  [16] Case, J., McCloghrie, K., Rose, M., and S. Waldbusser,\
    \ \"Structure\n       of Management Information for version 2 of the Simple Network\n\
    \       Management Protocol (SNMPv2)\", RFC 1442, SNMP Research, Inc.,\n     \
    \  Hughes LAN Systems, Dover Beach Consulting, Inc., Carnegie Mellon\n       University,\
    \ April 1993.\n  [17] Galvin, J., and K. McCloghrie, \"Administrative Model for\
    \ version\n       2 of the Simple Network Management Protocol (SNMPv2)\", RFC\
    \ 1445,\n       Trusted Information Systems, Hughes LAN Systems, April 1993.\n\
    \  [18] Case, J., McCloghrie, K., Rose, M., and S. Waldbusser, \"Protocol\n  \
    \     Operations for version 2 of the Simple Network Management\n       Protocol\
    \ (SNMPv2)\", RFC 1448, SNMP Research, Inc., Hughes LAN\n       Systems, Dover\
    \ Beach Consulting, Inc., Carnegie Mellon\n       University, April 1993.\n  [19]\
    \ McCloghrie, K., and F. Kastenholz, \"Evolution of the Interfaces\n       Group\
    \ of MIB-II\", RFC 1573, Hughes LAN Systems, FTP Software,\n       January 1994.\n\
    \  [20] Kastenholz, F., \"Definitions of Managed Objects for the\n       Ethernet-like\
    \ Interface Types\", STD 50, RFC 1623, FTP Software,\n       Inc., May 1994.\n"
- title: 7.  Security Considerations
  contents:
  - "7.  Security Considerations\n   Security issues are not discussed in this memo.\n"
- title: 8.  Author's Address
  contents:
  - "8.  Author's Address\n   Frank Kastenholz\n   FTP Software, Inc.\n   2 High Street\n\
    \   North Andover, Mass, USA 01845\n   Phone: 508-685-4000\n   EMail: kasten@ftp.com\n"
